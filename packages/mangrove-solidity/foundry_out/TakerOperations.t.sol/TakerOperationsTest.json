{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Credit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Debit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "callname",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "GasCost",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Kill",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "NewMgv",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "base",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "quote",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "offerIds",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "wants",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "gives",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "makerAddr",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "gasreqs",
          "type": "uint256[]"
        }
      ],
      "name": "OBState",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "mgvData",
          "type": "bytes32"
        }
      ],
      "name": "OfferFail",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "OfferRetract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGives",
          "type": "uint256"
        }
      ],
      "name": "OfferSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasprice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prev",
          "type": "uint256"
        }
      ],
      "name": "OfferWrite",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGot",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGave",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "penalty",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feePaid",
          "type": "uint256"
        }
      ],
      "name": "OrderComplete",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "OrderStart",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "posthookData",
          "type": "bytes32"
        }
      ],
      "name": "PosthookFail",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetActive",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetDensity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offer_gasbase",
          "type": "uint256"
        }
      ],
      "name": "SetGasbase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasmax",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasprice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetGovernance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetMonitor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetNotify",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetUseOracle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetVault",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "outbound",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "inbound",
          "type": "address"
        }
      ],
      "name": "offers_head",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        }
      ],
      "name": "offers_line",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract TestToken",
          "name": "t",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "power",
          "type": "uint256"
        }
      ],
      "name": "cash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract TestToken",
          "name": "t",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "cash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "adjust",
          "type": "bool"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "args",
          "type": "bytes"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256[]",
          "name": "ints",
          "type": "int256[]"
        }
      ],
      "name": "logary",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "uints",
          "type": "uint256[]"
        }
      ],
      "name": "logary",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "rewind",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        }
      ],
      "name": "setupMaker",
      "outputs": [
        {
          "internalType": "contract TestMaker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        }
      ],
      "name": "setupMakerDeployer",
      "outputs": [
        {
          "internalType": "contract MakerDeployer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "inverted",
          "type": "bool"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "_mgv",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "inverted",
          "type": "bool"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "_mgv",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "inbound_tkn",
          "type": "address"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        }
      ],
      "name": "setupTaker",
      "outputs": [
        {
          "internalType": "contract TestTaker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "skip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_detect_lowgas",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_empty_wants_fillGives",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_empty_wants_fillWants",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_fillGives_at_0_wants_works",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_maker_has_not_enough_base_fails_order",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_maker_revert_is_logged",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_marketOrder_on_empty_book_does_not_leave_lock_on",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_marketOrder_on_empty_book_does_not_revert",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_market_order_stops_for_filled_after_offer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_market_order_stops_for_filled_mid_offer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_market_order_stops_for_high_price",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_mo_fillGives",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_mo_fillGivesAll_no_approved_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_mo_fillGivesAll_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_mo_fillWants",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_multiple_snipes_fillWants",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_partial_fill",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_recursion_depth_is_acceptable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_simple_fillGives",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_simple_fillWants",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_simple_marketOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_simple_snipe",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_fails_if_price_has_changed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_fillGives",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_fillGives_zero",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_fillWants",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_fillWants_zero",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_free_offer_fillGives_respects_spec",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_free_offer_fillWants_respects_spec",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_on_higher_gas_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_on_higher_price_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_on_lower_price_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_reverts_if_taker_is_blacklisted_for_base",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_reverts_if_taker_is_blacklisted_for_quote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_with_0_wants_ejects_offer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_takerGives_is_zero_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_takerWants_is_zero_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_takerWants_wider_than_160_bits_fails_marketOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_taker_cannot_drain_maker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_taker_collects_failing_offer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_taker_has_no_quote_fails_order",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_taker_hasnt_approved_base_succeeds_order_with_fee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_taker_hasnt_approved_base_succeeds_order_wo_fee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_taker_hasnt_approved_quote_fails_order",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_taker_reimbursed_if_maker_doesnt_pay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_taker_reimbursed_if_maker_is_blacklisted_for_base",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_taker_reimbursed_if_maker_is_blacklisted_for_quote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_taker_reimbursed_if_maker_reverts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_taker_reverts_on_penalty_triggers_revert",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_unsafe_gas_left_fails_order",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "tip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1572:26:101:-:0;;;-1:-1:-1;;171:28:102;;;;;-1:-1:-1;624:20:77;;;;2159:34;;266:31305:73;1763:237:76;;;1828:64;;;;;-1:-1:-1;;;1828:64:76;;;;1572:26:101;1828:64:76;;;;;;;;-1:-1:-1;;;1828:64:76;;;;1888:2;-1:-1:-1;1828:64:76;;;-1:-1:-1;1763:237:76;;;1907:65;;;;;-1:-1:-1;;;1907:65:76;;1828:64;1907:65;;;;-1:-1:-1;1907:65:76;;;;;-1:-1:-1;;;1907:65:76;;-1:-1:-1;1907:65:76;;;;-1:-1:-1;1907:65:76;-1:-1:-1;1763:237:76;-1:-1:-1;1763:237:76;;;;1729:271;;;-1:-1:-1;;1729:271:76;;;266:31305:73;;1572:26:101;;1729:271:76;;;;;;1828:64;1729:271;:::i;:::-;-1:-1:-1;1729:271:76;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1729:271:76;;;;;;;;;;;;-1:-1:-1;;1729:271:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1729:271:76;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1729:271:76;;;;;;;;;;;;-1:-1:-1;;1729:271:76;;;;;;;;;;;;;;;;;;;;;;377:26:73;;;-1:-1:-1;;;;377:26:73;;;266:31305;;;;;;;;;-1:-1:-1;2055:32:76;;;-1:-1:-1;;;2055:32:76;;2064:9;2055:32;;;226:51:107;293:18;;;286:30;;;;352:1;332:18;;;325:29;-1:-1:-1;;;370:18:107;;;363:39;251:64:102;;2055:8:76;;419:19:107;;2055:32:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2093:32:76;;;-1:-1:-1;;;2093:32:76;;2104:4;2093:32;;;669:51:107;736:18;;;729:30;;;795:2;775:18;;;768:30;-1:-1:-1;;;814:18:107;;;807:41;2093:32:76;;251:64:102;;-1:-1:-1;2093:8:76;;-1:-1:-1;865:19:107;;;;;-1:-1:-1;;2093:32:76;;;;;;;-1:-1:-1;251:64:102;2093:32:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;266:31305:73;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;266:31305:73;;;-1:-1:-1;266:31305:73;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;895:380:107;974:1;970:12;;;;1017;;;1038:61;;1092:4;1084:6;1080:17;1070:27;;1038:61;1145:2;1137:6;1134:14;1114:18;1111:38;1108:161;;1191:10;1186:3;1182:20;1179:1;1172:31;1226:4;1223:1;1216:15;1254:4;1251:1;1244:15;1108:161;;895:380;;;:::o;:::-;266:31305:73;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMapi;7393:411:76:-;;;;;;;;;;-1:-1:-1;7393:411:76;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1063:32:107;;;1045:51;;1033:2;1018:18;7393:411:76;;;;;;;;17949:446:73;;;;;;;;;;;;;:::i;495:798::-;;;;;;;;;;;;;:::i;8068:243:76:-;;;;;;;;;;-1:-1:-1;8068:243:76;;;;;:::i;:::-;;:::i;31295:274:73:-;;;;;;;;;;;;;:::i;15734:589::-;;;;;;;;;;;;;:::i;20657:465::-;;;;;;;;;;;;;:::i;16327:1127::-;;;;;;;;;;;;;:::i;2069:116:103:-;;;;;;;;;;-1:-1:-1;2069:116:103;;;;;:::i;:::-;;:::i;11629:1217:73:-;;;;;;;;;;;;;:::i;18399:325::-;;;;;;;;;;;;;:::i;1416:96:103:-;;;;;;;;;;-1:-1:-1;1416:96:103;;;;;:::i;:::-;;:::i;1630:120::-;;;;;;;;;;-1:-1:-1;1630:120:103;;;;;:::i;:::-;;:::i;5141:455::-;;;;;;;;;;-1:-1:-1;5141:455:103;;;;;:::i;:::-;;:::i;31017:274:73:-;;;;;;;;;;;;;:::i;1268:85:103:-;;;;;;;;;;-1:-1:-1;1268:85:103;;;;;:::i;:::-;;:::i;30226:380:73:-;;;;;;;;;;;;;:::i;24645:411::-;;;;;;;;;;;;;:::i;9298:268:76:-;;;;;;;;;;-1:-1:-1;9298:268:76;;;;;:::i;:::-;;:::i;7327:990:73:-;;;;;;;;;;;;;:::i;13217:1254::-;;;;;;;;;;;;;:::i;322:38:102:-;;;;;;;;;;-1:-1:-1;322:38:102;-1:-1:-1;;;;;;;;;;;322:38:102;;9088:552:73;;;;;;;;;;;;;:::i;2440:140:103:-;;;;;;;;;;-1:-1:-1;2440:140:103;;;;;:::i;:::-;;:::i;10641:429:73:-;;;;;;;;;;;;;:::i;3051:280:77:-;;;;;;;;;;-1:-1:-1;3051:280:77;;;;;:::i;:::-;;:::i;23057:427:73:-;;;;;;;;;;;;;:::i;2519:719::-;;;;;;;;;;;;;:::i;25060:402::-;;;;;;;;;;;;;:::i;3369:107:103:-;;;;;;;;;;-1:-1:-1;3369:107:103;;;;;:::i;:::-;;:::i;9947:135:76:-;;;;;;;;;;-1:-1:-1;9947:135:76;;;;;:::i;:::-;;:::i;:::-;;;8258:25:107;;;8246:2;8231:18;9947:135:76;8112:177:107;27897:506:73;;;;;;;;;;;;;:::i;1957:106:103:-;;;;;;;;;;-1:-1:-1;1957:106:103;;;;;:::i;:::-;;:::i;8321:763:73:-;;;;;;;;;;;;;:::i;21596:508::-;;;;;;;;;;;;;:::i;25466:540::-;;;;;;;;;;;;;:::i;27350:500::-;;;;;;;;;;;;;:::i;21126:466::-;;;;;;;;;;;;;:::i;11074:551::-;;;;;;;;;;;;;:::i;7254:97:76:-;;;;;;;;;;;;;:::i;6337:986:73:-;;;;;;;;;;;;;:::i;1909:606::-;;;;;;;;;;;;;:::i;10144:493::-;;;;;;;;;;;;;:::i;3242:447::-;;;;;;;;;;;;;:::i;5429:904::-;;;;;;;;;;;;;:::i;26010:807::-;;;;;;;;;;;;;:::i;3482:915:103:-;;;;;;;;;;-1:-1:-1;3482:915:103;;;;;:::i;:::-;;:::i;5602:406::-;;;;;;;;;;-1:-1:-1;5602:406:103;;;;;:::i;:::-;;:::i;29641:581:73:-;;;;;;;;;;;;;:::i;29449:188::-;;;;;;;;;;;;;:::i;1756:130:103:-;;;;;;;;;;-1:-1:-1;1756:130:103;;;;;:::i;:::-;;:::i;24153:488:73:-;;;;;;;;;;;;;:::i;2768:279:77:-;;;;;;;;;;-1:-1:-1;2768:279:77;;;;;:::i;:::-;;:::i;1179:83:103:-;;;;;;;;;;-1:-1:-1;1179:83:103;;;;;:::i;:::-;;:::i;1819:584:101:-;;;;;;;;;;;;;:::i;:::-;;;10294:14:107;;10287:22;10269:41;;10257:2;10242:18;1819:584:101;10129:187:107;4252:1100:73;;;;;;;;;;;;;:::i;9126:168:76:-;;;;;;;;;;-1:-1:-1;9126:168:76;;;;;:::i;:::-;;:::i;3693:555:73:-;;;;;;;;;;;;;:::i;30748:265::-;;;;;;;;;;;;;:::i;8854:268:76:-;;;;;;;;;;-1:-1:-1;8854:268:76;;;;;:::i;:::-;;:::i;3164:81:103:-;;;;;;;;;;-1:-1:-1;3164:81:103;;;;;:::i;:::-;;:::i;1297:608:73:-;;;;;;;;;;;;;:::i;22108:471::-;;;;;;;;;;;;;:::i;2304:130:103:-;;;;;;;;;;-1:-1:-1;2304:130:103;;;;;:::i;:::-;;:::i;28450:495:73:-;;;;;;;;;;;;;:::i;9665:224:76:-;;;;;;;;;;-1:-1:-1;9665:224:76;;;;;:::i;:::-;;:::i;2732:341:103:-;;;;;;;;;;-1:-1:-1;2732:341:103;;;;;:::i;:::-;;:::i;12850:363:73:-;;;;;;;;;;;;;:::i;23488:661::-;;;;;;;;;;;;;:::i;30610:134::-;;;;;;;;;;;;;:::i;17458:487::-;;;;;;;;;;;;;:::i;22583:470::-;;;;;;;;;;;;;:::i;19726:927::-;;;;;;;;;;;;;:::i;1518:106:103:-;;;;;;;;;;-1:-1:-1;1518:106:103;;;;;:::i;:::-;;:::i;7841:173:76:-;;;;;;;;;;-1:-1:-1;7841:173:76;;;;;:::i;:::-;;:::i;9644:496:73:-;;;;;;;;;;;;;:::i;18728:994::-;;;;;;;;;;;;;:::i;28949:496::-;;;;;;;;;;;;;:::i;171:28:102:-;;;;;;;;;;-1:-1:-1;171:28:102;;;;;;;;;;;1572:26:101;;;;;;;;;;-1:-1:-1;1572:26:101;;;;;;;;27027:319:73;;;;;;;;;;;;;:::i;14475:1255::-;14591:4;;14555:18;;14576:40;;-1:-1:-1;;;;;14591:4:73;14589:7;14600:5;;-1:-1:-1;;;;;14600:5:73;14608:7;14576:12;:40::i;:::-;14622:5;;14638:3;;14622:30;;-1:-1:-1;;;14622:30:73;;14555:61;;-1:-1:-1;;;;;;14622:5:73;;;;:13;;:30;;14638:3;;14644:7;;14622:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;14669:3:73;;:42;;-1:-1:-1;;;14669:42:73;;14682:7;14669:42;;;12440:25:107;;;12481:18;;;12474:34;14700:7:73;12524:18:107;;;12517:34;14658:8:73;12567:18:107;;;12560:34;;;14658:8:73;-1:-1:-1;;;;;14669:3:73;;:12;;12412:19:107;;14669:42:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14717:3;;:34;;-1:-1:-1;;;14717:34:73;;-1:-1:-1;;;14717:34:73;;;13003:41:107;14658:53:73;;-1:-1:-1;;;;;;14717:3:73;;:10;;12976:18:107;;14717:34:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14792:5:73;;14817:3;;14792:30;;-1:-1:-1;;;14792:30:73;;-1:-1:-1;;;;;14817:3:73;;;14792:30;;;1045:51:107;14792:5:73;;;-1:-1:-1;14792:16:73;;-1:-1:-1;1018:18:107;;14792:30:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14847:5:73;;14828:16;;-1:-1:-1;;;;;;14847:5:73;;-1:-1:-1;14847:15:73;14865:4;14847:24;;-1:-1:-1;;;;;;14847:24:73;;;;;;;-1:-1:-1;;;;;1063:32:107;;;14847:24:73;;;1045:51:107;1018:18;;14847:24:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14929:3;;14828:43;;-1:-1:-1;14896:4:73;14894:15;;14916:18;;-1:-1:-1;;;;;14929:3:73;14916:10;:18::i;:::-;14980:5;;14965:4;;14946:132;;;13653:25:107;;;15007:4:73;13709:2:107;13694:18;;13687:60;15020:7:73;13763:18:107;;;13756:34;;;13821:2;13806:18;;13799:34;;;;-1:-1:-1;;;13864:3:107;13849:19;;13842:51;-1:-1:-1;;;;;14980:5:73;;;;14965:4;;;;-1:-1:-1;;;;;;;;;;;14946:132:73;13640:3:107;13625:19;14946:132:73;;;;;;;;15138:3;;15158:4;;15085:14;;;;;;-1:-1:-1;;;;;15138:3:73;;;;:10;;15158:4;15173:5;;-1:-1:-1;;;;;15173:5:73;15187:46;;;;;;;;;15201:3;15187:46;;;;15206:7;15187:46;;;;15215:7;15187:46;;;;15224:7;15187:46;;;:12;:46::i;:::-;15241:4;15138:113;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15084:167;;;;;;;;15257:12;15290:9;15272:7;15274:4;10647:1:76;10557:98;15272:7:73;-1:-1:-1;;;;;15272:15:73;;:27;;;;:::i;:::-;15257:42;;15305:61;15326:1;15316:7;:11;15305:61;;;;;;;;;;;;;;;;;:10;:61::i;:::-;15372:47;15383:9;15396:1;15383:14;15372:47;;;;;;;;;;;;;-1:-1:-1;;;15372:47:73;;;:10;:47::i;:::-;15425:106;15455:9;15443:8;:21;:39;;;;-1:-1:-1;15468:14:73;;15443:39;15425:106;;;;;;;;;;;;;;;;;:10;:106::i;:::-;15570:5;;15537:132;;-1:-1:-1;;;;;15570:5:73;:15;15588:4;15586:7;15570:24;;-1:-1:-1;;;;;;15570:24:73;;;;;;;-1:-1:-1;;;;;1063:32:107;;;15570:24:73;;;1045:51:107;1018:18;;15570:24:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15555:11;:39;15537:132;;;;;;;;;;;;;;;;;:10;:132::i;:::-;15695:3;;-1:-1:-1;;;;;15695:3:73;15680:45;15701:23;15717:7;15701:13;:23;:::i;:::-;15680:45;;8258:25:107;;;8246:2;8231:18;15680:45:73;;;;;;;14549:1181;;;;;;;;14475:1255::o;7393:411:76:-;7447:21;7480:8;7476:272;;;7550:4;7575:2;7595:9;7505:108;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;7498:115;;7476:272;;;7678:4;7703:2;7723:9;7641:100;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;7634:107;;7476:272;-1:-1:-1;;;;;;;;;;;7753:8:76;7764:4;7753:29;;;-1:-1:-1;;;;;;7753:29:76;;;;;;;-1:-1:-1;;;;;16635:32:107;;;7753:29:76;;;16617:51:107;16684:18;;;16677:30;16743:1;16723:18;;;16716:29;-1:-1:-1;;;16761:18:107;;;16754:38;16809:19;;7753:29:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7393:411;;;:::o;17949:446:73:-;18042:4;;18026:13;;-1:-1:-1;;;;;18042:4:73;:14;18059:4;18057:7;18042:23;;-1:-1:-1;;;;;;18042:23:73;;;;;;;-1:-1:-1;;;;;1063:32:107;;;18042:23:73;;;1045:51:107;1018:18;;18042:23:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18082:3;;:41;;-1:-1:-1;;;18082:41:73;;18095:7;18082:41;;;12440:25:107;;;12481:18;;;12474:34;18113:6:73;12524:18:107;;;12517:34;18071:8:73;12567:18:107;;;12560:34;;;18026:39:73;;-1:-1:-1;;;;;;18082:3:73;;;;:12;;12412:19:107;;18082:41:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18129:5;;18145:3;;18129:30;;-1:-1:-1;;;18129:30:73;;18071:52;;-1:-1:-1;;;;;;18129:5:73;;;;:13;;:30;;18145:3;;18151:7;;18129:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;18165:3:73;;18185:4;;-1:-1:-1;;;;;18165:3:73;;;;:10;;18185:4;18200:5;;-1:-1:-1;;;;;18200:5:73;18214:45;;;;;;;;;18228:3;18214:45;;;;18233:7;18214:45;;;;18242:7;18214:45;;;;18251:6;18214:45;;;:12;:45::i;:::-;18267:4;18165:112;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;18299:4:73;;18283:107;;-1:-1:-1;18325:8:73;;-1:-1:-1;;;;;;18299:4:73;;-1:-1:-1;18299:14:73;18316:4;18299:23;;-1:-1:-1;;;;;;18299:23:73;;;;;;;-1:-1:-1;;;;;1063:32:107;;;18299:23:73;;;1045:51:107;1018:18;;18299:23:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;;;;:::i;:::-;18341:7;18283:107;;;;;;;;;;;;;;;;;:8;:107::i;:::-;18020:375;;17949:446::o;495:798::-;534:13;:11;:13::i;:::-;577:4;;592:3;;577:23;;-1:-1:-1;;;577:23:73;;-1:-1:-1;;;;;577:4:73;;;;:12;;:23;;592:3;;;598:1;;577:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;606:5:73;;622:3;;606:24;;-1:-1:-1;;;606:24:73;;-1:-1:-1;;;;;606:5:73;;;;:13;;:24;;622:3;;;628:1;;606:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;656:4:73;;643:38;;-1:-1:-1;;;;;656:4:73;665:5;;-1:-1:-1;;;;;665:5:73;643:38;;;;;;;;;;;;;-1:-1:-1;;;643:38:73;;;:10;:38::i;:::-;637:3;:44;;-1:-1:-1;;;;;;637:44:73;-1:-1:-1;;;;;637:44:73;;;;;;712:4;;699:45;;712:4;721:5;;-1:-1:-1;;;;;721:5:73;699:45;;;;;;;;;;;;;-1:-1:-1;;;699:45:73;;;:10;:45::i;:::-;687:9;:57;;-1:-1:-1;;;;;;687:57:73;-1:-1:-1;;;;;687:57:73;;;;;;;;;750:26;;-1:-1:-1;;;750:26:73;;-1:-1:-1;750:26:73;;;10269:41:107;750:20:73;;10242:18:107;;750:26:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;805:4:73;;792:46;;-1:-1:-1;;;;;;805:4:73;;-1:-1:-1;814:5:73;;-1:-1:-1;;;;;814:5:73;792:46;;;;;;;;;;;;;-1:-1:-1;;;792:46:73;;;:10;:46::i;:::-;782:7;:56;;-1:-1:-1;;;;;;782:56:73;-1:-1:-1;;;;;782:56:73;;;;;;;;;844:26;;-1:-1:-1;;;;;;844:26:73;;-1:-1:-1;844:26:73;;;10269:41:107;844:20:73;;10242:18:107;;844:26:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;877:3:73;;:26;;-1:-1:-1;;;877:26:73;;894:8;877:26;;;8258:25:107;-1:-1:-1;;;;;877:3:73;;;;-1:-1:-1;877:16:73;;-1:-1:-1;8231:18:107;;877:26:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;909:3:73;;924:4;;909:30;;-1:-1:-1;;;909:30:73;;-1:-1:-1;;;;;909:3:73;;;;-1:-1:-1;909:14:73;;-1:-1:-1;909:30:73;;924:4;;;;930:8;;909:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;946:9:73;;:31;;-1:-1:-1;;;946:31:73;;969:7;946:31;;;8258:25:107;-1:-1:-1;;;;;946:9:73;;;;-1:-1:-1;946:22:73;;-1:-1:-1;8231:18:107;;946:31:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;983:9:73;;1004:4;;983:36;;-1:-1:-1;;;983:36:73;;-1:-1:-1;;;;;983:9:73;;;;-1:-1:-1;983:20:73;;-1:-1:-1;983:36:73;;1004:4;;;;1010:8;;983:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1025:7:73;;:29;;-1:-1:-1;;;1025:29:73;;1046:7;1025:29;;;8258:25:107;-1:-1:-1;;;;;1025:7:73;;;;-1:-1:-1;1025:20:73;;-1:-1:-1;8231:18:107;;1025:29:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1060:7:73;;1079:4;;1060:34;;-1:-1:-1;;;1060:34:73;;-1:-1:-1;;;;;1060:7:73;;;;-1:-1:-1;1060:18:73;;-1:-1:-1;1060:34:73;;1079:4;;;;1085:8;;1060:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1101:4:73;;1119:3;;1101:32;;-1:-1:-1;;;1101:32:73;;-1:-1:-1;;;;;1101:4:73;;;;-1:-1:-1;1101:9:73;;-1:-1:-1;1101:32:73;;1119:3;;;;1125:7;;1101:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1139:4:73;;1157:7;;1139:36;;-1:-1:-1;;;1139:36:73;;-1:-1:-1;;;;;1139:4:73;;;;-1:-1:-1;1139:9:73;;-1:-1:-1;1139:36:73;;1157:7;;;;1167;;1139:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1181:4:73;;1199:9;;1181:38;;-1:-1:-1;;;1181:38:73;;-1:-1:-1;;;;;1181:4:73;;;;-1:-1:-1;1181:9:73;;-1:-1:-1;1181:38:73;;1199:9;;;;1211:7;;1181:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1226:5:73;;:28;;-1:-1:-1;;;1226:28:73;;-1:-1:-1;;;;;1226:5:73;;;;-1:-1:-1;1226:10:73;;-1:-1:-1;1226:28:73;;1239:4;;1246:7;;1226:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1260:5:73;;:28;;-1:-1:-1;;;1260:28:73;;-1:-1:-1;;;;;1260:5:73;;;;-1:-1:-1;1260:10:73;;-1:-1:-1;1260:28:73;;1273:4;;1280:7;;1260:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;495:798::o;8068:243:76:-;8179:21;8215:23;8229:8;8215:13;:23::i;:::-;8208:30;;8244:62;8264:12;8287:11;8301:4;8244:11;:62::i;:::-;8068:243;;;;;:::o;31295:274:73:-;31380:3;;31405:4;;31353:8;;;;-1:-1:-1;;;;;31380:3:73;;;;:15;;31405:4;31420:5;;-1:-1:-1;;;;;31420:5:73;31434:7;31449:1;31458:4;31380:88;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;31352:116;;;;;;31474:38;31483:3;31488:1;31474:38;;;;;;;;;;;;;-1:-1:-1;;;31474:38:73;;;:8;:38::i;:::-;31518:46;31527:4;31533:7;31518:46;;;;;;;;;;;;;-1:-1:-1;;;31518:46:73;;;:8;:46::i;15734:589::-;15792:5;;15808:3;;15792:30;;-1:-1:-1;;;15792:30:73;;-1:-1:-1;;;;;15792:5:73;;;;:13;;:30;;15808:3;;;15814:7;;15792:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;15839:7:73;;:45;;-1:-1:-1;;;15839:45:73;;15856:7;15839:45;;;12440:25:107;;;12481:18;;;12474:34;15874:6:73;12524:18:107;;;12517:34;15828:8:73;12567:18:107;;;12560:34;;;15828:8:73;-1:-1:-1;;;;;15839:7:73;;:16;;12412:19:107;;15839:45:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15828:56;-1:-1:-1;15890:14:73;15909:4;15983:3;;16003:4;;-1:-1:-1;;;;;15907:15:73;;;;;-1:-1:-1;15930:14:73;;;;;;15983:3;;;;:10;;16003:4;16018:5;;-1:-1:-1;;;;;16018:5:73;16032:34;;;;;;;;;16046:3;16032:34;;;;16051:1;16032:34;;;;16054:1;16032:34;;;;16057:7;16032:34;;;:12;:34::i;:::-;16074:4;15983:101;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15929:155;;;;;;;;16090:47;16101:9;16114:1;16101:14;16090:47;;;;;;;;;;;;;-1:-1:-1;;;16090:47:73;;;:10;:47::i;:::-;16143:101;16173:9;16161:8;:21;:39;;;;-1:-1:-1;16186:14:73;;16161:39;16143:101;;;;;;;;;;;;;;;;;:10;:101::i;:::-;16250:68;16279:9;16263:4;-1:-1:-1;;;;;16261:15:73;;:27;16250:68;;;;;;;;;;;;;;;;;:10;:68::i;:::-;15786:537;;;;;15734:589::o;20657:465::-;20703:3;;:41;;-1:-1:-1;;;20703:41:73;;20716:7;20703:41;;;12440:25:107;;;12481:18;;;12474:34;20734:6:73;12524:18:107;;;12517:34;20703:3:73;12567:18:107;;;12560:34;-1:-1:-1;;;;;20703:3:73;;;;:12;;12412:19:107;;20703:41:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;20750:3:73;;:30;;-1:-1:-1;;;20750:30:73;;-1:-1:-1;;;;;20750:3:73;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20786:5:73;;20802:3;;20786:31;;-1:-1:-1;;;20786:31:73;;-1:-1:-1;;;;;20786:5:73;;;;-1:-1:-1;20786:13:73;;-1:-1:-1;20786:31:73;;20802:3;;;;20808:8;;20786:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;20862:3:73;;20887:4;;20825:13;;;;-1:-1:-1;;;;;20862:3:73;;;;:15;;20887:4;20902:5;;-1:-1:-1;;;;;20902:5:73;20916:7;20931;20946:4;20862:94;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20824:132;;;;;;20962:74;20971:8;20981:7;20962:74;;;;;;;;;;;;;;;;;:8;:74::i;:::-;21042:75;21051:9;21062:7;21042:75;;;;;;;;;;;;;;;;;:8;:75::i;16327:1127::-;16426:4;;16390:18;;16411:39;;-1:-1:-1;;;;;16426:4:73;16435:5;;-1:-1:-1;;;;;16435:5:73;16443:6;16411:12;:39::i;:::-;16456:5;;16472:3;;16456:30;;-1:-1:-1;;;16456:30:73;;16390:60;;-1:-1:-1;;;;;;16456:5:73;;;;:13;;:30;;16472:3;;16478:7;;16456:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;16503:7:73;;:45;;-1:-1:-1;;;16503:45:73;;16520:7;16503:45;;;12440:25:107;;;12481:18;;;12474:34;16538:6:73;12524:18:107;;;12517:34;16492:8:73;12567:18:107;;;12560:34;;;16492:8:73;-1:-1:-1;;;;;16503:7:73;;:16;;12412:19:107;;16503:45:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16573:5;;16492:56;;-1:-1:-1;16554:16:73;;-1:-1:-1;;;;;16573:5:73;:15;16591:4;16573:24;;-1:-1:-1;;;;;;16573:24:73;;;;;;;-1:-1:-1;;;;;1063:32:107;;;16573:24:73;;;1045:51:107;1018:18;;16573:24:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16655:3;;16554:43;;-1:-1:-1;16622:4:73;16620:15;;16642:18;;-1:-1:-1;;;;;16655:3:73;14916:10;:18::i;16642:::-;16705:5;;-1:-1:-1;;;;;16705:5:73;16690:4;;-1:-1:-1;;;;;16671:127:73;;;;16690:4;-1:-1:-1;;;;;16671:127:73;-1:-1:-1;;;;;;;;;;;16719:3:73;16732:4;16745:7;16760;16671:127;;;;;;;;;:::i;:::-;;;;;;;;16858:3;;16878:4;;16805:14;;;;;;-1:-1:-1;;;;;16858:3:73;;;;:10;;16878:4;16893:5;;-1:-1:-1;;;;;16893:5:73;16907:46;;;;;;;;;16921:3;16907:46;;;;16926:7;16907:46;;;;16935:7;16907:46;;;;16944:7;16907:46;;;:12;:46::i;:::-;16961:4;16858:113;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16804:167;;;;;;;;16977:12;17010:9;16992:7;16994:4;10647:1:76;10557:98;16992:7:73;-1:-1:-1;;;;;16992:15:73;;:27;;;;:::i;:::-;16977:42;;17025:61;17046:1;17036:7;:11;17025:61;;;;;;;;;;;;;;;;;:10;:61::i;:::-;17092:47;17103:9;17116:1;17103:14;17092:47;;;;;;;;;;;;;-1:-1:-1;;;17092:47:73;;;:10;:47::i;:::-;17145:106;17175:9;17163:8;:21;:39;;;;-1:-1:-1;17188:14:73;;17145:106;;;;;;;;;;;;;;;;;:10;:106::i;:::-;17290:5;;17257:132;;-1:-1:-1;;;;;17290:5:73;:15;17308:4;17306:7;10557:98:76;17257:132:73;17415:7;;-1:-1:-1;;;;;17415:7:73;17400:49;17425:23;17441:7;17425:13;:23;:::i;2069:116:103:-;2132:18;;-1:-1:-1;;;2132:18:103;;-1:-1:-1;;;;;;;;;;;251:64:102;2132:7:103;;:18;;2140:3;;2145:4;;2132:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2160:18:103;;-1:-1:-1;;;2160:18:103;;-1:-1:-1;;;;;1063:32:107;;2160:18:103;;;1045:51:107;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;2160:13:103;;-1:-1:-1;1018:18:107;;2160::103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2069:116;;:::o;11629:1217:73:-;11731:4;;11695:18;;11716:40;;-1:-1:-1;;;;;11731:4:73;11729:7;10557:98:76;11716:40:73;11762:5;;11778:3;;11762:30;;-1:-1:-1;;;11762:30:73;;11695:61;;-1:-1:-1;;;;;;11762:5:73;;;;:13;;:30;;11778:3;;11784:7;;11762:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11809:9:73;;:48;;-1:-1:-1;;;11809:48:73;;11828:7;11809:48;;;12440:25:107;;;12481:18;;;12474:34;11846:7:73;12524:18:107;;;12517:34;11798:8:73;12567:18:107;;;12560:34;;;11798:8:73;-1:-1:-1;;;;;11809:9:73;;:18;;12412:19:107;;11809:48:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11863:3;;:35;;-1:-1:-1;;;11863:35:73;;-1:-1:-1;;;11863:35:73;;;22676:42:107;11798:59:73;;-1:-1:-1;;;;;;11863:3:73;;:10;;22649:18:107;;11863:35:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11957:5:73;;11938:16;;-1:-1:-1;;;;;;11957:5:73;;-1:-1:-1;11957:15:73;11975:4;11957:24;;-1:-1:-1;;;;;;11957:24:73;;;;;;;-1:-1:-1;;;;;1063:32:107;;;11957:24:73;;;1045:51:107;1018:18;;11957:24:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12039:3;;11938:43;;-1:-1:-1;12006:4:73;12004:15;;12026:18;;-1:-1:-1;;;;;12039:3:73;14916:10;:18::i;12026:::-;12089:5;;-1:-1:-1;;;;;12089:5:73;12074:4;;-1:-1:-1;;;;;12055:133:73;;;;12074:4;-1:-1:-1;;;;;12055:133:73;-1:-1:-1;;;;;;;;;;;12103:3:73;12116:4;12129:7;12144;12055:133;;;;;;;;;:::i;:::-;;;;;;;;12248:3;;12268:4;;12195:14;;;;;;-1:-1:-1;;;;;12248:3:73;;;;:10;;12268:4;12283:5;;-1:-1:-1;;;;;12283:5:73;12297:46;;;;;;;;;12311:3;12297:46;;;;12316:7;12297:46;;;;12325:7;12297:46;;;;12334:7;12297:46;;;:12;:46::i;:::-;12351:4;12248:113;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12194:167;;;;;;;;12367:12;12400:9;12382:7;12384:4;10647:1:76;10557:98;12382:7:73;-1:-1:-1;;;;;12382:15:73;;:27;;;;:::i;:::-;12367:42;;12415:61;12436:1;12426:7;:11;12415:61;;;;;;;;;;;;;;;;;:10;:61::i;:::-;12482:47;12493:9;12506:1;12493:14;12482:47;;;;;;;;;;;;;-1:-1:-1;;;12482:47:73;;;:10;:47::i;:::-;12535:106;12565:9;12553:8;:21;:39;;;;-1:-1:-1;12578:14:73;;12535:106;;;;;;;;;;;;;;;;;:10;:106::i;:::-;12680:5;;12647:132;;-1:-1:-1;;;;;12680:5:73;:15;12698:4;12696:7;10557:98:76;12647:132:73;12805:9;;-1:-1:-1;;;;;12805:9:73;12790:51;12817:23;12833:7;12817:13;:23;:::i;18399:325::-;18478:3;;:41;;-1:-1:-1;;;18478:41:73;;18491:7;18478:41;;;12440:25:107;;;12481:18;;;12474:34;18509:6:73;12524:18:107;;;12517:34;18467:8:73;12567:18:107;;;12560:34;;;18467:8:73;-1:-1:-1;;;;;18478:3:73;;:12;;12412:19:107;;18478:41:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18525:4;;18540:3;;18525:29;;-1:-1:-1;;;18525:29:73;;18467:52;;-1:-1:-1;;;;;;18525:4:73;;;;:12;;:29;;18540:3;;18546:7;;18525:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;18561:40:73;;-1:-1:-1;;;18561:40:73;;-1:-1:-1;;;;;;;;;;;251:64:102;18561:15:73;;:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18607:3:73;;18627:4;;-1:-1:-1;;;;;18607:3:73;;;;-1:-1:-1;18607:10:73;;-1:-1:-1;18627:4:73;18625:7;18642:5;;-1:-1:-1;;;;;18642:5:73;18656:45;;;;;;;;;18670:3;18656:45;;;;18675:7;18656:45;;;;18684:7;18656:45;;;;18693:6;18656:45;;;:12;:45::i;:::-;18709:4;18607:112;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1416:96:103:-;1460:22;;-1:-1:-1;;;1460:22:103;;-1:-1:-1;;;;;;;;;;;251:64:102;1460:7:103;;:22;;1468:3;;-1:-1:-1;;;1473:8:103;1460:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1492:13:103;;-1:-1:-1;;;1492:13:103;;-1:-1:-1;;;;;1063:32:107;;1492:13:103;;;1045:51:107;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;1492:8:103;;-1:-1:-1;1018:18:107;;1492:13:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1630:120;1690:22;;-1:-1:-1;;;1690:22:103;;-1:-1:-1;;;;;;;;;;;251:64:102;1690:7:103;;:22;;1698:3;;-1:-1:-1;;;1703:8:103;1690:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1722:21:103;;-1:-1:-1;;;1722:21:103;;-1:-1:-1;;;;;24267:15:107;;;1722:21:103;;;24249:34:107;24319:15;;24299:18;;;24292:43;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;1722:8:103;;-1:-1:-1;24184:18:107;;1722:21:103;24037:304:107;5141:455:103;5301:16;;-1:-1:-1;;;5301:16:103;;5232:12;;;;-1:-1:-1;;;;;;;;;;;251:64:102;5301:10:103;;:16;;5312:4;;5301:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5301:16:103;;;;;;;;;;;;:::i;:::-;5319:4;5284:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5260:64;;5445:8;5439:15;5432:4;5422:8;5418:19;5415:1;5408:47;5400:55;-1:-1:-1;;;;;;5496:18:103;;5475:114;;;;-1:-1:-1;;;5475:114:103;;26545:2:107;5475:114:103;;;26527:21:107;26584:2;26564:18;;;26557:30;26623:34;26603:18;;;26596:62;-1:-1:-1;;;26674:18:107;;;26667:47;26731:19;;5475:114:103;26343:413:107;5475:114:103;5250:346;5141:455;;;;:::o;31017:274:73:-;31102:3;;31127:4;;31075:8;;;;-1:-1:-1;;;;;31102:3:73;;;;:15;;31127:4;31142:5;;-1:-1:-1;;;;;31142:5:73;31156:1;31165:7;31180:4;31102:88;;;;;;;;;;;;;;;;;;;:::i;1268:85:103:-;-1:-1:-1;;;;;;;;;;;1315:7:103;1323:22;1341:4;1323:15;:22;:::i;:::-;1315:31;;;;;;;;;;;;;8258:25:107;;8246:2;8231:18;;8112:177;30226:380:73;30283:3;;30300:4;;30309:5;;30283:36;;-1:-1:-1;;;30283:36:73;;-1:-1:-1;;;;;30283:3:73;;;;:14;;:36;;30300:4;;;;30309:5;;;30317:1;;30283:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;30325:5:73;;30341:3;;30325:30;;-1:-1:-1;;;30325:30:73;;-1:-1:-1;;;;;30325:5:73;;;;-1:-1:-1;30325:13:73;;-1:-1:-1;30325:30:73;;30341:3;;;;30347:7;;30325:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;30372:3:73;;:42;;-1:-1:-1;;;30372:42:73;;30385:7;30372:42;;;12440:25:107;;;12481:18;;;12474:34;30403:7:73;12524:18:107;;;12517:34;30361:8:73;12567:18:107;;;12560:34;;;30361:8:73;-1:-1:-1;;;;;30372:3:73;;:12;;12412:19:107;;30372:42:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30420:48;;-1:-1:-1;;;30420:48:73;;28419:2:107;30420:48:73;;;28401:21:107;28458:2;28438:18;;;28431:30;28497:31;28477:18;;;28470:59;30361:53:73;;-1:-1:-1;;;;;;;;;;;;251:64:102;30420:15:73;;28546:18:107;;30420:48:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;30474:3:73;;30508:4;;-1:-1:-1;;;;;30474:3:73;;;;-1:-1:-1;30474:10:73;;-1:-1:-1;30490:7:73;;30508:4;30523:5;;-1:-1:-1;;;;;30523:5:73;30537:46;;;;;;;;;30551:3;30537:46;;;;30556:7;30537:46;;;;30565:7;30537:46;;;;30574:7;30537:46;;;:12;:46::i;:::-;30591:4;30474:127;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;24645:411::-;24713:3;;:42;;-1:-1:-1;;;24713:42:73;;24726:7;24713:42;;;12440:25:107;;;12481:18;;;12474:34;24744:7:73;12524:18:107;;;12517:34;24702:8:73;12567:18:107;;;12560:34;;;24702:8:73;-1:-1:-1;;;;;24713:3:73;;:12;;12412:19:107;;24713:42:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24761:5;;24777:3;;24761:32;;-1:-1:-1;;;24761:32:73;;24702:53;;-1:-1:-1;;;;;;24761:5:73;;;;:13;;:32;;24777:3;;24783:9;;24761:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;24827:3:73;;24847:4;;24801:14;;-1:-1:-1;;;;;24827:3:73;;;;:10;;24847:4;24862:5;;-1:-1:-1;;;;;24862:5:73;24876:48;;;;;;;;;24890:3;24876:48;;;;24895:7;24876:48;;;;24904:9;24876:48;;;;24915:7;24876:48;;;:12;:48::i;:::-;24932:4;24827:115;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24800:142;;;;;;24948:103;24966:9;24979:1;24966:14;24948:103;;;;;;;;;;;;;;;;;:10;:103::i;9298:268:76:-;9398:9;9415:12;9444:3;;;;;;;;;-1:-1:-1;;;;;9444:3:76;9456:4;9470:3;9430:45;;;;;:::i;:::-;-1:-1:-1;;;;;29206:15:107;;;29188:34;;29258:15;;;29253:2;29238:18;;29231:43;29310:15;;;29305:2;29290:18;;29283:43;29138:2;29123:18;9430:45:76;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9481:31:76;;-1:-1:-1;;;9481:31:76;;9415:60;;-1:-1:-1;;;;;;;;;;;;251:64:102;9481:7:76;;:31;;9415:60;;9502:9;;9481:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9518:28:76;;-1:-1:-1;;;9518:28:76;;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;9518:8:76;;-1:-1:-1;9518:28:76;;9535:2;;9540:5;;9518:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9559:2:76;;9298:268;-1:-1:-1;;;;;;;9298:268:76:o;7327:990:73:-;7408:3;;:36;;-1:-1:-1;;;7408:36:73;;7397:8;7408:36;;;12440:25:107;;;7424:7:73;12481:18:107;;;12474:34;7433:7:73;12524:18:107;;;12517:34;12567:18;;;12560:34;;;7397:8:73;-1:-1:-1;;;;;7408:3:73;;:12;;12412:19:107;;7408:36:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7468:3;;7492:4;;7397:47;;-1:-1:-1;7450:107:73;;-1:-1:-1;;;;;7468:3:73;;;;:10;;:3;;7479:10;;7492:4;7490:7;7501:5;;-1:-1:-1;;;;;7501:5:73;7509:3;7479:34;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7468:46;;;;;;;;;;;;;8258:25:107;;8246:2;8231:18;;8112:177;7468:46:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7450:107;;;;;;;;;;;;;;;;;:10;:107::i;:::-;7563:3;;:30;;-1:-1:-1;;;7563:30:73;;-1:-1:-1;;;;;7563:3:73;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7639:5:73;;7655:3;;7639:30;;-1:-1:-1;;;7639:30:73;;-1:-1:-1;;;;;7639:5:73;;;;-1:-1:-1;7639:13:73;;-1:-1:-1;7639:30:73;;7655:3;;;;7661:7;;7639:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7931:3:73;;7951:4;;7888:14;;;;;;-1:-1:-1;;;;;7931:3:73;;;;:10;;7951:4;7966:5;;-1:-1:-1;;;;;7966:5:73;7980:42;;;;;;;;;7994:3;7980:42;;;;7999:9;7980:42;;;;8010:1;7980:42;;;;8013:7;7980:42;;;:12;:42::i;:::-;8030:5;7931:110;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7887:154;;;;;;;;8047:51;8058:9;8071:1;8058:14;8047:51;;;;;;;;;;;;;-1:-1:-1;;;8047:51:73;;;:10;:51::i;:::-;8104:41;8113:3;8118:7;8104:41;;;;;;;;;;;;;-1:-1:-1;;;8104:41:73;;;:8;:41::i;:::-;8151:43;8160:4;8166:7;8151:43;;;;;;;;;;;;;-1:-1:-1;;;8151:43:73;;;:8;:43::i;:::-;8219:3;;8243:4;;8252:5;;8230:34;;-1:-1:-1;;;8230:34:73;;8200:112;;-1:-1:-1;;;;;8219:3:73;;;;:10;;:3;;8230:10;;:34;;8243:4;;;8252:5;;8260:3;;8230:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8219:46;;;;;;;;;;;;;8258:25:107;;8246:2;8231:18;;8112:177;8219:46:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8218:47;8200:112;;;;;;;;;;;;;;;;;:10;:112::i;13217:1254::-;13332:4;;13296:18;;13317:40;;-1:-1:-1;;;;;13332:4:73;13330:7;10557:98:76;13317:40:73;13363:5;;13379:3;;13363:30;;-1:-1:-1;;;13363:30:73;;13296:61;;-1:-1:-1;;;;;;13363:5:73;;;;:13;;:30;;13379:3;;13385:7;;13363:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;13410:3:73;;:42;;-1:-1:-1;;;13410:42:73;;13423:7;13410:42;;;12440:25:107;;;12481:18;;;12474:34;13441:7:73;12524:18:107;;;12517:34;13399:8:73;12567:18:107;;;12560:34;;;13399:8:73;-1:-1:-1;;;;;13410:3:73;;:12;;12412:19:107;;13410:42:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13458:3;;:35;;-1:-1:-1;;;13458:35:73;;-1:-1:-1;;;13458:35:73;;;22676:42:107;13399:53:73;;-1:-1:-1;;;;;;13458:3:73;;:10;;22649:18:107;;13458:35:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13534:4:73;;13558:3;;13534:29;;-1:-1:-1;;;13534:29:73;;-1:-1:-1;;;;;13558:3:73;;;13534:29;;;1045:51:107;13534:4:73;;;-1:-1:-1;13534:15:73;;-1:-1:-1;1018:18:107;;13534:29:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13588:5:73;;13569:16;;-1:-1:-1;;;;;;13588:5:73;;-1:-1:-1;13588:15:73;13606:4;13588:24;;-1:-1:-1;;;;;;13588:24:73;;;;;;;-1:-1:-1;;;;;1063:32:107;;;13588:24:73;;;1045:51:107;1018:18;;13588:24:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13670:3;;13569:43;;-1:-1:-1;13637:4:73;13635:15;;13657:18;;-1:-1:-1;;;;;13670:3:73;14916:10;:18::i;13657:::-;13720:5;;-1:-1:-1;;;;;13720:5:73;13705:4;;-1:-1:-1;;;;;13686:133:73;;;;13705:4;-1:-1:-1;;;;;13686:133:73;-1:-1:-1;;;;;;;;;;;13734:3:73;13747:4;13760:7;13775;13686:133;;;;;;;;;:::i;9088:552::-;9144:3;;:42;;-1:-1:-1;;;9144:42:73;;9157:7;9144:42;;;12440:25:107;;;12481:18;;;12474:34;9175:7:73;12524:18:107;;;12517:34;9133:8:73;12567:18:107;;;12560:34;;;9133:8:73;-1:-1:-1;;;;;9144:3:73;;:12;;12412:19:107;;9144:42:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9192:3;;:30;;-1:-1:-1;;;9192:30:73;;9133:53;;-1:-1:-1;;;;;;9192:3:73;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9268:5:73;;9284:3;;9268:30;;-1:-1:-1;;;9268:30:73;;-1:-1:-1;;;;;9268:5:73;;;;-1:-1:-1;9268:13:73;;-1:-1:-1;9268:30:73;;9284:3;;;;9290:7;;9268:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9349:3:73;;9369:4;;9306:14;;;;;;-1:-1:-1;;;;;9349:3:73;;;;:10;;9369:4;9384:5;;-1:-1:-1;;;;;9384:5:73;9398:48;;;;;;;;;9412:3;9398:48;;;;9417:9;9398:48;;;;9428:7;9398:48;;;;9437:7;9398:48;;;:12;:48::i;:::-;9454:5;9349:116;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9305:160;;;;;;;;9471:51;9482:9;9495:1;9482:14;9471:51;;;;;;;;;;;;;-1:-1:-1;;;9471:51:73;;;:10;:51::i;:::-;9528:50;9537:3;9542:7;9528:50;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;9528:50:73;;;:8;:50::i;:::-;9584:51;9593:4;9599:7;9584:51;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;9584:51:73;;;:8;:51::i;2440:140:103:-;2519:18;;-1:-1:-1;;;2519:18:103;;-1:-1:-1;;;;;;;;;;;251:64:102;2519:7:103;;:18;;2527:3;;2532:4;;2519:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2547:26:103;;-1:-1:-1;;;2547:26:103;;-1:-1:-1;;;;;24267:15:107;;;2547:26:103;;;24249:34:107;24319:15;;24299:18;;;24292:43;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;2547:13:103;;-1:-1:-1;24184:18:107;;2547:26:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2440:140;;;:::o;10641:429:73:-;10704:3;;:42;;-1:-1:-1;;;10704:42:73;;10717:7;10704:42;;;12440:25:107;;;12481:18;;;12474:34;10735:7:73;12524:18:107;;;12517:34;10704:3:73;12567:18:107;;;12560:34;-1:-1:-1;;;;;10704:3:73;;;;:12;;12412:19:107;;10704:42:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10752:3:73;;:42;;-1:-1:-1;;;10752:42:73;;10765:7;10752:42;;;12440:25:107;;;12481:18;;;12474:34;10783:7:73;12524:18:107;;;12517:34;10752:3:73;12567:18:107;;;12560:34;-1:-1:-1;;;;;10752:3:73;;;;:12;;12412:19:107;;10752:42:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10800:3:73;;:42;;-1:-1:-1;;;10800:42:73;;10813:7;10800:42;;;12440:25:107;;;12481:18;;;12474:34;10831:7:73;12524:18:107;;;12517:34;10800:3:73;12567:18:107;;;12560:34;-1:-1:-1;;;;;10800:3:73;;;;:12;;12412:19:107;;10800:42:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10848:3:73;;:30;;-1:-1:-1;;;10848:30:73;;-1:-1:-1;;;;;10848:3:73;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10924:5:73;;10940:3;;10924:30;;-1:-1:-1;;;10924:30:73;;-1:-1:-1;;;;;10924:5:73;;;;-1:-1:-1;10924:13:73;;-1:-1:-1;10924:30:73;;10940:3;;;;10946:7;;10924:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10960:40:73;;-1:-1:-1;;;10960:40:73;;-1:-1:-1;;;;;;;;;;;251:64:102;10960:15:73;;:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11006:3:73;;11024:4;;-1:-1:-1;;;;;11006:3:73;;;;-1:-1:-1;11006:15:73;;-1:-1:-1;11024:4:73;11033:5;;-1:-1:-1;;;;;11033:5:73;11041:7;11050;11059:5;11006:59;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3051:280:77:-;3104:20;;;;;;;;;:15;:20;;;3130:176;3151:4;:11;3147:1;:15;3130:176;;;3195:1;3198:23;3212:4;3217:1;3212:7;;;;;;;;:::i;:::-;;;;;;;3198:8;:23::i;:::-;3181:41;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3177:45;;3252:1;3238:4;:11;:15;;;;:::i;:::-;3234:1;:19;3230:70;;;3283:1;3269:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;3265:26;;3230:70;3164:3;;;;:::i;:::-;;;;3130:176;;;;3311:15;3324:1;3311:12;:15::i;23057:427:73:-;23128:3;;:43;;-1:-1:-1;;;23128:43:73;;23141:9;23128:43;;;12440:25:107;23152:7:73;12481:18:107;;;12474:34;23161:6:73;12524:18:107;;;12517:34;23117:8:73;12567:18:107;;;12560:34;;;23117:8:73;-1:-1:-1;;;;;23128:3:73;;:12;;12412:19:107;;23128:43:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23177:3;;:30;;-1:-1:-1;;;23177:30:73;;23117:54;;-1:-1:-1;;;;;;23177:3:73;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23214:5:73;;23230:3;;23214:32;;-1:-1:-1;;;23214:32:73;;-1:-1:-1;;;;;23214:5:73;;;;-1:-1:-1;23214:13:73;;-1:-1:-1;23214:32:73;;23230:3;;;;23236:9;;23214:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;23252:4:73;;23267:3;;23252:29;;-1:-1:-1;;;23252:29:73;;-1:-1:-1;;;;;23252:4:73;;;;:12;;:29;;23267:3;;;23273:7;;23252:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;23318:40:73;;-1:-1:-1;;;23318:40:73;;-1:-1:-1;;;;;;;;;;;251:64:102;23318:15:73;;:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23364:3:73;;23384:4;;-1:-1:-1;;;;;23364:3:73;;;;-1:-1:-1;23364:10:73;;-1:-1:-1;23384:4:73;23399:5;;-1:-1:-1;;;;;23399:5:73;23413:48;;;;;;;;;23427:3;23413:48;;;;23432:7;23413:48;;;;23441:9;23413:48;;;;23452:7;23413:48;;;:12;:48::i;2519:719::-;2605:3;;2581:21;;-1:-1:-1;;;;;2605:3:73;:13;2621:4;2605:22;;-1:-1:-1;;;;;;2605:22:73;;;;;;;-1:-1:-1;;;;;1063:32:107;;;2605:22:73;;;1045:51:107;1018:18;;2605:22:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2644:3;;:42;;-1:-1:-1;;;2644:42:73;;2657:7;2644:42;;;12440:25:107;;;12481:18;;;12474:34;2675:7:73;12524:18:107;;;12517:34;2633:8:73;12567:18:107;;;12560:34;;;2581:46:73;;-1:-1:-1;;;;;;2644:3:73;;;;:12;;12412:19:107;;2644:42:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2692:3;;:30;;-1:-1:-1;;;2692:30:73;;2633:53;;-1:-1:-1;;;;;;2692:3:73;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2768:5:73;;2784:3;;2768:30;;-1:-1:-1;;;2768:30:73;;-1:-1:-1;;;;;2768:5:73;;;;-1:-1:-1;2768:13:73;;-1:-1:-1;2768:30:73;;2784:3;;;;2790:7;;2768:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2848:3:73;;2868:4;;2805:14;;;;;;-1:-1:-1;;;;;2848:3:73;;;;:10;;2868:4;2883:5;;-1:-1:-1;;;;;2883:5:73;2897:48;;;;;;;;;2911:3;2897:48;;;;2916:7;2897:48;;;;2925:9;2897:48;;;;2936:7;2897:48;;;:12;:48::i;:::-;2953:5;2848:116;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2804:160;;;;;;;;2970:47;2981:9;2994:1;2981:14;2970:47;;;;;;;;;;;;;-1:-1:-1;;;2970:47:73;;;:10;:47::i;:::-;3063:3;;3023:106;;3039:16;;-1:-1:-1;;;;;3063:3:73;:13;3079:4;3077:7;3063:22;;-1:-1:-1;;;;;;3063:22:73;;;;;;;-1:-1:-1;;;;;1063:32:107;;;3063:22:73;;;1045:51:107;1018:18;;3063:22:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3023:106;;;;;;;;;;;;;;;;;:8;:106::i;:::-;3135:98;3161:4;3154:3;:11;:24;;;;-1:-1:-1;3169:9:73;;3154:24;3135:98;;;;;;;;;;;;;;;;;:10;:98::i;25060:402::-;25126:3;;:42;;-1:-1:-1;;;25126:42:73;;25139:7;25126:42;;;12440:25:107;;;12481:18;;;12474:34;25157:7:73;12524:18:107;;;12517:34;25115:8:73;12567:18:107;;;12560:34;;;25115:8:73;-1:-1:-1;;;;;25126:3:73;;:12;;12412:19:107;;25126:42:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25174:5;;25190:3;;25174:30;;-1:-1:-1;;;25174:30:73;;25115:53;;-1:-1:-1;;;;;;25174:5:73;;;;:13;;:30;;25190:3;;25196:7;;25174:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;25238:3:73;;25258:4;;25212:14;;-1:-1:-1;;;;;25238:3:73;;;;:10;;25258:4;25273:5;;-1:-1:-1;;;;;25273:5:73;25287:45;;;;;;;;;25301:3;25287:45;;;;25306:7;25287:45;;;;25315:7;25287:45;;;;25324:6;25287:45;;;:12;:45::i;:::-;25340:4;25238:112;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25211:139;;;;;;25356:101;25374:9;25387:1;25374:14;25356:101;;;;;;;;;;;;;;;;;:10;:101::i;3369:107:103:-;3441:28;3446:5;3453:2;3457:4;3463:5;3441:4;:28::i;:::-;3369:107;;;:::o;9947:135:76:-;10031:4;10068:9;10072:5;10068:2;:9;:::i;:::-;10050:15;10055:1;10058:6;10050:4;:15::i;:::-;:27;;;;:::i;:::-;10043:34;9947:135;-1:-1:-1;;;;9947:135:76:o;27897:506:73:-;27960:5;;27976:3;;27960:30;;-1:-1:-1;;;27960:30:73;;-1:-1:-1;;;;;27960:5:73;;;;:13;;:30;;27976:3;;;27982:7;;27960:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;28001:6;27996:102;28017:2;28013:1;:6;27996:102;;;28034:3;;-1:-1:-1;;;;;28034:3:73;:12;28048:5;:1;28034:3;28048:5;:::i;:::-;28047:21;;28058:9;28047:21;:::i;:::-;28034:57;;-1:-1:-1;;;;;;28034:57:73;;;;;;;;;;12440:25:107;;;;28070:9:73;12481:18:107;;;12474:34;28081:6:73;12524:18:107;;;12517:34;12567:18;;;12560:34;;;12412:19;;28034:57:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;28021:3:73;;;;:::i;:::-;;;;27996:102;;;-1:-1:-1;28103:3:73;;:30;;-1:-1:-1;;;28103:30:73;;-1:-1:-1;;;;;28103:3:73;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;28284:3:73;;28323:4;;28200:27;;-1:-1:-1;28251:27:73;;-1:-1:-1;;;;;;28284:3:73;;;;:15;;28305:7;;28323:4;28321:7;28338:5;;-1:-1:-1;;;;;28338:5:73;28352:10;28370;28388:4;28284:114;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1957:106:103:-;2006:22;;-1:-1:-1;;;2006:22:103;;-1:-1:-1;;;;;;;;;;;251:64:102;2006:7:103;;:22;;2014:3;;-1:-1:-1;;;2019:8:103;2006:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2038:18:103;;-1:-1:-1;;;2038:18:103;;-1:-1:-1;;;;;1063:32:107;;2038:18:103;;;1045:51:107;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;2038:13:103;;-1:-1:-1;1018:18:107;;2038::103;868:234:107;8321:763:73;8382:3;;:42;;-1:-1:-1;;;8382:42:73;;8395:7;8382:42;;;12440:25:107;;;12481:18;;;12474:34;8413:7:73;12524:18:107;;;12517:34;8371:8:73;12567:18:107;;;12560:34;;;8371:8:73;-1:-1:-1;;;;;8382:3:73;;:12;;12412:19:107;;8382:42:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8448:3;;8472:4;;8371:53;;-1:-1:-1;8430:107:73;;-1:-1:-1;;;;;8448:3:73;;;;:10;;:3;;8459:10;;8472:4;8470:7;10557:98:76;8430:107:73;8543:3;;:30;;-1:-1:-1;;;8543:30:73;;-1:-1:-1;;;;;8543:3:73;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8619:5:73;;8635:3;;8619:30;;-1:-1:-1;;;8619:30:73;;-1:-1:-1;;;;;8619:5:73;;;;-1:-1:-1;8619:13:73;;-1:-1:-1;8619:30:73;;8635:3;;;;8641:7;;8619:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8700:3:73;;8720:4;;8657:14;;;;;;-1:-1:-1;;;;;8700:3:73;;;;:10;;8720:4;8735:5;;-1:-1:-1;;;;;8735:5:73;8749:34;;;;;;;;;8763:3;8749:34;;;;8768:1;8749:34;;;;8771:1;8749:34;;;;8774:7;8749:34;;;:12;:34::i;:::-;8791:5;8700:102;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8656:146;;;;;;;;8808:51;8819:9;8832:1;8819:14;8808:51;;;;;;;;;;;;;-1:-1:-1;;;8808:51:73;;;:10;:51::i;:::-;8865:44;8874:3;8879:7;8865:44;;;;;;;;;;;;;-1:-1:-1;;;8865:44:73;;;:8;:44::i;:::-;8915:46;8924:4;8930:7;8915:46;;;;;;;;;;;;;-1:-1:-1;;;8915:46:73;;;:8;:46::i;21596:508::-;21663:3;;:41;;-1:-1:-1;;;21663:41:73;;21652:8;21663:41;;;12440:25:107;;;21685:7:73;12481:18:107;;;12474:34;21694:6:73;12524:18:107;;;12517:34;12567:18;;;12560:34;;;21652:8:73;-1:-1:-1;;;;;21663:3:73;;:12;;12412:19:107;;21663:41:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21710:3;;:30;;-1:-1:-1;;;21710:30:73;;21652:52;;-1:-1:-1;;;;;;21710:3:73;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21746:5:73;;21762:3;;21746:31;;-1:-1:-1;;;21746:31:73;;-1:-1:-1;;;;;21746:5:73;;;;-1:-1:-1;21746:13:73;;-1:-1:-1;21746:31:73;;21762:3;;;;21768:8;;21746:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;21824:3:73;;21844:4;;21787:13;;;;-1:-1:-1;;;;;21824:3:73;;;;:10;;21844:4;21859:5;;-1:-1:-1;;;;;21859:5:73;21873:46;;;;;;;;;21887:3;21873:46;;;;21892:7;21873:46;;;;21901:7;21873:46;;;;21910:7;21873:46;;;:12;:46::i;:::-;21927:5;21824:114;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21784:154;;;;;;;21944:75;21953:9;21964:7;21944:75;;;;;;;;;;;;;;;;;:8;:75::i;:::-;22025:74;22034:8;22044:7;22025:74;;;;;;;;;;;;;;;;;:8;:74::i;25466:540::-;25520:3;;:42;;-1:-1:-1;;;25520:42:73;;25533:7;25520:42;;;12440:25:107;;;12481:18;;;12474:34;25551:7:73;12524:18:107;;;12517:34;25509:8:73;12567:18:107;;;12560:34;;;25509:8:73;-1:-1:-1;;;;;25520:3:73;;:12;;12412:19:107;;25520:42:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25568:5;;25584:3;;25568:32;;-1:-1:-1;;;25568:32:73;;25509:53;;-1:-1:-1;;;;;;25568:5:73;;;;:13;;:32;;25584:3;;25590:9;;25568:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;25684:4:73;;25607:15;;-1:-1:-1;;;25655:19:73;-1:-1:-1;;;;;25684:4:73;25699:5;;-1:-1:-1;;;;;25699:5:73;25713:46;;;;;;;;;25727:3;25713:46;;;;25732:7;25713:46;;;;25741:7;25713:46;;;;25750:7;25713:46;;;:12;:46::i;:::-;25767:4;25625:152;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;25625:152:73;;;;;;;;;;;;;;-1:-1:-1;;;;;25625:152:73;-1:-1:-1;;;;;;25625:152:73;;;;;;;;;;25823:3;;25625:152;;-1:-1:-1;;;;;25821:6:73;;-1:-1:-1;;;;;25823:3:73;10647:1:76;10557:98;25821:6:73;-1:-1:-1;;;;;25821:11:73;25838:6;25846:2;25821:28;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25784:65;;;;25859:8;25855:147;;;25877:39;;;;;;;;;;;;;;;;;;:4;:39::i;:::-;25855:147;;;25937:58;25946:15;25956:4;25946:9;:15::i;:::-;25937:58;;;;;;;;;;;;;;;;;:8;:58::i;27350:500::-;27392:5;;27408:3;;27392:30;;-1:-1:-1;;;27392:30:73;;-1:-1:-1;;;;;27392:5:73;;;;:13;;:30;;27408:3;;;27414:7;;27392:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;27428:3:73;;:45;;-1:-1:-1;;;27428:45:73;;27441:9;27428:45;;;12440:25:107;;;12481:18;;;12474:34;27463:6:73;12524:18:107;;;12517:34;27428:3:73;12567:18:107;;;12560:34;-1:-1:-1;;;;;27428:3:73;;;;:12;;12412:19:107;;27428:45:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;27479:3:73;;:45;;-1:-1:-1;;;27479:45:73;;27492:9;27479:45;;;12440:25:107;;;12481:18;;;12474:34;27514:6:73;12524:18:107;;;12517:34;27479:3:73;12567:18:107;;;12560:34;-1:-1:-1;;;;;27479:3:73;;;;:12;;12412:19:107;;27479:45:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;27530:3:73;;:30;;-1:-1:-1;;;27530:30:73;;-1:-1:-1;;;;;27530:3:73;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;27590:3:73;;27615:4;;27630:5;;27590:100;;-1:-1:-1;;;27590:100:73;;27567:13;;-1:-1:-1;;;;;;27590:3:73;;;;-1:-1:-1;27590:15:73;;:100;;27615:4;;;27630:5;;27644:10;;;;27680:4;;27590:100;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27566:124;;;;;27696:72;27705:8;27715:10;27696:72;;;;;;;;;;;;;;;;;:8;:72::i;:::-;27783:4;;27774:71;;-1:-1:-1;;;;;27783:4:73;:14;27800:4;27783:23;;-1:-1:-1;;;;;;27783:23:73;;;;;;;-1:-1:-1;;;;;1063:32:107;;;27783:23:73;;;1045:51:107;1018:18;;27783:23:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27808:10;27774:71;;;;;;;;;;;;;-1:-1:-1;;;27774:71:73;;;:8;:71::i;:::-;27386:464;27350:500::o;21126:466::-;21172:3;;:41;;-1:-1:-1;;;21172:41:73;;21185:7;21172:41;;;12440:25:107;;;12481:18;;;12474:34;21203:6:73;12524:18:107;;;12517:34;21172:3:73;12567:18:107;;;12560:34;-1:-1:-1;;;;;21172:3:73;;;;:12;;12412:19:107;;21172:41:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;21219:3:73;;:30;;-1:-1:-1;;;21219:30:73;;-1:-1:-1;;;;;21219:3:73;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21255:5:73;;21271:3;;21255:31;;-1:-1:-1;;;21255:31:73;;-1:-1:-1;;;;;21255:5:73;;;;-1:-1:-1;21255:13:73;;-1:-1:-1;21255:31:73;;21271:3;;;;21277:8;;21255:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;21331:3:73;;21356:4;;21294:13;;;;-1:-1:-1;;;;;21331:3:73;;;;:15;;21356:4;21371:5;;-1:-1:-1;;;;;21371:5:73;21385:7;21400;21415:5;21331:95;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21293:133;;;;;;21432:75;21441:9;21452:7;21432:75;;;;;;;;;;;;;;;;;:8;:75::i;:::-;21513:74;21522:8;21532:7;21513:74;;;;;;;;;;;;;;;;;:8;:74::i;11074:551::-;11128:3;;:42;;-1:-1:-1;;;11128:42:73;;11141:7;11128:42;;;12440:25:107;;;12481:18;;;12474:34;11159:7:73;12524:18:107;;;12517:34;11128:3:73;12567:18:107;;;12560:34;-1:-1:-1;;;;;11128:3:73;;;;:12;;12412:19:107;;11128:42:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11176:3:73;;:42;;-1:-1:-1;;;11176:42:73;;11189:7;11176:42;;;12440:25:107;;;12481:18;;;12474:34;11207:7:73;12524:18:107;;;12517:34;11176:3:73;12567:18:107;;;12560:34;-1:-1:-1;;;;;11176:3:73;;;;:12;;12412:19:107;;11176:42:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11224:3:73;;:42;;-1:-1:-1;;;11224:42:73;;11237:7;11224:42;;;12440:25:107;;;12481:18;;;12474:34;11255:7:73;12524:18:107;;;12517:34;11224:3:73;12567:18:107;;;12560:34;-1:-1:-1;;;;;11224:3:73;;;;:12;;12412:19:107;;11224:42:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11272:3:73;;:30;;-1:-1:-1;;;11272:30:73;;-1:-1:-1;;;;;11272:3:73;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11348:5:73;;11364:3;;11348:30;;-1:-1:-1;;;11348:30:73;;-1:-1:-1;;;;;11348:5:73;;;;-1:-1:-1;11348:13:73;;-1:-1:-1;11348:30:73;;11364:3;;;;11370:7;;11348:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11412:3:73;;11437:4;;11385:8;;;;-1:-1:-1;;;;;11412:3:73;;;;:15;;11437:4;11452:5;;-1:-1:-1;;;;;11452:5:73;11466:7;11481;11496:5;11412:95;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11384:123;;;;;;11513:50;11522:3;11527:7;11513:50;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;11513:50:73;;;:8;:50::i;:::-;11569:51;11578:4;11584:7;11569:51;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;11569:51:73;;;:8;:51::i;7254:97:76:-;7295:16;7326:20;7340:5;7326:13;:20::i;:::-;7319:27;;7254:97;:::o;6337:986:73:-;6418:3;;:36;;-1:-1:-1;;;6418:36:73;;6407:8;6418:36;;;12440:25:107;;;6434:7:73;12481:18:107;;;12474:34;6443:7:73;12524:18:107;;;12517:34;12567:18;;;12560:34;;;6407:8:73;-1:-1:-1;;;;;6418:3:73;;:12;;12412:19:107;;6418:36:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6478:3;;6502:4;;6407:47;;-1:-1:-1;6460:107:73;;-1:-1:-1;;;;;6478:3:73;;;;:10;;:3;;6489:10;;6502:4;6500:7;10557:98:76;6460:107:73;6573:3;;:30;;-1:-1:-1;;;6573:30:73;;-1:-1:-1;;;;;6573:3:73;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6649:5:73;;6665:3;;6649:30;;-1:-1:-1;;;6649:30:73;;-1:-1:-1;;;;;6649:5:73;;;;-1:-1:-1;6649:13:73;;-1:-1:-1;6649:30:73;;6665:3;;;;6671:7;;6649:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6936:3:73;;6956:4;;6893:14;;;;;;-1:-1:-1;;;;;6936:3:73;;;;:10;;6956:4;6971:5;;-1:-1:-1;;;;;6971:5:73;6985:42;;;;;;;;;6999:3;6985:42;;;;7004:9;6985:42;;;;7015:1;6985:42;;;;7018:7;6985:42;;;:12;:42::i;:::-;7035:4;6936:109;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6892:153;;;;;;;;7051:51;7062:9;7075:1;7062:14;7051:51;;;;;;;;;;;;;-1:-1:-1;;;7051:51:73;;;:10;:51::i;:::-;7108:43;7117:3;7122:9;7108:43;;;;;;;;;;;;;-1:-1:-1;;;7108:43:73;;;:8;:43::i;1909:606::-;2009:3;;1985:21;;-1:-1:-1;;;;;2009:3:73;:13;2025:4;2009:22;;-1:-1:-1;;;;;;2009:22:73;;;;;;;-1:-1:-1;;;;;1063:32:107;;;2009:22:73;;;1045:51:107;1018:18;;2009:22:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2048:3;;:42;;-1:-1:-1;;;2048:42:73;;2061:7;2048:42;;;12440:25:107;;;12481:18;;;12474:34;2079:7:73;12524:18:107;;;12517:34;2037:8:73;12567:18:107;;;12560:34;;;1985:46:73;;-1:-1:-1;;;;;;2048:3:73;;;;:12;;12412:19:107;;2048:42:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2096:3;;:30;;-1:-1:-1;;;2096:30:73;;2037:53;;-1:-1:-1;;;;;;2096:3:73;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2172:5:73;;2188:3;;2172:30;;-1:-1:-1;;;2172:30:73;;-1:-1:-1;;;;;2172:5:73;;;;-1:-1:-1;2172:13:73;;-1:-1:-1;2172:30:73;;2188:3;;;;2194:7;;2172:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2208:4:73;;-1:-1:-1;;;;;2208:4:73;:15;2226:4;2208:24;;-1:-1:-1;;;;;;2208:24:73;;;;;;;-1:-1:-1;;;;;1063:32:107;;;2208:24:73;;;1045:51:107;1018:18;;2208:24:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2239:40:73;;-1:-1:-1;;;2239:40:73;;40514:2:107;2239:40:73;;;40496:21:107;40553:2;40533:18;;;40526:30;-1:-1:-1;;;40572:18:107;;;40565:51;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;2239:15:73;;-1:-1:-1;40633:18:107;;2239:40:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2285:3:73;;2305:4;;-1:-1:-1;;;;;2285:3:73;;;;-1:-1:-1;2285:10:73;;-1:-1:-1;2305:4:73;2320:5;;-1:-1:-1;;;;;2320:5:73;2334:46;;;;;;;;;2348:3;2334:46;;;;2353:7;2334:46;;;;2362:7;2334:46;;;;2371:7;2334:46;;;:12;:46::i;:::-;2388:4;2285:113;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;2444:3:73;;2404:106;;-1:-1:-1;2420:16:73;;-1:-1:-1;;;;;;2444:3:73;;-1:-1:-1;2444:13:73;2460:4;2458:7;10557:98:76;10144:493:73;10186:3;;:42;;-1:-1:-1;;;10186:42:73;;10199:7;10186:42;;;12440:25:107;;;12481:18;;;12474:34;10217:7:73;12524:18:107;;;12517:34;10186:3:73;12567:18:107;;;12560:34;-1:-1:-1;;;;;10186:3:73;;;;:12;;12412:19:107;;10186:42:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10234:3:73;;:42;;-1:-1:-1;;;10234:42:73;;10247:7;10234:42;;;12440:25:107;;;12481:18;;;12474:34;10265:7:73;12524:18:107;;;12517:34;10234:3:73;12567:18:107;;;12560:34;-1:-1:-1;;;;;10234:3:73;;;;:12;;12412:19:107;;10234:42:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10282:3:73;;:30;;-1:-1:-1;;;10282:30:73;;-1:-1:-1;;;;;10282:3:73;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10358:5:73;;10374:3;;10358:30;;-1:-1:-1;;;10358:30:73;;-1:-1:-1;;;;;10358:5:73;;;;-1:-1:-1;10358:13:73;;-1:-1:-1;10358:30:73;;10374:3;;;;10380:7;;10358:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10422:3:73;;10447:4;;10395:8;;;;-1:-1:-1;;;;;10422:3:73;;;;:15;;10447:4;10462:5;;-1:-1:-1;;;;;10462:5:73;10476:9;10493:7;10508:5;10422:97;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10394:125;;;;;;10525:50;10534:3;10539:7;10525:50;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;10525:50:73;;;:8;:50::i;:::-;10581:51;10590:4;10596:7;10581:51;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;10581:51:73;;;:8;:51::i;3242:447::-;3296:3;;3313:4;;3322:5;;3296:36;;-1:-1:-1;;;3296:36:73;;-1:-1:-1;;;;;3296:3:73;;;;:14;;:36;;3313:4;;;;3322:5;;;3330:1;;3296:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3338:5:73;;3354:3;;3338:30;;-1:-1:-1;;;3338:30:73;;-1:-1:-1;;;;;3338:5:73;;;;-1:-1:-1;3338:13:73;;-1:-1:-1;3338:30:73;;3354:3;;;;3360:7;;3338:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3385:3:73;;:31;;-1:-1:-1;;;3385:31:73;;3398:1;3385:31;;;12440:25:107;3401:2:73;12481:18:107;;;12474:34;3405:7:73;12524:18:107;;;12517:34;3374:8:73;12567:18:107;;;12560:34;;;3374:8:73;-1:-1:-1;;;;;3385:3:73;;:12;;12412:19:107;;3385:31:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3436:5;;3374:42;;-1:-1:-1;3422:11:73;;-1:-1:-1;;;;;3436:5:73;:15;3454:4;3436:24;;-1:-1:-1;;;;;;3436:24:73;;;;;;;-1:-1:-1;;;;;1063:32:107;;;3436:24:73;;;1045:51:107;1018:18;;3436:24:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3466:3;;3486:4;;3422:38;;-1:-1:-1;;;;;;3466:3:73;;;;:10;;3486:4;3501:5;;-1:-1:-1;;;;;3501:5:73;3515:41;;;;;;;;;3529:3;3515:41;;;;3534:1;3515:41;;;;3537:8;3515:41;;;;3547:7;3515:41;;;:12;:41::i;:::-;3564:4;3466:108;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;3594:5:73;;3580:11;;-1:-1:-1;;;;;;3594:5:73;;-1:-1:-1;3594:15:73;;-1:-1:-1;3612:4:73;3594:24;;-1:-1:-1;;;;;;3594:24:73;;;;;;;-1:-1:-1;;;;;1063:32:107;;;3594:24:73;;;1045:51:107;1018:18;;3594:24:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3580:38;;3624:60;3633:6;3641;3624:60;;;;;;;;;;;;;;;;;:8;:60::i;5429:904::-;5490:3;;:42;;-1:-1:-1;;;5490:42:73;;5503:7;5490:42;;;12440:25:107;;;12481:18;;;12474:34;5521:7:73;12524:18:107;;;12517:34;5479:8:73;12567:18:107;;;12560:34;;;5479:8:73;-1:-1:-1;;;;;5490:3:73;;:12;;12412:19:107;;5490:42:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5556:3;;5580:4;;5479:53;;-1:-1:-1;5538:107:73;;-1:-1:-1;;;;;5556:3:73;;;;:10;;:3;;5567:10;;5580:4;5578:7;10557:98:76;5538:107:73;5651:3;;:30;;-1:-1:-1;;;5651:30:73;;-1:-1:-1;;;;;5651:3:73;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5727:5:73;;5743:3;;5727:30;;-1:-1:-1;;;5727:30:73;;-1:-1:-1;;;;;5727:5:73;;;;-1:-1:-1;5727:13:73;;-1:-1:-1;5727:30:73;;5743:3;;;;5749:7;;5727:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5777:5:73;;5764:20;;-1:-1:-1;;;;;5777:5:73;14916:10;:18::i;5764:20::-;5821:3;;-1:-1:-1;;;;;5821:3:73;5806:4;-1:-1:-1;;;;;5795:34:73;;5827:1;5795:34;;;;8258:25:107;;8246:2;8231:18;;8112:177;5795:34:73;;;;;;;;5848:5;;5835:20;;-1:-1:-1;;;;;5848:5:73;14916:10;:18::i;5835:20::-;5891:3;;5877;;-1:-1:-1;;;;;5891:3:73;;;;5877;-1:-1:-1;;;;;5866:33:73;;5897:1;5866:33;;;;8258:25:107;;8246:2;8231:18;;8112:177;5866:33:73;;;;;;;;5950:3;;5970:4;;5907:14;;;;;;-1:-1:-1;;;;;5950:3:73;;;;:10;;5970:4;5985:5;;-1:-1:-1;;;;;5985:5:73;5999:34;;;;;;;;;6013:3;5999:34;;;;6018:1;5999:34;;;;6021:1;5999:34;;;;6024:7;5999:34;;;:12;:34::i;:::-;6041:4;5950:101;;;;;;;;;;;;;;;;;;:::i;26010:807::-;26080:3;;:42;;-1:-1:-1;;;26080:42:73;;26093:7;26080:42;;;12440:25:107;;;12481:18;;;12474:34;26111:7:73;12524:18:107;;;12517:34;26069:8:73;12567:18:107;;;12560:34;;;26069:8:73;-1:-1:-1;;;;;26080:3:73;;:12;;12412:19:107;;26080:42:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26128:5;;26144:3;;26128:30;;-1:-1:-1;;;26128:30:73;;26069:53;;-1:-1:-1;;;;;;26128:5:73;;;;:13;;:30;;26144:3;;26150:7;;26128:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;26180:4:73;;26164:13;;-1:-1:-1;;;;;26180:4:73;:14;26197:4;26180:23;;-1:-1:-1;;;;;;26180:23:73;;;;;;;-1:-1:-1;;;;;1063:32:107;;;26180:23:73;;;1045:51:107;1018:18;;26180:23:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26225:5;;26249:3;;26225:29;;-1:-1:-1;;;26225:29:73;;-1:-1:-1;;;;;26249:3:73;;;26225:29;;;1045:51:107;26164:39:73;;-1:-1:-1;26209:13:73;;26225:5;;;:15;;1018:18:107;;26225:29:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26288:3;;26308:4;;26209:45;;-1:-1:-1;26262:14:73;;-1:-1:-1;;;;;26288:3:73;;;;:10;;26308:4;26323:5;;-1:-1:-1;;;;;26323:5:73;26337:46;;;;;;;;;26351:3;26337:46;;;;26356:7;26337:46;;;;26365:7;26337:46;;;;26374:7;26337:46;;;:12;:46::i;:::-;26391:4;26288:113;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26261:140;;;;;;26407:105;26425:9;26438:1;26425:14;26407:105;;;;;;;;;;;;;;;;;:10;:105::i;:::-;26586:4;;26570:115;;26612:8;;-1:-1:-1;;;;;26586:4:73;:14;26603:4;26601:7;26586:23;;-1:-1:-1;;;;;;26586:23:73;;;;;;;-1:-1:-1;;;;;1063:32:107;;;26586:23:73;;;1045:51:107;1018:18;;26586:23:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;;;;:::i;:::-;26628:7;26570:115;;;;;;;;;;;;;;;;;:8;:115::i;:::-;26707:5;;26731:3;;26707:29;;-1:-1:-1;;;26707:29:73;;-1:-1:-1;;;;;26731:3:73;;;26707:29;;;1045:51:107;26691:121:73;;26739:8;;26707:5;;:15;;1018:18:107;;26707:29:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;;;:::i;:::-;26755:7;26691:121;;;;;;;;;;;;;;;;;:8;:121::i;3482:915:103:-;3636:38;;;-1:-1:-1;;;;;1063:32:107;;;3636:38:103;;;;1045:51:107;;;;3636:38:103;;;;;;;;;;1018:18:107;;;;3636:38:103;;;;;;;-1:-1:-1;;;;;3636:38:103;-1:-1:-1;;;3636:38:103;;;3625:50;;3601:20;;3625:10;;;:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3598:77;;;3685:15;3714:7;3703:30;;;;;;;;;;;;:::i;:::-;3685:48;-1:-1:-1;3770:123:103;3888:4;3770:90;3857:2;3770:64;-1:-1:-1;;;3770:35:103;:8;3799:5;3770:28;:35::i;:::-;:52;19602:9;;;:16;;-1:-1:-1;;19602:16:103;;;;;;;;;;;;:9;19503:143;3770:64;:86;19918:10;;;:47;;;;;;;-1:-1:-1;19918:47:103;;;;;;;-1:-1:-1;;;;;19942:21:103;;;;19918:47;;;:10;19814:179;3770:90;:117;;:123::i;:::-;3938:6;3935:456;;;4000:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4000:34:103;-1:-1:-1;;;4000:34:103;;;3989:46;;3962:23;;-1:-1:-1;;;;;3989:10:103;;;:46;;4000:34;3989:46;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3959:76;;;4049:14;4077:10;4066:33;;;;;;;;;;;;:::i;:::-;4049:50;;4123:7;4116:4;:14;4113:143;;;4161:14;4171:4;4161:7;:14;:::i;:::-;4150:26;;;;:::i;:::-;;;4113:143;;;4226:14;4233:7;4226:4;:14;:::i;:::-;4215:26;;;;:::i;:::-;;;4113:143;4269:111;4373:6;4269:72;-1:-1:-1;;;4269:39:103;:8;4302:5;4269:32;:39::i;:111::-;3945:446;;3557:840;;3482:915;;;;:::o;5602:406::-;5726:16;;-1:-1:-1;;;5726:16:103;;5674:12;;;;-1:-1:-1;;;;;;;;;;;251:64:102;5726:10:103;;:16;;5737:4;;5726:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5726:16:103;;;;;;;;;;;;:::i;:::-;5702:40;;5863:8;5857:15;5850:4;5840:8;5836:19;5833:1;5826:47;5818:55;-1:-1:-1;;;;;;5914:18:103;;5893:108;;;;-1:-1:-1;;;5893:108:103;;42494:2:107;5893:108:103;;;42476:21:107;42533:2;42513:18;;;42506:30;42572:34;42552:18;;;42545:62;-1:-1:-1;;;42623:18:107;;;42616:41;42674:19;;5893:108:103;42292:407:107;5893:108:103;5692:316;5602:406;;;:::o;29641:581:73:-;29702:5;;29718:3;;29702:30;;-1:-1:-1;;;29702:30:73;;-1:-1:-1;;;;;29702:5:73;;;;:13;;:30;;29718:3;;;29724:7;;29702:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;29752:4:73;;29775:3;;29752:28;;-1:-1:-1;;;29752:28:73;;-1:-1:-1;;;;;29775:3:73;;;29752:28;;;1045:51:107;29738:11:73;;29752:4;;;;;:14;;1018:18:107;;29752:28:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29797:3;;:45;;-1:-1:-1;;;29797:45:73;;29810:9;29797:45;;;12440:25:107;;;12481:18;;;12474:34;29832:6:73;12524:18:107;;;12517:34;29786:8:73;12567:18:107;;;12560:34;;;29738:42:73;;-1:-1:-1;;;;;;29797:3:73;;;;:12;;12412:19:107;;29797:45:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29876:3;;29896:4;;29786:56;;-1:-1:-1;29850:14:73;;-1:-1:-1;;;;;29876:3:73;;;;:10;;29896:4;29911:5;;-1:-1:-1;;;;;29911:5:73;29925:39;;;;;;;;;29939:3;29925:39;;;;29944:1;29925:39;;;;29947:7;29925:39;;;;29956:6;29925:39;;;:12;:39::i;:::-;29972:4;29876:106;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29849:133;;;;;;29988:50;29999:9;30012:1;29999:14;29988:50;;;;;;;;;;;;;-1:-1:-1;;;29988:50:73;;;:10;:50::i;:::-;30053:3;;30064:4;;30044:64;;-1:-1:-1;;;;;30053:3:73;;;;:8;;30064:4;30073:5;;-1:-1:-1;;;;;30073:5:73;30053:27;;-1:-1:-1;;;;;;30053:27:73;;;;;;;-1:-1:-1;;;;;24267:15:107;;;30053:27:73;;;24249:34:107;24319:15;;24299:18;;;24292:43;24184:18;;30053:27:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30082:1;30044:64;;;;;;;;;;;;;-1:-1:-1;;;30044:64:73;;;:8;:64::i;:::-;30130:4;;30153:3;;30130:28;;-1:-1:-1;;;30130:28:73;;-1:-1:-1;;;;;30153:3:73;;;30130:28;;;1045:51:107;30114:103:73;;30130:4;;;;;:14;;1018:18:107;;30130:28:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30166:6;30114:103;;;;;;;;;;;;;;;;;:8;:103::i;29449:188::-;29527:48;;-1:-1:-1;;;29527:48:73;;43230:2:107;29527:48:73;;;43212:21:107;43269:2;43249:18;;;43242:30;43308:31;43288:18;;;43281:59;-1:-1:-1;;;;;;;;;;;251:64:102;29527:15:73;;43357:18:107;;29527:48:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;29581:3:73;;29599:4;;-1:-1:-1;;;;;29581:3:73;;;;-1:-1:-1;29581:15:73;;-1:-1:-1;29599:4:73;29608:5;;-1:-1:-1;;;;;29608:5:73;-1:-1:-1;;;29624:1:73;29627:4;29581:51;;;;;;;;;;;;;;;;;;;:::i;1756:130:103:-;1830:18;;-1:-1:-1;;;1830:18:103;;-1:-1:-1;;;;;;;;;;;251:64:102;1830:7:103;;:18;;1838:3;;1843:4;;1830:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1858:21:103;;-1:-1:-1;;;1858:21:103;;-1:-1:-1;;;;;24267:15:107;;;1858:21:103;;;24249:34:107;24319:15;;24299:18;;;24292:43;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;1858:8:103;;-1:-1:-1;24184:18:107;;1858:21:103;24037:304:107;24153:488:73;24216:3;;:41;;-1:-1:-1;;;24216:41:73;;24229:7;24216:41;;;12440:25:107;;;12481:18;;;12474:34;24247:6:73;12524:18:107;;;12517:34;24205:8:73;12567:18:107;;;12560:34;;;24205:8:73;-1:-1:-1;;;;;24216:3:73;;:12;;12412:19:107;;24216:41:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24263:3;;:29;;-1:-1:-1;;;24263:29:73;;-1:-1:-1;;;24263:29:73;;;44209:36:107;24205:52:73;;-1:-1:-1;;;;;;24263:3:73;;:10;;44182:18:107;;24263:29:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;24298:3:73;;:22;;-1:-1:-1;;;;;;24298:22:73;;:3;:22;;;10269:41:107;-1:-1:-1;;;;;24298:3:73;;;;-1:-1:-1;24298:16:73;;-1:-1:-1;10242:18:107;;24298:22:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;24326:5:73;;24342:3;;24326:30;;-1:-1:-1;;;24326:30:73;;-1:-1:-1;;;;;24326:5:73;;;;-1:-1:-1;24326:13:73;;-1:-1:-1;24326:30:73;;24342:3;;;;24348:7;;24326:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;24375:3:73;;24362:18;;-1:-1:-1;;;;;24375:3:73;14916:10;:18::i;24362:::-;24425:5;;-1:-1:-1;;;;;24425:5:73;24410:4;;-1:-1:-1;;;;;24391:127:73;;;;24410:4;-1:-1:-1;;;;;24391:127:73;-1:-1:-1;;;;;;;;;;;24439:3:73;24452:4;24465:7;24480;24391:127;;;;;;;;;:::i;:::-;;;;;;;;24524:3;;24544:4;;-1:-1:-1;;;;;24524:3:73;;;;:10;;24544:4;24542:7;10557:98:76;2768:279:77;2823:20;;;;;;;;;:15;:20;;;2849:173;2870:5;:12;2866:1;:16;2849:173;;;2915:1;2918:18;2927:5;2933:1;2927:8;;;;;;;;:::i;2918:18::-;2901:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2897:40;;2968:1;2953:5;:12;:16;;;;:::i;:::-;2949:1;:20;2945:71;;;2999:1;2985:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;2981:26;;2945:71;2884:3;;;;:::i;:::-;;;;2849:173;;1179:83:103;-1:-1:-1;;;;;;;;;;;1224:7:103;1232:22;1250:4;1232:15;:22;:::i;1819:584:101:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:101;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2978:55:101;3059:16;1980:374;;2196:43;;2023:20;;-1:-1:-1;;;;;;;;;;;1671:64:101;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:101;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:101;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:101;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:101:o;4252:1100:73:-;4340:13;;;4351:1;4340:13;;;;;;;;;4307:6;;;;4340:13;;;;;;;;;;;-1:-1:-1;;4371:3:73;;:42;;-1:-1:-1;;;4371:42:73;;4384:7;4371:42;;;12440:25:107;;;12481:18;;;12474:34;4402:7:73;12524:18:107;;;12517:34;4371:3:73;12567:18:107;;;12560:34;4319::73;;-1:-1:-1;;;;;;4371:3:73;;:12;;12412:19:107;;4371:42:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4359:4;4364:3;;;;:::i;:::-;;;4359:9;;;;;;;;:::i;:::-;;;;;;;;;;:54;4431:3;;:42;;-1:-1:-1;;;4431:42:73;;4444:7;4431:42;;;12440:25:107;;;12481:18;;;12474:34;4462:7:73;12524:18:107;;;12517:34;4431:3:73;12567:18:107;;;12560:34;-1:-1:-1;;;;;4431:3:73;;;;:12;;12412:19:107;;4431:42:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4419:4;4424:3;;;;:::i;:::-;;;4419:9;;;;;;;;:::i;:::-;;;;;;;;;;:54;4491:3;;:42;;-1:-1:-1;;;4491:42:73;;4504:7;4491:42;;;12440:25:107;;;12481:18;;;12474:34;4522:7:73;12524:18:107;;;12517:34;4491:3:73;12567:18:107;;;12560:34;-1:-1:-1;;;;;4491:3:73;;;;:12;;12412:19:107;;4491:42:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4479:4;4484:3;;;;:::i;:::-;;;4479:9;;;;;;;;:::i;:::-;;;;;;;;;;:54;4540:3;;:30;;-1:-1:-1;;;4540:30:73;;-1:-1:-1;;;;;4540:3:73;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4616:5:73;;4632:3;;4616:30;;-1:-1:-1;;;4616:30:73;;-1:-1:-1;;;;;4616:5:73;;;;-1:-1:-1;4616:13:73;;-1:-1:-1;4616:30:73;;4632:3;;;;4638:7;;4616:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4679:16:73;;;4693:1;4679:16;;;;;;;;;4652:24;;4679:16;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4652:43;;4701:6;4713:51;;;;;;;;4727:4;4732:1;4727:7;;;;;;;;:::i;:::-;;;;;;;4713:51;;;;4736:9;4713:51;;;;4747:7;4713:51;;;;4756:7;4713:51;;;:7;4721:1;4713:10;;;;;;;;:::i;:::-;;;;;;:51;;;;4770:3;;;;;:::i;:::-;;;;4779:49;;;;;;;;4793:4;4798:1;4793:7;;;;;;;;:::i;:::-;;;;;;;4779:49;;;;4802:7;4779:49;;;;4811:7;4779:49;;;;4820:7;4779:49;;;:7;4787:1;4779:10;;;;;;;;:::i;:::-;;;;;;:49;;;;4834:3;;;;;:::i;:::-;;;;4843:51;;;;;;;;4857:4;4862:1;4857:7;;;;;;;;:::i;:::-;;;;;;;4843:51;;;;4866:9;4843:51;;;;4877:7;4843:51;;;;4886:7;4843:51;;;:7;4851:1;4843:10;;;;;;;;:::i;:::-;;;;;;;;;;:51;4914:3;;4901:18;;-1:-1:-1;;;;;4914:3:73;14916:10;:18::i;4901:::-;4930:12;;;;;;;4961:3;;4948:18;;-1:-1:-1;;;;;4961:3:73;14916:10;:18::i;4948:::-;5002:5;;4993:4;;4977:69;;;5019:9;12440:25:107;;;12496:2;12481:18;;12474:34;-1:-1:-1;12524:18:107;;;12517:34;;;12582:2;12567:18;;12560:34;4977:69:73;;5012:4;;-1:-1:-1;;;;;5002:5:73;;;;4993:4;;4977:69;;;;;;12427:3:107;4977:69:73;;;5097:3;;5117:4;;5132:5;;5097:74;;-1:-1:-1;;;5097:74:73;;5054:14;;;;;;-1:-1:-1;;;;;5097:3:73;;;;:10;;:74;;5117:4;;;5132:5;;5146:7;;5161:4;;5097:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5053:118;;;;;;;;5177:52;5188:9;5201:1;5188:14;5177:52;;;;;;;;;;;;;-1:-1:-1;;;5177:52:73;;;:10;:52::i;:::-;5235;5244:3;5249:9;5235:52;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5235:52:73;;;:8;:52::i;:::-;5293:54;5302:4;5308:9;5293:54;;;;;;;;;;;;;-1:-1:-1;;;5293:54:73;;;:8;:54::i;9126:168:76:-;9236:3;;9205:13;;9228;;-1:-1:-1;;;;;9236:3:76;9228:5;:13::i;:::-;-1:-1:-1;9273:3:76;;9255:33;;-1:-1:-1;;;;;9273:3:76;;;;9278:4;;9284:3;;9255:33;;;:::i;:::-;-1:-1:-1;;;;;29206:15:107;;;29188:34;;29258:15;;;29253:2;29238:18;;29231:43;29310:15;;;29305:2;29290:18;;29283:43;29138:2;29123:18;9255:33:76;;;;;;;;;;;;;;;;;;;;;;;9247:42;;9126:168;;;;;:::o;3693:555:73:-;3749:3;;:42;;-1:-1:-1;;;3749:42:73;;3762:7;3749:42;;;12440:25:107;;;12481:18;;;12474:34;3780:7:73;12524:18:107;;;12517:34;3738:8:73;12567:18:107;;;12560:34;;;3738:8:73;-1:-1:-1;;;;;3749:3:73;;:12;;12412:19:107;;3749:42:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3797:3;;:30;;-1:-1:-1;;;3797:30:73;;3738:53;;-1:-1:-1;;;;;;3797:3:73;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3873:5:73;;3889:3;;3873:30;;-1:-1:-1;;;3873:30:73;;-1:-1:-1;;;;;3873:5:73;;;;-1:-1:-1;3873:13:73;;-1:-1:-1;3873:30:73;;3889:3;;;;3895:7;;3873:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3953:3:73;;3973:4;;3910:14;;;;;;-1:-1:-1;;;;;3953:3:73;;;;:10;;3973:4;3988:5;;-1:-1:-1;;;;;3988:5:73;4002:48;;;;;;;;;4016:3;4002:48;;;;4021:9;4002:48;;;;4032:7;4002:48;;;;4041:7;4002:48;;;:12;:48::i;:::-;4058:4;3953:115;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3909:159;;;;;;;;4074:51;4085:9;4098:1;4085:14;4074:51;;;;;;;;;;;;;-1:-1:-1;;;4074:51:73;;;:10;:51::i;:::-;4131:52;4140:3;4145:9;4131:52;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4131:52:73;;;:8;:52::i;:::-;4189:54;4198:4;4204:9;4189:54;;;;;;;;;;;;;-1:-1:-1;;;4189:54:73;;;:8;:54::i;30748:265::-;30826:3;;30844:4;;30853:5;;30826:58;;-1:-1:-1;;;30826:58:73;;-1:-1:-1;;;;;30826:3:73;;;;:15;;:58;;30844:4;;;;30853:5;;;30861:7;;;;30879:4;;30826:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;30909:3:73;;30922:4;;30890:118;;-1:-1:-1;;;;;;30909:3:73;;;;-1:-1:-1;30909:10:73;;30922:4;30931:5;;-1:-1:-1;;;;;30931:5:73;30909:29;;-1:-1:-1;;;;;;30909:29:73;;;;;;;-1:-1:-1;;;;;24267:15:107;;;30909:29:73;;;24249:34:107;24319:15;;24299:18;;;24292:43;24184:18;;30909:29:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30908:30;30890:118;;;;;;;;;;;;;;;;;:10;:118::i;:::-;30748:265::o;8854:268:76:-;8954:9;8971:12;9000:3;;;;;;;;;-1:-1:-1;;;;;9000:3:76;9012:4;9026:3;8986:45;;;;;:::i;3164:81:103:-;3221:17;;-1:-1:-1;;;3221:17:103;;-1:-1:-1;;;;;;;;;;;251:64:102;3221:7:103;;:17;;3229:2;;3233:4;;3221:17;;;:::i;1297:608:73:-;1398:3;;1374:21;;-1:-1:-1;;;;;1398:3:73;:13;1414:4;1398:22;;-1:-1:-1;;;;;;1398:22:73;;;;;;;-1:-1:-1;;;;;1063:32:107;;;1398:22:73;;;1045:51:107;1018:18;;1398:22:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1437:3;;:42;;-1:-1:-1;;;1437:42:73;;1450:7;1437:42;;;12440:25:107;;;12481:18;;;12474:34;1468:7:73;12524:18:107;;;12517:34;1426:8:73;12567:18:107;;;12560:34;;;1374:46:73;;-1:-1:-1;;;;;;1437:3:73;;;;:12;;12412:19:107;;1437:42:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1485:3;;:30;;-1:-1:-1;;;1485:30:73;;1426:53;;-1:-1:-1;;;;;;1485:3:73;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1561:5:73;;1577:3;;1561:30;;-1:-1:-1;;;1561:30:73;;-1:-1:-1;;;;;1561:5:73;;;;-1:-1:-1;1561:13:73;;-1:-1:-1;1561:30:73;;1577:3;;;;1583:7;;1561:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1597:5:73;;-1:-1:-1;;;;;1597:5:73;:16;1616:4;1597:25;;-1:-1:-1;;;;;;1597:25:73;;;;;;;-1:-1:-1;;;;;1063:32:107;;;1597:25:73;;;1045:51:107;1018:18;;1597:25:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1629:40:73;;-1:-1:-1;;;1629:40:73;;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;1629:15:73;;-1:-1:-1;1629:40:73;;;;;:::i;22108:471::-;22159:3;;:41;;-1:-1:-1;;;22159:41:73;;22172:7;22159:41;;;12440:25:107;;;12481:18;;;12474:34;22190:6:73;12524:18:107;;;12517:34;22159:3:73;12567:18:107;;;12560:34;-1:-1:-1;;;;;22159:3:73;;;;:12;;12412:19:107;;22159:41:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;22206:3:73;;:30;;-1:-1:-1;;;22206:30:73;;-1:-1:-1;;;;;22206:3:73;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22242:5:73;;22258:3;;22242:31;;-1:-1:-1;;;22242:31:73;;-1:-1:-1;;;;;22242:5:73;;;;-1:-1:-1;22242:13:73;;-1:-1:-1;22242:31:73;;22258:3;;;;22264:8;;22242:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;22318:3:73;;22343:4;;22281:13;;;;-1:-1:-1;;;;;22318:3:73;;;;:15;;22343:4;22358:5;;-1:-1:-1;;;;;22358:5:73;22372:7;22387;22402:5;22318:95;;;;;;;;;;;;;;;;;;;:::i;2304:130:103:-;2369:22;;-1:-1:-1;;;2369:22:103;;-1:-1:-1;;;;;;;;;;;251:64:102;2369:7:103;;:22;;2377:3;;-1:-1:-1;;;2382:8:103;2369:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2401:26:103;;-1:-1:-1;;;2401:26:103;;-1:-1:-1;;;;;24267:15:107;;;2401:26:103;;;24249:34:107;24319:15;;24299:18;;;24292:43;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;2401:13:103;;-1:-1:-1;24184:18:107;;2401:26:103;24037:304:107;28450:495:73;28519:5;;28535:3;;28519:30;;-1:-1:-1;;;28519:30:73;;-1:-1:-1;;;;;28519:5:73;;;;:13;;:30;;28535:3;;;28541:7;;28519:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;28560:6;28555:96;28576:2;28572:1;:6;28555:96;;;28593:3;;-1:-1:-1;;;;;28593:3:73;:12;28606:15;:1;28611:9;28606:15;:::i;:::-;28593:51;;-1:-1:-1;;;;;;28593:51:73;;;;;;;;;;12440:25:107;;;;28623:9:73;12481:18:107;;;12474:34;28634:6:73;12524:18:107;;;12517:34;12567:18;;;12560:34;;;12412:19;;28593:51:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;28580:3:73;;;;:::i;:::-;;;;28555:96;;;-1:-1:-1;28656:3:73;;:30;;-1:-1:-1;;;28656:30:73;;-1:-1:-1;;;;;28656:3:73;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;28826:3:73;;28865:4;;28753:22;;-1:-1:-1;28799:21:73;;-1:-1:-1;;;;;;28826:3:73;;;;:15;;28847:7;;28865:4;28863:7;10557:98:76;9665:224;9721:4;9775:13;9791:59;:47;;;;;;;;;;;;;;-1:-1:-1;;;9791:47:76;;;:27;9815:1;9791:8;:15;;:27;;;;:::i;:::-;:31;15575:24:103;;;;;;;19758:9;;;:22;;;;;;;-1:-1:-1;;19758:22:103;;;;;;;;;:9;19652:156;9791:47:76;:57;:59::i;:::-;9775:75;-1:-1:-1;9872:12:76;9775:75;9872:2;:12;:::i;:::-;9863:21;;:6;:21;:::i;2732:341:103:-;-1:-1:-1;;;;;;;;;;;2808:125:103;;;;47284:2:107;47266:21;;;47323:1;47303:18;;;47296:29;-1:-1:-1;;;47356:2:107;47341:18;;47334:37;47409:3;47402:4;47387:20;;47380:33;;;47450:2;47429:19;;;47422:31;47490:34;47484:3;47469:19;;47462:63;47562:34;47556:3;47541:19;;47534:63;47634:32;47628:3;47613:19;;47606:61;47699:3;47684:19;;46981:728;2808:125:103;;;;;;;;2943:123;3061:4;2943:90;3030:2;2943:64;-1:-1:-1;;;2943:35:103;:8;2972:5;2943:28;:35::i;12850:363:73:-;12931:9;;:47;;-1:-1:-1;;;12931:47:73;;12950:7;12931:47;;;12440:25:107;;;12481:18;;;12474:34;12968:6:73;12524:18:107;;;12517:34;12920:8:73;12567:18:107;;;12560:34;;;12920:8:73;-1:-1:-1;;;;;12931:9:73;;:18;;12412:19:107;;12931:47:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12984:13;:20;;-1:-1:-1;;;;12984:20:73;-1:-1:-1;;;12984:20:73;;;13010:5;;13026:3;;12920:58;;-1:-1:-1;;;;;;13010:5:73;;;;:13;;13024:6;;13026:3;10647:1:76;10557:98;13024:6:73;13032:7;13010:30;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;13047:42:73;;-1:-1:-1;;;13047:42:73;;47915:2:107;13047:42:73;;;47897:21:107;47954:2;47934:18;;;47927:30;47993:25;47973:18;;;47966:53;-1:-1:-1;;;;;;;;;;;251:64:102;13047:15:73;;48036:18:107;;13047:42:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13095:3:73;;13115:4;;-1:-1:-1;;;;;13095:3:73;;;;-1:-1:-1;13095:10:73;;-1:-1:-1;13115:4:73;13130:5;;-1:-1:-1;;;;;13130:5:73;13144:46;;;;;;;;;13158:3;13144:46;;;;13163:7;13144:46;;;;13172:7;13144:46;;;;13181:7;13144:46;;;:12;:46::i;23488:661::-;23566:3;;:44;;-1:-1:-1;;;23566:44:73;;23579:7;23566:44;;;12440:25:107;23588:9:73;12481:18:107;;;12474:34;23599:7:73;12524:18:107;;;12517:34;23555:8:73;12567:18:107;;;12560:34;;;23555:8:73;-1:-1:-1;;;;;23566:3:73;;:12;;12412:19:107;;23566:44:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23616:3;;:35;;-1:-1:-1;;;23616:35:73;;-1:-1:-1;;;23616:35:73;;;22676:42:107;23555:55:73;;-1:-1:-1;;;;;;23616:3:73;;:10;;22649:18:107;;23616:35:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23738:5:73;;23754:3;;23738:32;;-1:-1:-1;;;23738:32:73;;-1:-1:-1;;;;;23738:5:73;;;;-1:-1:-1;23738:13:73;;-1:-1:-1;23738:32:73;;23754:3;;;;23760:9;;23738:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;23790:3:73;;23777:18;;-1:-1:-1;;;;;23790:3:73;14916:10;:18::i;23777:::-;23840:5;;-1:-1:-1;;;;;23840:5:73;23825:4;;-1:-1:-1;;;;;23806:136:73;;;;23825:4;-1:-1:-1;;;;;23806:136:73;-1:-1:-1;;;;;;;;;;;23854:3:73;23867:4;23880:8;23896:9;23806:136;;;;;;;;;:::i;:::-;;;;;;;;23975:3;;23995:4;;23949:14;;-1:-1:-1;;;;;23975:3:73;;;;:10;;23995:4;24010:5;;-1:-1:-1;;;;;24010:5:73;24024:49;;;;;;;;;24038:3;24024:49;;;;24043:8;24024:49;;;;24053:9;24024:49;;;;24064:7;24024:49;;;:12;:49::i;:::-;24081:4;23975:116;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23948:143;;;;;;24097:47;24108:9;24121:1;24108:14;24097:47;;;;;;;;;;;;;-1:-1:-1;;;24097:47:73;;;:10;:47::i;30610:134::-;30681:3;;30699:4;;30708:5;;30681:58;;-1:-1:-1;;;30681:58:73;;-1:-1:-1;;;;;30681:3:73;;;;:15;;:58;;30699:4;;;;30708:5;;;30716:7;;;;30734:4;;30681:58;;;:::i;17458:487::-;17537:3;;17550:4;;17559:5;;17537:32;;-1:-1:-1;;;17537:32:73;;-1:-1:-1;;;;;17537:3:73;;;;:10;;:32;;17550:4;;;;17559:5;;;17567:1;;17537:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17591:4:73;;17575:13;;-1:-1:-1;;;;;;17591:4:73;;-1:-1:-1;17591:14:73;17608:4;17606:7;10557:98:76;22583:470:73;22634:3;;:41;;-1:-1:-1;;;22634:41:73;;22647:7;22634:41;;;12440:25:107;;;12481:18;;;12474:34;22665:6:73;12524:18:107;;;12517:34;22634:3:73;12567:18:107;;;12560:34;-1:-1:-1;;;;;22634:3:73;;;;:12;;12412:19:107;;22634:41:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;22681:3:73;;:30;;-1:-1:-1;;;22681:30:73;;-1:-1:-1;;;;;22681:3:73;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22717:5:73;;22733:3;;22717:31;;-1:-1:-1;;;22717:31:73;;-1:-1:-1;;;;;22717:5:73;;;;-1:-1:-1;22717:13:73;;-1:-1:-1;22717:31:73;;22733:3;;;;22739:8;;22717:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;22793:3:73;;22818:4;;22756:13;;;;-1:-1:-1;;;;;22793:3:73;;;;:15;;22818:4;22833:5;;-1:-1:-1;;;;;22833:5:73;22847:7;22862;22877:4;22793:94;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22755:132;;;;;;22893:75;22902:9;22913:7;22893:75;;;;;;;;;;;;;;;;;:8;:75::i;:::-;22974:74;22983:8;22993:7;22974:74;;;;;;;;;;;;;;;;;:8;:74::i;19726:927::-;19774:3;;:43;;-1:-1:-1;;;19774:43:73;;19787:9;19774:43;;;12440:25:107;19798:7:73;12481:18:107;;;12474:34;19807:6:73;12524:18:107;;;12517:34;19774:3:73;12567:18:107;;;12560:34;-1:-1:-1;;;;;19774:3:73;;;;:12;;12412:19:107;;19774:43:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;19823:3:73;;:43;;-1:-1:-1;;;19823:43:73;;19836:9;19823:43;;;12440:25:107;19847:7:73;12481:18:107;;;12474:34;19856:6:73;12524:18:107;;;12517:34;19823:3:73;12567:18:107;;;12560:34;-1:-1:-1;;;;;19823:3:73;;;;:12;;12412:19:107;;19823:43:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;19872:3:73;;:30;;-1:-1:-1;;;19872:30:73;;-1:-1:-1;;;;;19872:3:73;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19909:4:73;;19924:3;;19909:30;;-1:-1:-1;;;19909:30:73;;-1:-1:-1;;;;;19909:4:73;;;;-1:-1:-1;19909:12:73;;-1:-1:-1;19909:30:73;;19924:3;;;;19930:8;;19909:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;19945:5:73;;19961:3;;19945:31;;-1:-1:-1;;;19945:31:73;;-1:-1:-1;;;;;19945:5:73;;;;:13;;:31;;19961:3;;;19967:8;;19945:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;19998:4:73;;19982:13;;-1:-1:-1;;;;;19998:4:73;:14;20015:4;19998:23;;-1:-1:-1;;;;;;19998:23:73;;;;;;;-1:-1:-1;;;;;1063:32:107;;;19998:23:73;;;1045:51:107;1018:18;;19998:23:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20043:5;;20067:3;;20043:29;;-1:-1:-1;;;20043:29:73;;-1:-1:-1;;;;;20067:3:73;;;20043:29;;;1045:51:107;19982:39:73;;-1:-1:-1;20027:13:73;;20043:5;;;:15;;1018:18:107;;20043:29:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20117:3;;20142:4;;20157:5;;20117:94;;-1:-1:-1;;;20117:94:73;;20027:45;;-1:-1:-1;20080:13:73;;;;-1:-1:-1;;;;;20117:3:73;;;;:15;;:94;;20142:4;;;;20157:5;;20171:7;;20186;;20201:4;;20117:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20079:132;;;;;;20217:74;20226:8;20236:7;20217:74;;;;;;;;;;;;;;;;;:8;:74::i;:::-;20297:101;20313:9;20330;20297:101;;;;;;;;;;;;;;;;;:8;:101::i;:::-;20420:4;;20404:115;;20446:8;;-1:-1:-1;;;;;20420:4:73;:14;20437:4;20420:23;;-1:-1:-1;;;;;;20420:23:73;;;;;;;-1:-1:-1;;;;;1063:32:107;;;20420:23:73;;;1045:51:107;1018:18;;20420:23:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;;;;:::i;:::-;20462:7;20404:115;;;;;;;;;;;;;;;;;:8;:115::i;:::-;20541:5;;20565:3;;20541:29;;-1:-1:-1;;;20541:29:73;;-1:-1:-1;;;;;20565:3:73;;;20541:29;;;1045:51:107;20525:123:73;;20573:8;;20541:5;;:15;;1018:18:107;;20541:29:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;;;:::i;:::-;20589:9;20525:123;;;;;;;;;;;;;;;;;:8;:123::i;1518:106:103:-;1576:18;;-1:-1:-1;;;1576:18:103;;-1:-1:-1;;;;;;;;;;;251:64:102;1576:7:103;;:18;;1584:3;;1589:4;;1576:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1604:13:103;;-1:-1:-1;;;1604:13:103;;-1:-1:-1;;;;;1063:32:107;;1604:13:103;;;1045:51:107;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;1604:8:103;;-1:-1:-1;1018:18:107;;1604:13:103;868:234:107;7841:173:76;7929:16;7962:47;7976:12;7990:11;8003:5;7962:13;:47::i;9644:496:73:-;9686:3;;:42;;-1:-1:-1;;;9686:42:73;;9699:7;9686:42;;;12440:25:107;;;12481:18;;;12474:34;9717:7:73;12524:18:107;;;12517:34;9686:3:73;12567:18:107;;;12560:34;-1:-1:-1;;;;;9686:3:73;;;;:12;;12412:19:107;;9686:42:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9734:3:73;;:42;;-1:-1:-1;;;9734:42:73;;9747:7;9734:42;;;12440:25:107;;;12481:18;;;12474:34;9765:7:73;12524:18:107;;;12517:34;9734:3:73;12567:18:107;;;12560:34;-1:-1:-1;;;;;9734:3:73;;;;:12;;12412:19:107;;9734:42:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9782:3:73;;:30;;-1:-1:-1;;;9782:30:73;;-1:-1:-1;;;;;9782:3:73;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9858:5:73;;9874:3;;9858:30;;-1:-1:-1;;;9858:30:73;;-1:-1:-1;;;;;9858:5:73;;;;-1:-1:-1;9858:13:73;;-1:-1:-1;9858:30:73;;9874:3;;;;9880:7;;9858:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9922:3:73;;9947:4;;9895:8;;;;-1:-1:-1;;;;;9922:3:73;;;;:15;;9947:4;9962:5;;-1:-1:-1;;;;;9962:5:73;9976:9;9993:7;10008:4;9922:96;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9894:124;;;;;;10024:52;10033:3;10038:9;10024:52;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;10024:52:73;;;:8;:52::i;:::-;10082:53;10091:4;10097:9;10082:53;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;10082:53:73;;;:8;:53::i;18728:994::-;18781:3;;:43;;-1:-1:-1;;;18781:43:73;;18794:9;18781:43;;;12440:25:107;18805:7:73;12481:18:107;;;12474:34;18814:6:73;12524:18:107;;;12517:34;18770:8:73;12567:18:107;;;12560:34;;;18770:8:73;-1:-1:-1;;;;;18781:3:73;;:12;;12412:19:107;;18781:43:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18830:4;;18845:3;;18830:30;;-1:-1:-1;;;18830:30:73;;18770:54;;-1:-1:-1;;;;;;18830:4:73;;;;:12;;:30;;18845:3;;18851:8;;18830:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;18866:5:73;;18882:3;;18866:31;;-1:-1:-1;;;18866:31:73;;-1:-1:-1;;;;;18866:5:73;;;;:13;;:31;;18882:3;;;18888:8;;18866:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;18919:4:73;;18903:13;;-1:-1:-1;;;;;18919:4:73;:14;18936:4;18919:23;;-1:-1:-1;;;;;;18919:23:73;;;;;;;-1:-1:-1;;;;;1063:32:107;;;18919:23:73;;;1045:51:107;1018:18;;18919:23:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18964:5;;18988:3;;18964:29;;-1:-1:-1;;;18964:29:73;;-1:-1:-1;;;;;18988:3:73;;;18964:29;;;1045:51:107;18903:39:73;;-1:-1:-1;18948:13:73;;18964:5;;;:15;;1018:18:107;;18964:29:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19013:3;;18948:45;;-1:-1:-1;19000:18:73;;-1:-1:-1;;;;;19013:3:73;14916:10;:18::i;19000:::-;19053:5;;19044:4;;19029:65;;;51403:25:107;;;19068:4:73;51459:2:107;51444:18;;51437:60;19075:7:73;51513:18:107;;;51506:34;19084:9:73;51571:2:107;51556:18;;51549:34;19029:65:73;;-1:-1:-1;;;;;19053:5:73;;;;19044:4;;;;;19029:65;;;;;51390:3:107;19029:65:73;;;19154:3;;19174:4;;19101:14;;;;;;-1:-1:-1;;;;;19154:3:73;;;;:10;;19174:4;19189:5;;-1:-1:-1;;;;;19189:5:73;19203:47;;;;;;;;;19217:3;19203:47;;;;19222:7;19203:47;;;;19231:9;19203:47;;;;19242:6;19203:47;;;:12;:47::i;:::-;19258:4;19154:114;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19100:168;;;;;;;;19274:50;19285:9;19298:1;19285:14;19274:50;;;;;;;;;;;;;-1:-1:-1;;;19274:50:73;;;:10;:50::i;:::-;19346:4;;19330:115;;19372:8;;-1:-1:-1;;;;;19346:4:73;:14;19363:4;19361:7;10557:98:76;19330:115:73;19467:5;;19491:3;;19467:29;;-1:-1:-1;;;19467:29:73;;-1:-1:-1;;;;;19491:3:73;;;19467:29;;;1045:51:107;19451:123:73;;19499:8;;19467:5;;:15;;1018:18:107;;19467:29:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;;;:::i;:::-;19515:9;19451:123;;;;;;;;;;;;;;;;;:8;:123::i;:::-;19580:64;19589:8;19599:7;19580:64;;;;;;;;;;;;;;;;;:8;:64::i;:::-;19650:67;19659:9;19670;19650:67;;;;;;;;;;;;;;;;;:8;:67::i;28949:496::-;29020:5;;29036:3;;29020:30;;-1:-1:-1;;;29020:30:73;;-1:-1:-1;;;;;29020:5:73;;;;:13;;:30;;29036:3;;;29042:7;;29020:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;29061:6;29056:96;29077:2;29073:1;:6;29056:96;;;29094:3;;-1:-1:-1;;;;;29094:3:73;:12;29107:15;:1;29112:9;29107:15;:::i;:::-;29094:51;;-1:-1:-1;;;;;;29094:51:73;;;;;;;;;;12440:25:107;;;;29124:9:73;12481:18:107;;;12474:34;29135:6:73;12524:18:107;;;12517:34;12567:18;;;12560:34;;;12412:19;;29094:51:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;29081:3:73;;;;:::i;:::-;;;;29056:96;;;-1:-1:-1;29157:3:73;;:30;;-1:-1:-1;;;29157:30:73;;-1:-1:-1;;;;;29157:3:73;;;;:10;;:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;29326:3:73;;29365:4;;29254:21;;-1:-1:-1;29299:21:73;;-1:-1:-1;;;;;;29326:3:73;;;;:15;;29347:7;;29365:4;29363:7;10557:98:76;27027:319:73;27091:6;27086:94;27107:2;27103:1;:6;27086:94;;;27124:3;;:49;;-1:-1:-1;;;27124:49:73;;27137:11;27124:49;;;12440:25:107;;;12481:18;;;12474:34;27163:6:73;12524:18:107;;;12517:34;12567:18;;;12560:34;;;-1:-1:-1;;;;;27124:3:73;;;;:12;;12412:19:107;;27124:49:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;27111:3:73;;;;:::i;:::-;;;;27086:94;;;-1:-1:-1;27185:5:73;;27201:3;;27185:31;;-1:-1:-1;;;27185:31:73;;-1:-1:-1;;;;;27185:5:73;;;;:13;;:31;;27201:3;;;27207:8;;27185:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6551:277:76:-;6706:3;;:21;;-1:-1:-1;;;6706:21:76;;-1:-1:-1;;;;;24267:15:107;;;6706:21:76;;;24249:34:107;24319:15;;;24299:18;;;24292:43;6652:4:76;;;;;;6706:3;;;;:10;;24184:18:107;;6706:21:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6664:63;;-1:-1:-1;6664:63:76;-1:-1:-1;5534:62:16;;;;;;6742:32:76;5847:72:17;;;;;;6742:6:76;:32;:::i;:::-;6741:67;;;;:::i;:::-;:81;;6817:5;6741:81;:::i;:::-;6733:90;6551:277;-1:-1:-1;;;;;;6551:277:76:o;1530:97:77:-;1579:43;;-1:-1:-1;;;1579:43:77;;1593:4;1579:43;;;52577:41:107;;;52634:18;;;52627:50;;;52693:18;;;52686:50;;;52752:18;;;52745:50;-1:-1:-1;;;;;52832:32:107;;52811:19;;;52804:61;-1:-1:-1;;;;;;;;;;;251:64:102;1579:13:77;;52549:19:107;;1579:43:77;52342:529:107;3398:177:78;3522:16;;;3536:1;3522:16;;;;;;;;;3473;;3499:20;;3522:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3499:39;;3553:1;3544:3;3548:1;3544:6;;;;;;;;:::i;:::-;;;;;;;;;;:10;3567:3;3398:177;-1:-1:-1;;3398:177:78:o;3418:191:101:-;3497:9;3492:111;;-1:-1:-1;;;;;;;;;;;3553:3:101;3527:30;;;;;;:::i;:::-;;;;;;;;3571:21;3582:9;3571:10;:21::i;5469:178::-;5550:1;5545;:6;5541:100;;-1:-1:-1;;;;;;;;;;;5598:3:101;5572:30;;;;;;:::i;:::-;;;;;;;;5616:14;5625:1;5628;5616:8;:14::i;2279:576:76:-;2426:21;;2338:115;;2361:4;;2374:12;;2399:19;;2426:21;;;2338:115;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2331:4:76;:122;;-1:-1:-1;;;;;;2331:122:76;-1:-1:-1;;;;;2331:122:76;;;;;;;;;;2490:4;2557:22;;2467:118;;2503:13;;2529:20;;2557:22;;;;;2467:118;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2459:5:76;:126;;-1:-1:-1;;;;;;2459:126:76;-1:-1:-1;;;;;2459:126:76;;;;;;;;;2634:4;;2647:7;:24;2620:52;;2634:4;;;;;2459:126;2647:24;;2620:13;:52::i;:::-;2614:3;:58;;-1:-1:-1;;;;;;2614:58:76;-1:-1:-1;;;;;2614:58:76;;;;;;;;;2719:27;;;-1:-1:-1;;;2719:27:76;;;;:8;;2735;;2719:27;;;;;-1:-1:-1;;2719:27:76;;;;;;;2735:8;2614:58;2719:27;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2771:4:76;;2786:3;;2771:36;;-1:-1:-1;;;2771:36:76;;-1:-1:-1;;;;;2771:4:76;;;;-1:-1:-1;2771:12:76;;-1:-1:-1;2771:36:76;;-1:-1:-1;2786:3:76;;;-1:-1:-1;;2792:14:76;2771:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2813:5:76;;2829:3;;2813:37;;-1:-1:-1;;;2813:37:76;;-1:-1:-1;;;;;2813:5:76;;;;:13;;:37;;2829:3;;;-1:-1:-1;;2835:14:76;2813:37;;;:::i;8315:337::-;8414:9;8420:2;8414:5;:9::i;:::-;;8429;8435:2;8429:5;:9::i;:::-;-1:-1:-1;8466:18:76;;8444:52;;-1:-1:-1;;;8444:52:76;;-1:-1:-1;;;;;55705:15:107;;;8444:52:76;;;55687:34:107;55757:15;;;55737:18;;;55730:43;55789:18;;;55782:34;;;;8486:1:76;55832:18:107;;;55825:34;8489:6:76;55875:19:107;;;55868:35;8444:13:76;;;;;;55621:19:107;;8444:52:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8524:18:76;;8502:52;;-1:-1:-1;;;8502:52:76;;-1:-1:-1;;;;;55705:15:107;;;8502:52:76;;;55687:34:107;55757:15;;;55737:18;;;55730:43;55789:18;;;55782:34;;;;8544:1:76;55832:18:107;;;55825:34;8547:6:76;55875:19:107;;;55868:35;8502:13:76;;;;-1:-1:-1;8502:13:76;;-1:-1:-1;55621:19:107;;8502:52:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;275:37:102;;259:55;;251:64;;-1:-1:-1;;;;;8575:8:76;;8584:2;8595;-1:-1:-1;;;;;8588:17:76;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8588:19:76;;;;;;;;;;;;:::i;:::-;8575:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;275:37:102;;259:55;;251:64;;-1:-1:-1;;;;;8614:8:76;;8623:2;8634;-1:-1:-1;;;;;8627:17:76;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8627:19:76;;;;;;;;;;;;:::i;:::-;8614:33;;;;;;;;;;;;;;;;:::i;319:461:78:-;381:27;440:2;446:1;440:7;436:42;;-1:-1:-1;;459:10:78;;;;;;;;;;;;-1:-1:-1;;;459:10:78;;;;;319:461::o;436:42::-;494:2;485:6;520:56;527:6;;520:56;;545:5;;565:2;560:7;;;;520:56;;;583:17;613:3;603:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;603:14:78;-1:-1:-1;583:34:78;-1:-1:-1;;;634:7:78;;649:94;656:7;;649:94;;711:2;706;:7;700:2;:14;687:29;;675:4;680:3;;;;;;;675:9;;;;;;;;:::i;:::-;;;;:41;-1:-1:-1;;;;;675:41:78;;;;;;;;-1:-1:-1;732:2:78;726:8;;;;649:94;;;-1:-1:-1;764:4:78;319:461;-1:-1:-1;;;;319:461:78:o;6055:121:106:-;6110:59;6165:2;6126:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6126:42:106;;;;;;;;;;;;;;-1:-1:-1;;;;;6126:42:106;-1:-1:-1;;;6126:42:106;;;6110:15;:59::i;6228:118:103:-;-1:-1:-1;;;;;;;;;;;6319:3:103;6293:30;;;;;;:::i;:::-;;;;;;;;6333:6;:4;:6::i;1982:611:78:-;2061:20;2361;2409:1;2401:10;;2413;2384:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2361:63;;2430:8;2461:1;2441:10;:17;:21;;;;:::i;:::-;2500:2;2496:16;;2519:20;;;2496:16;2519:20;;-1:-1:-1;2559:29:78;;;;;;;;;;;:::i;1662:203:77:-;1766:4;1780:63;1789:13;1804:15;1780:63;;;;;;;;;;;;;-1:-1:-1;;;1780:63:77;;;:8;:63::i;:::-;-1:-1:-1;1856:4:77;1662:203;;;;:::o;7020:178:101:-;7101:1;7096;:6;7092:100;;-1:-1:-1;;;;;;;;;;;7149:3:101;7123:30;;;;;;:::i;:::-;;;;;;;;7167:14;7176:1;7179;7167:8;:14::i;19341:156:103:-;19447:12;;;:22;;-1:-1:-1;;;;;;19447:22:103;-1:-1:-1;;;;;19447:22:103;;;;;;;;;;:12;19341:156::o;20625:120::-;20705:33;20719:4;20733:3;20705:13;:33::i;1901:226:77:-;1945:4;-1:-1:-1;;;;;1961:15:77;;1957:136;;-1:-1:-1;;;;;;;;;;;1991:37:77;;;;56954:2:107;56936:21;;;56993:2;56973:18;;;56966:30;57032:32;57027:2;57012:18;;57005:60;57097:2;57082:18;;56752:354;1991:37:77;;;;;;;;2041:31;;;57323:21:107;;;57380:1;57360:18;;;57353:29;-1:-1:-1;;;57413:2:107;57398:18;;57391:37;-1:-1:-1;;;;;57502:32:107;;57495:4;57480:20;;57473:62;2041:31:77;;;;;;;57460:3:107;2041:31:77;;;2080:6;:4;:6::i;:::-;-1:-1:-1;;;;;;2106:15:77;;;;1901:226::o;22844:128:103:-;22906:7;22943:10;22948:4;22943;:10::i;:::-;22932:33;;;;;;;;;;;;:::i;3255:157:101:-;3315:9;3310:96;;-1:-1:-1;;;;;;;;;;;3345:30:101;;;;57748:2:107;57730:21;;;57787:2;57767:18;;;57760:30;57826:25;57821:2;57806:18;;57799:53;57884:2;57869:18;;57546:347;5202:262:101;5264:1;5259;:6;5255:203;;-1:-1:-1;;;;;;;;;;;5286:41:101;;;;58100:2:107;58082:21;;;58139:2;58119:18;;;58112:30;58178:34;58173:2;58158:18;;58151:62;-1:-1:-1;;;58244:2:107;58229:18;;58222:32;58286:3;58271:19;;57898:398;5286:41:101;;;;;;;;-1:-1:-1;;;;;;;;;;;5375:1:101;5346:31;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;5425:1:101;5396:31;;;;;;:::i;:::-;;;;;;;;5441:6;:4;:6::i;631:333:106:-;725:14;;581:42;855:2;842:16;;701:21;;725:14;842:16;581:42;891:5;880:68;871:77;;808:150;;631:333;:::o;2410:424:101:-;-1:-1:-1;;;;;;;;;;;2978:55:101;3059:16;2445:359;;2645:67;;2482:11;;-1:-1:-1;;;;;;;;;;;1671:64:101;2579:43;;2645:67;;1671:64;;-1:-1:-1;;;2670:17:101;2705:4;;2645:67;;;:::i;:::-;;;;-1:-1:-1;;2645:67:101;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:101;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:101;2813:7;:14;;-1:-1:-1;;2813:14:101;;;;;2410:424::o;15037:254::-;15192:1;15175:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;15165:30;;;;;;15158:1;15141:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;15131:30;;;;;;:64;15127:158;;-1:-1:-1;;;;;;;;;;;15242:3:101;15216:30;;;;;;:::i;:::-;;;;;;;;15260:14;15269:1;15272;15260:8;:14::i;6756:259::-;6818:1;6813;:6;6809:200;;-1:-1:-1;;;;;;;;;;;6840:40:101;;;;60168:2:107;60150:21;;;60207:2;60187:18;;;60180:30;60246:34;60241:2;60226:18;;60219:62;-1:-1:-1;;;60312:2:107;60297:18;;60290:31;60353:3;60338:19;;59966:397;6840:40:101;;;;;;;;6899:30;;;60580:21:107;;;60637:1;60617:18;;;60610:29;-1:-1:-1;;;60670:2:107;60655:18;;60648:39;60754:4;60739:20;;60732:36;;;6899:30:101;;-1:-1:-1;;;;;;;;;;;6899:30:101;;;;60719:3:107;6899:30:101;;;6948;;;60991:21:107;;;61048:1;61028:18;;;61021:29;;;;-1:-1:-1;;;61081:2:107;61066:18;;61059:39;61165:4;61150:20;;61143:36;;;-1:-1:-1;;;;;;;;;;;6948:30:101;61130:3:107;61115:19;6948:30:101;60779:406:107;20979:1089:103;21095:12;;;;21131:9;;;;21172:11;;;;21216:10;;;21193:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21095:12:103;;;;21131:9;;;;;;21081:11;;21193:33;;21216:10;;21193:33;;21216:10;21193:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21237:17;21274:4;21280:12;21288:3;21280:7;:12::i;:::-;21257:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;21257:36:103;;;;;;;;;-1:-1:-1;;;;;21308:15:103;;;;;;:10;;;21257:36;21308:15;;;;;;-1:-1:-1;;;;;;21308:21:103;;;;;;;;;21257:36;;-1:-1:-1;21308:21:103;;:15;;21340:34;;21357:3;;21362:11;;21340:34;;:::i;:::-;;;;-1:-1:-1;;21340:34:103;;;;;;;;;21330:45;;21340:34;21330:45;;;;21308:68;;;;;;;;;;-1:-1:-1;21308:68:103;;;;21303:110;;21392:10;21397:4;21392;:10::i;:::-;;21303:110;-1:-1:-1;;;;;21445:15:103;;21422:12;21445:15;;;;;;;;;;;-1:-1:-1;;;;;;21445:21:103;;;;;;;;;21477:34;;21445:21;;21422:12;;21477:34;;21494:3;;21499:11;;21477:34;;:::i;:::-;;;;;;;;;;;;;21467:45;;;;;;21445:68;;;;;;;;;;;;21437:77;;21422:92;;21525:12;21564:17;21585:3;-1:-1:-1;;;;;21585:14:103;21600:4;21585:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21561:44:103;-1:-1:-1;21626:36:103;;-1:-1:-1;21561:44:103;21647:14;21650:11;21647:2;:14;:::i;:::-;21626;:36::i;:::-;21697:28;;-1:-1:-1;;;21697:28:103;;21619:43;;-1:-1:-1;21682:12:103;;-1:-1:-1;;;;;;;;;;;;21697:17:103;;;:28;;21715:3;;21720:4;;21697:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21682:43;;21748:4;21740;:12;21736:172;;21768:129;;-1:-1:-1;;;21768:129:103;;;;;;;:::i;:::-;21917:34;;-1:-1:-1;;;21917:34:103;;-1:-1:-1;;;;;;;;;;;21917:18:103;;;:34;;21936:3;;21941:4;;21947:3;;21917:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21968:12:103;;;21961:19;;-1:-1:-1;;;;;;21961:19:103;;;-1:-1:-1;21997:9:103;;;21990:16;;-1:-1:-1;;21990:16:103;;;22016:17;-1:-1:-1;22023:10:103;;21968:12;22016:17;:::i;:::-;22050:4;:11;;22043:18;;;21071:997;;;;;;;;20979:1089;;:::o;22074:204::-;22166:12;;;;22130;;-1:-1:-1;;;;;22166:12:103;22154:9;22200:10;22166:4;22200;:10::i;:::-;22238:32;;-1:-1:-1;;;22238:32:103;;22188:22;;-1:-1:-1;;;;;;;;;;;;22238:17:103;;;:32;;22256:1;;22188:22;;22238:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22227:44;;;;;;8258:25:107;;8246:2;8231:18;;8112:177;22227:44:103;;;;;;;;;;;;;22220:51;;;;22074:204;;;:::o;14688:344:101:-;14824:1;14807:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14797:30;;;;;;14790:1;14773:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14763:30;;;;;;:64;14759:267;;-1:-1:-1;;;;;;;;;;;14848:43:101;;;;62939:2:107;62921:21;;;62978:2;62958:18;;;62951:30;63017:34;63012:2;62997:18;;62990:62;-1:-1:-1;;;63083:2:107;63068:18;;63061:34;63127:3;63112:19;;62737:400;14848:43:101;;;;;;;;-1:-1:-1;;;;;;;;;;;14941:1:101;14910:33;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;14993:1:101;14962:33;;;;;;:::i;23412:397:103:-;23471:12;23499:19;23531:1;:8;23542:2;23531:13;;;;:::i;:::-;23521:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23521:24:103;;23499:46;;23560:9;23555:224;23579:1;:8;23575:1;:12;23555:224;;;23608:9;23620:1;23622;23620:4;;;;;;;;:::i;:::-;;;;;;;23608:16;;23753:1;23747;23743:2;23739:10;23735:2;23731:19;23723:6;23719:32;23712:43;23694:75;23589:3;;;;;:::i;:::-;;;;23555:224;;16121:3214;16245:12;;;;16281:9;;;;16322:11;;;;16366:10;;;16343:33;;;;;;;;;;;;;;;;;;;16208:7;;-1:-1:-1;;;;;16245:12:103;;16281:9;;;16322:11;16208:7;;16343:33;;16366:10;;16343:33;;;16366:10;16343:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;16427:15:103;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;16427:21:103;;;;;;;;;16459:34;;16343:33;;-1:-1:-1;16427:21:103;:15;;-1:-1:-1;16459:34:103;;-1:-1:-1;16343:33:103;;16481:11;;16459:34;;:::i;:::-;;;;-1:-1:-1;;16459:34:103;;;;;;;;;16449:45;;16459:34;16449:45;;;;16427:68;;;;;;;;;;-1:-1:-1;16427:68:103;;;;16423:174;;;-1:-1:-1;;;;;16518:15:103;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;16518:21:103;;;;;;;;;16550:34;;16518:21;;:10;16550:34;;16567:3;;16572:11;;16550:34;;:::i;:::-;;;;;;;;;;;;;16540:45;;;;;;16518:68;;;;;;;;;;;;16511:75;;;;;;16121:3214;;;:::o;16423:174::-;16606:17;16643:4;16649:12;16657:3;16649:7;:12::i;:::-;16626:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16606:56;;-1:-1:-1;;;;;;;;;;;15395:37:103;;-1:-1:-1;;;;;16672:19:103;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16703:12;16742:17;16763:3;-1:-1:-1;;;;;16763:14:103;16778:4;16763:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16739:44:103;-1:-1:-1;16804:36:103;;-1:-1:-1;16739:44:103;16825:14;16828:11;16825:2;:14;:::i;16804:36::-;16890:35;;-1:-1:-1;;;16890:35:103;;-1:-1:-1;;;;;1063:32:107;;16890:35:103;;;1045:51:107;16797:43:103;;-1:-1:-1;16862:22:103;;-1:-1:-1;;;;;;;;;;;;16890:21:103;;;1018:18:107;;16890:35:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16890:35:103;;;;;;;;;;;;:::i;:::-;16861:64;;;16939:5;:12;16955:1;16939:17;16935:2058;;16972:12;-1:-1:-1;;;;;;;;;;;15395:37:103;;-1:-1:-1;;;;;16987:17:103;;17005:3;17010:5;17016:1;17010:8;;;;;;;;:::i;:::-;;;;;;;16987:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16972:47;-1:-1:-1;16972:47:103;17033:106;;17080:44;17101:3;17114:5;17120:1;17114:8;;;;;;;;:::i;:::-;;;;;;;17106:17;;17080:44;;;;;;;:::i;:::-;;;;;;;;17033:106;17164:4;17156;:12;17152:180;;17188:129;;-1:-1:-1;;;17188:129:103;;;;;;;:::i;:::-;17350:86;17360:3;17365:4;17398:3;17403:11;17381:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17371:45;;;;;;17426:5;17432:1;17426:8;;;;;;;;:::i;:::-;;;;;;;17418:17;;17350:86;;;;;;;;;:::i;:::-;;;;;;;;17529:5;17535:1;17529:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;17450:15:103;;17521:17;17450:15;;;;;;;;;;-1:-1:-1;;;;;;17450:21:103;;;;;;;;;17482:34;;17529:8;;17450:21;;17482:34;;17499:3;;17504:11;;17482:34;;:::i;:::-;;;;-1:-1:-1;;17482:34:103;;;;;;;;;17472:45;;17482:34;17472:45;;;;17450:68;;;;;;;;;;;;-1:-1:-1;17450:68:103;;;:88;;;;-1:-1:-1;;;;;17552:15:103;;;;17623:4;17552:10;;;:15;;;;;-1:-1:-1;;;;;;17552:21:103;;;;;;;;;17584:34;;17623:4;;-1:-1:-1;17584:34:103;;17601:3;;17606:11;;17584:34;;:::i;:::-;;;;;;;-1:-1:-1;;17584:34:103;;;;;;17574:45;;17584:34;17574:45;;;;17552:68;;;;;;;;;;-1:-1:-1;17552:68:103;:75;;-1:-1:-1;;17552:75:103;;;;;;;;;;-1:-1:-1;16935:2058:103;;;17663:1;17648:5;:12;:16;17644:1349;;;17685:9;17680:1190;17704:5;:12;17700:1;:16;17680:1190;;;17741:12;-1:-1:-1;;;;;;;;;;;15395:37:103;;-1:-1:-1;;;;;17756:17:103;;17774:3;17779:5;17785:1;17779:8;;;;;;;;:::i;:::-;;;;;;;17756:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17741:47;-1:-1:-1;17741:47:103;17806:114;;17857:44;17878:3;17891:5;17897:1;17891:8;;;;;;;;:::i;:::-;;;;;;;17883:17;;17857:44;;;;;;;:::i;:::-;;;;;;;;17806:114;-1:-1:-1;;;;;;;;;;;15395:37:103;;-1:-1:-1;;;;;17962:18:103;;17981:3;17986:5;17992:1;17986:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;17962:53:103;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18033:12;18063:17;18138:3;-1:-1:-1;;;;;18138:14:103;18153:4;18138:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18120:38:103;;-1:-1:-1;18120:38:103;-1:-1:-1;18187:36:103;18120:38;18208:14;18211:11;18208:2;:14;:::i;18187:36::-;18180:43;;18264:7;:37;;;;;-1:-1:-1;;;18275:4:103;:26;18264:37;18260:539;;;18399:86;18409:3;18414:4;18447:3;18452:11;18430:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18420:45;;;;;;18475:5;18481:1;18475:8;;;;;;;;:::i;:::-;;;;;;;18467:17;;18399:86;;;;;;;;;:::i;:::-;;;;;;;;18586:5;18592:1;18586:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;18507:15:103;;18578:17;18507:15;;;;;;;;;;-1:-1:-1;;;;;;18507:21:103;;;;;;;;;18539:34;;18586:8;;18507:21;;18539:34;;18556:3;;18561:11;;18539:34;;:::i;:::-;;;;;;;;;;;;;18529:45;;;;;;18507:68;;;;;;;;;;;:88;;;;18688:4;18617;:10;;:15;18628:3;-1:-1:-1;;;;;18617:15:103;-1:-1:-1;;;;;18617:15:103;;;;;;;;;;;;:21;18633:4;-1:-1:-1;;;;;18617:21:103;;-1:-1:-1;;;;;18617:21:103;;;;;;;;;;;;;:68;18666:3;18671:11;18649:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18639:45;;;;;;18617:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;15395:37:103;;-1:-1:-1;;;;;18714:18:103;;18733:3;18738:5;18744:1;18738:8;;;;;;;;:::i;:::-;;;;;;;18748:4;18714:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18775:5;;;;;18260:539;-1:-1:-1;;;;;;;;;;;15395:37:103;;-1:-1:-1;;;;;18816:18:103;;18835:3;18840:5;18846:1;18840:8;;;;;;;;:::i;:::-;;;;;;;18850:4;18816:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17723:1147;;;17718:3;;;;;:::i;:::-;;;;17680:1190;;;;17644:1349;;;18900:82;;;-1:-1:-1;;;18900:82:103;;65963:2:107;18900:82:103;;;65945:21:107;65982:18;;;65975:30;;;;66041:34;66021:18;;;66014:62;66112:34;66092:18;;;66085:62;66164:19;;18900:82:103;65761:428:107;18900:82:103;-1:-1:-1;;;;;19011:15:103;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;19011:21:103;;;;;;;;;19043:34;;19011:21;;:15;19043:34;;19060:3;;19065:11;;19043:34;;:::i;:::-;;;;-1:-1:-1;;19043:34:103;;;;;;;;;19033:45;;19043:34;19033:45;;;;19011:68;;;;;;;;;;-1:-1:-1;19011:68:103;;;;19003:128;;;;-1:-1:-1;;;19003:128:103;;66396:2:107;19003:128:103;;;66378:21:107;66435:2;66415:18;;;66408:30;66474:34;66454:18;;;66447:62;-1:-1:-1;;;66525:18:107;;;66518:45;66580:19;;19003:128:103;66194:411:107;19003:128:103;19149:12;;;19142:19;;-1:-1:-1;;;;;;19142:19:103;;;19178:9;;;19171:16;;-1:-1:-1;;19171:16:103;;;19197:17;-1:-1:-1;19204:10:103;;19149:12;19197:17;:::i;:::-;19224:18;19231:11;;;19224:18;;;-1:-1:-1;;;;;19260:15:103;;;;;;;;;;;;-1:-1:-1;;;;;;19260:21:103;;;;;;;;;19292:34;;19260:21;;19224:18;19292:34;;19309:3;;19314:11;;19292:34;;:::i;:::-;;;;;;;;;;;;;19282:45;;;;;;19260:68;;;;;;;;;;;;19253:75;;;;;;;;;16121:3214;;;:::o;23109:297::-;23183:7;23202:11;23224;23249:2;23238:1;:8;:13;:29;;23259:1;:8;23238:29;;;23254:2;23238:29;23224:43;;23282:6;23277:103;23298:3;23294:1;:7;23277:103;;;23363:5;:1;23367;23363:5;:::i;:::-;23337:1;23339:10;23348:1;23339:6;:10;:::i;:::-;23337:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;23337:13:103;23329:40;;23322:47;;;;;23303:3;;;;:::i;:::-;;;;23277:103;;;-1:-1:-1;23396:3:103;;23109:297;-1:-1:-1;;;;23109:297:103:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;499:118:107:-;585:5;578:13;571:21;564:5;561:32;551:60;;607:1;604;597:12;622:241;678:6;731:2;719:9;710:7;706:23;702:32;699:52;;;747:1;744;737:12;699:52;786:9;773:23;805:28;827:5;805:28;:::i;1107:139::-;-1:-1:-1;;;;;1190:31:107;;1180:42;;1170:70;;1236:1;1233;1226:12;1251:569;1355:6;1363;1371;1424:2;1412:9;1403:7;1399:23;1395:32;1392:52;;;1440:1;1437;1430:12;1392:52;1479:9;1466:23;1498:39;1531:5;1498:39;:::i;:::-;1556:5;-1:-1:-1;1613:2:107;1598:18;;1585:32;1626:41;1585:32;1626:41;:::i;:::-;1686:7;-1:-1:-1;1745:2:107;1730:18;;1717:32;1758:30;1717:32;1758:30;:::i;:::-;1807:7;1797:17;;;1251:569;;;;;:::o;1825:323::-;1893:6;1901;1954:2;1942:9;1933:7;1929:23;1925:32;1922:52;;;1970:1;1967;1960:12;1922:52;2009:9;1996:23;2028:39;2061:5;2028:39;:::i;:::-;2086:5;2138:2;2123:18;;;;2110:32;;-1:-1:-1;;;1825:323:107:o;2153:255::-;2212:6;2265:2;2253:9;2244:7;2240:23;2236:32;2233:52;;;2281:1;2278;2271:12;2233:52;2320:9;2307:23;2339:39;2372:5;2339:39;:::i;2413:404::-;2481:6;2489;2542:2;2530:9;2521:7;2517:23;2513:32;2510:52;;;2558:1;2555;2548:12;2510:52;2597:9;2584:23;2616:39;2649:5;2616:39;:::i;:::-;2674:5;-1:-1:-1;2731:2:107;2716:18;;2703:32;2744:41;2703:32;2744:41;:::i;:::-;2804:7;2794:17;;;2413:404;;;;;:::o;2822:127::-;2883:10;2878:3;2874:20;2871:1;2864:31;2914:4;2911:1;2904:15;2938:4;2935:1;2928:15;2954:275;3025:2;3019:9;3090:2;3071:13;;-1:-1:-1;;3067:27:107;3055:40;;3125:18;3110:34;;3146:22;;;3107:62;3104:88;;;3172:18;;:::i;:::-;3208:2;3201:22;2954:275;;-1:-1:-1;2954:275:107:o;3234:187::-;3283:4;3316:18;3308:6;3305:30;3302:56;;;3338:18;;:::i;:::-;-1:-1:-1;3404:2:107;3383:15;-1:-1:-1;;3379:29:107;3410:4;3375:40;;3234:187::o;3426:338::-;3491:5;3520:53;3536:36;3565:6;3536:36;:::i;:::-;3520:53;:::i;:::-;3511:62;;3596:6;3589:5;3582:21;3636:3;3627:6;3622:3;3618:16;3615:25;3612:45;;;3653:1;3650;3643:12;3612:45;3702:6;3697:3;3690:4;3683:5;3679:16;3666:43;3756:1;3749:4;3740:6;3733:5;3729:18;3725:29;3718:40;3426:338;;;;;:::o;3769:222::-;3812:5;3865:3;3858:4;3850:6;3846:17;3842:27;3832:55;;3883:1;3880;3873:12;3832:55;3905:80;3981:3;3972:6;3959:20;3952:4;3944:6;3940:17;3905:80;:::i;3996:671::-;4083:6;4091;4144:2;4132:9;4123:7;4119:23;4115:32;4112:52;;;4160:1;4157;4150:12;4112:52;4200:9;4187:23;4229:18;4270:2;4262:6;4259:14;4256:34;;;4286:1;4283;4276:12;4256:34;4309:50;4351:7;4342:6;4331:9;4327:22;4309:50;:::i;:::-;4299:60;;4412:2;4401:9;4397:18;4384:32;4368:48;;4441:2;4431:8;4428:16;4425:36;;;4457:1;4454;4447:12;4425:36;-1:-1:-1;4480:24:107;;4535:4;4527:13;;4523:27;-1:-1:-1;4513:55:107;;4564:1;4561;4554:12;4513:55;4587:74;4653:7;4648:2;4635:16;4630:2;4626;4622:11;4587:74;:::i;:::-;4577:84;;;3996:671;;;;;:::o;4880:180::-;4939:6;4992:2;4980:9;4971:7;4967:23;4963:32;4960:52;;;5008:1;5005;4998:12;4960:52;-1:-1:-1;5031:23:107;;4880:180;-1:-1:-1;4880:180:107:o;5065:614::-;5152:6;5160;5168;5221:2;5209:9;5200:7;5196:23;5192:32;5189:52;;;5237:1;5234;5227:12;5189:52;5276:9;5263:23;5295:39;5328:5;5295:39;:::i;:::-;5353:5;-1:-1:-1;5410:2:107;5395:18;;5382:32;5423:41;5382:32;5423:41;:::i;:::-;5483:7;-1:-1:-1;5541:2:107;5526:18;;5513:32;5568:18;5557:30;;5554:50;;;5600:1;5597;5590:12;5554:50;5623;5665:7;5656:6;5645:9;5641:22;5623:50;:::i;:::-;5613:60;;;5065:614;;;;;:::o;6139:472::-;6216:6;6224;6232;6285:2;6273:9;6264:7;6260:23;6256:32;6253:52;;;6301:1;6298;6291:12;6253:52;6340:9;6327:23;6359:39;6392:5;6359:39;:::i;:::-;6417:5;-1:-1:-1;6474:2:107;6459:18;;6446:32;6487:41;6446:32;6487:41;:::i;:::-;6139:472;;6547:7;;-1:-1:-1;;;6601:2:107;6586:18;;;;6573:32;;6139:472::o;6616:182::-;6675:4;6708:18;6700:6;6697:30;6694:56;;;6730:18;;:::i;:::-;-1:-1:-1;6775:1:107;6771:14;6787:4;6767:25;;6616:182::o;6803:889::-;6886:6;6917:2;6960;6948:9;6939:7;6935:23;6931:32;6928:52;;;6976:1;6973;6966:12;6928:52;7016:9;7003:23;7049:18;7041:6;7038:30;7035:50;;;7081:1;7078;7071:12;7035:50;7104:22;;7157:4;7149:13;;7145:27;-1:-1:-1;7135:55:107;;7186:1;7183;7176:12;7135:55;7222:2;7209:16;7245:59;7261:42;7300:2;7261:42;:::i;7245:59::-;7338:15;;;7420:1;7416:10;;;;7408:19;;7404:28;;;7369:12;;;;7444:19;;;7441:39;;;7476:1;7473;7466:12;7441:39;7500:11;;;;7520:142;7536:6;7531:3;7528:15;7520:142;;;7602:17;;7590:30;;7553:12;;;;7640;;;;7520:142;;;7681:5;6803:889;-1:-1:-1;;;;;;;6803:889:107:o;7697:410::-;7793:6;7801;7809;7862:2;7850:9;7841:7;7837:23;7833:32;7830:52;;;7878:1;7875;7868:12;7830:52;7917:9;7904:23;7936:39;7969:5;7936:39;:::i;:::-;7994:5;8046:2;8031:18;;8018:32;;-1:-1:-1;8097:2:107;8082:18;;;8069:32;;7697:410;-1:-1:-1;;;7697:410:107:o;8294:608::-;8377:6;8385;8393;8401;8454:3;8442:9;8433:7;8429:23;8425:33;8422:53;;;8471:1;8468;8461:12;8422:53;8510:9;8497:23;8529:39;8562:5;8529:39;:::i;:::-;8587:5;-1:-1:-1;8644:2:107;8629:18;;8616:32;8657:41;8616:32;8657:41;:::i;:::-;8717:7;-1:-1:-1;8771:2:107;8756:18;;8743:32;;-1:-1:-1;8827:2:107;8812:18;;8799:32;8840:30;8799:32;8840:30;:::i;:::-;8294:608;;;;-1:-1:-1;8294:608:107;;-1:-1:-1;;8294:608:107:o;8907:322::-;8976:6;9029:2;9017:9;9008:7;9004:23;9000:32;8997:52;;;9045:1;9042;9035:12;8997:52;9085:9;9072:23;9118:18;9110:6;9107:30;9104:50;;;9150:1;9147;9140:12;9104:50;9173;9215:7;9206:6;9195:9;9191:22;9173:50;:::i;11573:308::-;-1:-1:-1;;;;;11799:32:107;;;;11781:51;;11863:2;11848:18;;11841:34;11769:2;11754:18;;11573:308::o;11886:245::-;11953:6;12006:2;11994:9;11985:7;11981:23;11977:32;11974:52;;;12022:1;12019;12012:12;11974:52;12054:9;12048:16;12073:28;12095:5;12073:28;:::i;12605:184::-;12675:6;12728:2;12716:9;12707:7;12703:23;12699:32;12696:52;;;12744:1;12741;12734:12;12696:52;-1:-1:-1;12767:16:107;;12605:184;-1:-1:-1;12605:184:107:o;13904:795::-;13963:3;14001:5;13995:12;14028:6;14023:3;14016:19;14054:4;14083:2;14078:3;14074:12;14067:19;;14120:2;14113:5;14109:14;14141:1;14162;14172:502;14188:6;14183:3;14180:15;14172:502;;;14251:13;;14290:3;14373:1;14387:205;14403:4;14398:3;14395:13;14387:205;;;14476:15;;14462:30;;14561:17;;;;14518:14;;;;14427:1;14418:11;14387:205;;;-1:-1:-1;;;14621:4:107;14612:14;;;;;14649:15;;;;14214:1;14205:11;14172:502;;;-1:-1:-1;14690:3:107;;13904:795;-1:-1:-1;;;;;;13904:795:107:o;14704:610::-;-1:-1:-1;;;;;15061:15:107;;;15043:34;;15113:15;;15108:2;15093:18;;15086:43;15165:3;15160:2;15145:18;;15138:31;;;14986:4;;15186:63;;15229:19;;15221:6;15186:63;:::i;:::-;15178:71;;15299:6;15292:14;15285:22;15280:2;15269:9;15265:18;15258:50;14704:610;;;;;;;:::o;15319:430::-;15425:6;15433;15441;15449;15457;15510:3;15498:9;15489:7;15485:23;15481:33;15478:53;;;15527:1;15524;15517:12;15478:53;-1:-1:-1;;15550:16:107;;15606:2;15591:18;;15585:25;15650:2;15635:18;;15629:25;15694:2;15679:18;;15673:25;15738:3;15723:19;;;15717:26;15550:16;;15585:25;;-1:-1:-1;15629:25:107;15673;-1:-1:-1;15717:26:107;;-1:-1:-1;15319:430:107;-1:-1:-1;15319:430:107:o;15754:127::-;15815:10;15810:3;15806:20;15803:1;15796:31;15846:4;15843:1;15836:15;15870:4;15867:1;15860:15;15886:125;15926:4;15954:1;15951;15948:8;15945:34;;;15959:18;;:::i;:::-;-1:-1:-1;15996:9:107;;15886:125::o;16016:376::-;-1:-1:-1;;;;;16267:32:107;;;;16249:51;;16331:2;16316:18;;16309:34;;;;16374:2;16359:18;;16352:34;16237:2;16222:18;;16016:376::o;18962:579::-;-1:-1:-1;;;;;19321:15:107;;;19303:34;;19373:15;;;;19368:2;19353:18;;19346:43;19420:2;19405:18;;19398:34;;;;19463:2;19448:18;;19441:34;19519:14;;19512:22;19506:3;19491:19;;19484:51;19252:3;19237:19;;18962:579::o;19546:368::-;19643:6;19651;19659;19667;19720:3;19708:9;19699:7;19695:23;19691:33;19688:53;;;19737:1;19734;19727:12;19688:53;-1:-1:-1;;19760:16:107;;19816:2;19801:18;;19795:25;19860:2;19845:18;;19839:25;19904:2;19889:18;;;19883:25;19760:16;;19795:25;;-1:-1:-1;19883:25:107;;-1:-1:-1;19546:368:107;-1:-1:-1;19546:368:107:o;20387:252::-;-1:-1:-1;;;20596:37:107;;20584:2;20569:18;;20387:252::o;21560:623::-;21942:25;;;-1:-1:-1;;;;;22003:32:107;;;;21998:2;21983:18;;21976:60;22067:2;22052:18;;22045:34;22110:2;22095:18;;22088:34;-1:-1:-1;;;22153:3:107;22138:19;;22131:46;21929:3;21914:19;;21560:623::o;22729:629::-;23111:25;;;-1:-1:-1;;;;;23172:32:107;;;;23167:2;23152:18;;23145:60;23236:2;23221:18;;23214:34;23279:2;23264:18;;23257:34;-1:-1:-1;;;23322:3:107;23307:19;;23300:52;23098:3;23083:19;;22729:629::o;23363:344::-;23564:2;23546:21;;;23603:2;23583:18;;;23576:30;-1:-1:-1;;;23637:2:107;23622:18;;23615:51;23698:2;23683:18;;23363:344::o;24346:258::-;24418:1;24428:113;24442:6;24439:1;24436:13;24428:113;;;24518:11;;;24512:18;24499:11;;;24492:39;24464:2;24457:10;24428:113;;;24559:6;24556:1;24553:13;24550:48;;;-1:-1:-1;;24594:1:107;24576:16;;24569:27;24346:258::o;24609:::-;24651:3;24689:5;24683:12;24716:6;24711:3;24704:19;24732:63;24788:6;24781:4;24776:3;24772:14;24765:4;24758:5;24754:16;24732:63;:::i;:::-;24849:2;24828:15;-1:-1:-1;;24824:29:107;24815:39;;;;24856:4;24811:50;;24609:258;-1:-1:-1;;24609:258:107:o;24872:220::-;25021:2;25010:9;25003:21;24984:4;25041:45;25082:2;25071:9;25067:18;25059:6;25041:45;:::i;25097:308::-;25172:5;25201:53;25217:36;25246:6;25217:36;:::i;25201:53::-;25192:62;;25277:6;25270:5;25263:21;25317:3;25308:6;25303:3;25299:16;25296:25;25293:45;;;25334:1;25331;25324:12;25293:45;25347:52;25392:6;25385:4;25378:5;25374:16;25369:3;25347:52;:::i;25410:457::-;25489:6;25542:2;25530:9;25521:7;25517:23;25513:32;25510:52;;;25558:1;25555;25548:12;25510:52;25591:9;25585:16;25624:18;25616:6;25613:30;25610:50;;;25656:1;25653;25646:12;25610:50;25679:22;;25732:4;25724:13;;25720:27;-1:-1:-1;25710:55:107;;25761:1;25758;25751:12;25710:55;25784:77;25853:7;25848:2;25842:9;25837:2;25833;25829:11;25784:77;:::i;25872:466::-;26047:3;26085:6;26079:13;26101:53;26147:6;26142:3;26135:4;26127:6;26123:17;26101:53;:::i;:::-;26217:13;;26176:16;;;;26239:57;26217:13;26176:16;26273:4;26261:17;;26239:57;:::i;:::-;26312:20;;25872:466;-1:-1:-1;;;;25872:466:107:o;27345:399::-;-1:-1:-1;;;;;27627:15:107;;;27609:34;;27679:15;;;;27674:2;27659:18;;27652:43;27726:2;27711:18;;27704:34;;;;27559:2;27544:18;;27345:399::o;29644:317::-;-1:-1:-1;;;;;29821:32:107;;29803:51;;29890:2;29885;29870:18;;29863:30;;;-1:-1:-1;;29910:45:107;;29936:18;;29928:6;29910:45;:::i;32125:127::-;32186:10;32181:3;32177:20;32174:1;32167:31;32217:4;32214:1;32207:15;32241:4;32238:1;32231:15;32732:429;32953:3;32991:6;32985:13;33007:53;33053:6;33048:3;33041:4;33033:6;33029:17;33007:53;:::i;:::-;-1:-1:-1;;;33082:16:107;;33107:19;;;-1:-1:-1;33153:1:107;33142:13;;32732:429;-1:-1:-1;32732:429:107:o;33166:135::-;33205:3;33226:17;;;33223:43;;33246:18;;:::i;:::-;-1:-1:-1;33293:1:107;33282:13;;33166:135::o;34091:422::-;34180:1;34223:5;34180:1;34237:270;34258:7;34248:8;34245:21;34237:270;;;34317:4;34313:1;34309:6;34305:17;34299:4;34296:27;34293:53;;;34326:18;;:::i;:::-;34376:7;34366:8;34362:22;34359:55;;;34396:16;;;;34359:55;34475:22;;;;34435:15;;;;34237:270;;;34241:3;34091:422;;;;;:::o;34518:806::-;34567:5;34597:8;34587:80;;-1:-1:-1;34638:1:107;34652:5;;34587:80;34686:4;34676:76;;-1:-1:-1;34723:1:107;34737:5;;34676:76;34768:4;34786:1;34781:59;;;;34854:1;34849:130;;;;34761:218;;34781:59;34811:1;34802:10;;34825:5;;;34849:130;34886:3;34876:8;34873:17;34870:43;;;34893:18;;:::i;:::-;-1:-1:-1;;34949:1:107;34935:16;;34964:5;;34761:218;;35063:2;35053:8;35050:16;35044:3;35038:4;35035:13;35031:36;35025:2;35015:8;35012:16;35007:2;35001:4;34998:12;34994:35;34991:77;34988:159;;;-1:-1:-1;35100:19:107;;;35132:5;;34988:159;35179:34;35204:8;35198:4;35179:34;:::i;:::-;35249:6;35245:1;35241:6;35237:19;35228:7;35225:32;35222:58;;;35260:18;;:::i;:::-;35298:20;;34518:806;-1:-1:-1;;;34518:806:107:o;35329:131::-;35389:5;35418:36;35445:8;35439:4;35418:36;:::i;35597:217::-;35637:1;35663;35653:132;;35707:10;35702:3;35698:20;35695:1;35688:31;35742:4;35739:1;35732:15;35770:4;35767:1;35760:15;35653:132;-1:-1:-1;35799:9:107;;35597:217::o;35819:128::-;35859:3;35890:1;35886:6;35883:1;35880:13;35877:39;;;35896:18;;:::i;:::-;-1:-1:-1;35932:9:107;;35819:128::o;35952:168::-;35992:7;36058:1;36054;36050:6;36046:14;36043:1;36040:21;36035:1;36028:9;36021:17;36017:45;36014:71;;;36065:18;;:::i;:::-;-1:-1:-1;36105:9:107;;35952:168::o;38189:274::-;38318:3;38356:6;38350:13;38372:53;38418:6;38413:3;38406:4;38398:6;38394:17;38372:53;:::i;:::-;38441:16;;;;;38189:274;-1:-1:-1;;38189:274:107:o;44535:371::-;-1:-1:-1;;;;;;44720:33:107;;44708:46;;44777:13;;44690:3;;44799:61;44777:13;44849:1;44840:11;;44833:4;44821:17;;44799:61;:::i;:::-;44880:16;;;;44898:1;44876:24;;44535:371;-1:-1:-1;;;44535:371:107:o;52048:289::-;52171:6;52179;52232:2;52220:9;52211:7;52207:23;52203:32;52200:52;;;52248:1;52245;52238:12;52200:52;-1:-1:-1;;52271:16:107;;52327:2;52312:18;;;52306:25;52271:16;;52306:25;;-1:-1:-1;52048:289:107:o;52876:446::-;53126:2;53115:9;53108:21;53165:1;53160:2;53149:9;53145:18;53138:29;-1:-1:-1;;;53198:2:107;53187:9;53183:18;53176:35;53249:3;53242:4;53231:9;53227:20;53220:33;53089:4;53270:46;53311:3;53300:9;53296:19;53288:6;53270:46;:::i;53453:1042::-;53538:12;;53503:3;;53593:1;53613:18;;;;53666;;;;53693:61;;53747:4;53739:6;53735:17;53725:27;;53693:61;53773:2;53821;53813:6;53810:14;53790:18;53787:38;53784:161;;53867:10;53862:3;53858:20;53855:1;53848:31;53902:4;53899:1;53892:15;53930:4;53927:1;53920:15;53784:161;101:19;;;153:4;144:14;;54031:18;54058:104;;;;54176:1;54171:318;;;;54024:465;;54058:104;-1:-1:-1;;54093:24:107;;54079:39;;54138:14;;;;-1:-1:-1;54058:104:107;;54171:318;53400:1;53393:14;;;53437:4;53424:18;;54265:1;54279:167;54293:6;54290:1;54287:13;54279:167;;;54373:14;;54358:13;;;54351:37;54416:16;;;;54308:10;;54279:167;;;54466:13;;;-1:-1:-1;;54024:465:107;;;;;;;;53453:1042;;;;:::o;54500:578::-;-1:-1:-1;;;;;54751:32:107;;54733:51;;54820:3;54815:2;54800:18;;54793:31;;;-1:-1:-1;;54847:54:107;;54881:19;;54873:6;54847:54;:::i;:::-;54949:9;54941:6;54937:22;54932:2;54921:9;54917:18;54910:50;54977:41;55011:6;55003;54977:41;:::i;:::-;54969:49;;;55066:4;55058:6;55054:17;55049:2;55038:9;55034:18;55027:45;54500:578;;;;;;;:::o;56377:370::-;56580:10;56576:15;56568:6;56564:28;56559:3;56552:41;56534:3;56622:6;56616:13;56638:62;56693:6;56688:2;56683:3;56679:12;56672:4;56664:6;56660:17;56638:62;:::i;:::-;56720:16;;;;56738:2;56716:25;;56377:370;-1:-1:-1;;;56377:370:107:o;58465:348::-;58695:2;58684:9;58677:21;58658:4;58715:49;58760:2;58749:9;58745:18;58378:2;58366:15;;-1:-1:-1;;;58406:4:107;58397:14;;58390:36;58451:2;58442:12;;58301:159;58715:49;58707:57;;58800:6;58795:2;58784:9;58780:18;58773:34;58465:348;;;;:::o;58982:::-;59212:2;59201:9;59194:21;59175:4;59232:49;59277:2;59266:9;59262:18;58895:2;58883:15;;-1:-1:-1;;;58923:4:107;58914:14;;58907:36;58968:2;58959:12;;58818:159;61190:610;61436:13;;61379:3;;61410;;61489:4;61516:15;;;61379:3;61559:175;61573:6;61570:1;61567:13;61559:175;;;61636:13;;61622:28;;61672:14;;;;61709:15;;;;61595:1;61588:9;61559:175;;;-1:-1:-1;;61743:21:107;;;-1:-1:-1;61780:14:107;;;;;-1:-1:-1;;;61190:610:107:o;61994:556::-;62196:2;62178:21;;;62235:3;62215:18;;;62208:31;62275:34;62270:2;62255:18;;62248:62;62346:34;62341:2;62326:18;;62319:62;62418:34;62412:3;62397:19;;62390:63;-1:-1:-1;;;62484:3:107;62469:19;;62462:46;62540:3;62525:19;;61994:556::o;63142:440::-;63392:2;63381:9;63374:21;63355:4;63418:49;63463:2;63452:9;63448:18;58378:2;58366:15;;-1:-1:-1;;;58406:4:107;58397:14;;58390:36;58451:2;58442:12;;58301:159;63418:49;63515:9;63507:6;63503:22;63498:2;63487:9;63483:18;63476:50;63543:33;63569:6;63561;63543:33;:::i;63587:440::-;63837:2;63826:9;63819:21;63800:4;63863:49;63908:2;63897:9;63893:18;58895:2;58883:15;;-1:-1:-1;;;58923:4:107;58914:14;;58907:36;58968:2;58959:12;;58818:159;64032:658;64097:5;64150:3;64143:4;64135:6;64131:17;64127:27;64117:55;;64168:1;64165;64158:12;64117:55;64197:6;64191:13;64223:4;64247:59;64263:42;64302:2;64263:42;:::i;64247:59::-;64340:15;;;64426:1;64422:10;;;;64410:23;;64406:32;;;64371:12;;;;64450:15;;;64447:35;;;64478:1;64475;64468:12;64447:35;64514:2;64506:6;64502:15;64526:135;64542:6;64537:3;64534:15;64526:135;;;64608:10;;64596:23;;64639:12;;;;64559;;64526:135;;;-1:-1:-1;64679:5:107;64032:658;-1:-1:-1;;;;;;64032:658:107:o;64695:614::-;64824:6;64832;64885:2;64873:9;64864:7;64860:23;64856:32;64853:52;;;64901:1;64898;64891:12;64853:52;64934:9;64928:16;64963:18;65004:2;64996:6;64993:14;64990:34;;;65020:1;65017;65010:12;64990:34;65043:72;65107:7;65098:6;65087:9;65083:22;65043:72;:::i;:::-;65033:82;;65161:2;65150:9;65146:18;65140:25;65124:41;;65190:2;65180:8;65177:16;65174:36;;;65206:1;65203;65196:12;65174:36;;65229:74;65295:7;65284:8;65273:9;65269:24;65229:74;:::i;65314:442::-;-1:-1:-1;;;;;65561:32:107;;;;65543:51;;-1:-1:-1;;;;;;65630:33:107;;;;65625:2;65610:18;;65603:61;65695:2;65680:18;;65673:34;65738:2;65723:18;;65716:34;65530:3;65515:19;;65314:442::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "cash(address,uint256)": "d56a22f0",
    "cash(address,uint256,uint256)": "6cc12a24",
    "deal(address,address,uint256)": "6bce989b",
    "deal(address,address,uint256,bool)": "97754ae9",
    "deal(address,uint256)": "c88a5e6d",
    "deployCode(string)": "9a8325a0",
    "deployCode(string,bytes)": "29ce9dde",
    "failed()": "ba414fa6",
    "hoax(address)": "233240ee",
    "hoax(address,address)": "29a9e300",
    "hoax(address,address,uint256)": "af9bbe5f",
    "hoax(address,uint256)": "e9a79a7b",
    "logary(int256[])": "521606d2",
    "logary(uint256[])": "b84e3eda",
    "rewind(uint256)": "2d6c17a3",
    "setUp()": "0a9254e4",
    "setupMaker(address,address,string)": "bfdc3588",
    "setupMakerDeployer(address,address)": "bbab0fac",
    "setupMangrove()": "8c004832",
    "setupMangrove(address,address)": "ea14b5c3",
    "setupMangrove(address,address,bool)": "0b3d8c42",
    "setupMangrove(bool)": "0645f2be",
    "setupTaker(address,address,string)": "3336a63f",
    "skip(uint256)": "b9c071b4",
    "startHoax(address)": "6f597075",
    "startHoax(address,address)": "d06d8229",
    "startHoax(address,address,uint256)": "3bf82db1",
    "startHoax(address,uint256)": "108554f2",
    "test_detect_lowgas()": "7d4258d1",
    "test_empty_wants_fillGives()": "ce980d16",
    "test_empty_wants_fillWants()": "e8205853",
    "test_fillGives_at_0_wants_works()": "73e33e1b",
    "test_maker_has_not_enough_base_fails_order()": "dc46f1de",
    "test_maker_revert_is_logged()": "b67fc16e",
    "test_marketOrder_on_empty_book_does_not_leave_lock_on()": "bec2e7d3",
    "test_marketOrder_on_empty_book_does_not_revert()": "e0c77339",
    "test_market_order_stops_for_filled_after_offer()": "f4635d04",
    "test_market_order_stops_for_filled_mid_offer()": "d080b629",
    "test_market_order_stops_for_high_price()": "6e980fa9",
    "test_mo_fillGives()": "9364ce1c",
    "test_mo_fillGivesAll_no_approved_fails()": "4cd73ad6",
    "test_mo_fillGivesAll_succeeds()": "8a0dc9e8",
    "test_mo_fillWants()": "ef8febf6",
    "test_multiple_snipes_fillWants()": "bad9a473",
    "test_partial_fill()": "835f7cde",
    "test_recursion_depth_is_acceptable()": "ff762768",
    "test_simple_fillGives()": "856a63d1",
    "test_simple_fillWants()": "0e16461e",
    "test_simple_marketOrder()": "e9172577",
    "test_simple_snipe()": "efd59015",
    "test_snipe_fails_if_price_has_changed()": "6060908a",
    "test_snipe_fillGives()": "3b629aed",
    "test_snipe_fillGives_zero()": "71b980ed",
    "test_snipe_fillWants()": "bdb48ac3",
    "test_snipe_fillWants_zero()": "959d9fb7",
    "test_snipe_free_offer_fillGives_respects_spec()": "339e7171",
    "test_snipe_free_offer_fillWants_respects_spec()": "8d6efbcb",
    "test_snipe_on_higher_gas_fails()": "64a0bf40",
    "test_snipe_on_higher_price_fails()": "2f4ebf8e",
    "test_snipe_on_lower_price_succeeds()": "9737b577",
    "test_snipe_reverts_if_taker_is_blacklisted_for_base()": "8f3237ee",
    "test_snipe_reverts_if_taker_is_blacklisted_for_quote()": "cb228e2a",
    "test_snipe_with_0_wants_ejects_offer()": "a1b78bc8",
    "test_takerGives_is_zero_succeeds()": "0b851352",
    "test_takerWants_is_zero_succeeds()": "2c4e73cd",
    "test_takerWants_wider_than_160_bits_fails_marketOrder()": "a218492e",
    "test_taker_cannot_drain_maker()": "93e54d9b",
    "test_taker_collects_failing_offer()": "0c4ba05d",
    "test_taker_has_no_quote_fails_order()": "53cc12bd",
    "test_taker_hasnt_approved_base_succeeds_order_with_fee()": "e55e2f6f",
    "test_taker_hasnt_approved_base_succeeds_order_wo_fee()": "0941ba78",
    "test_taker_hasnt_approved_quote_fails_order()": "1dd051c2",
    "test_taker_reimbursed_if_maker_doesnt_pay()": "13599121",
    "test_taker_reimbursed_if_maker_is_blacklisted_for_base()": "374b46f5",
    "test_taker_reimbursed_if_maker_is_blacklisted_for_quote()": "00c4655e",
    "test_taker_reimbursed_if_maker_reverts()": "0f8cadb3",
    "test_taker_reverts_on_penalty_triggers_revert()": "d9a725cf",
    "test_unsafe_gas_left_fails_order()": "2e7ed0dd",
    "tip(address,address,uint256)": "d82555f1",
    "vm()": "3a768463"
  },
  "ast": {
    "absolutePath": "packages/mangrove-solidity/contracts/test/core/TakerOperations.t.sol",
    "id": 45519,
    "exportedSymbols": {
      "AbstractMangrove": [37],
      "AccessControlled": [20247],
      "DSTest": [60744],
      "HasMgvEvents": [1914],
      "IERC20": [2050],
      "IMaker": [1932],
      "IMgvMonitor": [1972],
      "ITaker": [1944],
      "InvertedMangrove": [780],
      "MakerDeployer": [48825],
      "Mangrove": [906],
      "MangroveTest": [47059],
      "MgvLib": [1739],
      "P": [1710],
      "Script": [60776],
      "StdStorage": [62193],
      "TakerOperationsTest": [45518],
      "Test": [62095],
      "Test2": [47434],
      "TestMaker": [49499],
      "TestMoriartyMaker": [49748],
      "TestTaker": [50091],
      "TestToken": [52050],
      "TrivialTestMaker": [48862],
      "Utilities": [48626],
      "Vm": [63864],
      "console": [71928],
      "console2": [79992],
      "csl": [79992],
      "stdError": [62165],
      "stdMath": [63442],
      "stdStorage": [63295]
    },
    "nodeType": "SourceUnit",
    "src": "38:31534:73",
    "nodes": [
      {
        "id": 41281,
        "nodeType": "PragmaDirective",
        "src": "38:24:73",
        "literals": ["solidity", "^", "0.8", ".10"]
      },
      {
        "id": 41282,
        "nodeType": "ImportDirective",
        "src": "64:39:73",
        "absolutePath": "packages/mangrove-solidity/contracts/test/lib/MangroveTest.sol",
        "file": "mgv_test/lib/MangroveTest.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45519,
        "sourceUnit": 47060,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45518,
        "nodeType": "ContractDefinition",
        "src": "266:31305:73",
        "nodes": [
          {
            "id": 41287,
            "nodeType": "VariableDeclaration",
            "src": "315:13:73",
            "constant": false,
            "mutability": "mutable",
            "name": "mkr",
            "nameLocation": "325:3:73",
            "scope": 45518,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestMaker_$49499",
              "typeString": "contract TestMaker"
            },
            "typeName": {
              "id": 41286,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 41285,
                "name": "TestMaker",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49499,
                "src": "315:9:73"
              },
              "referencedDeclaration": 49499,
              "src": "315:9:73",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestMaker_$49499",
                "typeString": "contract TestMaker"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 41290,
            "nodeType": "VariableDeclaration",
            "src": "332:19:73",
            "constant": false,
            "mutability": "mutable",
            "name": "refusemkr",
            "nameLocation": "342:9:73",
            "scope": 45518,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestMaker_$49499",
              "typeString": "contract TestMaker"
            },
            "typeName": {
              "id": 41289,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 41288,
                "name": "TestMaker",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49499,
                "src": "332:9:73"
              },
              "referencedDeclaration": 49499,
              "src": "332:9:73",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestMaker_$49499",
                "typeString": "contract TestMaker"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 41293,
            "nodeType": "VariableDeclaration",
            "src": "355:17:73",
            "constant": false,
            "mutability": "mutable",
            "name": "failmkr",
            "nameLocation": "365:7:73",
            "scope": 45518,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestMaker_$49499",
              "typeString": "contract TestMaker"
            },
            "typeName": {
              "id": 41292,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 41291,
                "name": "TestMaker",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49499,
                "src": "355:9:73"
              },
              "referencedDeclaration": 49499,
              "src": "355:9:73",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestMaker_$49499",
                "typeString": "contract TestMaker"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 41296,
            "nodeType": "VariableDeclaration",
            "src": "377:26:73",
            "constant": false,
            "mutability": "mutable",
            "name": "refuseReceive",
            "nameLocation": "382:13:73",
            "scope": 45518,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 41294,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "377:4:73",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 41295,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "398:5:73",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "id": 41307,
            "nodeType": "FunctionDefinition",
            "src": "408:83:73",
            "body": {
              "id": 41306,
              "nodeType": "Block",
              "src": "435:56:73",
              "statements": [
                {
                  "condition": {
                    "id": 41299,
                    "name": "refuseReceive",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41296,
                    "src": "445:13:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41305,
                  "nodeType": "IfStatement",
                  "src": "441:46:73",
                  "trueBody": {
                    "id": 41304,
                    "nodeType": "Block",
                    "src": "460:27:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "6e6f",
                              "id": 41301,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "475:4:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7d6119d3ee7f82ee53aac57d4d088f8bbaca5aac3191bb074252c6d760ae4eba",
                                "typeString": "literal_string \"no\""
                              },
                              "value": "no"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_7d6119d3ee7f82ee53aac57d4d088f8bbaca5aac3191bb074252c6d760ae4eba",
                                "typeString": "literal_string \"no\""
                              }
                            ],
                            "id": 41300,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-19, -19],
                            "referencedDeclaration": -19,
                            "src": "468:6:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 41302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "468:12:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 41303,
                        "nodeType": "ExpressionStatement",
                        "src": "468:12:73"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 41297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "415:2:73"
            },
            "returnParameters": {
              "id": 41298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "435:0:73"
            },
            "scope": 45518,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 41470,
            "nodeType": "FunctionDefinition",
            "src": "495:798:73",
            "body": {
              "id": 41469,
              "nodeType": "Block",
              "src": "528:765:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 41311,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "534:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_TakerOperationsTest_$45518_$",
                          "typeString": "type(contract super TakerOperationsTest)"
                        }
                      },
                      "id": 41313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46003,
                      "src": "534:11:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 41314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "534:13:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41315,
                  "nodeType": "ExpressionStatement",
                  "src": "534:13:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41320,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "592:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 41319,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "590:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 41321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "590:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 41322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "598:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 41316,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "577:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 41318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "577:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 41323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "577:23:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41324,
                  "nodeType": "ExpressionStatement",
                  "src": "577:23:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41329,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "622:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 41328,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "620:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 41330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "620:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 41331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "628:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 41325,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "606:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 41327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "606:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 41332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "606:24:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41333,
                  "nodeType": "ExpressionStatement",
                  "src": "606:24:73"
                },
                {
                  "expression": {
                    "id": 41344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41334,
                      "name": "mkr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41287,
                      "src": "637:3:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$49499",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 41337,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45878,
                              "src": "656:4:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 41336,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "654:1:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 41338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "654:7:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 41340,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45881,
                              "src": "665:5:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 41339,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "663:1:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 41341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "663:8:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "6d616b6572",
                          "id": 41342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "673:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_92f19e22fc1393ec30ea8872fc93139e9728e6d5119eab8fa503b247090ac4e0",
                            "typeString": "literal_string \"maker\""
                          },
                          "value": "maker"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_92f19e22fc1393ec30ea8872fc93139e9728e6d5119eab8fa503b247090ac4e0",
                            "typeString": "literal_string \"maker\""
                          }
                        ],
                        "id": 41335,
                        "name": "setupMaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46843,
                        "src": "643:10:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_TestMaker_$49499_$",
                          "typeString": "function (address,address,string memory) returns (contract TestMaker)"
                        }
                      },
                      "id": 41343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "643:38:73",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$49499",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "src": "637:44:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestMaker_$49499",
                      "typeString": "contract TestMaker"
                    }
                  },
                  "id": 41345,
                  "nodeType": "ExpressionStatement",
                  "src": "637:44:73"
                },
                {
                  "expression": {
                    "id": 41356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41346,
                      "name": "refusemkr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41290,
                      "src": "687:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$49499",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 41349,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45878,
                              "src": "712:4:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 41348,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "710:1:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 41350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "710:7:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 41352,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45881,
                              "src": "721:5:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 41351,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "719:1:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 41353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "719:8:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "7265667573696e67206d6b72",
                          "id": 41354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "729:14:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b8d7f3588cf8e59dac649ba47fd63952b0fdff8a808cb7f1c899757df755d340",
                            "typeString": "literal_string \"refusing mkr\""
                          },
                          "value": "refusing mkr"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_b8d7f3588cf8e59dac649ba47fd63952b0fdff8a808cb7f1c899757df755d340",
                            "typeString": "literal_string \"refusing mkr\""
                          }
                        ],
                        "id": 41347,
                        "name": "setupMaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46843,
                        "src": "699:10:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_TestMaker_$49499_$",
                          "typeString": "function (address,address,string memory) returns (contract TestMaker)"
                        }
                      },
                      "id": 41355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "699:45:73",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$49499",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "src": "687:57:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestMaker_$49499",
                      "typeString": "contract TestMaker"
                    }
                  },
                  "id": 41357,
                  "nodeType": "ExpressionStatement",
                  "src": "687:57:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 41361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "771:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 41358,
                        "name": "refusemkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41290,
                        "src": "750:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 41360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shouldFail",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48975,
                      "src": "750:20:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 41362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "750:26:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41363,
                  "nodeType": "ExpressionStatement",
                  "src": "750:26:73"
                },
                {
                  "expression": {
                    "id": 41374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41364,
                      "name": "failmkr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41293,
                      "src": "782:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$49499",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 41367,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45878,
                              "src": "805:4:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 41366,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "803:1:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 41368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "803:7:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 41370,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45881,
                              "src": "814:5:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 41369,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "812:1:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 41371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "812:8:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "726576657274696e67206d6b72",
                          "id": 41372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "822:15:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_f9c2ce2eccd176d50f75887ec5e311af95a677bfe1c60742a7c5c72aab895b4e",
                            "typeString": "literal_string \"reverting mkr\""
                          },
                          "value": "reverting mkr"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_f9c2ce2eccd176d50f75887ec5e311af95a677bfe1c60742a7c5c72aab895b4e",
                            "typeString": "literal_string \"reverting mkr\""
                          }
                        ],
                        "id": 41365,
                        "name": "setupMaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46843,
                        "src": "792:10:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_TestMaker_$49499_$",
                          "typeString": "function (address,address,string memory) returns (contract TestMaker)"
                        }
                      },
                      "id": 41373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "792:46:73",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$49499",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "src": "782:56:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestMaker_$49499",
                      "typeString": "contract TestMaker"
                    }
                  },
                  "id": 41375,
                  "nodeType": "ExpressionStatement",
                  "src": "782:56:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 41379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "865:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 41376,
                        "name": "failmkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41293,
                        "src": "844:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 41378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shouldRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48965,
                      "src": "844:20:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 41380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "844:26:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41381,
                  "nodeType": "ExpressionStatement",
                  "src": "844:26:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130",
                        "id": 41385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "894:8:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 41382,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "877:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 41384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "provisionMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49471,
                      "src": "877:16:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 41386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "877:26:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41387,
                  "nodeType": "ExpressionStatement",
                  "src": "877:26:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41391,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "924:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 41392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "930:8:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 41388,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "909:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 41390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49014,
                      "src": "909:14:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$2050_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 41393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "909:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41394,
                  "nodeType": "ExpressionStatement",
                  "src": "909:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 41398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "969:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 41395,
                        "name": "refusemkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41290,
                        "src": "946:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 41397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "provisionMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49471,
                      "src": "946:22:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 41399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "946:31:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41400,
                  "nodeType": "ExpressionStatement",
                  "src": "946:31:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41404,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "1004:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 41405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1010:8:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 41401,
                        "name": "refusemkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41290,
                        "src": "983:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 41403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49014,
                      "src": "983:20:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$2050_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 41406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "983:36:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41407,
                  "nodeType": "ExpressionStatement",
                  "src": "983:36:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 41411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1046:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 41408,
                        "name": "failmkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41293,
                        "src": "1025:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 41410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "provisionMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49471,
                      "src": "1025:20:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 41412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1025:29:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41413,
                  "nodeType": "ExpressionStatement",
                  "src": "1025:29:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41417,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "1079:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 41418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1085:8:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 41414,
                        "name": "failmkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41293,
                        "src": "1060:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 41416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49014,
                      "src": "1060:18:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$2050_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 41419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1060:34:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41420,
                  "nodeType": "ExpressionStatement",
                  "src": "1060:34:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41426,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41287,
                            "src": "1119:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 41425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1111:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 41424,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1111:7:73",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1111:12:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 41428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1125:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 41421,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "1101:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 41423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52007,
                      "src": "1101:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 41429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1101:32:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41430,
                  "nodeType": "ExpressionStatement",
                  "src": "1101:32:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41436,
                            "name": "failmkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41293,
                            "src": "1157:7:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 41435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1149:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 41434,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1149:7:73",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1149:16:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 41438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1167:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 41431,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "1139:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 41433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52007,
                      "src": "1139:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 41439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1139:36:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41440,
                  "nodeType": "ExpressionStatement",
                  "src": "1139:36:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41446,
                            "name": "refusemkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41290,
                            "src": "1199:9:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 41445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1191:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 41444,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1191:7:73",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1191:18:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 41448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1211:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 41441,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "1181:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 41443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52007,
                      "src": "1181:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 41449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1181:38:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41450,
                  "nodeType": "ExpressionStatement",
                  "src": "1181:38:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41455,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1239:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 41454,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "1237:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 41456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1237:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 41457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1246:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 41451,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "1226:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 41453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52007,
                      "src": "1226:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 41458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1226:28:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41459,
                  "nodeType": "ExpressionStatement",
                  "src": "1226:28:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41464,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1273:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 41463,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "1271:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 41465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1271:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 41466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1280:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 41460,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "1260:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 41462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52007,
                      "src": "1260:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 41467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1260:28:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41468,
                  "nodeType": "ExpressionStatement",
                  "src": "1260:28:73"
                }
              ]
            },
            "baseFunctions": [46003],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "504:5:73",
            "overrides": {
              "id": 41309,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "519:8:73"
            },
            "parameters": {
              "id": 41308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "509:2:73"
            },
            "returnParameters": {
              "id": 41310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "528:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41552,
            "nodeType": "FunctionDefinition",
            "src": "1297:608:73",
            "body": {
              "id": 41551,
              "nodeType": "Block",
              "src": "1368:537:73",
              "statements": [
                {
                  "assignments": [41474],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41474,
                      "mutability": "mutable",
                      "name": "weiBalanceBefore",
                      "nameLocation": "1379:16:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 41551,
                      "src": "1374:21:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41473,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1374:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41481,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41478,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1414:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 41477,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "1412:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 41479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1412:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 41475,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "1398:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 41476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1417,
                      "src": "1398:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 41480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1398:22:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1374:46:73"
                },
                {
                  "assignments": [41483],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41483,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "1431:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 41551,
                      "src": "1426:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41482,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1426:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41491,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 41486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1450:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 41487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1459:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 41488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1468:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 41489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1477:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 41484,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "1437:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 41485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "1437:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 41490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1437:42:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1426:53:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 41495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1496:18:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 41492,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "1485:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 41494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "1485:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 41496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1485:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41497,
                  "nodeType": "ExpressionStatement",
                  "src": "1485:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41502,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "1577:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 41501,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "1575:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 41503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1575:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 41504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1583:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 41498,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "1561:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 41500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "1561:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 41505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1561:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41506,
                  "nodeType": "ExpressionStatement",
                  "src": "1561:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41511,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1616:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 41510,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "1614:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 41512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1614:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 41507,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "1597:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 41509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "blacklists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52036,
                      "src": "1597:16:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 41513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1597:25:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41514,
                  "nodeType": "ExpressionStatement",
                  "src": "1597:25:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f74616b65725472616e736665724661696c",
                        "id": 41518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1645:23:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e79742e7ced315361b2f8080130843f008a02f29a4f8e0d2c2ca5086b46bd5",
                          "typeString": "literal_string \"mgv/takerTransferFail\""
                        },
                        "value": "mgv/takerTransferFail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_37e79742e7ced315361b2f8080130843f008a02f29a4f8e0d2c2ca5086b46bd5",
                          "typeString": "literal_string \"mgv/takerTransferFail\""
                        }
                      ],
                      "expression": {
                        "id": 41515,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "1629:2:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 41517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "1629:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 41519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1629:40:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41520,
                  "nodeType": "ExpressionStatement",
                  "src": "1629:40:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41525,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "1695:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 41524,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "1693:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 41526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1693:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 41528,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "1710:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 41527,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "1708:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 41529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1708:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 41531,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41483,
                                "src": "1738:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 41532,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1743:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 41533,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1752:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 41534,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1761:7:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 41535,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1737:32:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 41530,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "1724:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 41536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1724:46:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 41537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1778:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 41521,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "1675:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 41523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "1675:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 41538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1675:113:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 41539,
                  "nodeType": "ExpressionStatement",
                  "src": "1675:113:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41541,
                        "name": "weiBalanceBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41474,
                        "src": "1810:16:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 41545,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1850:4:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                                  "typeString": "contract TakerOperationsTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                                  "typeString": "contract TakerOperationsTest"
                                }
                              ],
                              "id": 41544,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47041,
                              "src": "1848:1:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 41546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1848:7:73",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 41542,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "1834:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 41543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1417,
                          "src": "1834:13:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 41547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1834:22:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "54616b65722073686f756c64206e6f742074616b6520626f756e7479",
                        "id": 41548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1864:30:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16d033afd1e92b5c5ab3fae5b69c6a54ac8d58ff28fa4dea32006990c36d47b9",
                          "typeString": "literal_string \"Taker should not take bounty\""
                        },
                        "value": "Taker should not take bounty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16d033afd1e92b5c5ab3fae5b69c6a54ac8d58ff28fa4dea32006990c36d47b9",
                          "typeString": "literal_string \"Taker should not take bounty\""
                        }
                      ],
                      "id": 41540,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "1794:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 41549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1794:106:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41550,
                  "nodeType": "ExpressionStatement",
                  "src": "1794:106:73"
                }
              ]
            },
            "functionSelector": "cb228e2a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_reverts_if_taker_is_blacklisted_for_quote",
            "nameLocation": "1306:52:73",
            "parameters": {
              "id": 41471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1358:2:73"
            },
            "returnParameters": {
              "id": 41472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1368:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41634,
            "nodeType": "FunctionDefinition",
            "src": "1909:606:73",
            "body": {
              "id": 41633,
              "nodeType": "Block",
              "src": "1979:536:73",
              "statements": [
                {
                  "assignments": [41556],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41556,
                      "mutability": "mutable",
                      "name": "weiBalanceBefore",
                      "nameLocation": "1990:16:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 41633,
                      "src": "1985:21:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41555,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1985:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41563,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41560,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2025:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 41559,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "2023:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 41561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2023:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 41557,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "2009:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 41558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1417,
                      "src": "2009:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 41562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2009:22:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1985:46:73"
                },
                {
                  "assignments": [41565],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41565,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "2042:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 41633,
                      "src": "2037:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41564,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2037:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41573,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 41568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2061:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 41569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2070:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 41570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2079:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 41571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2088:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 41566,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "2048:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 41567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "2048:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 41572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2048:42:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2037:53:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 41577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2107:18:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 41574,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "2096:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 41576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "2096:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 41578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2096:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41579,
                  "nodeType": "ExpressionStatement",
                  "src": "2096:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41584,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "2188:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 41583,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "2186:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 41585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2186:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 41586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2194:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 41580,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "2172:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 41582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "2172:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 41587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2172:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41588,
                  "nodeType": "ExpressionStatement",
                  "src": "2172:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41593,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2226:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 41592,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "2224:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 41594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2224:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 41589,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "2208:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 41591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "blacklists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52036,
                      "src": "2208:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 41595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2208:24:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41596,
                  "nodeType": "ExpressionStatement",
                  "src": "2208:24:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f4d67764661696c546f50617954616b6572",
                        "id": 41600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2255:23:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6313ea6e740c0f0fd75f8a76ca28951aa8b0c06736132ac41079d4861fb8a868",
                          "typeString": "literal_string \"mgv/MgvFailToPayTaker\""
                        },
                        "value": "mgv/MgvFailToPayTaker"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6313ea6e740c0f0fd75f8a76ca28951aa8b0c06736132ac41079d4861fb8a868",
                          "typeString": "literal_string \"mgv/MgvFailToPayTaker\""
                        }
                      ],
                      "expression": {
                        "id": 41597,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "2239:2:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 41599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "2239:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 41601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2239:40:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41602,
                  "nodeType": "ExpressionStatement",
                  "src": "2239:40:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41607,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "2305:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 41606,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "2303:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 41608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2303:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 41610,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "2320:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 41609,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "2318:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 41611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2318:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 41613,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41565,
                                "src": "2348:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 41614,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2353:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 41615,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2362:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 41616,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2371:7:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 41617,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2347:32:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 41612,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "2334:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 41618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2334:46:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 41619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2388:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 41603,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "2285:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 41605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "2285:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 41620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2285:113:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 41621,
                  "nodeType": "ExpressionStatement",
                  "src": "2285:113:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41623,
                        "name": "weiBalanceBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41556,
                        "src": "2420:16:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 41627,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2460:4:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                                  "typeString": "contract TakerOperationsTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                                  "typeString": "contract TakerOperationsTest"
                                }
                              ],
                              "id": 41626,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47041,
                              "src": "2458:1:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 41628,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2458:7:73",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 41624,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "2444:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 41625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1417,
                          "src": "2444:13:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 41629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2444:22:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "54616b65722073686f756c64206e6f742074616b6520626f756e7479",
                        "id": 41630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2474:30:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16d033afd1e92b5c5ab3fae5b69c6a54ac8d58ff28fa4dea32006990c36d47b9",
                          "typeString": "literal_string \"Taker should not take bounty\""
                        },
                        "value": "Taker should not take bounty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16d033afd1e92b5c5ab3fae5b69c6a54ac8d58ff28fa4dea32006990c36d47b9",
                          "typeString": "literal_string \"Taker should not take bounty\""
                        }
                      ],
                      "id": 41622,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "2404:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 41631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2404:106:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41632,
                  "nodeType": "ExpressionStatement",
                  "src": "2404:106:73"
                }
              ]
            },
            "functionSelector": "8f3237ee",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_reverts_if_taker_is_blacklisted_for_base",
            "nameLocation": "1918:51:73",
            "parameters": {
              "id": 41553,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1969:2:73"
            },
            "returnParameters": {
              "id": 41554,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1979:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41726,
            "nodeType": "FunctionDefinition",
            "src": "2519:719:73",
            "body": {
              "id": 41725,
              "nodeType": "Block",
              "src": "2575:663:73",
              "statements": [
                {
                  "assignments": [41638],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41638,
                      "mutability": "mutable",
                      "name": "weiBalanceBefore",
                      "nameLocation": "2586:16:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 41725,
                      "src": "2581:21:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41637,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2581:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41645,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41642,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2621:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 41641,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "2619:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 41643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2619:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 41639,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "2605:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 41640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1417,
                      "src": "2605:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 41644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2605:22:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2581:46:73"
                },
                {
                  "assignments": [41647],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41647,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "2638:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 41725,
                      "src": "2633:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41646,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2633:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41655,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 41650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2657:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 41651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2666:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 41652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2675:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 41653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2684:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 41648,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "2644:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 41649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "2644:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 41654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2644:42:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2633:53:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 41659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2703:18:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 41656,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "2692:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 41658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "2692:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 41660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2692:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41661,
                  "nodeType": "ExpressionStatement",
                  "src": "2692:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41666,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "2784:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 41665,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "2782:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 41667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2782:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 41668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2790:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 41662,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "2768:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 41664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "2768:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 41669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2768:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41670,
                  "nodeType": "ExpressionStatement",
                  "src": "2768:30:73"
                },
                {
                  "assignments": [41672, 41674, 41676, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41672,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "2810:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 41725,
                      "src": "2805:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41671,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2805:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 41674,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "2826:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 41725,
                      "src": "2821:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41673,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2821:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 41676,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "2836:4:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 41725,
                      "src": "2831:9:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41675,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2831:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 41694,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41680,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "2868:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 41679,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "2866:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 41681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2866:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 41683,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "2883:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 41682,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "2881:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 41684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2881:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 41686,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41647,
                                "src": "2911:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 41687,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2916:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "302e35",
                                "id": 41688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2925:9:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_500000000000000000_by_1",
                                  "typeString": "int_const 500000000000000000"
                                },
                                "value": "0.5"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 41689,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2936:7:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 41690,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2910:34:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 41685,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "2897:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 41691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2897:48:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 41692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2953:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 41677,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "2848:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 41678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "2848:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 41693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2848:116:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2804:160:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 41698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 41696,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41672,
                          "src": "2981:9:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 41697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2994:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2981:14:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206661696c",
                        "id": 41699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2997:19:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        },
                        "value": "Snipe should fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        }
                      ],
                      "id": 41695,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "2970:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 41700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2970:47:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41701,
                  "nodeType": "ExpressionStatement",
                  "src": "2970:47:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41703,
                        "name": "weiBalanceBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41638,
                        "src": "3039:16:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 41707,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3079:4:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                                  "typeString": "contract TakerOperationsTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                                  "typeString": "contract TakerOperationsTest"
                                }
                              ],
                              "id": 41706,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47041,
                              "src": "3077:1:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 41708,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3077:7:73",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 41704,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "3063:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 41705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1417,
                          "src": "3063:13:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 41709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3063:22:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "54616b65722073686f756c64206e6f742074616b6520626f756e7479",
                        "id": 41710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3093:30:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16d033afd1e92b5c5ab3fae5b69c6a54ac8d58ff28fa4dea32006990c36d47b9",
                          "typeString": "literal_string \"Taker should not take bounty\""
                        },
                        "value": "Taker should not take bounty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16d033afd1e92b5c5ab3fae5b69c6a54ac8d58ff28fa4dea32006990c36d47b9",
                          "typeString": "literal_string \"Taker should not take bounty\""
                        }
                      ],
                      "id": 41702,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "3023:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 41711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3023:106:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41712,
                  "nodeType": "ExpressionStatement",
                  "src": "3023:106:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 41720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 41716,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 41714,
                                "name": "got",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41674,
                                "src": "3154:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 41715,
                                "name": "gave",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41676,
                                "src": "3161:4:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3154:11:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 41719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 41717,
                                "name": "gave",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41676,
                                "src": "3169:4:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 41718,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3177:1:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3169:9:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "3154:24:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 41721,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3153:26:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54616b65722073686f756c64206e6f742067697665206f722074616b6520616e797468696e67",
                        "id": 41722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3187:40:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e9c9661a21c47f4d23df0a818c31b0529491b5b1ab139e165c7794f6111ad55",
                          "typeString": "literal_string \"Taker should not give or take anything\""
                        },
                        "value": "Taker should not give or take anything"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e9c9661a21c47f4d23df0a818c31b0529491b5b1ab139e165c7794f6111ad55",
                          "typeString": "literal_string \"Taker should not give or take anything\""
                        }
                      ],
                      "id": 41713,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "3135:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 41723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3135:98:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41724,
                  "nodeType": "ExpressionStatement",
                  "src": "3135:98:73"
                }
              ]
            },
            "functionSelector": "6060908a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_fails_if_price_has_changed",
            "nameLocation": "2528:37:73",
            "parameters": {
              "id": 41635,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2565:2:73"
            },
            "returnParameters": {
              "id": 41636,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2575:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41804,
            "nodeType": "FunctionDefinition",
            "src": "3242:447:73",
            "body": {
              "id": 41803,
              "nodeType": "Block",
              "src": "3290:399:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41733,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "3313:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 41732,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "3311:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 41734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3311:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 41736,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "3322:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 41735,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "3320:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 41737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3320:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 41738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3330:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 41729,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "3296:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 41731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDensity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1151,
                      "src": "3296:14:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 41739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3296:36:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41740,
                  "nodeType": "ExpressionStatement",
                  "src": "3296:36:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41745,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "3354:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 41744,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "3352:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 41746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3352:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 41747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3360:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 41741,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "3338:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 41743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "3338:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 41748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3338:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41749,
                  "nodeType": "ExpressionStatement",
                  "src": "3338:30:73"
                },
                {
                  "assignments": [41751],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41751,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "3379:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 41803,
                      "src": "3374:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41750,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3374:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41759,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "39",
                        "id": 41754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3398:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_9_by_1",
                          "typeString": "int_const 9"
                        },
                        "value": "9"
                      },
                      {
                        "hexValue": "3130",
                        "id": 41755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3401:2:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 41756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3405:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 41757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3414:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_9_by_1",
                          "typeString": "int_const 9"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 41752,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "3385:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 41753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "3385:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 41758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3385:31:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3374:42:73"
                },
                {
                  "assignments": [41761],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41761,
                      "mutability": "mutable",
                      "name": "oldBal",
                      "nameLocation": "3427:6:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 41803,
                      "src": "3422:11:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41760,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3422:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41768,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41765,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3454:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 41764,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "3452:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 41766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3452:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 41762,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "3436:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 41763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50187,
                      "src": "3436:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 41767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3436:24:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3422:38:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41773,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "3486:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 41772,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "3484:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 41774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3484:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 41776,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "3501:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 41775,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "3499:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 41777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3499:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 41779,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41751,
                                "src": "3529:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 41780,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3534:1:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "3135",
                                "id": 41781,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3537:8:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_15000000000000000000_by_1",
                                  "typeString": "int_const 15000000000000000000"
                                },
                                "value": "15"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 41782,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3547:7:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 41783,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3528:27:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 41778,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "3515:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 41784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3515:41:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 41785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3564:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 41769,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "3466:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 41771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "3466:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 41786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3466:108:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 41787,
                  "nodeType": "ExpressionStatement",
                  "src": "3466:108:73"
                },
                {
                  "assignments": [41789],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41789,
                      "mutability": "mutable",
                      "name": "newBal",
                      "nameLocation": "3585:6:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 41803,
                      "src": "3580:11:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41788,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3580:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41796,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41793,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3612:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 41792,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "3610:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 41794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3610:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 41790,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "3594:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 41791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50187,
                      "src": "3594:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 41795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3594:24:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3580:38:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41798,
                        "name": "oldBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41761,
                        "src": "3633:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 41799,
                        "name": "newBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41789,
                        "src": "3641:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "6f6c6442616c2073686f756c64206265207374726963746c7920686967686572",
                        "id": 41800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3649:34:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bb4d114dd13bb66ae910373095cc5ab0c739d67ae0691bdc0e797cf9f65ec78d",
                          "typeString": "literal_string \"oldBal should be strictly higher\""
                        },
                        "value": "oldBal should be strictly higher"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bb4d114dd13bb66ae910373095cc5ab0c739d67ae0691bdc0e797cf9f65ec78d",
                          "typeString": "literal_string \"oldBal should be strictly higher\""
                        }
                      ],
                      "id": 41797,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59651, 59676, 59706, 59731],
                      "referencedDeclaration": 59676,
                      "src": "3624:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 41801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3624:60:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41802,
                  "nodeType": "ExpressionStatement",
                  "src": "3624:60:73"
                }
              ]
            },
            "functionSelector": "93e54d9b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_taker_cannot_drain_maker",
            "nameLocation": "3251:29:73",
            "parameters": {
              "id": 41727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3280:2:73"
            },
            "returnParameters": {
              "id": 41728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3290:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41876,
            "nodeType": "FunctionDefinition",
            "src": "3693:555:73",
            "body": {
              "id": 41875,
              "nodeType": "Block",
              "src": "3732:516:73",
              "statements": [
                {
                  "assignments": [41808],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41808,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "3743:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 41875,
                      "src": "3738:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41807,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3738:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41816,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 41811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3762:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 41812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3771:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 41813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3780:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 41814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3789:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 41809,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "3749:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 41810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "3749:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 41815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3749:42:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3738:53:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 41820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3808:18:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 41817,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "3797:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 41819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "3797:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 41821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3797:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41822,
                  "nodeType": "ExpressionStatement",
                  "src": "3797:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41827,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "3889:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 41826,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "3887:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 41828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3887:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 41829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3895:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 41823,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "3873:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 41825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "3873:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 41830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3873:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41831,
                  "nodeType": "ExpressionStatement",
                  "src": "3873:30:73"
                },
                {
                  "assignments": [41833, 41835, 41837, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41833,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "3915:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 41875,
                      "src": "3910:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41832,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3910:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 41835,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "3931:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 41875,
                      "src": "3926:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41834,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3926:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 41837,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "3941:4:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 41875,
                      "src": "3936:9:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41836,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3936:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 41855,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41841,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "3973:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 41840,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "3971:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 41842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3971:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 41844,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "3988:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 41843,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "3986:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 41845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3986:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 41847,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41808,
                                "src": "4016:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "302e35",
                                "id": 41848,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4021:9:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_500000000000000000_by_1",
                                  "typeString": "int_const 500000000000000000"
                                },
                                "value": "0.5"
                              },
                              {
                                "hexValue": "31",
                                "id": 41849,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4032:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 41850,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4041:7:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 41851,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4015:34:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 41846,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "4002:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 41852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4002:48:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 41853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4058:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 41838,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "3953:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 41839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "3953:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 41854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3953:115:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3909:159:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 41859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 41857,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41833,
                          "src": "4085:9:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 41858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4098:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4085:14:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206e6f74206661696c",
                        "id": 41860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4101:23:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6a7e6a6acc6c427a9be780384e1bbd2a5c5c212db72316aeb26336b45f15575",
                          "typeString": "literal_string \"Snipe should not fail\""
                        },
                        "value": "Snipe should not fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6a7e6a6acc6c427a9be780384e1bbd2a5c5c212db72316aeb26336b45f15575",
                          "typeString": "literal_string \"Snipe should not fail\""
                        }
                      ],
                      "id": 41856,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "4074:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 41861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4074:51:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41862,
                  "nodeType": "ExpressionStatement",
                  "src": "4074:51:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41864,
                        "name": "got",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41835,
                        "src": "4140:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e35",
                        "id": 41865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4145:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      },
                      {
                        "hexValue": "54616b657220646964206e6f742067657420656e6f756768",
                        "id": 41866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4156:26:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        },
                        "value": "Taker did not get enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        }
                      ],
                      "id": 41863,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "4131:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 41867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4131:52:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41868,
                  "nodeType": "ExpressionStatement",
                  "src": "4131:52:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41870,
                        "name": "gave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41837,
                        "src": "4198:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e35",
                        "id": 41871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4204:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      },
                      {
                        "hexValue": "54616b657220646964206e6f74206769766520656e6f756768",
                        "id": 41872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4215:27:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a93ccde287ae4aa1822cbffa2645028aa297307d78f39c43981381a739592710",
                          "typeString": "literal_string \"Taker did not give enough\""
                        },
                        "value": "Taker did not give enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a93ccde287ae4aa1822cbffa2645028aa297307d78f39c43981381a739592710",
                          "typeString": "literal_string \"Taker did not give enough\""
                        }
                      ],
                      "id": 41869,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "4189:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 41873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4189:54:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41874,
                  "nodeType": "ExpressionStatement",
                  "src": "4189:54:73"
                }
              ]
            },
            "functionSelector": "bdb48ac3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_fillWants",
            "nameLocation": "3702:20:73",
            "parameters": {
              "id": 41805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3722:2:73"
            },
            "returnParameters": {
              "id": 41806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3732:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42076,
            "nodeType": "FunctionDefinition",
            "src": "4252:1100:73",
            "body": {
              "id": 42075,
              "nodeType": "Block",
              "src": "4301:1051:73",
              "statements": [
                {
                  "assignments": [41880],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41880,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "4312:1:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42075,
                      "src": "4307:6:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41879,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4307:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41881,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4307:6:73"
                },
                {
                  "assignments": [41886],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41886,
                      "mutability": "mutable",
                      "name": "ofrs",
                      "nameLocation": "4333:4:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42075,
                      "src": "4319:18:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 41884,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4319:4:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 41885,
                        "nodeType": "ArrayTypeName",
                        "src": "4319:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41892,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 41890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4351:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 41889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4340:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 41887,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4344:4:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 41888,
                        "nodeType": "ArrayTypeName",
                        "src": "4344:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 41891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4340:13:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4319:34:73"
                },
                {
                  "expression": {
                    "id": 41904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 41893,
                        "name": "ofrs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41886,
                        "src": "4359:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 41896,
                      "indexExpression": {
                        "id": 41895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "4364:3:73",
                        "subExpression": {
                          "id": 41894,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41880,
                          "src": "4364:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4359:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 41899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4384:7:73",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31",
                          "id": 41900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4393:7:73",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "3130305f303030",
                          "id": 41901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4402:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          "value": "100_000"
                        },
                        {
                          "hexValue": "30",
                          "id": 41902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4411:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 41897,
                          "name": "mkr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41287,
                          "src": "4371:3:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestMaker_$49499",
                            "typeString": "contract TestMaker"
                          }
                        },
                        "id": 41898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49210,
                        "src": "4371:12:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                        }
                      },
                      "id": 41903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4371:42:73",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4359:54:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41905,
                  "nodeType": "ExpressionStatement",
                  "src": "4359:54:73"
                },
                {
                  "expression": {
                    "id": 41917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 41906,
                        "name": "ofrs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41886,
                        "src": "4419:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 41909,
                      "indexExpression": {
                        "id": 41908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "4424:3:73",
                        "subExpression": {
                          "id": 41907,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41880,
                          "src": "4424:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4419:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 41912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4444:7:73",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31",
                          "id": 41913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4453:7:73",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "3130305f303030",
                          "id": 41914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4462:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          "value": "100_000"
                        },
                        {
                          "hexValue": "30",
                          "id": 41915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4471:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 41910,
                          "name": "mkr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41287,
                          "src": "4431:3:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestMaker_$49499",
                            "typeString": "contract TestMaker"
                          }
                        },
                        "id": 41911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49210,
                        "src": "4431:12:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                        }
                      },
                      "id": 41916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4431:42:73",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4419:54:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41918,
                  "nodeType": "ExpressionStatement",
                  "src": "4419:54:73"
                },
                {
                  "expression": {
                    "id": 41930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 41919,
                        "name": "ofrs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41886,
                        "src": "4479:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 41922,
                      "indexExpression": {
                        "id": 41921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "4484:3:73",
                        "subExpression": {
                          "id": 41920,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41880,
                          "src": "4484:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4479:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 41925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4504:7:73",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31",
                          "id": 41926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4513:7:73",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "3130305f303030",
                          "id": 41927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4522:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          "value": "100_000"
                        },
                        {
                          "hexValue": "30",
                          "id": 41928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4531:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 41923,
                          "name": "mkr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41287,
                          "src": "4491:3:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestMaker_$49499",
                            "typeString": "contract TestMaker"
                          }
                        },
                        "id": 41924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49210,
                        "src": "4491:12:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                        }
                      },
                      "id": 41929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4491:42:73",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4479:54:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41931,
                  "nodeType": "ExpressionStatement",
                  "src": "4479:54:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 41935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4551:18:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 41932,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "4540:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 41934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "4540:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 41936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4540:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41937,
                  "nodeType": "ExpressionStatement",
                  "src": "4540:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41942,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "4632:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 41941,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "4630:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 41943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4630:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 41944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4638:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 41938,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "4616:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 41940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "4616:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 41945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4616:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41946,
                  "nodeType": "ExpressionStatement",
                  "src": "4616:30:73"
                },
                {
                  "assignments": [41953],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41953,
                      "mutability": "mutable",
                      "name": "targets",
                      "nameLocation": "4669:7:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42075,
                      "src": "4652:24:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[4][]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 41950,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "4652:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 41951,
                          "length": {
                            "hexValue": "34",
                            "id": 41949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4657:1:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "4652:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                            "typeString": "uint256[4]"
                          }
                        },
                        "id": 41952,
                        "nodeType": "ArrayTypeName",
                        "src": "4652:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_storage_$dyn_storage_ptr",
                          "typeString": "uint256[4][]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41961,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 41959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4693:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 41958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4679:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[4] memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 41954,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "4683:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 41956,
                          "length": {
                            "hexValue": "34",
                            "id": 41955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4688:1:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "4683:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                            "typeString": "uint256[4]"
                          }
                        },
                        "id": 41957,
                        "nodeType": "ArrayTypeName",
                        "src": "4683:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_storage_$dyn_storage_ptr",
                          "typeString": "uint256[4][]"
                        }
                      }
                    },
                    "id": 41960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4679:16:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                      "typeString": "uint256[4] memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4652:43:73"
                },
                {
                  "assignments": [41963],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41963,
                      "mutability": "mutable",
                      "name": "j",
                      "nameLocation": "4706:1:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42075,
                      "src": "4701:6:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41962,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4701:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41964,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4701:6:73"
                },
                {
                  "expression": {
                    "id": 41975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 41965,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41953,
                        "src": "4713:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      "id": 41967,
                      "indexExpression": {
                        "id": 41966,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41963,
                        "src": "4721:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4713:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                        "typeString": "uint256[4] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "baseExpression": {
                            "id": 41968,
                            "name": "ofrs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41886,
                            "src": "4727:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 41970,
                          "indexExpression": {
                            "id": 41969,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41963,
                            "src": "4732:1:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4727:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "302e35",
                          "id": 41971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4736:9:73",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_500000000000000000_by_1",
                            "typeString": "int_const 500000000000000000"
                          },
                          "value": "0.5"
                        },
                        {
                          "hexValue": "31",
                          "id": 41972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4747:7:73",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "3130305f303030",
                          "id": 41973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4756:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          "value": "100_000"
                        }
                      ],
                      "id": 41974,
                      "isConstant": false,
                      "isInlineArray": true,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4726:38:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                        "typeString": "uint256[4] memory"
                      }
                    },
                    "src": "4713:51:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                      "typeString": "uint256[4] memory"
                    }
                  },
                  "id": 41976,
                  "nodeType": "ExpressionStatement",
                  "src": "4713:51:73"
                },
                {
                  "expression": {
                    "id": 41978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4770:3:73",
                    "subExpression": {
                      "id": 41977,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41963,
                      "src": "4770:1:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41979,
                  "nodeType": "ExpressionStatement",
                  "src": "4770:3:73"
                },
                {
                  "expression": {
                    "id": 41990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 41980,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41953,
                        "src": "4779:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      "id": 41982,
                      "indexExpression": {
                        "id": 41981,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41963,
                        "src": "4787:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4779:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                        "typeString": "uint256[4] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "baseExpression": {
                            "id": 41983,
                            "name": "ofrs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41886,
                            "src": "4793:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 41985,
                          "indexExpression": {
                            "id": 41984,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41963,
                            "src": "4798:1:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4793:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 41986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4802:7:73",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31",
                          "id": 41987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4811:7:73",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "3130305f303030",
                          "id": 41988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4820:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          "value": "100_000"
                        }
                      ],
                      "id": 41989,
                      "isConstant": false,
                      "isInlineArray": true,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4792:36:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                        "typeString": "uint256[4] memory"
                      }
                    },
                    "src": "4779:49:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                      "typeString": "uint256[4] memory"
                    }
                  },
                  "id": 41991,
                  "nodeType": "ExpressionStatement",
                  "src": "4779:49:73"
                },
                {
                  "expression": {
                    "id": 41993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4834:3:73",
                    "subExpression": {
                      "id": 41992,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41963,
                      "src": "4834:1:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41994,
                  "nodeType": "ExpressionStatement",
                  "src": "4834:3:73"
                },
                {
                  "expression": {
                    "id": 42005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 41995,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41953,
                        "src": "4843:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      "id": 41997,
                      "indexExpression": {
                        "id": 41996,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41963,
                        "src": "4851:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4843:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                        "typeString": "uint256[4] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "baseExpression": {
                            "id": 41998,
                            "name": "ofrs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41886,
                            "src": "4857:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 42000,
                          "indexExpression": {
                            "id": 41999,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41963,
                            "src": "4862:1:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4857:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "302e38",
                          "id": 42001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4866:9:73",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_800000000000000000_by_1",
                            "typeString": "int_const 800000000000000000"
                          },
                          "value": "0.8"
                        },
                        {
                          "hexValue": "31",
                          "id": 42002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4877:7:73",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "3130305f303030",
                          "id": 42003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4886:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          "value": "100_000"
                        }
                      ],
                      "id": 42004,
                      "isConstant": false,
                      "isInlineArray": true,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4856:38:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                        "typeString": "uint256[4] memory"
                      }
                    },
                    "src": "4843:51:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                      "typeString": "uint256[4] memory"
                    }
                  },
                  "id": 42006,
                  "nodeType": "ExpressionStatement",
                  "src": "4843:51:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42009,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "4914:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 42008,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "4912:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 42010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4912:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 42007,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "4901:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 42011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4901:18:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42012,
                  "nodeType": "ExpressionStatement",
                  "src": "4901:18:73"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 42013,
                      "name": "OrderStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1815,
                      "src": "4930:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 42014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4930:12:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42015,
                  "nodeType": "EmitStatement",
                  "src": "4925:17:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42018,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "4961:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 42017,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "4959:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 42019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4959:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 42016,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "4948:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 42020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4948:18:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42021,
                  "nodeType": "ExpressionStatement",
                  "src": "4948:18:73"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42024,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "4993:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42023,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "4991:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4991:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 42027,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "5002:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42026,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "5000:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5000:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 42030,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5012:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 42029,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "5010:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 42031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5010:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "322e33",
                        "id": 42032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5019:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2300000000000000000_by_1",
                          "typeString": "int_const 2300000000000000000"
                        },
                        "value": "2.3"
                      },
                      {
                        "hexValue": "322e33",
                        "id": 42033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5030:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2300000000000000000_by_1",
                          "typeString": "int_const 2300000000000000000"
                        },
                        "value": "2.3"
                      },
                      {
                        "hexValue": "30",
                        "id": 42034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5041:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 42035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5044:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_2300000000000000000_by_1",
                          "typeString": "int_const 2300000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2300000000000000000_by_1",
                          "typeString": "int_const 2300000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 42022,
                      "name": "OrderComplete",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1831,
                      "src": "4977:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 42036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4977:69:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42037,
                  "nodeType": "EmitStatement",
                  "src": "4972:74:73"
                },
                {
                  "assignments": [42039, 42041, 42043, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42039,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "5059:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42075,
                      "src": "5054:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42038,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5054:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 42041,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "5075:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42075,
                      "src": "5070:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42040,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5070:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 42043,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "5085:4:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42075,
                      "src": "5080:9:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42042,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5080:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 42055,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42047,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "5117:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42046,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "5115:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5115:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 42050,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "5132:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42049,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "5130:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5130:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 42052,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41953,
                        "src": "5146:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 42053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5161:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 42044,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "5097:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 42045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "5097:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 42054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5097:74:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5053:118:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 42059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 42057,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42039,
                          "src": "5188:9:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 42058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5201:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "5188:14:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e697065732073686f756c64206e6f74206661696c",
                        "id": 42060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5204:24:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2efc2c1caf1049d86e8f15f82f388b5557938a91cf39b17abd1532a646d6b0be",
                          "typeString": "literal_string \"Snipes should not fail\""
                        },
                        "value": "Snipes should not fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2efc2c1caf1049d86e8f15f82f388b5557938a91cf39b17abd1532a646d6b0be",
                          "typeString": "literal_string \"Snipes should not fail\""
                        }
                      ],
                      "id": 42056,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "5177:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 42061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5177:52:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42062,
                  "nodeType": "ExpressionStatement",
                  "src": "5177:52:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42064,
                        "name": "got",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42041,
                        "src": "5244:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "322e33",
                        "id": 42065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5249:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2300000000000000000_by_1",
                          "typeString": "int_const 2300000000000000000"
                        },
                        "value": "2.3"
                      },
                      {
                        "hexValue": "54616b657220646964206e6f742067657420656e6f756768",
                        "id": 42066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5260:26:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        },
                        "value": "Taker did not get enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2300000000000000000_by_1",
                          "typeString": "int_const 2300000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        }
                      ],
                      "id": 42063,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "5235:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 42067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5235:52:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42068,
                  "nodeType": "ExpressionStatement",
                  "src": "5235:52:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42070,
                        "name": "gave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42043,
                        "src": "5302:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "322e33",
                        "id": 42071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5308:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2300000000000000000_by_1",
                          "typeString": "int_const 2300000000000000000"
                        },
                        "value": "2.3"
                      },
                      {
                        "hexValue": "54616b657220646964206e6f74206769766520656e6f756768",
                        "id": 42072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5319:27:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a93ccde287ae4aa1822cbffa2645028aa297307d78f39c43981381a739592710",
                          "typeString": "literal_string \"Taker did not give enough\""
                        },
                        "value": "Taker did not give enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2300000000000000000_by_1",
                          "typeString": "int_const 2300000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a93ccde287ae4aa1822cbffa2645028aa297307d78f39c43981381a739592710",
                          "typeString": "literal_string \"Taker did not give enough\""
                        }
                      ],
                      "id": 42069,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "5293:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 42073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5293:54:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42074,
                  "nodeType": "ExpressionStatement",
                  "src": "5293:54:73"
                }
              ]
            },
            "functionSelector": "bad9a473",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_multiple_snipes_fillWants",
            "nameLocation": "4261:30:73",
            "parameters": {
              "id": 41877,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4291:2:73"
            },
            "returnParameters": {
              "id": 41878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4301:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42084,
            "nodeType": "EventDefinition",
            "src": "5356:69:73",
            "anonymous": false,
            "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "name": "Transfer",
            "nameLocation": "5362:8:73",
            "parameters": {
              "id": 42083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42078,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5387:4:73",
                  "nodeType": "VariableDeclaration",
                  "scope": 42084,
                  "src": "5371:20:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42077,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5371:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42080,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5409:2:73",
                  "nodeType": "VariableDeclaration",
                  "scope": 42084,
                  "src": "5393:18:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42079,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5393:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42082,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "5418:5:73",
                  "nodeType": "VariableDeclaration",
                  "scope": 42084,
                  "src": "5413:10:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42081,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5413:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5370:54:73"
            }
          },
          {
            "id": 42225,
            "nodeType": "FunctionDefinition",
            "src": "5429:904:73",
            "body": {
              "id": 42224,
              "nodeType": "Block",
              "src": "5473:860:73",
              "statements": [
                {
                  "assignments": [42088],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42088,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "5484:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42224,
                      "src": "5479:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42087,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5479:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42096,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 42091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5503:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 42092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5512:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 42093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5521:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 42094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5530:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 42089,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "5490:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 42090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "5490:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 42095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5490:42:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5479:53:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 42103,
                                    "name": "base",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45878,
                                    "src": "5580:4:73",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$52050",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$52050",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 42102,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    46990, 47007, 47024, 47041, 47058
                                  ],
                                  "referencedDeclaration": 47058,
                                  "src": "5578:1:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 42104,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5578:7:73",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 42106,
                                    "name": "quote",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45881,
                                    "src": "5589:5:73",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$52050",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$52050",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 42105,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    46990, 47007, 47024, 47041, 47058
                                  ],
                                  "referencedDeclaration": 47058,
                                  "src": "5587:1:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 42107,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5587:8:73",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 42108,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42088,
                                "src": "5597:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 42100,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45875,
                                "src": "5567:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                  "typeString": "contract AbstractMangrove"
                                }
                              },
                              "id": 42101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "offers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1404,
                              "src": "5567:10:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$9363_$",
                                "typeString": "function (address,address,uint256) view external returns (t)"
                              }
                            },
                            "id": 42109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5567:34:73",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                              "typeString": "t"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                              "typeString": "t"
                            }
                          ],
                          "expression": {
                            "id": 42098,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "5556:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 42099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isLive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1705,
                          "src": "5556:10:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_userDefinedValueType$_t_$9363_$returns$_t_bool_$",
                            "typeString": "function (t) pure external returns (bool)"
                          }
                        },
                        "id": 42110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5556:46:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f666665722073686f756c6420626520696e2074686520626f6f6b",
                        "id": 42111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5610:29:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2e954fb4053e5650362fb1c54c859a534dc4cfd70b4bdf97b9ef9cc5c7338d5",
                          "typeString": "literal_string \"Offer should be in the book\""
                        },
                        "value": "Offer should be in the book"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2e954fb4053e5650362fb1c54c859a534dc4cfd70b4bdf97b9ef9cc5c7338d5",
                          "typeString": "literal_string \"Offer should be in the book\""
                        }
                      ],
                      "id": 42097,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "5538:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 42112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5538:107:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42113,
                  "nodeType": "ExpressionStatement",
                  "src": "5538:107:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 42117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5662:18:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 42114,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "5651:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 42116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "5651:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 42118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5651:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42119,
                  "nodeType": "ExpressionStatement",
                  "src": "5651:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42124,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "5743:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 42123,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "5741:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 42125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5741:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 42126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5749:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 42120,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "5727:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 42122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "5727:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 42127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5727:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42128,
                  "nodeType": "ExpressionStatement",
                  "src": "5727:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42131,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "5777:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42130,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "5775:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5775:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 42129,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "5764:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 42133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5764:20:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42134,
                  "nodeType": "ExpressionStatement",
                  "src": "5764:20:73"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42137,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5806:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 42136,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "5804:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 42138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5804:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 42141,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "5821:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 42140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5813:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42139,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5813:7:73",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5813:12:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 42143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5827:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 42135,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42084,
                      "src": "5795:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 42144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5795:34:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42145,
                  "nodeType": "EmitStatement",
                  "src": "5790:39:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42148,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "5848:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42147,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "5846:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5846:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 42146,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "5835:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 42150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5835:20:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42151,
                  "nodeType": "ExpressionStatement",
                  "src": "5835:20:73"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42154,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "5877:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 42153,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "5875:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 42155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5875:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 42158,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41287,
                            "src": "5891:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 42157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5883:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42156,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5883:7:73",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5883:12:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 42160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5897:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 42152,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42084,
                      "src": "5866:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 42161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5866:33:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42162,
                  "nodeType": "EmitStatement",
                  "src": "5861:38:73"
                },
                {
                  "assignments": [42164, 42166, 42168, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42164,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "5912:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42224,
                      "src": "5907:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42163,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5907:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 42166,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "5928:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42224,
                      "src": "5923:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42165,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5923:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 42168,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "5938:4:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42224,
                      "src": "5933:9:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42167,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5933:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 42186,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42172,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "5970:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42171,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "5968:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5968:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 42175,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "5985:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42174,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "5983:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5983:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 42178,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42088,
                                "src": "6013:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 42179,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6018:1:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 42180,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6021:1:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 42181,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6024:7:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 42182,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "6012:20:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 42177,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "5999:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 42183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5999:34:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 42184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6041:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 42169,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "5950:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 42170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "5950:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 42185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5950:101:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5906:145:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 42190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 42188,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42164,
                          "src": "6068:9:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 42189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6081:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "6068:14:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206e6f74206661696c",
                        "id": 42191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6084:23:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6a7e6a6acc6c427a9be780384e1bbd2a5c5c212db72316aeb26336b45f15575",
                          "typeString": "literal_string \"Snipe should not fail\""
                        },
                        "value": "Snipe should not fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6a7e6a6acc6c427a9be780384e1bbd2a5c5c212db72316aeb26336b45f15575",
                          "typeString": "literal_string \"Snipe should not fail\""
                        }
                      ],
                      "id": 42187,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "6057:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 42192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6057:51:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42193,
                  "nodeType": "ExpressionStatement",
                  "src": "6057:51:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42195,
                        "name": "got",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42166,
                        "src": "6123:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 42196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6128:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "54616b65722068616420746f6f206d756368",
                        "id": 42197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6137:20:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5abaac4d979daf0732b17f3c41365d4ba8072e49c3bee6a6ac0e14386b51dccf",
                          "typeString": "literal_string \"Taker had too much\""
                        },
                        "value": "Taker had too much"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5abaac4d979daf0732b17f3c41365d4ba8072e49c3bee6a6ac0e14386b51dccf",
                          "typeString": "literal_string \"Taker had too much\""
                        }
                      ],
                      "id": 42194,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "6114:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 42198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6114:44:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42199,
                  "nodeType": "ExpressionStatement",
                  "src": "6114:44:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42201,
                        "name": "gave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42168,
                        "src": "6173:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 42202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6179:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "54616b6572206761766520746f6f206d756368",
                        "id": 42203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6188:21:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ec481b1b10ac79191882bfb3b36f9036dd5090cc8a135367dc69ca81d01f3e9",
                          "typeString": "literal_string \"Taker gave too much\""
                        },
                        "value": "Taker gave too much"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ec481b1b10ac79191882bfb3b36f9036dd5090cc8a135367dc69ca81d01f3e9",
                          "typeString": "literal_string \"Taker gave too much\""
                        }
                      ],
                      "id": 42200,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "6164:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 42204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6164:46:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42205,
                  "nodeType": "ExpressionStatement",
                  "src": "6164:46:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6234:47:73",
                        "subExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 42212,
                                      "name": "base",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45878,
                                      "src": "6259:4:73",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 42211,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      46990, 47007, 47024, 47041, 47058
                                    ],
                                    "referencedDeclaration": 47058,
                                    "src": "6257:1:73",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 42213,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6257:7:73",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 42215,
                                      "name": "quote",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45881,
                                      "src": "6268:5:73",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 42214,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      46990, 47007, 47024, 47041, 47058
                                    ],
                                    "referencedDeclaration": 47058,
                                    "src": "6266:1:73",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 42216,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6266:8:73",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "id": 42217,
                                  "name": "ofr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42088,
                                  "src": "6276:3:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 42209,
                                  "name": "mgv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45875,
                                  "src": "6246:3:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                    "typeString": "contract AbstractMangrove"
                                  }
                                },
                                "id": 42210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "offers",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1404,
                                "src": "6246:10:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$9363_$",
                                  "typeString": "function (address,address,uint256) view external returns (t)"
                                }
                              },
                              "id": 42218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6246:34:73",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                                "typeString": "t"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                                "typeString": "t"
                              }
                            ],
                            "expression": {
                              "id": 42207,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45875,
                              "src": "6235:3:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 42208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isLive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1705,
                            "src": "6235:10:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$_t_userDefinedValueType$_t_$9363_$returns$_t_bool_$",
                              "typeString": "function (t) pure external returns (bool)"
                            }
                          },
                          "id": 42219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6235:46:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f666665722073686f756c64206e6f7420626520696e2074686520626f6f6b",
                        "id": 42221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6289:33:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f4d3c42bc2968d0d41843f6ef71f8a1555b4f3b713a0a88d7b290421b5d50ba",
                          "typeString": "literal_string \"Offer should not be in the book\""
                        },
                        "value": "Offer should not be in the book"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f4d3c42bc2968d0d41843f6ef71f8a1555b4f3b713a0a88d7b290421b5d50ba",
                          "typeString": "literal_string \"Offer should not be in the book\""
                        }
                      ],
                      "id": 42206,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "6216:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 42222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6216:112:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42223,
                  "nodeType": "ExpressionStatement",
                  "src": "6216:112:73"
                }
              ]
            },
            "functionSelector": "959d9fb7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_fillWants_zero",
            "nameLocation": "5438:25:73",
            "parameters": {
              "id": 42085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5463:2:73"
            },
            "returnParameters": {
              "id": 42086,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5473:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42332,
            "nodeType": "FunctionDefinition",
            "src": "6337:986:73",
            "body": {
              "id": 42331,
              "nodeType": "Block",
              "src": "6401:922:73",
              "statements": [
                {
                  "assignments": [42229],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42229,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "6412:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42331,
                      "src": "6407:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42228,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6407:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42237,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 42232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6431:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "31",
                        "id": 42233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6434:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 42234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6443:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 42235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6452:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 42230,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "6418:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 42231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "6418:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 42236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6418:36:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6407:47:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 42244,
                                    "name": "base",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45878,
                                    "src": "6502:4:73",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$52050",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$52050",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 42243,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    46990, 47007, 47024, 47041, 47058
                                  ],
                                  "referencedDeclaration": 47058,
                                  "src": "6500:1:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 42245,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6500:7:73",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 42247,
                                    "name": "quote",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45881,
                                    "src": "6511:5:73",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$52050",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$52050",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 42246,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    46990, 47007, 47024, 47041, 47058
                                  ],
                                  "referencedDeclaration": 47058,
                                  "src": "6509:1:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 42248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6509:8:73",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 42249,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42229,
                                "src": "6519:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 42241,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45875,
                                "src": "6489:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                  "typeString": "contract AbstractMangrove"
                                }
                              },
                              "id": 42242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "offers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1404,
                              "src": "6489:10:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$9363_$",
                                "typeString": "function (address,address,uint256) view external returns (t)"
                              }
                            },
                            "id": 42250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6489:34:73",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                              "typeString": "t"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                              "typeString": "t"
                            }
                          ],
                          "expression": {
                            "id": 42239,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "6478:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 42240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isLive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1705,
                          "src": "6478:10:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_userDefinedValueType$_t_$9363_$returns$_t_bool_$",
                            "typeString": "function (t) pure external returns (bool)"
                          }
                        },
                        "id": 42251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6478:46:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f666665722073686f756c6420626520696e2074686520626f6f6b",
                        "id": 42252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6532:29:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2e954fb4053e5650362fb1c54c859a534dc4cfd70b4bdf97b9ef9cc5c7338d5",
                          "typeString": "literal_string \"Offer should be in the book\""
                        },
                        "value": "Offer should be in the book"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2e954fb4053e5650362fb1c54c859a534dc4cfd70b4bdf97b9ef9cc5c7338d5",
                          "typeString": "literal_string \"Offer should be in the book\""
                        }
                      ],
                      "id": 42238,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "6460:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 42253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6460:107:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42254,
                  "nodeType": "ExpressionStatement",
                  "src": "6460:107:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 42258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6584:18:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 42255,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "6573:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 42257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "6573:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 42259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6573:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42260,
                  "nodeType": "ExpressionStatement",
                  "src": "6573:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42265,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "6665:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 42264,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "6663:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 42266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6663:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 42267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6671:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 42261,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "6649:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 42263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "6649:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 42268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6649:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42269,
                  "nodeType": "ExpressionStatement",
                  "src": "6649:30:73"
                },
                {
                  "assignments": [42271, 42273, 42275, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42271,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "6898:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42331,
                      "src": "6893:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42270,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6893:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 42273,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "6914:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42331,
                      "src": "6909:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42272,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6909:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 42275,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "6924:4:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42331,
                      "src": "6919:9:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42274,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6919:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 42293,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42279,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "6956:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42278,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "6954:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6954:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 42282,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "6971:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42281,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "6969:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6969:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 42285,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42229,
                                "src": "6999:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "302e31",
                                "id": 42286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7004:9:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000000000000000_by_1",
                                  "typeString": "int_const 100000000000000000"
                                },
                                "value": "0.1"
                              },
                              {
                                "hexValue": "30",
                                "id": 42287,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7015:1:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 42288,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7018:7:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 42289,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "6998:28:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 42284,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "6985:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 42290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6985:42:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 42291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7035:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 42276,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "6936:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 42277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "6936:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 42292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6936:109:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6892:153:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 42297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 42295,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42271,
                          "src": "7062:9:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 42296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7075:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "7062:14:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206e6f74206661696c",
                        "id": 42298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7078:23:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6a7e6a6acc6c427a9be780384e1bbd2a5c5c212db72316aeb26336b45f15575",
                          "typeString": "literal_string \"Snipe should not fail\""
                        },
                        "value": "Snipe should not fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6a7e6a6acc6c427a9be780384e1bbd2a5c5c212db72316aeb26336b45f15575",
                          "typeString": "literal_string \"Snipe should not fail\""
                        }
                      ],
                      "id": 42294,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "7051:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 42299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7051:51:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42300,
                  "nodeType": "ExpressionStatement",
                  "src": "7051:51:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42302,
                        "name": "got",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42273,
                        "src": "7117:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e31",
                        "id": 42303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7122:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      },
                      {
                        "hexValue": "57726f6e6720676f742076616c7565",
                        "id": 42304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7133:17:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4148c7b3f4ca4afb237194493ca9e0246d135d45f2fa9a20240d10a279fd4eb8",
                          "typeString": "literal_string \"Wrong got value\""
                        },
                        "value": "Wrong got value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4148c7b3f4ca4afb237194493ca9e0246d135d45f2fa9a20240d10a279fd4eb8",
                          "typeString": "literal_string \"Wrong got value\""
                        }
                      ],
                      "id": 42301,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "7108:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 42305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7108:43:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42306,
                  "nodeType": "ExpressionStatement",
                  "src": "7108:43:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42308,
                        "name": "gave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42275,
                        "src": "7166:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 42309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7172:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "57726f6e6720676176652076616c7565",
                        "id": 42310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7181:18:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03e8f75513f82c483fe8aac7187d87486e0a5548fe06c7895476b2a4931e883e",
                          "typeString": "literal_string \"Wrong gave value\""
                        },
                        "value": "Wrong gave value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_03e8f75513f82c483fe8aac7187d87486e0a5548fe06c7895476b2a4931e883e",
                          "typeString": "literal_string \"Wrong gave value\""
                        }
                      ],
                      "id": 42307,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "7157:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 42311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7157:43:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42312,
                  "nodeType": "ExpressionStatement",
                  "src": "7157:43:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7224:47:73",
                        "subExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 42319,
                                      "name": "base",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45878,
                                      "src": "7249:4:73",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 42318,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      46990, 47007, 47024, 47041, 47058
                                    ],
                                    "referencedDeclaration": 47058,
                                    "src": "7247:1:73",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 42320,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7247:7:73",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 42322,
                                      "name": "quote",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45881,
                                      "src": "7258:5:73",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 42321,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      46990, 47007, 47024, 47041, 47058
                                    ],
                                    "referencedDeclaration": 47058,
                                    "src": "7256:1:73",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 42323,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7256:8:73",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "id": 42324,
                                  "name": "ofr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42229,
                                  "src": "7266:3:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 42316,
                                  "name": "mgv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45875,
                                  "src": "7236:3:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                    "typeString": "contract AbstractMangrove"
                                  }
                                },
                                "id": 42317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "offers",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1404,
                                "src": "7236:10:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$9363_$",
                                  "typeString": "function (address,address,uint256) view external returns (t)"
                                }
                              },
                              "id": 42325,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7236:34:73",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                                "typeString": "t"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                                "typeString": "t"
                              }
                            ],
                            "expression": {
                              "id": 42314,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45875,
                              "src": "7225:3:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 42315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isLive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1705,
                            "src": "7225:10:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$_t_userDefinedValueType$_t_$9363_$returns$_t_bool_$",
                              "typeString": "function (t) pure external returns (bool)"
                            }
                          },
                          "id": 42326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7225:46:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f666665722073686f756c64206e6f7420626520696e2074686520626f6f6b",
                        "id": 42328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7279:33:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f4d3c42bc2968d0d41843f6ef71f8a1555b4f3b713a0a88d7b290421b5d50ba",
                          "typeString": "literal_string \"Offer should not be in the book\""
                        },
                        "value": "Offer should not be in the book"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f4d3c42bc2968d0d41843f6ef71f8a1555b4f3b713a0a88d7b290421b5d50ba",
                          "typeString": "literal_string \"Offer should not be in the book\""
                        }
                      ],
                      "id": 42313,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "7206:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 42329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7206:112:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42330,
                  "nodeType": "ExpressionStatement",
                  "src": "7206:112:73"
                }
              ]
            },
            "functionSelector": "8d6efbcb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_free_offer_fillWants_respects_spec",
            "nameLocation": "6346:45:73",
            "parameters": {
              "id": 42226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6391:2:73"
            },
            "returnParameters": {
              "id": 42227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6401:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42439,
            "nodeType": "FunctionDefinition",
            "src": "7327:990:73",
            "body": {
              "id": 42438,
              "nodeType": "Block",
              "src": "7391:926:73",
              "statements": [
                {
                  "assignments": [42336],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42336,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "7402:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42438,
                      "src": "7397:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42335,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7397:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42344,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 42339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7421:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "31",
                        "id": 42340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7424:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 42341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7433:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 42342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7442:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 42337,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "7408:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 42338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "7408:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 42343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7408:36:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7397:47:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 42351,
                                    "name": "base",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45878,
                                    "src": "7492:4:73",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$52050",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$52050",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 42350,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    46990, 47007, 47024, 47041, 47058
                                  ],
                                  "referencedDeclaration": 47058,
                                  "src": "7490:1:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 42352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7490:7:73",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 42354,
                                    "name": "quote",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45881,
                                    "src": "7501:5:73",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$52050",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$52050",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 42353,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    46990, 47007, 47024, 47041, 47058
                                  ],
                                  "referencedDeclaration": 47058,
                                  "src": "7499:1:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 42355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7499:8:73",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 42356,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42336,
                                "src": "7509:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 42348,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45875,
                                "src": "7479:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                  "typeString": "contract AbstractMangrove"
                                }
                              },
                              "id": 42349,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "offers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1404,
                              "src": "7479:10:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$9363_$",
                                "typeString": "function (address,address,uint256) view external returns (t)"
                              }
                            },
                            "id": 42357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7479:34:73",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                              "typeString": "t"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                              "typeString": "t"
                            }
                          ],
                          "expression": {
                            "id": 42346,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "7468:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 42347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isLive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1705,
                          "src": "7468:10:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_userDefinedValueType$_t_$9363_$returns$_t_bool_$",
                            "typeString": "function (t) pure external returns (bool)"
                          }
                        },
                        "id": 42358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7468:46:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f666665722073686f756c6420626520696e2074686520626f6f6b",
                        "id": 42359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7522:29:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2e954fb4053e5650362fb1c54c859a534dc4cfd70b4bdf97b9ef9cc5c7338d5",
                          "typeString": "literal_string \"Offer should be in the book\""
                        },
                        "value": "Offer should be in the book"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2e954fb4053e5650362fb1c54c859a534dc4cfd70b4bdf97b9ef9cc5c7338d5",
                          "typeString": "literal_string \"Offer should be in the book\""
                        }
                      ],
                      "id": 42345,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "7450:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 42360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7450:107:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42361,
                  "nodeType": "ExpressionStatement",
                  "src": "7450:107:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 42365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7574:18:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 42362,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "7563:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 42364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "7563:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 42366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7563:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42367,
                  "nodeType": "ExpressionStatement",
                  "src": "7563:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42372,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "7655:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 42371,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "7653:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 42373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7653:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 42374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7661:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 42368,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "7639:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 42370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "7639:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 42375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7639:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42376,
                  "nodeType": "ExpressionStatement",
                  "src": "7639:30:73"
                },
                {
                  "assignments": [42378, 42380, 42382, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42378,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "7893:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42438,
                      "src": "7888:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42377,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7888:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 42380,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "7909:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42438,
                      "src": "7904:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42379,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7904:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 42382,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "7919:4:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42438,
                      "src": "7914:9:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42381,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7914:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 42400,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42386,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "7951:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42385,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "7949:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7949:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 42389,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "7966:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42388,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "7964:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7964:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 42392,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42336,
                                "src": "7994:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "302e31",
                                "id": 42393,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7999:9:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000000000000000_by_1",
                                  "typeString": "int_const 100000000000000000"
                                },
                                "value": "0.1"
                              },
                              {
                                "hexValue": "30",
                                "id": 42394,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8010:1:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 42395,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8013:7:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 42396,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7993:28:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 42391,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "7980:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 42397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7980:42:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 42398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8030:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 42383,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "7931:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 42384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "7931:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 42399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7931:110:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7887:154:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 42404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 42402,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42378,
                          "src": "8058:9:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 42403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8071:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "8058:14:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206e6f74206661696c",
                        "id": 42405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8074:23:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6a7e6a6acc6c427a9be780384e1bbd2a5c5c212db72316aeb26336b45f15575",
                          "typeString": "literal_string \"Snipe should not fail\""
                        },
                        "value": "Snipe should not fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6a7e6a6acc6c427a9be780384e1bbd2a5c5c212db72316aeb26336b45f15575",
                          "typeString": "literal_string \"Snipe should not fail\""
                        }
                      ],
                      "id": 42401,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "8047:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 42406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8047:51:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42407,
                  "nodeType": "ExpressionStatement",
                  "src": "8047:51:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42409,
                        "name": "got",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42380,
                        "src": "8113:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 42410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8118:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "57726f6e6720676f742076616c7565",
                        "id": 42411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8127:17:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4148c7b3f4ca4afb237194493ca9e0246d135d45f2fa9a20240d10a279fd4eb8",
                          "typeString": "literal_string \"Wrong got value\""
                        },
                        "value": "Wrong got value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4148c7b3f4ca4afb237194493ca9e0246d135d45f2fa9a20240d10a279fd4eb8",
                          "typeString": "literal_string \"Wrong got value\""
                        }
                      ],
                      "id": 42408,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "8104:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 42412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8104:41:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42413,
                  "nodeType": "ExpressionStatement",
                  "src": "8104:41:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42415,
                        "name": "gave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42382,
                        "src": "8160:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 42416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8166:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "57726f6e6720676176652076616c7565",
                        "id": 42417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8175:18:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03e8f75513f82c483fe8aac7187d87486e0a5548fe06c7895476b2a4931e883e",
                          "typeString": "literal_string \"Wrong gave value\""
                        },
                        "value": "Wrong gave value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_03e8f75513f82c483fe8aac7187d87486e0a5548fe06c7895476b2a4931e883e",
                          "typeString": "literal_string \"Wrong gave value\""
                        }
                      ],
                      "id": 42414,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "8151:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 42418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8151:43:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42419,
                  "nodeType": "ExpressionStatement",
                  "src": "8151:43:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8218:47:73",
                        "subExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 42426,
                                      "name": "base",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45878,
                                      "src": "8243:4:73",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 42425,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      46990, 47007, 47024, 47041, 47058
                                    ],
                                    "referencedDeclaration": 47058,
                                    "src": "8241:1:73",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 42427,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8241:7:73",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 42429,
                                      "name": "quote",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45881,
                                      "src": "8252:5:73",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 42428,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      46990, 47007, 47024, 47041, 47058
                                    ],
                                    "referencedDeclaration": 47058,
                                    "src": "8250:1:73",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 42430,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8250:8:73",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "id": 42431,
                                  "name": "ofr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42336,
                                  "src": "8260:3:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 42423,
                                  "name": "mgv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45875,
                                  "src": "8230:3:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                    "typeString": "contract AbstractMangrove"
                                  }
                                },
                                "id": 42424,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "offers",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1404,
                                "src": "8230:10:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$9363_$",
                                  "typeString": "function (address,address,uint256) view external returns (t)"
                                }
                              },
                              "id": 42432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8230:34:73",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                                "typeString": "t"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                                "typeString": "t"
                              }
                            ],
                            "expression": {
                              "id": 42421,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45875,
                              "src": "8219:3:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 42422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isLive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1705,
                            "src": "8219:10:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$_t_userDefinedValueType$_t_$9363_$returns$_t_bool_$",
                              "typeString": "function (t) pure external returns (bool)"
                            }
                          },
                          "id": 42433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8219:46:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f666665722073686f756c64206e6f7420626520696e2074686520626f6f6b",
                        "id": 42435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8273:33:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f4d3c42bc2968d0d41843f6ef71f8a1555b4f3b713a0a88d7b290421b5d50ba",
                          "typeString": "literal_string \"Offer should not be in the book\""
                        },
                        "value": "Offer should not be in the book"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f4d3c42bc2968d0d41843f6ef71f8a1555b4f3b713a0a88d7b290421b5d50ba",
                          "typeString": "literal_string \"Offer should not be in the book\""
                        }
                      ],
                      "id": 42420,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "8200:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 42436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8200:112:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42437,
                  "nodeType": "ExpressionStatement",
                  "src": "8200:112:73"
                }
              ]
            },
            "functionSelector": "339e7171",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_free_offer_fillGives_respects_spec",
            "nameLocation": "7336:45:73",
            "parameters": {
              "id": 42333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7381:2:73"
            },
            "returnParameters": {
              "id": 42334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7391:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42546,
            "nodeType": "FunctionDefinition",
            "src": "8321:763:73",
            "body": {
              "id": 42545,
              "nodeType": "Block",
              "src": "8365:719:73",
              "statements": [
                {
                  "assignments": [42443],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42443,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "8376:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42545,
                      "src": "8371:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42442,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8371:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42451,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 42446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8395:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 42447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8404:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 42448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8413:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 42449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8422:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 42444,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "8382:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 42445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "8382:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 42450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8382:42:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8371:53:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 42458,
                                    "name": "base",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45878,
                                    "src": "8472:4:73",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$52050",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$52050",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 42457,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    46990, 47007, 47024, 47041, 47058
                                  ],
                                  "referencedDeclaration": 47058,
                                  "src": "8470:1:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 42459,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8470:7:73",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 42461,
                                    "name": "quote",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45881,
                                    "src": "8481:5:73",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$52050",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$52050",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 42460,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    46990, 47007, 47024, 47041, 47058
                                  ],
                                  "referencedDeclaration": 47058,
                                  "src": "8479:1:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 42462,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8479:8:73",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 42463,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42443,
                                "src": "8489:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 42455,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45875,
                                "src": "8459:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                  "typeString": "contract AbstractMangrove"
                                }
                              },
                              "id": 42456,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "offers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1404,
                              "src": "8459:10:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$9363_$",
                                "typeString": "function (address,address,uint256) view external returns (t)"
                              }
                            },
                            "id": 42464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8459:34:73",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                              "typeString": "t"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                              "typeString": "t"
                            }
                          ],
                          "expression": {
                            "id": 42453,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "8448:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 42454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isLive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1705,
                          "src": "8448:10:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_userDefinedValueType$_t_$9363_$returns$_t_bool_$",
                            "typeString": "function (t) pure external returns (bool)"
                          }
                        },
                        "id": 42465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8448:46:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f666665722073686f756c6420626520696e2074686520626f6f6b",
                        "id": 42466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8502:29:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2e954fb4053e5650362fb1c54c859a534dc4cfd70b4bdf97b9ef9cc5c7338d5",
                          "typeString": "literal_string \"Offer should be in the book\""
                        },
                        "value": "Offer should be in the book"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2e954fb4053e5650362fb1c54c859a534dc4cfd70b4bdf97b9ef9cc5c7338d5",
                          "typeString": "literal_string \"Offer should be in the book\""
                        }
                      ],
                      "id": 42452,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "8430:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 42467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8430:107:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42468,
                  "nodeType": "ExpressionStatement",
                  "src": "8430:107:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 42472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8554:18:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 42469,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "8543:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 42471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "8543:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 42473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8543:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42474,
                  "nodeType": "ExpressionStatement",
                  "src": "8543:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42479,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "8635:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 42478,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "8633:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 42480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8633:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 42481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8641:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 42475,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "8619:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 42477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "8619:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 42482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8619:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42483,
                  "nodeType": "ExpressionStatement",
                  "src": "8619:30:73"
                },
                {
                  "assignments": [42485, 42487, 42489, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42485,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "8662:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42545,
                      "src": "8657:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42484,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8657:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 42487,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "8678:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42545,
                      "src": "8673:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42486,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8673:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 42489,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "8688:4:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42545,
                      "src": "8683:9:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42488,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8683:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 42507,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42493,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "8720:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42492,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "8718:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8718:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 42496,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "8735:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42495,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "8733:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8733:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 42499,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42443,
                                "src": "8763:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 42500,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8768:1:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 42501,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8771:1:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 42502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8774:7:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 42503,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "8762:20:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 42498,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "8749:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 42504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8749:34:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 42505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8791:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 42490,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "8700:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 42491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "8700:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 42506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8700:102:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8656:146:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 42511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 42509,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42485,
                          "src": "8819:9:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 42510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8832:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "8819:14:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206e6f74206661696c",
                        "id": 42512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8835:23:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6a7e6a6acc6c427a9be780384e1bbd2a5c5c212db72316aeb26336b45f15575",
                          "typeString": "literal_string \"Snipe should not fail\""
                        },
                        "value": "Snipe should not fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6a7e6a6acc6c427a9be780384e1bbd2a5c5c212db72316aeb26336b45f15575",
                          "typeString": "literal_string \"Snipe should not fail\""
                        }
                      ],
                      "id": 42508,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "8808:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 42513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8808:51:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42514,
                  "nodeType": "ExpressionStatement",
                  "src": "8808:51:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42516,
                        "name": "got",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42487,
                        "src": "8874:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 42517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8879:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "54616b65722068616420746f6f206d756368",
                        "id": 42518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8888:20:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5abaac4d979daf0732b17f3c41365d4ba8072e49c3bee6a6ac0e14386b51dccf",
                          "typeString": "literal_string \"Taker had too much\""
                        },
                        "value": "Taker had too much"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5abaac4d979daf0732b17f3c41365d4ba8072e49c3bee6a6ac0e14386b51dccf",
                          "typeString": "literal_string \"Taker had too much\""
                        }
                      ],
                      "id": 42515,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "8865:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 42519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8865:44:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42520,
                  "nodeType": "ExpressionStatement",
                  "src": "8865:44:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42522,
                        "name": "gave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42489,
                        "src": "8924:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 42523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8930:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "54616b6572206761766520746f6f206d756368",
                        "id": 42524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8939:21:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ec481b1b10ac79191882bfb3b36f9036dd5090cc8a135367dc69ca81d01f3e9",
                          "typeString": "literal_string \"Taker gave too much\""
                        },
                        "value": "Taker gave too much"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ec481b1b10ac79191882bfb3b36f9036dd5090cc8a135367dc69ca81d01f3e9",
                          "typeString": "literal_string \"Taker gave too much\""
                        }
                      ],
                      "id": 42521,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "8915:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 42525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8915:46:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42526,
                  "nodeType": "ExpressionStatement",
                  "src": "8915:46:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8985:47:73",
                        "subExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 42533,
                                      "name": "base",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45878,
                                      "src": "9010:4:73",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 42532,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      46990, 47007, 47024, 47041, 47058
                                    ],
                                    "referencedDeclaration": 47058,
                                    "src": "9008:1:73",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 42534,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9008:7:73",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 42536,
                                      "name": "quote",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45881,
                                      "src": "9019:5:73",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 42535,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      46990, 47007, 47024, 47041, 47058
                                    ],
                                    "referencedDeclaration": 47058,
                                    "src": "9017:1:73",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 42537,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9017:8:73",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "id": 42538,
                                  "name": "ofr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42443,
                                  "src": "9027:3:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 42530,
                                  "name": "mgv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45875,
                                  "src": "8997:3:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                    "typeString": "contract AbstractMangrove"
                                  }
                                },
                                "id": 42531,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "offers",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1404,
                                "src": "8997:10:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$9363_$",
                                  "typeString": "function (address,address,uint256) view external returns (t)"
                                }
                              },
                              "id": 42539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8997:34:73",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                                "typeString": "t"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                                "typeString": "t"
                              }
                            ],
                            "expression": {
                              "id": 42528,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45875,
                              "src": "8986:3:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 42529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isLive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1705,
                            "src": "8986:10:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$_t_userDefinedValueType$_t_$9363_$returns$_t_bool_$",
                              "typeString": "function (t) pure external returns (bool)"
                            }
                          },
                          "id": 42540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8986:46:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f666665722073686f756c64206e6f7420626520696e2074686520626f6f6b",
                        "id": 42542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9040:33:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f4d3c42bc2968d0d41843f6ef71f8a1555b4f3b713a0a88d7b290421b5d50ba",
                          "typeString": "literal_string \"Offer should not be in the book\""
                        },
                        "value": "Offer should not be in the book"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f4d3c42bc2968d0d41843f6ef71f8a1555b4f3b713a0a88d7b290421b5d50ba",
                          "typeString": "literal_string \"Offer should not be in the book\""
                        }
                      ],
                      "id": 42527,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "8967:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 42543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8967:112:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42544,
                  "nodeType": "ExpressionStatement",
                  "src": "8967:112:73"
                }
              ]
            },
            "functionSelector": "71b980ed",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_fillGives_zero",
            "nameLocation": "8330:25:73",
            "parameters": {
              "id": 42440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8355:2:73"
            },
            "returnParameters": {
              "id": 42441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8365:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42618,
            "nodeType": "FunctionDefinition",
            "src": "9088:552:73",
            "body": {
              "id": 42617,
              "nodeType": "Block",
              "src": "9127:513:73",
              "statements": [
                {
                  "assignments": [42550],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42550,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "9138:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42617,
                      "src": "9133:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42549,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9133:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42558,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 42553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9157:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 42554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9166:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 42555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9175:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 42556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9184:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 42551,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "9144:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 42552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "9144:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 42557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9144:42:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9133:53:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 42562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9203:18:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 42559,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "9192:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 42561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "9192:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 42563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9192:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42564,
                  "nodeType": "ExpressionStatement",
                  "src": "9192:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42569,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "9284:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 42568,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "9282:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 42570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9282:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 42571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9290:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 42565,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "9268:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 42567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "9268:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 42572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9268:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42573,
                  "nodeType": "ExpressionStatement",
                  "src": "9268:30:73"
                },
                {
                  "assignments": [42575, 42577, 42579, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42575,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "9311:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42617,
                      "src": "9306:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42574,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9306:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 42577,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "9327:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42617,
                      "src": "9322:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42576,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9322:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 42579,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "9337:4:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42617,
                      "src": "9332:9:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42578,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9332:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 42597,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42583,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "9369:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42582,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "9367:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9367:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 42586,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "9384:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42585,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "9382:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9382:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 42589,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42550,
                                "src": "9412:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "302e35",
                                "id": 42590,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9417:9:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_500000000000000000_by_1",
                                  "typeString": "int_const 500000000000000000"
                                },
                                "value": "0.5"
                              },
                              {
                                "hexValue": "31",
                                "id": 42591,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9428:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 42592,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9437:7:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 42593,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9411:34:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 42588,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "9398:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 42594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9398:48:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 42595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9454:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 42580,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "9349:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 42581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "9349:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 42596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9349:116:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9305:160:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 42601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 42599,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42575,
                          "src": "9482:9:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 42600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9495:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "9482:14:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206e6f74206661696c",
                        "id": 42602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9498:23:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6a7e6a6acc6c427a9be780384e1bbd2a5c5c212db72316aeb26336b45f15575",
                          "typeString": "literal_string \"Snipe should not fail\""
                        },
                        "value": "Snipe should not fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6a7e6a6acc6c427a9be780384e1bbd2a5c5c212db72316aeb26336b45f15575",
                          "typeString": "literal_string \"Snipe should not fail\""
                        }
                      ],
                      "id": 42598,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "9471:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 42603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9471:51:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42604,
                  "nodeType": "ExpressionStatement",
                  "src": "9471:51:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42606,
                        "name": "got",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42577,
                        "src": "9537:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 42607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9542:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "54616b657220646964206e6f742067657420656e6f756768",
                        "id": 42608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9551:26:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        },
                        "value": "Taker did not get enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        }
                      ],
                      "id": 42605,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "9528:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 42609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9528:50:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42610,
                  "nodeType": "ExpressionStatement",
                  "src": "9528:50:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42612,
                        "name": "gave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42579,
                        "src": "9593:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 42613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9599:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "54616b657220646964206e6f742067657420656e6f756768",
                        "id": 42614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9608:26:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        },
                        "value": "Taker did not get enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        }
                      ],
                      "id": 42611,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "9584:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 42615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9584:51:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42616,
                  "nodeType": "ExpressionStatement",
                  "src": "9584:51:73"
                }
              ]
            },
            "functionSelector": "3b629aed",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_fillGives",
            "nameLocation": "9097:20:73",
            "parameters": {
              "id": 42547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9117:2:73"
            },
            "returnParameters": {
              "id": 42548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9127:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42684,
            "nodeType": "FunctionDefinition",
            "src": "9644:496:73",
            "body": {
              "id": 42683,
              "nodeType": "Block",
              "src": "9680:460:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 42624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9699:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 42625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9708:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 42626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9717:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 42627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9726:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 42621,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "9686:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 42623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "9686:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 42628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9686:42:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42629,
                  "nodeType": "ExpressionStatement",
                  "src": "9686:42:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 42633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9747:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 42634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9756:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 42635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9765:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 42636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9774:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 42630,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "9734:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 42632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "9734:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 42637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9734:42:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42638,
                  "nodeType": "ExpressionStatement",
                  "src": "9734:42:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 42642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9793:18:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 42639,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "9782:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 42641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "9782:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 42643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9782:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42644,
                  "nodeType": "ExpressionStatement",
                  "src": "9782:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42649,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "9874:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 42648,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "9872:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 42650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9872:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 42651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9880:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 42645,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "9858:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 42647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "9858:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 42652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9858:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42653,
                  "nodeType": "ExpressionStatement",
                  "src": "9858:30:73"
                },
                {
                  "assignments": [42655, 42657, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42655,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "9900:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42683,
                      "src": "9895:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42654,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9895:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 42657,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "9910:4:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42683,
                      "src": "9905:9:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42656,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9905:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 42670,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42661,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "9947:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42660,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "9945:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9945:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 42664,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "9962:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42663,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "9960:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9960:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "312e31",
                        "id": 42666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9976:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        "value": "1.1"
                      },
                      {
                        "hexValue": "32",
                        "id": 42667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9993:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 42668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10008:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 42658,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "9922:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 42659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3435,
                      "src": "9922:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 42669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9922:96:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9894:124:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42672,
                        "name": "got",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42655,
                        "src": "10033:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "312e31",
                        "id": 42673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10038:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        "value": "1.1"
                      },
                      {
                        "hexValue": "54616b657220646964206e6f742067657420656e6f756768",
                        "id": 42674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10049:26:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        },
                        "value": "Taker did not get enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        }
                      ],
                      "id": 42671,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "10024:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 42675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10024:52:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42676,
                  "nodeType": "ExpressionStatement",
                  "src": "10024:52:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42678,
                        "name": "gave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42657,
                        "src": "10091:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "312e31",
                        "id": 42679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10097:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        "value": "1.1"
                      },
                      {
                        "hexValue": "54616b657220646964206e6f742067657420656e6f756768",
                        "id": 42680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10108:26:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        },
                        "value": "Taker did not get enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        }
                      ],
                      "id": 42677,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "10082:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 42681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10082:53:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42682,
                  "nodeType": "ExpressionStatement",
                  "src": "10082:53:73"
                }
              ]
            },
            "functionSelector": "ef8febf6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_mo_fillWants",
            "nameLocation": "9653:17:73",
            "parameters": {
              "id": 42619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9670:2:73"
            },
            "returnParameters": {
              "id": 42620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9680:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42750,
            "nodeType": "FunctionDefinition",
            "src": "10144:493:73",
            "body": {
              "id": 42749,
              "nodeType": "Block",
              "src": "10180:457:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 42690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10199:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 42691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10208:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 42692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10217:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 42693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10226:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 42687,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "10186:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 42689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "10186:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 42694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10186:42:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42695,
                  "nodeType": "ExpressionStatement",
                  "src": "10186:42:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 42699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10247:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 42700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10256:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 42701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10265:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 42702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10274:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 42696,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "10234:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 42698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "10234:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 42703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10234:42:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42704,
                  "nodeType": "ExpressionStatement",
                  "src": "10234:42:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 42708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10293:18:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 42705,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "10282:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 42707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "10282:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 42709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10282:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42710,
                  "nodeType": "ExpressionStatement",
                  "src": "10282:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42715,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "10374:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 42714,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "10372:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 42716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10372:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 42717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10380:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 42711,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "10358:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 42713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "10358:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 42718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10358:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42719,
                  "nodeType": "ExpressionStatement",
                  "src": "10358:30:73"
                },
                {
                  "assignments": [42721, 42723, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42721,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "10400:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42749,
                      "src": "10395:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42720,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10395:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 42723,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "10410:4:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42749,
                      "src": "10405:9:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42722,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10405:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 42736,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42727,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "10447:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42726,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "10445:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10445:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 42730,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "10462:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42729,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "10460:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10460:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "312e31",
                        "id": 42732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10476:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        "value": "1.1"
                      },
                      {
                        "hexValue": "32",
                        "id": 42733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10493:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 42734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10508:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 42724,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "10422:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 42725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3435,
                      "src": "10422:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 42735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10422:97:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10394:125:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42738,
                        "name": "got",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42721,
                        "src": "10534:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 42739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10539:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "54616b657220646964206e6f742067657420656e6f756768",
                        "id": 42740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10548:26:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        },
                        "value": "Taker did not get enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        }
                      ],
                      "id": 42737,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "10525:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 42741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10525:50:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42742,
                  "nodeType": "ExpressionStatement",
                  "src": "10525:50:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42744,
                        "name": "gave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42723,
                        "src": "10590:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 42745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10596:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "54616b657220646964206e6f742067657420656e6f756768",
                        "id": 42746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10605:26:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        },
                        "value": "Taker did not get enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        }
                      ],
                      "id": 42743,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "10581:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 42747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10581:51:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42748,
                  "nodeType": "ExpressionStatement",
                  "src": "10581:51:73"
                }
              ]
            },
            "functionSelector": "9364ce1c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_mo_fillGives",
            "nameLocation": "10153:17:73",
            "parameters": {
              "id": 42685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10170:2:73"
            },
            "returnParameters": {
              "id": 42686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10180:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42816,
            "nodeType": "FunctionDefinition",
            "src": "10641:429:73",
            "body": {
              "id": 42815,
              "nodeType": "Block",
              "src": "10698:372:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 42756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10717:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 42757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10726:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 42758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10735:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 42759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10744:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 42753,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "10704:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 42755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "10704:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 42760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10704:42:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42761,
                  "nodeType": "ExpressionStatement",
                  "src": "10704:42:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 42765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10765:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 42766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10774:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 42767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10783:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 42768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10792:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 42762,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "10752:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 42764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "10752:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 42769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10752:42:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42770,
                  "nodeType": "ExpressionStatement",
                  "src": "10752:42:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 42774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10813:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 42775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10822:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 42776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10831:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 42777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10840:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 42771,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "10800:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 42773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "10800:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 42778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10800:42:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42779,
                  "nodeType": "ExpressionStatement",
                  "src": "10800:42:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 42783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10859:18:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 42780,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "10848:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 42782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "10848:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 42784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10848:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42785,
                  "nodeType": "ExpressionStatement",
                  "src": "10848:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42790,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "10940:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 42789,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "10938:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 42791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10938:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 42792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10946:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 42786,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "10924:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 42788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "10924:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 42793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10924:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42794,
                  "nodeType": "ExpressionStatement",
                  "src": "10924:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f74616b65725472616e736665724661696c",
                        "id": 42798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10976:23:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e79742e7ced315361b2f8080130843f008a02f29a4f8e0d2c2ca5086b46bd5",
                          "typeString": "literal_string \"mgv/takerTransferFail\""
                        },
                        "value": "mgv/takerTransferFail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_37e79742e7ced315361b2f8080130843f008a02f29a4f8e0d2c2ca5086b46bd5",
                          "typeString": "literal_string \"mgv/takerTransferFail\""
                        }
                      ],
                      "expression": {
                        "id": 42795,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "10960:2:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 42797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "10960:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 42799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10960:40:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42800,
                  "nodeType": "ExpressionStatement",
                  "src": "10960:40:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42805,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "11024:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42804,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "11022:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11022:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 42808,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "11033:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42807,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "11031:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11031:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 42810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11041:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "33",
                        "id": 42811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11050:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        "value": "3"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 42812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11059:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 42801,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "11006:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 42803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3435,
                      "src": "11006:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 42813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11006:59:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 42814,
                  "nodeType": "ExpressionStatement",
                  "src": "11006:59:73"
                }
              ]
            },
            "functionSelector": "4cd73ad6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_mo_fillGivesAll_no_approved_fails",
            "nameLocation": "10650:38:73",
            "parameters": {
              "id": 42751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10688:2:73"
            },
            "returnParameters": {
              "id": 42752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10698:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42891,
            "nodeType": "FunctionDefinition",
            "src": "11074:551:73",
            "body": {
              "id": 42890,
              "nodeType": "Block",
              "src": "11122:503:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 42822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11141:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 42823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11150:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 42824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11159:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 42825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11168:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 42819,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "11128:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 42821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "11128:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 42826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11128:42:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42827,
                  "nodeType": "ExpressionStatement",
                  "src": "11128:42:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 42831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11189:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 42832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11198:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 42833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11207:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 42834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11216:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 42828,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "11176:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 42830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "11176:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 42835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11176:42:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42836,
                  "nodeType": "ExpressionStatement",
                  "src": "11176:42:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 42840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11237:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 42841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11246:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 42842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11255:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 42843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11264:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 42837,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "11224:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 42839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "11224:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 42844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11224:42:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42845,
                  "nodeType": "ExpressionStatement",
                  "src": "11224:42:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 42849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11283:18:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 42846,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "11272:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 42848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "11272:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 42850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11272:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42851,
                  "nodeType": "ExpressionStatement",
                  "src": "11272:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42856,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "11364:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 42855,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "11362:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 42857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11362:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 42858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11370:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 42852,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "11348:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 42854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "11348:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 42859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11348:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42860,
                  "nodeType": "ExpressionStatement",
                  "src": "11348:30:73"
                },
                {
                  "assignments": [42862, 42864, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42862,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "11390:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42890,
                      "src": "11385:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42861,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11385:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 42864,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "11400:4:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 42890,
                      "src": "11395:9:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42863,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11395:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 42877,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42868,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "11437:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42867,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "11435:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11435:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 42871,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "11452:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42870,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "11450:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11450:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 42873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11466:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "33",
                        "id": 42874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11481:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        "value": "3"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 42875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11496:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 42865,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "11412:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 42866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3435,
                      "src": "11412:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 42876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11412:95:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11384:123:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42879,
                        "name": "got",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42862,
                        "src": "11522:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 42880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11527:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        "value": "3"
                      },
                      {
                        "hexValue": "54616b657220646964206e6f742067657420656e6f756768",
                        "id": 42881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11536:26:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        },
                        "value": "Taker did not get enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        }
                      ],
                      "id": 42878,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "11513:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 42882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11513:50:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42883,
                  "nodeType": "ExpressionStatement",
                  "src": "11513:50:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42885,
                        "name": "gave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42864,
                        "src": "11578:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 42886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11584:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        "value": "3"
                      },
                      {
                        "hexValue": "54616b657220646964206e6f742067657420656e6f756768",
                        "id": 42887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11593:26:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        },
                        "value": "Taker did not get enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bf3522d7c08a62c0bf45a33c447d655b4540aa7f0adb45ff19a7802ba3d4cd8",
                          "typeString": "literal_string \"Taker did not get enough\""
                        }
                      ],
                      "id": 42884,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "11569:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 42888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11569:51:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42889,
                  "nodeType": "ExpressionStatement",
                  "src": "11569:51:73"
                }
              ]
            },
            "functionSelector": "8a0dc9e8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_mo_fillGivesAll_succeeds",
            "nameLocation": "11083:29:73",
            "parameters": {
              "id": 42817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11112:2:73"
            },
            "returnParameters": {
              "id": 42818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11122:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43050,
            "nodeType": "FunctionDefinition",
            "src": "11629:1217:73",
            "body": {
              "id": 43049,
              "nodeType": "Block",
              "src": "11689:1157:73",
              "statements": [
                {
                  "assignments": [42895],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42895,
                      "mutability": "mutable",
                      "name": "mkr_provision",
                      "nameLocation": "11700:13:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43049,
                      "src": "11695:18:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42894,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11695:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42905,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42898,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "11731:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42897,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "11729:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11729:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 42901,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "11740:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42900,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "11738:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11738:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 42903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11748:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        }
                      ],
                      "id": 42896,
                      "name": "getProvision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [46516, 46583],
                      "referencedDeclaration": 46516,
                      "src": "11716:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 42904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11716:40:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11695:61:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42910,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "11778:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 42909,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "11776:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 42911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11776:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 42912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11784:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 42906,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "11762:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 42908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "11762:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 42913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11762:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42914,
                  "nodeType": "ExpressionStatement",
                  "src": "11762:30:73"
                },
                {
                  "assignments": [42916],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42916,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "11803:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43049,
                      "src": "11798:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42915,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11798:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42924,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 42919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11828:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 42920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11837:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 42921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11846:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 42922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11855:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 42917,
                        "name": "refusemkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41290,
                        "src": "11809:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 42918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "11809:18:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 42923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11809:48:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11798:59:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f6d616b65725472616e736665724661696c",
                        "id": 42928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11874:23:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_191b6fad9b9873ed5d4dc376f08b9d6dfaeea88da2bbf7929b8c1cd9f5c22f29",
                          "typeString": "literal_string \"mgv/makerTransferFail\""
                        },
                        "value": "mgv/makerTransferFail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_191b6fad9b9873ed5d4dc376f08b9d6dfaeea88da2bbf7929b8c1cd9f5c22f29",
                          "typeString": "literal_string \"mgv/makerTransferFail\""
                        }
                      ],
                      "expression": {
                        "id": 42925,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "11863:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 42927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "11863:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 42929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11863:35:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42930,
                  "nodeType": "ExpressionStatement",
                  "src": "11863:35:73"
                },
                {
                  "assignments": [42932],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42932,
                      "mutability": "mutable",
                      "name": "beforeQuote",
                      "nameLocation": "11943:11:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43049,
                      "src": "11938:16:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42931,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11938:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42939,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42936,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11975:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 42935,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "11973:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 42937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11973:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 42933,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "11957:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 42934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50187,
                      "src": "11957:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 42938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11957:24:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11938:43:73"
                },
                {
                  "assignments": [42941],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42941,
                      "mutability": "mutable",
                      "name": "beforeWei",
                      "nameLocation": "11992:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43049,
                      "src": "11987:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42940,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11987:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42946,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 42943,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "12006:4:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                            "typeString": "contract TakerOperationsTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                            "typeString": "contract TakerOperationsTest"
                          }
                        ],
                        "id": 42942,
                        "name": "$",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          46990, 47007, 47024, 47041, 47058
                        ],
                        "referencedDeclaration": 47041,
                        "src": "12004:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                          "typeString": "function (contract Test) pure returns (address payable)"
                        }
                      },
                      "id": 42944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12004:7:73",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 42945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "12004:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11987:32:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42949,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "12039:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 42948,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "12037:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 42950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12037:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 42947,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "12026:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 42951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12026:18:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42952,
                  "nodeType": "ExpressionStatement",
                  "src": "12026:18:73"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42955,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "12074:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42954,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "12072:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12072:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 42958,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "12089:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42957,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "12087:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12087:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 42960,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42916,
                        "src": "12103:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 42962,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12116:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 42961,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "12114:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 42963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12114:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 42964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12129:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 42965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12144:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "6d67762f6d616b65725472616e736665724661696c",
                        "id": 42966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12159:23:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_191b6fad9b9873ed5d4dc376f08b9d6dfaeea88da2bbf7929b8c1cd9f5c22f29",
                          "typeString": "literal_string \"mgv/makerTransferFail\""
                        },
                        "value": "mgv/makerTransferFail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_191b6fad9b9873ed5d4dc376f08b9d6dfaeea88da2bbf7929b8c1cd9f5c22f29",
                          "typeString": "literal_string \"mgv/makerTransferFail\""
                        }
                      ],
                      "id": 42953,
                      "name": "OfferFail",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1861,
                      "src": "12055:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 42967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12055:133:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42968,
                  "nodeType": "EmitStatement",
                  "src": "12050:138:73"
                },
                {
                  "assignments": [42970, 42972, 42974, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42970,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "12200:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43049,
                      "src": "12195:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42969,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12195:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 42972,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "12216:8:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43049,
                      "src": "12211:13:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42971,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12211:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 42974,
                      "mutability": "mutable",
                      "name": "takerGave",
                      "nameLocation": "12231:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43049,
                      "src": "12226:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42973,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12226:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 42992,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42978,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "12268:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42977,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "12266:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12266:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 42981,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "12283:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 42980,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "12281:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 42982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12281:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 42984,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42916,
                                "src": "12311:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 42985,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12316:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 42986,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12325:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 42987,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12334:7:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 42988,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "12310:32:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 42983,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "12297:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 42989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12297:46:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 42990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12351:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 42975,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "12248:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 42976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "12248:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 42991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12248:113:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12194:167:73"
                },
                {
                  "assignments": [42994],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42994,
                      "mutability": "mutable",
                      "name": "penalty",
                      "nameLocation": "12372:7:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43049,
                      "src": "12367:12:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42993,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12367:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43001,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 43000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 42996,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12384:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 42995,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "12382:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 42997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12382:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 42998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "12382:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 42999,
                      "name": "beforeWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42941,
                      "src": "12400:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12382:27:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12367:42:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 43003,
                          "name": "penalty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42994,
                          "src": "12426:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 43004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12436:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12426:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54616b65722073686f756c642068617665206265656e20636f6d70656e7361746564",
                        "id": 43006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12439:36:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c1e26479ef655c2c9ae28186b95922acd336e19512244843ed81c8534764da1",
                          "typeString": "literal_string \"Taker should have been compensated\""
                        },
                        "value": "Taker should have been compensated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c1e26479ef655c2c9ae28186b95922acd336e19512244843ed81c8534764da1",
                          "typeString": "literal_string \"Taker should have been compensated\""
                        }
                      ],
                      "id": 43002,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "12415:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 43007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12415:61:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43008,
                  "nodeType": "ExpressionStatement",
                  "src": "12415:61:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 43010,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42970,
                          "src": "12493:9:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 43011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12506:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12493:14:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206661696c",
                        "id": 43013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12509:19:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        },
                        "value": "Snipe should fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        }
                      ],
                      "id": 43009,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "12482:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 43014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12482:47:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43015,
                  "nodeType": "ExpressionStatement",
                  "src": "12482:47:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 43023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 43019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 43017,
                            "name": "takerGot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42972,
                            "src": "12553:8:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 43018,
                            "name": "takerGave",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42974,
                            "src": "12565:9:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12553:21:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 43022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 43020,
                            "name": "takerGave",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42974,
                            "src": "12578:9:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 43021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12591:1:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "12578:14:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12553:39:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374207472616e73616374696f6e20696e666f726d6174696f6e",
                        "id": 43024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12600:35:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_474492d861a15ab56868c00e3990c04766fbf81dbb246f586ce487fa0525e4d8",
                          "typeString": "literal_string \"Incorrect transaction information\""
                        },
                        "value": "Incorrect transaction information"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_474492d861a15ab56868c00e3990c04766fbf81dbb246f586ce487fa0525e4d8",
                          "typeString": "literal_string \"Incorrect transaction information\""
                        }
                      ],
                      "id": 43016,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "12535:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 43025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12535:106:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43026,
                  "nodeType": "ExpressionStatement",
                  "src": "12535:106:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 43028,
                          "name": "beforeQuote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42932,
                          "src": "12665:11:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 43032,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "12698:4:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                ],
                                "id": 43031,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47041,
                                "src": "12696:1:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                                  "typeString": "function (contract Test) pure returns (address payable)"
                                }
                              },
                              "id": 43033,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12696:7:73",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 43029,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45881,
                              "src": "12680:5:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 43030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50187,
                            "src": "12680:15:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 43034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12680:24:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12665:39:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65722062616c616e63652073686f756c64206e6f74206265206c6f776572206966206d616b657220646f65736e277420706179206261636b",
                        "id": 43036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12712:61:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f593bf1856ba88f47f7d8630f4307ff6b62c3ea3cb4a47df87fc0b223de4f0be",
                          "typeString": "literal_string \"taker balance should not be lower if maker doesn't pay back\""
                        },
                        "value": "taker balance should not be lower if maker doesn't pay back"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f593bf1856ba88f47f7d8630f4307ff6b62c3ea3cb4a47df87fc0b223de4f0be",
                          "typeString": "literal_string \"taker balance should not be lower if maker doesn't pay back\""
                        }
                      ],
                      "id": 43027,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "12647:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 43037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12647:132:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43038,
                  "nodeType": "ExpressionStatement",
                  "src": "12647:132:73"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43042,
                            "name": "refusemkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41290,
                            "src": "12805:9:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 43041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12797:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43040,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12797:7:73",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12797:18:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 43044,
                          "name": "mkr_provision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42895,
                          "src": "12817:13:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 43045,
                          "name": "penalty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42994,
                          "src": "12833:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12817:23:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 43039,
                      "name": "Credit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1747,
                      "src": "12790:6:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 43047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12790:51:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43048,
                  "nodeType": "EmitStatement",
                  "src": "12785:56:73"
                }
              ]
            },
            "functionSelector": "13599121",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_taker_reimbursed_if_maker_doesnt_pay",
            "nameLocation": "11638:41:73",
            "parameters": {
              "id": 42892,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11679:2:73"
            },
            "returnParameters": {
              "id": 42893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11689:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43102,
            "nodeType": "FunctionDefinition",
            "src": "12850:363:73",
            "body": {
              "id": 43101,
              "nodeType": "Block",
              "src": "12914:299:73",
              "statements": [
                {
                  "assignments": [43054],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43054,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "12925:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43101,
                      "src": "12920:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43053,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12920:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43062,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 43057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12950:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 43058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12959:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 43059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12968:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 43060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12976:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 43055,
                        "name": "refusemkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41290,
                        "src": "12931:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 43056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "12931:18:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 43061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12931:47:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12920:58:73"
                },
                {
                  "expression": {
                    "id": 43065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 43063,
                      "name": "refuseReceive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41296,
                      "src": "12984:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 43064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13000:4:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "12984:20:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43066,
                  "nodeType": "ExpressionStatement",
                  "src": "12984:20:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43071,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "13026:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 43070,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "13024:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 43072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13024:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 43073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13032:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 43067,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "13010:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 43069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "13010:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 43074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13010:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43075,
                  "nodeType": "ExpressionStatement",
                  "src": "13010:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f73656e6450656e616c74795265766572746564",
                        "id": 43079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13063:25:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f2bb42971393486c52b28276890a994f320f2a5bc1decd05db9533332c8bd7b",
                          "typeString": "literal_string \"mgv/sendPenaltyReverted\""
                        },
                        "value": "mgv/sendPenaltyReverted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7f2bb42971393486c52b28276890a994f320f2a5bc1decd05db9533332c8bd7b",
                          "typeString": "literal_string \"mgv/sendPenaltyReverted\""
                        }
                      ],
                      "expression": {
                        "id": 43076,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "13047:2:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 43078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "13047:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 43080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13047:42:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43081,
                  "nodeType": "ExpressionStatement",
                  "src": "13047:42:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43086,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "13115:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43085,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "13113:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13113:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 43089,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "13130:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43088,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "13128:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13128:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 43092,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43054,
                                "src": "13158:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 43093,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13163:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 43094,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13172:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 43095,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13181:7:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 43096,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "13157:32:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 43091,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "13144:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 43097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13144:46:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 43098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13198:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 43082,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "13095:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 43084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "13095:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 43099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13095:113:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 43100,
                  "nodeType": "ExpressionStatement",
                  "src": "13095:113:73"
                }
              ]
            },
            "functionSelector": "d9a725cf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_taker_reverts_on_penalty_triggers_revert",
            "nameLocation": "12859:45:73",
            "parameters": {
              "id": 43051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12904:2:73"
            },
            "returnParameters": {
              "id": 43052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12914:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43270,
            "nodeType": "FunctionDefinition",
            "src": "13217:1254:73",
            "body": {
              "id": 43269,
              "nodeType": "Block",
              "src": "13290:1181:73",
              "statements": [
                {
                  "assignments": [43106],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43106,
                      "mutability": "mutable",
                      "name": "mkr_provision",
                      "nameLocation": "13301:13:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43269,
                      "src": "13296:18:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43105,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13296:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43116,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43109,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "13332:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43108,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "13330:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13330:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 43112,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "13341:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43111,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "13339:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13339:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 43114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13349:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        }
                      ],
                      "id": 43107,
                      "name": "getProvision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [46516, 46583],
                      "referencedDeclaration": 46516,
                      "src": "13317:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 43115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13317:40:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13296:61:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43121,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "13379:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 43120,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "13377:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 43122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13377:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 43123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13385:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 43117,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "13363:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 43119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "13363:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 43124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13363:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43125,
                  "nodeType": "ExpressionStatement",
                  "src": "13363:30:73"
                },
                {
                  "assignments": [43127],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43127,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "13404:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43269,
                      "src": "13399:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43126,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13399:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43135,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 43130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13423:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 43131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13432:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 43132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13441:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 43133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13450:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 43128,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "13410:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 43129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "13410:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 43134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13410:42:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13399:53:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f6d616b65725472616e736665724661696c",
                        "id": 43139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13469:23:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_191b6fad9b9873ed5d4dc376f08b9d6dfaeea88da2bbf7929b8c1cd9f5c22f29",
                          "typeString": "literal_string \"mgv/makerTransferFail\""
                        },
                        "value": "mgv/makerTransferFail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_191b6fad9b9873ed5d4dc376f08b9d6dfaeea88da2bbf7929b8c1cd9f5c22f29",
                          "typeString": "literal_string \"mgv/makerTransferFail\""
                        }
                      ],
                      "expression": {
                        "id": 43136,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "13458:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 43138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "13458:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 43140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13458:35:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43141,
                  "nodeType": "ExpressionStatement",
                  "src": "13458:35:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43147,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41287,
                            "src": "13558:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 43146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13550:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43145,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13550:7:73",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13550:12:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 43142,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "13534:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 43144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "blacklists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52036,
                      "src": "13534:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 43149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13534:29:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43150,
                  "nodeType": "ExpressionStatement",
                  "src": "13534:29:73"
                },
                {
                  "assignments": [43152],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43152,
                      "mutability": "mutable",
                      "name": "beforeQuote",
                      "nameLocation": "13574:11:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43269,
                      "src": "13569:16:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43151,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13569:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43159,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43156,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13606:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 43155,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "13604:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 43157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13604:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 43153,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "13588:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 43154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50187,
                      "src": "13588:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 43158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13588:24:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13569:43:73"
                },
                {
                  "assignments": [43161],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43161,
                      "mutability": "mutable",
                      "name": "beforeWei",
                      "nameLocation": "13623:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43269,
                      "src": "13618:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43160,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13618:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43166,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 43163,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "13637:4:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                            "typeString": "contract TakerOperationsTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                            "typeString": "contract TakerOperationsTest"
                          }
                        ],
                        "id": 43162,
                        "name": "$",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          46990, 47007, 47024, 47041, 47058
                        ],
                        "referencedDeclaration": 47041,
                        "src": "13635:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                          "typeString": "function (contract Test) pure returns (address payable)"
                        }
                      },
                      "id": 43164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13635:7:73",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 43165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "13635:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13618:32:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43169,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "13670:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 43168,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "13668:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 43170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13668:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 43167,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "13657:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 43171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13657:18:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43172,
                  "nodeType": "ExpressionStatement",
                  "src": "13657:18:73"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43175,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "13705:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43174,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "13703:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13703:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 43178,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "13720:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43177,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "13718:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13718:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 43180,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43127,
                        "src": "13734:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 43182,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13747:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 43181,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "13745:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 43183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13745:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 43184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13760:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 43185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13775:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "6d67762f6d616b65725472616e736665724661696c",
                        "id": 43186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13790:23:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_191b6fad9b9873ed5d4dc376f08b9d6dfaeea88da2bbf7929b8c1cd9f5c22f29",
                          "typeString": "literal_string \"mgv/makerTransferFail\""
                        },
                        "value": "mgv/makerTransferFail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_191b6fad9b9873ed5d4dc376f08b9d6dfaeea88da2bbf7929b8c1cd9f5c22f29",
                          "typeString": "literal_string \"mgv/makerTransferFail\""
                        }
                      ],
                      "id": 43173,
                      "name": "OfferFail",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1861,
                      "src": "13686:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 43187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13686:133:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43188,
                  "nodeType": "EmitStatement",
                  "src": "13681:138:73"
                },
                {
                  "assignments": [43190, 43192, 43194, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43190,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "13831:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43269,
                      "src": "13826:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43189,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13826:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 43192,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "13847:8:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43269,
                      "src": "13842:13:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43191,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13842:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 43194,
                      "mutability": "mutable",
                      "name": "takerGave",
                      "nameLocation": "13862:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43269,
                      "src": "13857:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43193,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13857:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 43212,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43198,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "13899:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43197,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "13897:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13897:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 43201,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "13914:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43200,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "13912:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13912:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 43204,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43127,
                                "src": "13942:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 43205,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13947:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 43206,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13956:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 43207,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13965:7:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 43208,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "13941:32:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 43203,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "13928:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 43209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13928:46:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 43210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13982:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 43195,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "13879:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 43196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "13879:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 43211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13879:113:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13825:167:73"
                },
                {
                  "assignments": [43214],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43214,
                      "mutability": "mutable",
                      "name": "penalty",
                      "nameLocation": "14003:7:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43269,
                      "src": "13998:12:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43213,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13998:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43221,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 43220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 43216,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14015:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 43215,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "14013:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 43217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14013:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 43218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "14013:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 43219,
                      "name": "beforeWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43161,
                      "src": "14031:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14013:27:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13998:42:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 43223,
                          "name": "penalty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43214,
                          "src": "14057:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 43224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14067:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14057:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54616b65722073686f756c642068617665206265656e20636f6d70656e7361746564",
                        "id": 43226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14070:36:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c1e26479ef655c2c9ae28186b95922acd336e19512244843ed81c8534764da1",
                          "typeString": "literal_string \"Taker should have been compensated\""
                        },
                        "value": "Taker should have been compensated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c1e26479ef655c2c9ae28186b95922acd336e19512244843ed81c8534764da1",
                          "typeString": "literal_string \"Taker should have been compensated\""
                        }
                      ],
                      "id": 43222,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "14046:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 43227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14046:61:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43228,
                  "nodeType": "ExpressionStatement",
                  "src": "14046:61:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 43230,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43190,
                          "src": "14124:9:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 43231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14137:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14124:14:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206661696c",
                        "id": 43233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14140:19:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        },
                        "value": "Snipe should fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        }
                      ],
                      "id": 43229,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "14113:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 43234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14113:47:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43235,
                  "nodeType": "ExpressionStatement",
                  "src": "14113:47:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 43243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 43239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 43237,
                            "name": "takerGot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43192,
                            "src": "14184:8:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 43238,
                            "name": "takerGave",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43194,
                            "src": "14196:9:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14184:21:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 43242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 43240,
                            "name": "takerGave",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43194,
                            "src": "14209:9:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 43241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14222:1:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14209:14:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "14184:39:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374207472616e73616374696f6e20696e666f726d6174696f6e",
                        "id": 43244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14231:35:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_474492d861a15ab56868c00e3990c04766fbf81dbb246f586ce487fa0525e4d8",
                          "typeString": "literal_string \"Incorrect transaction information\""
                        },
                        "value": "Incorrect transaction information"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_474492d861a15ab56868c00e3990c04766fbf81dbb246f586ce487fa0525e4d8",
                          "typeString": "literal_string \"Incorrect transaction information\""
                        }
                      ],
                      "id": 43236,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "14166:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 43245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14166:106:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43246,
                  "nodeType": "ExpressionStatement",
                  "src": "14166:106:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 43248,
                          "name": "beforeQuote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43152,
                          "src": "14296:11:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 43252,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "14329:4:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                ],
                                "id": 43251,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47041,
                                "src": "14327:1:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                                  "typeString": "function (contract Test) pure returns (address payable)"
                                }
                              },
                              "id": 43253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14327:7:73",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 43249,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45881,
                              "src": "14311:5:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 43250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50187,
                            "src": "14311:15:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 43254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14311:24:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14296:39:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65722062616c616e63652073686f756c64206e6f74206265206c6f776572206966206d616b657220646f65736e277420706179206261636b",
                        "id": 43256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14343:61:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f593bf1856ba88f47f7d8630f4307ff6b62c3ea3cb4a47df87fc0b223de4f0be",
                          "typeString": "literal_string \"taker balance should not be lower if maker doesn't pay back\""
                        },
                        "value": "taker balance should not be lower if maker doesn't pay back"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f593bf1856ba88f47f7d8630f4307ff6b62c3ea3cb4a47df87fc0b223de4f0be",
                          "typeString": "literal_string \"taker balance should not be lower if maker doesn't pay back\""
                        }
                      ],
                      "id": 43247,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "14278:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 43257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14278:132:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43258,
                  "nodeType": "ExpressionStatement",
                  "src": "14278:132:73"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43262,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41287,
                            "src": "14436:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 43261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14428:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43260,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14428:7:73",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14428:12:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 43264,
                          "name": "mkr_provision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43106,
                          "src": "14442:13:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 43265,
                          "name": "penalty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43214,
                          "src": "14458:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14442:23:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 43259,
                      "name": "Credit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1747,
                      "src": "14421:6:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 43267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14421:45:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43268,
                  "nodeType": "EmitStatement",
                  "src": "14416:50:73"
                }
              ]
            },
            "functionSelector": "374b46f5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_taker_reimbursed_if_maker_is_blacklisted_for_base",
            "nameLocation": "13226:54:73",
            "parameters": {
              "id": 43103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13280:2:73"
            },
            "returnParameters": {
              "id": 43104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13290:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43438,
            "nodeType": "FunctionDefinition",
            "src": "14475:1255:73",
            "body": {
              "id": 43437,
              "nodeType": "Block",
              "src": "14549:1181:73",
              "statements": [
                {
                  "assignments": [43274],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43274,
                      "mutability": "mutable",
                      "name": "mkr_provision",
                      "nameLocation": "14560:13:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43437,
                      "src": "14555:18:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43273,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14555:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43284,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43277,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "14591:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43276,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "14589:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14589:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 43280,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "14600:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43279,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "14598:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14598:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 43282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14608:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        }
                      ],
                      "id": 43275,
                      "name": "getProvision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [46516, 46583],
                      "referencedDeclaration": 46516,
                      "src": "14576:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 43283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14576:40:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14555:61:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43289,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "14638:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 43288,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "14636:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 43290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14636:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 43291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14644:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 43285,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "14622:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 43287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "14622:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 43292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14622:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43293,
                  "nodeType": "ExpressionStatement",
                  "src": "14622:30:73"
                },
                {
                  "assignments": [43295],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43295,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "14663:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43437,
                      "src": "14658:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43294,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14658:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43303,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 43298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14682:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 43299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14691:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 43300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14700:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 43301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14709:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 43296,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "14669:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 43297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "14669:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 43302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14669:42:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14658:53:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f6d616b6572526563656976654661696c",
                        "id": 43307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14728:22:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbd89f5b1a5f8a32f7c7be1300b881a9aaf63d21382e0a99a8b4479b834ffb83",
                          "typeString": "literal_string \"mgv/makerReceiveFail\""
                        },
                        "value": "mgv/makerReceiveFail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_dbd89f5b1a5f8a32f7c7be1300b881a9aaf63d21382e0a99a8b4479b834ffb83",
                          "typeString": "literal_string \"mgv/makerReceiveFail\""
                        }
                      ],
                      "expression": {
                        "id": 43304,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "14717:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 43306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "14717:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 43308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14717:34:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43309,
                  "nodeType": "ExpressionStatement",
                  "src": "14717:34:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43315,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41287,
                            "src": "14817:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 43314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14809:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43313,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14809:7:73",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14809:12:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 43310,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "14792:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 43312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "blacklists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52036,
                      "src": "14792:16:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 43317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14792:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43318,
                  "nodeType": "ExpressionStatement",
                  "src": "14792:30:73"
                },
                {
                  "assignments": [43320],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43320,
                      "mutability": "mutable",
                      "name": "beforeQuote",
                      "nameLocation": "14833:11:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43437,
                      "src": "14828:16:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43319,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14828:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43327,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43324,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14865:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 43323,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "14863:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 43325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14863:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 43321,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "14847:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 43322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50187,
                      "src": "14847:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 43326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14847:24:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14828:43:73"
                },
                {
                  "assignments": [43329],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43329,
                      "mutability": "mutable",
                      "name": "beforeWei",
                      "nameLocation": "14882:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43437,
                      "src": "14877:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43328,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14877:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43334,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 43331,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "14896:4:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                            "typeString": "contract TakerOperationsTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                            "typeString": "contract TakerOperationsTest"
                          }
                        ],
                        "id": 43330,
                        "name": "$",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          46990, 47007, 47024, 47041, 47058
                        ],
                        "referencedDeclaration": 47041,
                        "src": "14894:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                          "typeString": "function (contract Test) pure returns (address payable)"
                        }
                      },
                      "id": 43332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14894:7:73",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 43333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "14894:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14877:32:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43337,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "14929:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 43336,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "14927:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 43338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14927:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 43335,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "14916:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 43339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14916:18:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43340,
                  "nodeType": "ExpressionStatement",
                  "src": "14916:18:73"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43343,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "14965:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43342,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "14963:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14963:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 43346,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "14980:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43345,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "14978:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14978:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 43348,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43295,
                        "src": "14994:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 43350,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "15007:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 43349,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "15005:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 43351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15005:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 43352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15020:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 43353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15035:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "6d67762f6d616b6572526563656976654661696c",
                        "id": 43354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15050:22:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbd89f5b1a5f8a32f7c7be1300b881a9aaf63d21382e0a99a8b4479b834ffb83",
                          "typeString": "literal_string \"mgv/makerReceiveFail\""
                        },
                        "value": "mgv/makerReceiveFail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dbd89f5b1a5f8a32f7c7be1300b881a9aaf63d21382e0a99a8b4479b834ffb83",
                          "typeString": "literal_string \"mgv/makerReceiveFail\""
                        }
                      ],
                      "id": 43341,
                      "name": "OfferFail",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1861,
                      "src": "14946:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 43355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14946:132:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43356,
                  "nodeType": "EmitStatement",
                  "src": "14941:137:73"
                },
                {
                  "assignments": [43358, 43360, 43362, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43358,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "15090:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43437,
                      "src": "15085:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43357,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15085:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 43360,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "15106:8:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43437,
                      "src": "15101:13:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43359,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15101:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 43362,
                      "mutability": "mutable",
                      "name": "takerGave",
                      "nameLocation": "15121:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43437,
                      "src": "15116:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43361,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15116:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 43380,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43366,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "15158:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43365,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "15156:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15156:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 43369,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "15173:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43368,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "15171:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15171:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 43372,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43295,
                                "src": "15201:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 43373,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15206:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 43374,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15215:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 43375,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15224:7:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 43376,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "15200:32:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 43371,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "15187:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 43377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15187:46:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 43378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15241:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 43363,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "15138:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 43364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "15138:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 43379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15138:113:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15084:167:73"
                },
                {
                  "assignments": [43382],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43382,
                      "mutability": "mutable",
                      "name": "penalty",
                      "nameLocation": "15262:7:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43437,
                      "src": "15257:12:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43381,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15257:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43389,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 43388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 43384,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "15274:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 43383,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "15272:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 43385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15272:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 43386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "15272:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 43387,
                      "name": "beforeWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43329,
                      "src": "15290:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15272:27:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15257:42:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 43391,
                          "name": "penalty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43382,
                          "src": "15316:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 43392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15326:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "15316:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54616b65722073686f756c642068617665206265656e20636f6d70656e7361746564",
                        "id": 43394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15329:36:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c1e26479ef655c2c9ae28186b95922acd336e19512244843ed81c8534764da1",
                          "typeString": "literal_string \"Taker should have been compensated\""
                        },
                        "value": "Taker should have been compensated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c1e26479ef655c2c9ae28186b95922acd336e19512244843ed81c8534764da1",
                          "typeString": "literal_string \"Taker should have been compensated\""
                        }
                      ],
                      "id": 43390,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "15305:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 43395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15305:61:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43396,
                  "nodeType": "ExpressionStatement",
                  "src": "15305:61:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 43398,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43358,
                          "src": "15383:9:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 43399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15396:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "15383:14:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206661696c",
                        "id": 43401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15399:19:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        },
                        "value": "Snipe should fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        }
                      ],
                      "id": 43397,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "15372:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 43402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15372:47:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43403,
                  "nodeType": "ExpressionStatement",
                  "src": "15372:47:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 43411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 43407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 43405,
                            "name": "takerGot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43360,
                            "src": "15443:8:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 43406,
                            "name": "takerGave",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43362,
                            "src": "15455:9:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15443:21:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 43410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 43408,
                            "name": "takerGave",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43362,
                            "src": "15468:9:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 43409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15481:1:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "15468:14:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "15443:39:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374207472616e73616374696f6e20696e666f726d6174696f6e",
                        "id": 43412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15490:35:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_474492d861a15ab56868c00e3990c04766fbf81dbb246f586ce487fa0525e4d8",
                          "typeString": "literal_string \"Incorrect transaction information\""
                        },
                        "value": "Incorrect transaction information"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_474492d861a15ab56868c00e3990c04766fbf81dbb246f586ce487fa0525e4d8",
                          "typeString": "literal_string \"Incorrect transaction information\""
                        }
                      ],
                      "id": 43404,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "15425:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 43413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15425:106:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43414,
                  "nodeType": "ExpressionStatement",
                  "src": "15425:106:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 43416,
                          "name": "beforeQuote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43320,
                          "src": "15555:11:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 43420,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "15588:4:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                ],
                                "id": 43419,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47041,
                                "src": "15586:1:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                                  "typeString": "function (contract Test) pure returns (address payable)"
                                }
                              },
                              "id": 43421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15586:7:73",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 43417,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45881,
                              "src": "15570:5:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 43418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50187,
                            "src": "15570:15:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 43422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15570:24:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15555:39:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65722062616c616e63652073686f756c64206e6f74206265206c6f776572206966206d616b657220646f65736e277420706179206261636b",
                        "id": 43424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15602:61:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f593bf1856ba88f47f7d8630f4307ff6b62c3ea3cb4a47df87fc0b223de4f0be",
                          "typeString": "literal_string \"taker balance should not be lower if maker doesn't pay back\""
                        },
                        "value": "taker balance should not be lower if maker doesn't pay back"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f593bf1856ba88f47f7d8630f4307ff6b62c3ea3cb4a47df87fc0b223de4f0be",
                          "typeString": "literal_string \"taker balance should not be lower if maker doesn't pay back\""
                        }
                      ],
                      "id": 43415,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "15537:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 43425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15537:132:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43426,
                  "nodeType": "ExpressionStatement",
                  "src": "15537:132:73"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43430,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41287,
                            "src": "15695:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 43429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15687:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43428,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15687:7:73",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15687:12:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 43432,
                          "name": "mkr_provision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43274,
                          "src": "15701:13:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 43433,
                          "name": "penalty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43382,
                          "src": "15717:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15701:23:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 43427,
                      "name": "Credit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1747,
                      "src": "15680:6:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 43435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15680:45:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43436,
                  "nodeType": "EmitStatement",
                  "src": "15675:50:73"
                }
              ]
            },
            "functionSelector": "00c4655e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_taker_reimbursed_if_maker_is_blacklisted_for_quote",
            "nameLocation": "14484:55:73",
            "parameters": {
              "id": 43271,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14539:2:73"
            },
            "returnParameters": {
              "id": 43272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14549:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43520,
            "nodeType": "FunctionDefinition",
            "src": "15734:589:73",
            "body": {
              "id": 43519,
              "nodeType": "Block",
              "src": "15786:537:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43445,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "15808:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 43444,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "15806:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 43446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15806:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 43447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15814:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 43441,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "15792:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 43443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "15792:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 43448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15792:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43449,
                  "nodeType": "ExpressionStatement",
                  "src": "15792:30:73"
                },
                {
                  "assignments": [43451],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43451,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "15833:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43519,
                      "src": "15828:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43450,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15828:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43459,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 43454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15856:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 43455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15865:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 43456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15874:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 43457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15882:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 43452,
                        "name": "failmkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41293,
                        "src": "15839:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 43453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "15839:16:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 43458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15839:45:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15828:56:73"
                },
                {
                  "assignments": [43461],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43461,
                      "mutability": "mutable",
                      "name": "beforeWei",
                      "nameLocation": "15895:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43519,
                      "src": "15890:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43460,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15890:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43466,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 43463,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "15909:4:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                            "typeString": "contract TakerOperationsTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                            "typeString": "contract TakerOperationsTest"
                          }
                        ],
                        "id": 43462,
                        "name": "$",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          46990, 47007, 47024, 47041, 47058
                        ],
                        "referencedDeclaration": 47041,
                        "src": "15907:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                          "typeString": "function (contract Test) pure returns (address payable)"
                        }
                      },
                      "id": 43464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15907:7:73",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 43465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "15907:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15890:32:73"
                },
                {
                  "assignments": [43468, 43470, 43472, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43468,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "15935:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43519,
                      "src": "15930:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43467,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15930:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 43470,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "15951:8:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43519,
                      "src": "15946:13:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43469,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15946:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 43472,
                      "mutability": "mutable",
                      "name": "takerGave",
                      "nameLocation": "15966:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43519,
                      "src": "15961:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43471,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15961:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 43490,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43476,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "16003:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43475,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "16001:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16001:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 43479,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "16018:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43478,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "16016:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16016:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 43482,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43451,
                                "src": "16046:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 43483,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16051:1:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 43484,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16054:1:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 43485,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16057:7:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 43486,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "16045:20:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 43481,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "16032:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 43487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16032:34:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 43488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16074:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 43473,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "15983:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 43474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "15983:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 43489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15983:101:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15929:155:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 43492,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43468,
                          "src": "16101:9:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 43493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16114:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "16101:14:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206661696c",
                        "id": 43495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16117:19:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        },
                        "value": "Snipe should fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        }
                      ],
                      "id": 43491,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "16090:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 43496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16090:47:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43497,
                  "nodeType": "ExpressionStatement",
                  "src": "16090:47:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 43505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 43501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 43499,
                            "name": "takerGot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43470,
                            "src": "16161:8:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 43500,
                            "name": "takerGave",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43472,
                            "src": "16173:9:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16161:21:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 43504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 43502,
                            "name": "takerGave",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43472,
                            "src": "16186:9:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 43503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16199:1:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "16186:14:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "16161:39:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73616374696f6e20646174612073686f756c642062652030",
                        "id": 43506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16208:30:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebea677f683c112cd33ce150b101e5ecf23c7ef5ba7712b21634b874bfccb6f2",
                          "typeString": "literal_string \"Transaction data should be 0\""
                        },
                        "value": "Transaction data should be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebea677f683c112cd33ce150b101e5ecf23c7ef5ba7712b21634b874bfccb6f2",
                          "typeString": "literal_string \"Transaction data should be 0\""
                        }
                      ],
                      "id": 43498,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "16143:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 43507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16143:101:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43508,
                  "nodeType": "ExpressionStatement",
                  "src": "16143:101:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 43511,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "16263:4:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                                  "typeString": "contract TakerOperationsTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                                  "typeString": "contract TakerOperationsTest"
                                }
                              ],
                              "id": 43510,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47041,
                              "src": "16261:1:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 43512,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16261:7:73",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 43513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "16261:15:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 43514,
                          "name": "beforeWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43461,
                          "src": "16279:9:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "16261:27:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54616b657220776173206e6f7420636f6d70656e7361746564",
                        "id": 43516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16290:27:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d19a967d895334427570b71d3b2bb77740bb189de93e5f39abb8e700d1a476f",
                          "typeString": "literal_string \"Taker was not compensated\""
                        },
                        "value": "Taker was not compensated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d19a967d895334427570b71d3b2bb77740bb189de93e5f39abb8e700d1a476f",
                          "typeString": "literal_string \"Taker was not compensated\""
                        }
                      ],
                      "id": 43509,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "16250:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 43517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16250:68:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43518,
                  "nodeType": "ExpressionStatement",
                  "src": "16250:68:73"
                }
              ]
            },
            "functionSelector": "0c4ba05d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_taker_collects_failing_offer",
            "nameLocation": "15743:33:73",
            "parameters": {
              "id": 43439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15776:2:73"
            },
            "returnParameters": {
              "id": 43440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15786:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43673,
            "nodeType": "FunctionDefinition",
            "src": "16327:1127:73",
            "body": {
              "id": 43672,
              "nodeType": "Block",
              "src": "16384:1070:73",
              "statements": [
                {
                  "assignments": [43524],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43524,
                      "mutability": "mutable",
                      "name": "mkr_provision",
                      "nameLocation": "16395:13:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43672,
                      "src": "16390:18:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43523,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16390:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43534,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43527,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "16426:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43526,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "16424:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16424:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 43530,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "16435:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43529,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "16433:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16433:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 43532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16443:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        }
                      ],
                      "id": 43525,
                      "name": "getProvision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [46516, 46583],
                      "referencedDeclaration": 46516,
                      "src": "16411:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 43533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16411:39:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16390:60:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43539,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "16472:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 43538,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "16470:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 43540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16470:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 43541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16478:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 43535,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "16456:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 43537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "16456:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 43542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16456:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43543,
                  "nodeType": "ExpressionStatement",
                  "src": "16456:30:73"
                },
                {
                  "assignments": [43545],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43545,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "16497:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43672,
                      "src": "16492:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43544,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16492:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43553,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 43548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16520:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 43549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16529:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 43550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16538:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 43551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16546:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 43546,
                        "name": "failmkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41293,
                        "src": "16503:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 43547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "16503:16:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 43552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16503:45:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16492:56:73"
                },
                {
                  "assignments": [43555],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43555,
                      "mutability": "mutable",
                      "name": "beforeQuote",
                      "nameLocation": "16559:11:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43672,
                      "src": "16554:16:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43554,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16554:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43562,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43559,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "16591:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 43558,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "16589:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 43560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16589:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 43556,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "16573:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 43557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50187,
                      "src": "16573:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 43561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16573:24:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16554:43:73"
                },
                {
                  "assignments": [43564],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43564,
                      "mutability": "mutable",
                      "name": "beforeWei",
                      "nameLocation": "16608:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43672,
                      "src": "16603:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43563,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16603:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43569,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 43566,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "16622:4:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                            "typeString": "contract TakerOperationsTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                            "typeString": "contract TakerOperationsTest"
                          }
                        ],
                        "id": 43565,
                        "name": "$",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          46990, 47007, 47024, 47041, 47058
                        ],
                        "referencedDeclaration": 47041,
                        "src": "16620:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                          "typeString": "function (contract Test) pure returns (address payable)"
                        }
                      },
                      "id": 43567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16620:7:73",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 43568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "16620:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16603:32:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43572,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "16655:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 43571,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "16653:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 43573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16653:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 43570,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "16642:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 43574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16642:18:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43575,
                  "nodeType": "ExpressionStatement",
                  "src": "16642:18:73"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43578,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "16690:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43577,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "16688:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16688:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 43581,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "16705:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43580,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "16703:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16703:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 43583,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43545,
                        "src": "16719:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 43585,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "16732:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 43584,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "16730:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 43586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16730:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 43587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16745:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 43588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16760:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "6d67762f6d616b6572526576657274",
                        "id": 43589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16775:17:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f1767113efd8f000c2792fdbf6264b4b726d4e8bf3e972fc7ed78ddedf9a514",
                          "typeString": "literal_string \"mgv/makerRevert\""
                        },
                        "value": "mgv/makerRevert"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f1767113efd8f000c2792fdbf6264b4b726d4e8bf3e972fc7ed78ddedf9a514",
                          "typeString": "literal_string \"mgv/makerRevert\""
                        }
                      ],
                      "id": 43576,
                      "name": "OfferFail",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1861,
                      "src": "16671:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 43590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16671:127:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43591,
                  "nodeType": "EmitStatement",
                  "src": "16666:132:73"
                },
                {
                  "assignments": [43593, 43595, 43597, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43593,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "16810:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43672,
                      "src": "16805:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43592,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16805:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 43595,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "16826:8:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43672,
                      "src": "16821:13:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43594,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16821:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 43597,
                      "mutability": "mutable",
                      "name": "takerGave",
                      "nameLocation": "16841:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43672,
                      "src": "16836:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43596,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16836:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 43615,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43601,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "16878:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43600,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "16876:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16876:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 43604,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "16893:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43603,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "16891:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16891:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 43607,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43545,
                                "src": "16921:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 43608,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16926:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 43609,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16935:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 43610,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16944:7:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 43611,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "16920:32:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 43606,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "16907:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 43612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16907:46:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 43613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16961:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 43598,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "16858:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 43599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "16858:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 43614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16858:113:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16804:167:73"
                },
                {
                  "assignments": [43617],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43617,
                      "mutability": "mutable",
                      "name": "penalty",
                      "nameLocation": "16982:7:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43672,
                      "src": "16977:12:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43616,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16977:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43624,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 43623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 43619,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "16994:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 43618,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "16992:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 43620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16992:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 43621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "16992:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 43622,
                      "name": "beforeWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43564,
                      "src": "17010:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16992:27:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16977:42:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 43626,
                          "name": "penalty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43617,
                          "src": "17036:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 43627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17046:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "17036:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54616b65722073686f756c642068617665206265656e20636f6d70656e7361746564",
                        "id": 43629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17049:36:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c1e26479ef655c2c9ae28186b95922acd336e19512244843ed81c8534764da1",
                          "typeString": "literal_string \"Taker should have been compensated\""
                        },
                        "value": "Taker should have been compensated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c1e26479ef655c2c9ae28186b95922acd336e19512244843ed81c8534764da1",
                          "typeString": "literal_string \"Taker should have been compensated\""
                        }
                      ],
                      "id": 43625,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "17025:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 43630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17025:61:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43631,
                  "nodeType": "ExpressionStatement",
                  "src": "17025:61:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 43633,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43593,
                          "src": "17103:9:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 43634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17116:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "17103:14:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c64206661696c",
                        "id": 43636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17119:19:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        },
                        "value": "Snipe should fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a648d0f68cada8cb2e4646f47f539f24e9b0a9dfd258dc8267d3f4e5832e763d",
                          "typeString": "literal_string \"Snipe should fail\""
                        }
                      ],
                      "id": 43632,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "17092:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 43637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17092:47:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43638,
                  "nodeType": "ExpressionStatement",
                  "src": "17092:47:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 43646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 43642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 43640,
                            "name": "takerGot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43595,
                            "src": "17163:8:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 43641,
                            "name": "takerGave",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43597,
                            "src": "17175:9:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17163:21:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 43645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 43643,
                            "name": "takerGave",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43597,
                            "src": "17188:9:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 43644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17201:1:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "17188:14:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "17163:39:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374207472616e73616374696f6e20696e666f726d6174696f6e",
                        "id": 43647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17210:35:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_474492d861a15ab56868c00e3990c04766fbf81dbb246f586ce487fa0525e4d8",
                          "typeString": "literal_string \"Incorrect transaction information\""
                        },
                        "value": "Incorrect transaction information"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_474492d861a15ab56868c00e3990c04766fbf81dbb246f586ce487fa0525e4d8",
                          "typeString": "literal_string \"Incorrect transaction information\""
                        }
                      ],
                      "id": 43639,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "17145:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 43648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17145:106:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43649,
                  "nodeType": "ExpressionStatement",
                  "src": "17145:106:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 43651,
                          "name": "beforeQuote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43555,
                          "src": "17275:11:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 43655,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "17308:4:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                ],
                                "id": 43654,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47041,
                                "src": "17306:1:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                                  "typeString": "function (contract Test) pure returns (address payable)"
                                }
                              },
                              "id": 43656,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17306:7:73",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 43652,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45881,
                              "src": "17290:5:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 43653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50187,
                            "src": "17290:15:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 43657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17290:24:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17275:39:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65722062616c616e63652073686f756c64206e6f74206265206c6f776572206966206d616b657220646f65736e277420706179206261636b",
                        "id": 43659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17322:61:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f593bf1856ba88f47f7d8630f4307ff6b62c3ea3cb4a47df87fc0b223de4f0be",
                          "typeString": "literal_string \"taker balance should not be lower if maker doesn't pay back\""
                        },
                        "value": "taker balance should not be lower if maker doesn't pay back"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f593bf1856ba88f47f7d8630f4307ff6b62c3ea3cb4a47df87fc0b223de4f0be",
                          "typeString": "literal_string \"taker balance should not be lower if maker doesn't pay back\""
                        }
                      ],
                      "id": 43650,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "17257:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 43660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17257:132:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43661,
                  "nodeType": "ExpressionStatement",
                  "src": "17257:132:73"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43665,
                            "name": "failmkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41293,
                            "src": "17415:7:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 43664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17407:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43663,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17407:7:73",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17407:16:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 43667,
                          "name": "mkr_provision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43524,
                          "src": "17425:13:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 43668,
                          "name": "penalty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43617,
                          "src": "17441:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17425:23:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 43662,
                      "name": "Credit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1747,
                      "src": "17400:6:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 43670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17400:49:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43671,
                  "nodeType": "EmitStatement",
                  "src": "17395:54:73"
                }
              ]
            },
            "functionSelector": "0f8cadb3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_taker_reimbursed_if_maker_reverts",
            "nameLocation": "16336:38:73",
            "parameters": {
              "id": 43521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16374:2:73"
            },
            "returnParameters": {
              "id": 43522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16384:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43749,
            "nodeType": "FunctionDefinition",
            "src": "17458:487:73",
            "body": {
              "id": 43748,
              "nodeType": "Block",
              "src": "17531:414:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43680,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "17550:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43679,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "17548:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17548:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 43683,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "17559:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43682,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "17557:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17557:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 43685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17567:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 43676,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "17537:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 43678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1109,
                      "src": "17537:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 43686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17537:32:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43687,
                  "nodeType": "ExpressionStatement",
                  "src": "17537:32:73"
                },
                {
                  "assignments": [43689],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43689,
                      "mutability": "mutable",
                      "name": "balTaker",
                      "nameLocation": "17580:8:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43748,
                      "src": "17575:13:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43688,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "17575:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43696,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43693,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "17608:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 43692,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "17606:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 43694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17606:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 43690,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "17591:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 43691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50187,
                      "src": "17591:14:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 43695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17591:23:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17575:39:73"
                },
                {
                  "assignments": [43698],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43698,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "17625:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43748,
                      "src": "17620:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43697,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "17620:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43706,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 43701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17644:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 43702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17653:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 43703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17662:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 43704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17670:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 43699,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "17631:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 43700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "17631:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 43705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17631:41:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17620:52:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43711,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "17694:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 43710,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "17692:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 43712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17692:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 43713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17700:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 43707,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "17678:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 43709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "17678:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 43714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17678:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43715,
                  "nodeType": "ExpressionStatement",
                  "src": "17678:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43720,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "17735:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43719,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "17733:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17733:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 43723,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "17750:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43722,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "17748:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17748:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 43726,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43698,
                                "src": "17778:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 43727,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17783:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 43728,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17792:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "35305f303030",
                                "id": 43729,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17801:6:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_50000_by_1",
                                  "typeString": "int_const 50000"
                                },
                                "value": "50_000"
                              }
                            ],
                            "id": 43730,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "17777:31:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 43725,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "17764:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 43731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17764:45:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 43732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17817:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 43716,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "17715:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 43718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "17715:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 43733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17715:112:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 43734,
                  "nodeType": "ExpressionStatement",
                  "src": "17715:112:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 43739,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "17866:4:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                ],
                                "id": 43738,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47041,
                                "src": "17864:1:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                                  "typeString": "function (contract Test) pure returns (address payable)"
                                }
                              },
                              "id": 43740,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17864:7:73",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 43736,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45878,
                              "src": "17849:4:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 43737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50187,
                            "src": "17849:14:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 43741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17849:23:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 43742,
                          "name": "balTaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43689,
                          "src": "17875:8:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17849:34:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 43744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17891:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "496e636f72726563742064656c69766572656420616d6f756e74",
                        "id": 43745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17906:28:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_527927cf386cffec563bf6d883a963068955ae51eccc14bc55e52c52179a3364",
                          "typeString": "literal_string \"Incorrect delivered amount\""
                        },
                        "value": "Incorrect delivered amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_527927cf386cffec563bf6d883a963068955ae51eccc14bc55e52c52179a3364",
                          "typeString": "literal_string \"Incorrect delivered amount\""
                        }
                      ],
                      "id": 43735,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "17833:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 43746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17833:107:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43747,
                  "nodeType": "ExpressionStatement",
                  "src": "17833:107:73"
                }
              ]
            },
            "functionSelector": "e55e2f6f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_taker_hasnt_approved_base_succeeds_order_with_fee",
            "nameLocation": "17467:54:73",
            "parameters": {
              "id": 43674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17521:2:73"
            },
            "returnParameters": {
              "id": 43675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17531:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43813,
            "nodeType": "FunctionDefinition",
            "src": "17949:446:73",
            "body": {
              "id": 43812,
              "nodeType": "Block",
              "src": "18020:375:73",
              "statements": [
                {
                  "assignments": [43753],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43753,
                      "mutability": "mutable",
                      "name": "balTaker",
                      "nameLocation": "18031:8:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43812,
                      "src": "18026:13:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43752,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "18026:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43760,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43757,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "18059:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 43756,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "18057:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 43758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18057:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 43754,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "18042:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 43755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50187,
                      "src": "18042:14:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 43759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18042:23:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18026:39:73"
                },
                {
                  "assignments": [43762],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43762,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "18076:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43812,
                      "src": "18071:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43761,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "18071:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43770,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 43765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18095:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 43766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18104:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 43767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18113:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 43768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18121:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 43763,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "18082:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 43764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "18082:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 43769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18082:41:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18071:52:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43775,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "18145:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 43774,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "18143:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 43776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18143:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 43777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18151:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 43771,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "18129:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 43773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "18129:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 43778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18129:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43779,
                  "nodeType": "ExpressionStatement",
                  "src": "18129:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43784,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "18185:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43783,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "18183:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18183:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 43787,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "18200:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43786,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "18198:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18198:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 43790,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43762,
                                "src": "18228:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 43791,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18233:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 43792,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18242:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "35305f303030",
                                "id": 43793,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18251:6:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_50000_by_1",
                                  "typeString": "int_const 50000"
                                },
                                "value": "50_000"
                              }
                            ],
                            "id": 43794,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "18227:31:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 43789,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "18214:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 43795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18214:45:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 43796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18267:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 43780,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "18165:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 43782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "18165:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 43797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18165:112:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 43798,
                  "nodeType": "ExpressionStatement",
                  "src": "18165:112:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 43803,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "18316:4:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                ],
                                "id": 43802,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47041,
                                "src": "18314:1:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                                  "typeString": "function (contract Test) pure returns (address payable)"
                                }
                              },
                              "id": 43804,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18314:7:73",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 43800,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45878,
                              "src": "18299:4:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 43801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50187,
                            "src": "18299:14:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 43805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18299:23:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 43806,
                          "name": "balTaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43753,
                          "src": "18325:8:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "18299:34:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 43808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18341:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "496e636f72726563742064656c69766572656420616d6f756e74",
                        "id": 43809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18356:28:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_527927cf386cffec563bf6d883a963068955ae51eccc14bc55e52c52179a3364",
                          "typeString": "literal_string \"Incorrect delivered amount\""
                        },
                        "value": "Incorrect delivered amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_527927cf386cffec563bf6d883a963068955ae51eccc14bc55e52c52179a3364",
                          "typeString": "literal_string \"Incorrect delivered amount\""
                        }
                      ],
                      "id": 43799,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "18283:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 43810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18283:107:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43811,
                  "nodeType": "ExpressionStatement",
                  "src": "18283:107:73"
                }
              ]
            },
            "functionSelector": "0941ba78",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_taker_hasnt_approved_base_succeeds_order_wo_fee",
            "nameLocation": "17958:52:73",
            "parameters": {
              "id": 43750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18010:2:73"
            },
            "returnParameters": {
              "id": 43751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18020:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43861,
            "nodeType": "FunctionDefinition",
            "src": "18399:325:73",
            "body": {
              "id": 43860,
              "nodeType": "Block",
              "src": "18461:263:73",
              "statements": [
                {
                  "assignments": [43817],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43817,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "18472:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 43860,
                      "src": "18467:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43816,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "18467:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43825,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 43820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18491:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 43821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18500:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 43822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18509:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 43823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18517:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 43818,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "18478:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 43819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "18478:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 43824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18478:41:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18467:52:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43830,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "18540:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 43829,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "18538:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 43831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18538:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 43832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18546:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 43826,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "18525:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 43828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "18525:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 43833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18525:29:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43834,
                  "nodeType": "ExpressionStatement",
                  "src": "18525:29:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f74616b65725472616e736665724661696c",
                        "id": 43838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18577:23:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e79742e7ced315361b2f8080130843f008a02f29a4f8e0d2c2ca5086b46bd5",
                          "typeString": "literal_string \"mgv/takerTransferFail\""
                        },
                        "value": "mgv/takerTransferFail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_37e79742e7ced315361b2f8080130843f008a02f29a4f8e0d2c2ca5086b46bd5",
                          "typeString": "literal_string \"mgv/takerTransferFail\""
                        }
                      ],
                      "expression": {
                        "id": 43835,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "18561:2:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 43837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "18561:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 43839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18561:40:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43840,
                  "nodeType": "ExpressionStatement",
                  "src": "18561:40:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43845,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "18627:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43844,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "18625:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18625:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 43848,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "18642:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43847,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "18640:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18640:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 43851,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43817,
                                "src": "18670:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 43852,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18675:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 43853,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18684:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "35305f303030",
                                "id": 43854,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18693:6:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_50000_by_1",
                                  "typeString": "int_const 50000"
                                },
                                "value": "50_000"
                              }
                            ],
                            "id": 43855,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "18669:31:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 43850,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "18656:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 43856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18656:45:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 43857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18709:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 43841,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "18607:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 43843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "18607:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 43858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18607:112:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 43859,
                  "nodeType": "ExpressionStatement",
                  "src": "18607:112:73"
                }
              ]
            },
            "functionSelector": "1dd051c2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_taker_hasnt_approved_quote_fails_order",
            "nameLocation": "18408:43:73",
            "parameters": {
              "id": 43814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18451:2:73"
            },
            "returnParameters": {
              "id": 43815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18461:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44003,
            "nodeType": "FunctionDefinition",
            "src": "18728:994:73",
            "body": {
              "id": 44002,
              "nodeType": "Block",
              "src": "18764:958:73",
              "statements": [
                {
                  "assignments": [43865],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43865,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "18775:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44002,
                      "src": "18770:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43864,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "18770:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43873,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "312e31",
                        "id": 43868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18794:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        "value": "1.1"
                      },
                      {
                        "hexValue": "31",
                        "id": 43869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18805:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 43870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18814:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 43871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18822:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 43866,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "18781:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 43867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "18781:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 43872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18781:43:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18770:54:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43878,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "18845:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 43877,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "18843:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 43879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18843:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 43880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18851:8:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 43874,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "18830:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 43876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "18830:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 43881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18830:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43882,
                  "nodeType": "ExpressionStatement",
                  "src": "18830:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43887,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "18882:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 43886,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "18880:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 43888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18880:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 43889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18888:8:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 43883,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "18866:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 43885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "18866:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 43890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18866:31:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43891,
                  "nodeType": "ExpressionStatement",
                  "src": "18866:31:73"
                },
                {
                  "assignments": [43893],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43893,
                      "mutability": "mutable",
                      "name": "balTaker",
                      "nameLocation": "18908:8:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44002,
                      "src": "18903:13:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43892,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "18903:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43900,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43897,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "18936:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 43896,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "18934:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 43898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18934:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 43894,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "18919:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 43895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50187,
                      "src": "18919:14:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 43899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18919:23:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18903:39:73"
                },
                {
                  "assignments": [43902],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43902,
                      "mutability": "mutable",
                      "name": "balMaker",
                      "nameLocation": "18953:8:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44002,
                      "src": "18948:13:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43901,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "18948:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43910,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43907,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41287,
                            "src": "18988:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 43906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18980:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 43905,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18980:7:73",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 43908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18980:12:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 43903,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "18964:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 43904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50187,
                      "src": "18964:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 43909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18964:29:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18948:45:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43913,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "19013:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 43912,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "19011:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 43914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19011:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 43911,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "19000:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 43915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19000:18:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43916,
                  "nodeType": "ExpressionStatement",
                  "src": "19000:18:73"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43919,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "19044:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43918,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "19042:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19042:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 43922,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "19053:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43921,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "19051:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19051:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 43924,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43865,
                        "src": "19061:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 43926,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "19068:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 43925,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "19066:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 43927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19066:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 43928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19075:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "312e31",
                        "id": 43929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19084:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        "value": "1.1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        }
                      ],
                      "id": 43917,
                      "name": "OfferSuccess",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1845,
                      "src": "19029:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256,uint256)"
                      }
                    },
                    "id": 43930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19029:65:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43931,
                  "nodeType": "EmitStatement",
                  "src": "19024:70:73"
                },
                {
                  "assignments": [43933, 43935, 43937, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43933,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "19106:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44002,
                      "src": "19101:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43932,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19101:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 43935,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "19122:8:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44002,
                      "src": "19117:13:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43934,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19117:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 43937,
                      "mutability": "mutable",
                      "name": "takerGave",
                      "nameLocation": "19137:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44002,
                      "src": "19132:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43936,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19132:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 43955,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 43941,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "19174:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43940,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "19172:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19172:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 43944,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "19189:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 43943,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "19187:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 43945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19187:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 43947,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43865,
                                "src": "19217:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 43948,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19222:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "312e31",
                                "id": 43949,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19231:9:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1100000000000000000_by_1",
                                  "typeString": "int_const 1100000000000000000"
                                },
                                "value": "1.1"
                              },
                              {
                                "hexValue": "35305f303030",
                                "id": 43950,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19242:6:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_50000_by_1",
                                  "typeString": "int_const 50000"
                                },
                                "value": "50_000"
                              }
                            ],
                            "id": 43951,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "19216:33:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 43946,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "19203:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 43952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19203:47:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 43953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19258:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 43938,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "19154:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 43939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "19154:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 43954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19154:114:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19100:168:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 43957,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43933,
                          "src": "19285:9:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 43958,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19298:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "19285:14:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536e6970652073686f756c642073756363656564",
                        "id": 43960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19301:22:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_235d9bd4a0656a377f46136e840c1f3b3f9cbae06df49060139f7eb13837dc73",
                          "typeString": "literal_string \"Snipe should succeed\""
                        },
                        "value": "Snipe should succeed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_235d9bd4a0656a377f46136e840c1f3b3f9cbae06df49060139f7eb13837dc73",
                          "typeString": "literal_string \"Snipe should succeed\""
                        }
                      ],
                      "id": 43956,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "19274:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 43961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19274:50:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43962,
                  "nodeType": "ExpressionStatement",
                  "src": "19274:50:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 43967,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "19363:4:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                ],
                                "id": 43966,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47041,
                                "src": "19361:1:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                                  "typeString": "function (contract Test) pure returns (address payable)"
                                }
                              },
                              "id": 43968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19361:7:73",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 43964,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45878,
                              "src": "19346:4:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 43965,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50187,
                            "src": "19346:14:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 43969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19346:23:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 43970,
                          "name": "balTaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43893,
                          "src": "19372:8:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "19346:34:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 43972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19388:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "496e636f72726563742064656c69766572656420616d6f756e74202874616b657229",
                        "id": 43973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19403:36:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_672c0a4a486572838d2f8295447fe00a5de7a0639e02422cae58e48234debafd",
                          "typeString": "literal_string \"Incorrect delivered amount (taker)\""
                        },
                        "value": "Incorrect delivered amount (taker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_672c0a4a486572838d2f8295447fe00a5de7a0639e02422cae58e48234debafd",
                          "typeString": "literal_string \"Incorrect delivered amount (taker)\""
                        }
                      ],
                      "id": 43963,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "19330:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 43974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19330:115:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43975,
                  "nodeType": "ExpressionStatement",
                  "src": "19330:115:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 43981,
                                  "name": "mkr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41287,
                                  "src": "19491:3:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestMaker_$49499",
                                    "typeString": "contract TestMaker"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestMaker_$49499",
                                    "typeString": "contract TestMaker"
                                  }
                                ],
                                "id": 43980,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "19483:7:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 43979,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "19483:7:73",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 43982,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19483:12:73",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 43977,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45881,
                              "src": "19467:5:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 43978,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50187,
                            "src": "19467:15:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 43983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19467:29:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 43984,
                          "name": "balMaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43902,
                          "src": "19499:8:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "19467:40:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "312e31",
                        "id": 43986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19515:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        "value": "1.1"
                      },
                      {
                        "hexValue": "496e636f72726563742064656c69766572656420616d6f756e7420286d616b657229",
                        "id": 43987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19532:36:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c21b825bc94078ca03c7a8a95d9e4e8d4aa605eae14783effd0f2a5ee272156",
                          "typeString": "literal_string \"Incorrect delivered amount (maker)\""
                        },
                        "value": "Incorrect delivered amount (maker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c21b825bc94078ca03c7a8a95d9e4e8d4aa605eae14783effd0f2a5ee272156",
                          "typeString": "literal_string \"Incorrect delivered amount (maker)\""
                        }
                      ],
                      "id": 43976,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "19451:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 43988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19451:123:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43989,
                  "nodeType": "ExpressionStatement",
                  "src": "19451:123:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43991,
                        "name": "takerGot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43935,
                        "src": "19589:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 43992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19599:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "496e636f7272656374207472616e73616374696f6e20696e666f726d6174696f6e",
                        "id": 43993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19608:35:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_474492d861a15ab56868c00e3990c04766fbf81dbb246f586ce487fa0525e4d8",
                          "typeString": "literal_string \"Incorrect transaction information\""
                        },
                        "value": "Incorrect transaction information"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_474492d861a15ab56868c00e3990c04766fbf81dbb246f586ce487fa0525e4d8",
                          "typeString": "literal_string \"Incorrect transaction information\""
                        }
                      ],
                      "id": 43990,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "19580:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 43994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19580:64:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43995,
                  "nodeType": "ExpressionStatement",
                  "src": "19580:64:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43997,
                        "name": "takerGave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43937,
                        "src": "19659:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "312e31",
                        "id": 43998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19670:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        "value": "1.1"
                      },
                      {
                        "hexValue": "496e636f7272656374207472616e73616374696f6e20696e666f726d6174696f6e",
                        "id": 43999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19681:35:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_474492d861a15ab56868c00e3990c04766fbf81dbb246f586ce487fa0525e4d8",
                          "typeString": "literal_string \"Incorrect transaction information\""
                        },
                        "value": "Incorrect transaction information"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_474492d861a15ab56868c00e3990c04766fbf81dbb246f586ce487fa0525e4d8",
                          "typeString": "literal_string \"Incorrect transaction information\""
                        }
                      ],
                      "id": 43996,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "19650:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 44000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19650:67:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44001,
                  "nodeType": "ExpressionStatement",
                  "src": "19650:67:73"
                }
              ]
            },
            "functionSelector": "efd59015",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_simple_snipe",
            "nameLocation": "18737:17:73",
            "parameters": {
              "id": 43862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18754:2:73"
            },
            "returnParameters": {
              "id": 43863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18764:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44124,
            "nodeType": "FunctionDefinition",
            "src": "19726:927:73",
            "body": {
              "id": 44123,
              "nodeType": "Block",
              "src": "19768:885:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "312e31",
                        "id": 44009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19787:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        "value": "1.1"
                      },
                      {
                        "hexValue": "31",
                        "id": 44010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19798:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 44011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19807:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 44012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19815:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1100000000000000000_by_1",
                          "typeString": "int_const 1100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 44006,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "19774:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 44008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "19774:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 44013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19774:43:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44014,
                  "nodeType": "ExpressionStatement",
                  "src": "19774:43:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "312e32",
                        "id": 44018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19836:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1200000000000000000_by_1",
                          "typeString": "int_const 1200000000000000000"
                        },
                        "value": "1.2"
                      },
                      {
                        "hexValue": "31",
                        "id": 44019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19847:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 44020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19856:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 44021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19864:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1200000000000000000_by_1",
                          "typeString": "int_const 1200000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 44015,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "19823:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 44017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "19823:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 44022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19823:43:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44023,
                  "nodeType": "ExpressionStatement",
                  "src": "19823:43:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 44027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19883:18:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 44024,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "19872:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 44026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "19872:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 44028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19872:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44029,
                  "nodeType": "ExpressionStatement",
                  "src": "19872:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44034,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "19924:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 44033,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "19922:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 44035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19922:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 44036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19930:8:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 44030,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "19909:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 44032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "19909:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 44037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19909:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44038,
                  "nodeType": "ExpressionStatement",
                  "src": "19909:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44043,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "19961:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 44042,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "19959:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 44044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19959:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 44045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19967:8:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 44039,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "19945:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 44041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "19945:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 44046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19945:31:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44047,
                  "nodeType": "ExpressionStatement",
                  "src": "19945:31:73"
                },
                {
                  "assignments": [44049],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44049,
                      "mutability": "mutable",
                      "name": "balTaker",
                      "nameLocation": "19987:8:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44123,
                      "src": "19982:13:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44048,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19982:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44056,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44053,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "20015:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 44052,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "20013:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 44054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20013:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 44050,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "19998:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 44051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50187,
                      "src": "19998:14:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 44055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19998:23:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19982:39:73"
                },
                {
                  "assignments": [44058],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44058,
                      "mutability": "mutable",
                      "name": "balMaker",
                      "nameLocation": "20032:8:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44123,
                      "src": "20027:13:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44057,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "20027:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44066,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44063,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41287,
                            "src": "20067:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 44062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20059:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44061,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20059:7:73",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20059:12:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 44059,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "20043:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 44060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50187,
                      "src": "20043:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 44065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20043:29:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20027:45:73"
                },
                {
                  "assignments": [44068, 44070, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44068,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "20085:8:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44123,
                      "src": "20080:13:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44067,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "20080:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 44070,
                      "mutability": "mutable",
                      "name": "takerGave",
                      "nameLocation": "20100:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44123,
                      "src": "20095:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44069,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "20095:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 44083,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44074,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "20142:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44073,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "20140:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20140:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44077,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "20157:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44076,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "20155:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20155:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 44079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20171:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "34",
                        "id": 44080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20186:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4000000000000000000_by_1",
                          "typeString": "int_const 4000000000000000000"
                        },
                        "value": "4"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 44081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20201:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_4000000000000000000_by_1",
                          "typeString": "int_const 4000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 44071,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "20117:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 44072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3435,
                      "src": "20117:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 44082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20117:94:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20079:132:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44085,
                        "name": "takerGot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44068,
                        "src": "20226:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 44086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20236:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c617265642064656c69766572656420616d6f756e74202874616b657229",
                        "id": 44087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20245:45:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f0f5bc2d277a7a06bd28dd8aae83ec3f9f23e401878ed3dd3912b90c6ea8f840",
                          "typeString": "literal_string \"Incorrect declared delivered amount (taker)\""
                        },
                        "value": "Incorrect declared delivered amount (taker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f0f5bc2d277a7a06bd28dd8aae83ec3f9f23e401878ed3dd3912b90c6ea8f840",
                          "typeString": "literal_string \"Incorrect declared delivered amount (taker)\""
                        }
                      ],
                      "id": 44084,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "20217:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 44088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20217:74:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44089,
                  "nodeType": "ExpressionStatement",
                  "src": "20217:74:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44091,
                        "name": "takerGave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44070,
                        "src": "20313:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "322e33",
                        "id": 44092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20330:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2300000000000000000_by_1",
                          "typeString": "int_const 2300000000000000000"
                        },
                        "value": "2.3"
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c617265642064656c69766572656420616d6f756e7420286d616b657229",
                        "id": 44093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20347:45:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f35c65aac30015b405231e89ea11cfa58ab9dc6974ab802ea71571c191677c8f",
                          "typeString": "literal_string \"Incorrect declared delivered amount (maker)\""
                        },
                        "value": "Incorrect declared delivered amount (maker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2300000000000000000_by_1",
                          "typeString": "int_const 2300000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f35c65aac30015b405231e89ea11cfa58ab9dc6974ab802ea71571c191677c8f",
                          "typeString": "literal_string \"Incorrect declared delivered amount (maker)\""
                        }
                      ],
                      "id": 44090,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "20297:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 44094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20297:101:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44095,
                  "nodeType": "ExpressionStatement",
                  "src": "20297:101:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 44104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 44100,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "20437:4:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                ],
                                "id": 44099,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47041,
                                "src": "20435:1:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                                  "typeString": "function (contract Test) pure returns (address payable)"
                                }
                              },
                              "id": 44101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "20435:7:73",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 44097,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45878,
                              "src": "20420:4:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 44098,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50187,
                            "src": "20420:14:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 44102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20420:23:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 44103,
                          "name": "balTaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44049,
                          "src": "20446:8:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "20420:34:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 44105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20462:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "496e636f72726563742064656c69766572656420616d6f756e74202874616b657229",
                        "id": 44106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20477:36:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_672c0a4a486572838d2f8295447fe00a5de7a0639e02422cae58e48234debafd",
                          "typeString": "literal_string \"Incorrect delivered amount (taker)\""
                        },
                        "value": "Incorrect delivered amount (taker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_672c0a4a486572838d2f8295447fe00a5de7a0639e02422cae58e48234debafd",
                          "typeString": "literal_string \"Incorrect delivered amount (taker)\""
                        }
                      ],
                      "id": 44096,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "20404:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 44107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20404:115:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44108,
                  "nodeType": "ExpressionStatement",
                  "src": "20404:115:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 44118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 44114,
                                  "name": "mkr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41287,
                                  "src": "20565:3:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestMaker_$49499",
                                    "typeString": "contract TestMaker"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestMaker_$49499",
                                    "typeString": "contract TestMaker"
                                  }
                                ],
                                "id": 44113,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "20557:7:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 44112,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "20557:7:73",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 44115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "20557:12:73",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 44110,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45881,
                              "src": "20541:5:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 44111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50187,
                            "src": "20541:15:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 44116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20541:29:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 44117,
                          "name": "balMaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44058,
                          "src": "20573:8:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "20541:40:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "322e33",
                        "id": 44119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20589:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2300000000000000000_by_1",
                          "typeString": "int_const 2300000000000000000"
                        },
                        "value": "2.3"
                      },
                      {
                        "hexValue": "496e636f72726563742064656c69766572656420616d6f756e7420286d616b657229",
                        "id": 44120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20606:36:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c21b825bc94078ca03c7a8a95d9e4e8d4aa605eae14783effd0f2a5ee272156",
                          "typeString": "literal_string \"Incorrect delivered amount (maker)\""
                        },
                        "value": "Incorrect delivered amount (maker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2300000000000000000_by_1",
                          "typeString": "int_const 2300000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c21b825bc94078ca03c7a8a95d9e4e8d4aa605eae14783effd0f2a5ee272156",
                          "typeString": "literal_string \"Incorrect delivered amount (maker)\""
                        }
                      ],
                      "id": 44109,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "20525:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 44121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20525:123:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44122,
                  "nodeType": "ExpressionStatement",
                  "src": "20525:123:73"
                }
              ]
            },
            "functionSelector": "e9172577",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_simple_marketOrder",
            "nameLocation": "19735:23:73",
            "parameters": {
              "id": 44004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19758:2:73"
            },
            "returnParameters": {
              "id": 44005,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19768:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44181,
            "nodeType": "FunctionDefinition",
            "src": "20657:465:73",
            "body": {
              "id": 44180,
              "nodeType": "Block",
              "src": "20697:425:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 44130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20716:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "32",
                        "id": 44131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20725:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 44132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20734:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 44133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20742:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 44127,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "20703:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 44129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "20703:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 44134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20703:41:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44135,
                  "nodeType": "ExpressionStatement",
                  "src": "20703:41:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 44139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20761:18:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 44136,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "20750:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 44138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "20750:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 44140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20750:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44141,
                  "nodeType": "ExpressionStatement",
                  "src": "20750:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44146,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "20802:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 44145,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "20800:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 44147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20800:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 44148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20808:8:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 44142,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "20786:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 44144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "20786:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 44149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20786:31:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44150,
                  "nodeType": "ExpressionStatement",
                  "src": "20786:31:73"
                },
                {
                  "assignments": [44152, 44154, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44152,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "20830:8:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44180,
                      "src": "20825:13:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44151,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "20825:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 44154,
                      "mutability": "mutable",
                      "name": "takerGave",
                      "nameLocation": "20845:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44180,
                      "src": "20840:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44153,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "20840:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 44167,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44158,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "20887:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44157,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "20885:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20885:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44161,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "20902:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44160,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "20900:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20900:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 44163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20916:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "32",
                        "id": 44164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20931:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 44165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20946:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 44155,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "20862:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 44156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3435,
                      "src": "20862:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 44166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20862:94:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20824:132:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44169,
                        "name": "takerGot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44152,
                        "src": "20971:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 44170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20981:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c617265642064656c69766572656420616d6f756e74202874616b657229",
                        "id": 44171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20990:45:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f0f5bc2d277a7a06bd28dd8aae83ec3f9f23e401878ed3dd3912b90c6ea8f840",
                          "typeString": "literal_string \"Incorrect declared delivered amount (taker)\""
                        },
                        "value": "Incorrect declared delivered amount (taker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f0f5bc2d277a7a06bd28dd8aae83ec3f9f23e401878ed3dd3912b90c6ea8f840",
                          "typeString": "literal_string \"Incorrect declared delivered amount (taker)\""
                        }
                      ],
                      "id": 44168,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "20962:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 44172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20962:74:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44173,
                  "nodeType": "ExpressionStatement",
                  "src": "20962:74:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44175,
                        "name": "takerGave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44154,
                        "src": "21051:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 44176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21062:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c617265642064656c69766572656420616d6f756e7420286d616b657229",
                        "id": 44177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21071:45:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f35c65aac30015b405231e89ea11cfa58ab9dc6974ab802ea71571c191677c8f",
                          "typeString": "literal_string \"Incorrect declared delivered amount (maker)\""
                        },
                        "value": "Incorrect declared delivered amount (maker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f35c65aac30015b405231e89ea11cfa58ab9dc6974ab802ea71571c191677c8f",
                          "typeString": "literal_string \"Incorrect declared delivered amount (maker)\""
                        }
                      ],
                      "id": 44174,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "21042:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 44178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21042:75:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44179,
                  "nodeType": "ExpressionStatement",
                  "src": "21042:75:73"
                }
              ]
            },
            "functionSelector": "0e16461e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_simple_fillWants",
            "nameLocation": "20666:21:73",
            "parameters": {
              "id": 44125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20687:2:73"
            },
            "returnParameters": {
              "id": 44126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20697:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44238,
            "nodeType": "FunctionDefinition",
            "src": "21126:466:73",
            "body": {
              "id": 44237,
              "nodeType": "Block",
              "src": "21166:426:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 44187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21185:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "32",
                        "id": 44188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21194:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 44189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21203:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 44190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21211:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 44184,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "21172:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 44186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "21172:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 44191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21172:41:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44192,
                  "nodeType": "ExpressionStatement",
                  "src": "21172:41:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 44196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21230:18:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 44193,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "21219:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 44195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "21219:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 44197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21219:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44198,
                  "nodeType": "ExpressionStatement",
                  "src": "21219:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44203,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "21271:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 44202,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "21269:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 44204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21269:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 44205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21277:8:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 44199,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "21255:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 44201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "21255:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 44206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21255:31:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44207,
                  "nodeType": "ExpressionStatement",
                  "src": "21255:31:73"
                },
                {
                  "assignments": [44209, 44211, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44209,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "21299:8:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44237,
                      "src": "21294:13:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44208,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "21294:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 44211,
                      "mutability": "mutable",
                      "name": "takerGave",
                      "nameLocation": "21314:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44237,
                      "src": "21309:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44210,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "21309:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 44224,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44215,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "21356:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44214,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "21354:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21354:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44218,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "21371:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44217,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "21369:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21369:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 44220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21385:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "32",
                        "id": 44221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21400:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 44222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21415:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 44212,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "21331:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 44213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3435,
                      "src": "21331:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 44223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21331:95:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21293:133:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44226,
                        "name": "takerGave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44211,
                        "src": "21441:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 44227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21452:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c617265642064656c69766572656420616d6f756e7420286d616b657229",
                        "id": 44228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21461:45:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f35c65aac30015b405231e89ea11cfa58ab9dc6974ab802ea71571c191677c8f",
                          "typeString": "literal_string \"Incorrect declared delivered amount (maker)\""
                        },
                        "value": "Incorrect declared delivered amount (maker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f35c65aac30015b405231e89ea11cfa58ab9dc6974ab802ea71571c191677c8f",
                          "typeString": "literal_string \"Incorrect declared delivered amount (maker)\""
                        }
                      ],
                      "id": 44225,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "21432:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 44229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21432:75:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44230,
                  "nodeType": "ExpressionStatement",
                  "src": "21432:75:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44232,
                        "name": "takerGot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44209,
                        "src": "21522:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 44233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21532:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c617265642064656c69766572656420616d6f756e74202874616b657229",
                        "id": 44234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21541:45:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f0f5bc2d277a7a06bd28dd8aae83ec3f9f23e401878ed3dd3912b90c6ea8f840",
                          "typeString": "literal_string \"Incorrect declared delivered amount (taker)\""
                        },
                        "value": "Incorrect declared delivered amount (taker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f0f5bc2d277a7a06bd28dd8aae83ec3f9f23e401878ed3dd3912b90c6ea8f840",
                          "typeString": "literal_string \"Incorrect declared delivered amount (taker)\""
                        }
                      ],
                      "id": 44231,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "21513:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 44235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21513:74:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44236,
                  "nodeType": "ExpressionStatement",
                  "src": "21513:74:73"
                }
              ]
            },
            "functionSelector": "856a63d1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_simple_fillGives",
            "nameLocation": "21135:21:73",
            "parameters": {
              "id": 44182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21156:2:73"
            },
            "returnParameters": {
              "id": 44183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21166:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44301,
            "nodeType": "FunctionDefinition",
            "src": "21596:508:73",
            "body": {
              "id": 44300,
              "nodeType": "Block",
              "src": "21646:458:73",
              "statements": [
                {
                  "assignments": [44242],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44242,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "21657:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44300,
                      "src": "21652:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44241,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "21652:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44250,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 44245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21676:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "32",
                        "id": 44246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21685:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 44247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21694:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 44248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21702:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 44243,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "21663:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 44244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "21663:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 44249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21663:41:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21652:52:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 44254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21721:18:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 44251,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "21710:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 44253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "21710:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 44255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21710:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44256,
                  "nodeType": "ExpressionStatement",
                  "src": "21710:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44261,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "21762:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 44260,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "21760:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 44262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21760:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 44263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21768:8:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 44257,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "21746:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 44259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "21746:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 44264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21746:31:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44265,
                  "nodeType": "ExpressionStatement",
                  "src": "21746:31:73"
                },
                {
                  "assignments": [null, 44267, 44269, null, null],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 44267,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "21792:8:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44300,
                      "src": "21787:13:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44266,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "21787:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 44269,
                      "mutability": "mutable",
                      "name": "takerGave",
                      "nameLocation": "21807:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44300,
                      "src": "21802:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44268,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "21802:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 44287,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44273,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "21844:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44272,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "21842:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21842:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44276,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "21859:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44275,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "21857:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21857:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 44279,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44242,
                                "src": "21887:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "32",
                                "id": 44280,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21892:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2000000000000000000_by_1",
                                  "typeString": "int_const 2000000000000000000"
                                },
                                "value": "2"
                              },
                              {
                                "hexValue": "30",
                                "id": 44281,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21901:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "3330305f303030",
                                "id": 44282,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21910:7:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_300000_by_1",
                                  "typeString": "int_const 300000"
                                },
                                "value": "300_000"
                              }
                            ],
                            "id": 44283,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "21886:32:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 44278,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "21873:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 44284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21873:46:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 44285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21927:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 44270,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "21824:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 44271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "21824:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 44286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21824:114:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21784:154:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44289,
                        "name": "takerGave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44269,
                        "src": "21953:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 44290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21964:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c617265642064656c69766572656420616d6f756e7420286d616b657229",
                        "id": 44291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21973:45:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f35c65aac30015b405231e89ea11cfa58ab9dc6974ab802ea71571c191677c8f",
                          "typeString": "literal_string \"Incorrect declared delivered amount (maker)\""
                        },
                        "value": "Incorrect declared delivered amount (maker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f35c65aac30015b405231e89ea11cfa58ab9dc6974ab802ea71571c191677c8f",
                          "typeString": "literal_string \"Incorrect declared delivered amount (maker)\""
                        }
                      ],
                      "id": 44288,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "21944:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 44292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21944:75:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44293,
                  "nodeType": "ExpressionStatement",
                  "src": "21944:75:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44295,
                        "name": "takerGot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44267,
                        "src": "22034:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 44296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22044:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c617265642064656c69766572656420616d6f756e74202874616b657229",
                        "id": 44297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22053:45:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f0f5bc2d277a7a06bd28dd8aae83ec3f9f23e401878ed3dd3912b90c6ea8f840",
                          "typeString": "literal_string \"Incorrect declared delivered amount (taker)\""
                        },
                        "value": "Incorrect declared delivered amount (taker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f0f5bc2d277a7a06bd28dd8aae83ec3f9f23e401878ed3dd3912b90c6ea8f840",
                          "typeString": "literal_string \"Incorrect declared delivered amount (taker)\""
                        }
                      ],
                      "id": 44294,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "22025:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 44298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22025:74:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44299,
                  "nodeType": "ExpressionStatement",
                  "src": "22025:74:73"
                }
              ]
            },
            "functionSelector": "73e33e1b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_fillGives_at_0_wants_works",
            "nameLocation": "21605:31:73",
            "parameters": {
              "id": 44239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21636:2:73"
            },
            "returnParameters": {
              "id": 44240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21646:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44358,
            "nodeType": "FunctionDefinition",
            "src": "22108:471:73",
            "body": {
              "id": 44357,
              "nodeType": "Block",
              "src": "22153:426:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 44307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22172:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "32",
                        "id": 44308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22181:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 44309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22190:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 44310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22198:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 44304,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "22159:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 44306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "22159:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 44311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22159:41:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44312,
                  "nodeType": "ExpressionStatement",
                  "src": "22159:41:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 44316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22217:18:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 44313,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "22206:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 44315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "22206:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 44317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22206:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44318,
                  "nodeType": "ExpressionStatement",
                  "src": "22206:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44323,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "22258:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 44322,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "22256:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 44324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22256:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 44325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22264:8:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 44319,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "22242:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 44321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "22242:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 44326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22242:31:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44327,
                  "nodeType": "ExpressionStatement",
                  "src": "22242:31:73"
                },
                {
                  "assignments": [44329, 44331, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44329,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "22286:8:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44357,
                      "src": "22281:13:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44328,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "22281:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 44331,
                      "mutability": "mutable",
                      "name": "takerGave",
                      "nameLocation": "22301:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44357,
                      "src": "22296:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44330,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "22296:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 44344,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44335,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "22343:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44334,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "22341:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22341:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44338,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "22358:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44337,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "22356:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22356:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 44340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22372:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "32",
                        "id": 44341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22387:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 44342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22402:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 44332,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "22318:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 44333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3435,
                      "src": "22318:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 44343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22318:95:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22280:133:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44346,
                        "name": "takerGave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44331,
                        "src": "22428:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 44347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22439:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c617265642064656c69766572656420616d6f756e7420286d616b657229",
                        "id": 44348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22448:45:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f35c65aac30015b405231e89ea11cfa58ab9dc6974ab802ea71571c191677c8f",
                          "typeString": "literal_string \"Incorrect declared delivered amount (maker)\""
                        },
                        "value": "Incorrect declared delivered amount (maker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f35c65aac30015b405231e89ea11cfa58ab9dc6974ab802ea71571c191677c8f",
                          "typeString": "literal_string \"Incorrect declared delivered amount (maker)\""
                        }
                      ],
                      "id": 44345,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "22419:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 44349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22419:75:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44350,
                  "nodeType": "ExpressionStatement",
                  "src": "22419:75:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44352,
                        "name": "takerGot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44329,
                        "src": "22509:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 44353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22519:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c617265642064656c69766572656420616d6f756e74202874616b657229",
                        "id": 44354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22528:45:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f0f5bc2d277a7a06bd28dd8aae83ec3f9f23e401878ed3dd3912b90c6ea8f840",
                          "typeString": "literal_string \"Incorrect declared delivered amount (taker)\""
                        },
                        "value": "Incorrect declared delivered amount (taker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f0f5bc2d277a7a06bd28dd8aae83ec3f9f23e401878ed3dd3912b90c6ea8f840",
                          "typeString": "literal_string \"Incorrect declared delivered amount (taker)\""
                        }
                      ],
                      "id": 44351,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "22500:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 44355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22500:74:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44356,
                  "nodeType": "ExpressionStatement",
                  "src": "22500:74:73"
                }
              ]
            },
            "functionSelector": "ce980d16",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_empty_wants_fillGives",
            "nameLocation": "22117:26:73",
            "parameters": {
              "id": 44302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22143:2:73"
            },
            "returnParameters": {
              "id": 44303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22153:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44415,
            "nodeType": "FunctionDefinition",
            "src": "22583:470:73",
            "body": {
              "id": 44414,
              "nodeType": "Block",
              "src": "22628:425:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 44364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22647:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "32",
                        "id": 44365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22656:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 44366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22665:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 44367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22673:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 44361,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "22634:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 44363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "22634:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 44368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22634:41:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44369,
                  "nodeType": "ExpressionStatement",
                  "src": "22634:41:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 44373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22692:18:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 44370,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "22681:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 44372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "22681:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 44374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22681:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44375,
                  "nodeType": "ExpressionStatement",
                  "src": "22681:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44380,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "22733:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 44379,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "22731:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 44381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22731:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 44382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22739:8:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 44376,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "22717:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 44378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "22717:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 44383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22717:31:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44384,
                  "nodeType": "ExpressionStatement",
                  "src": "22717:31:73"
                },
                {
                  "assignments": [44386, 44388, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44386,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "22761:8:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44414,
                      "src": "22756:13:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44385,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "22756:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 44388,
                      "mutability": "mutable",
                      "name": "takerGave",
                      "nameLocation": "22776:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44414,
                      "src": "22771:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44387,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "22771:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 44401,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44392,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "22818:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44391,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "22816:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22816:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44395,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "22833:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44394,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "22831:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22831:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 44397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22847:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "32",
                        "id": 44398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22862:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 44399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22877:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 44389,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "22793:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 44390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3435,
                      "src": "22793:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 44400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22793:94:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22755:132:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44403,
                        "name": "takerGave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44388,
                        "src": "22902:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 44404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22913:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c617265642064656c69766572656420616d6f756e7420286d616b657229",
                        "id": 44405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22922:45:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f35c65aac30015b405231e89ea11cfa58ab9dc6974ab802ea71571c191677c8f",
                          "typeString": "literal_string \"Incorrect declared delivered amount (maker)\""
                        },
                        "value": "Incorrect declared delivered amount (maker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f35c65aac30015b405231e89ea11cfa58ab9dc6974ab802ea71571c191677c8f",
                          "typeString": "literal_string \"Incorrect declared delivered amount (maker)\""
                        }
                      ],
                      "id": 44402,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "22893:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 44406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22893:75:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44407,
                  "nodeType": "ExpressionStatement",
                  "src": "22893:75:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44409,
                        "name": "takerGot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44386,
                        "src": "22983:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 44410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22993:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c617265642064656c69766572656420616d6f756e74202874616b657229",
                        "id": 44411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23002:45:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f0f5bc2d277a7a06bd28dd8aae83ec3f9f23e401878ed3dd3912b90c6ea8f840",
                          "typeString": "literal_string \"Incorrect declared delivered amount (taker)\""
                        },
                        "value": "Incorrect declared delivered amount (taker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f0f5bc2d277a7a06bd28dd8aae83ec3f9f23e401878ed3dd3912b90c6ea8f840",
                          "typeString": "literal_string \"Incorrect declared delivered amount (taker)\""
                        }
                      ],
                      "id": 44408,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "22974:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 44412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22974:74:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44413,
                  "nodeType": "ExpressionStatement",
                  "src": "22974:74:73"
                }
              ]
            },
            "functionSelector": "e8205853",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_empty_wants_fillWants",
            "nameLocation": "22592:26:73",
            "parameters": {
              "id": 44359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22618:2:73"
            },
            "returnParameters": {
              "id": 44360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22628:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44478,
            "nodeType": "FunctionDefinition",
            "src": "23057:427:73",
            "body": {
              "id": 44477,
              "nodeType": "Block",
              "src": "23111:373:73",
              "statements": [
                {
                  "assignments": [44419],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44419,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "23122:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44477,
                      "src": "23117:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44418,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "23117:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44427,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "313030",
                        "id": 44422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23141:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "32",
                        "id": 44423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23152:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 44424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23161:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 44425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23169:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 44420,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "23128:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 44421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "23128:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 44426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23128:43:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23117:54:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 44431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23188:18:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 44428,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "23177:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 44430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "23177:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 44432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23177:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44433,
                  "nodeType": "ExpressionStatement",
                  "src": "23177:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44438,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "23230:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 44437,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "23228:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 44439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23228:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 44440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23236:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 44434,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "23214:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 44436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "23214:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 44441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23214:32:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44442,
                  "nodeType": "ExpressionStatement",
                  "src": "23214:32:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44447,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "23267:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 44446,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "23265:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 44448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23265:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 44449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23273:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 44443,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "23252:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 44445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "23252:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 44450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23252:29:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44451,
                  "nodeType": "ExpressionStatement",
                  "src": "23252:29:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f74616b65725472616e736665724661696c",
                        "id": 44455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23334:23:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e79742e7ced315361b2f8080130843f008a02f29a4f8e0d2c2ca5086b46bd5",
                          "typeString": "literal_string \"mgv/takerTransferFail\""
                        },
                        "value": "mgv/takerTransferFail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_37e79742e7ced315361b2f8080130843f008a02f29a4f8e0d2c2ca5086b46bd5",
                          "typeString": "literal_string \"mgv/takerTransferFail\""
                        }
                      ],
                      "expression": {
                        "id": 44452,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "23318:2:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "23318:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 44456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23318:40:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44457,
                  "nodeType": "ExpressionStatement",
                  "src": "23318:40:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44462,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "23384:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44461,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "23382:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23382:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44465,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "23399:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44464,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "23397:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23397:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 44468,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44419,
                                "src": "23427:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "32",
                                "id": 44469,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "23432:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2000000000000000000_by_1",
                                  "typeString": "int_const 2000000000000000000"
                                },
                                "value": "2"
                              },
                              {
                                "hexValue": "313030",
                                "id": 44470,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "23441:9:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000000000000000000_by_1",
                                  "typeString": "int_const 100000000000000000000"
                                },
                                "value": "100"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 44471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "23452:7:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 44472,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "23426:34:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 44467,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "23413:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 44473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23413:48:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 44474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23469:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 44458,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "23364:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 44460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "23364:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 44475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23364:115:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 44476,
                  "nodeType": "ExpressionStatement",
                  "src": "23364:115:73"
                }
              ]
            },
            "functionSelector": "53cc12bd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_taker_has_no_quote_fails_order",
            "nameLocation": "23066:35:73",
            "parameters": {
              "id": 44416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23101:2:73"
            },
            "returnParameters": {
              "id": 44417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23111:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44556,
            "nodeType": "FunctionDefinition",
            "src": "23488:661:73",
            "body": {
              "id": 44555,
              "nodeType": "Block",
              "src": "23549:600:73",
              "statements": [
                {
                  "assignments": [44482],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44482,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "23560:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44555,
                      "src": "23555:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44481,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "23555:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44490,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 44485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23579:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "313030",
                        "id": 44486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23588:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 44487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23599:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 44488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23608:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 44483,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "23566:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 44484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "23566:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 44489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23566:44:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23555:55:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f6d616b65725472616e736665724661696c",
                        "id": 44494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23627:23:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_191b6fad9b9873ed5d4dc376f08b9d6dfaeea88da2bbf7929b8c1cd9f5c22f29",
                          "typeString": "literal_string \"mgv/makerTransferFail\""
                        },
                        "value": "mgv/makerTransferFail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_191b6fad9b9873ed5d4dc376f08b9d6dfaeea88da2bbf7929b8c1cd9f5c22f29",
                          "typeString": "literal_string \"mgv/makerTransferFail\""
                        }
                      ],
                      "expression": {
                        "id": 44491,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "23616:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 44493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "23616:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 44495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23616:35:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44496,
                  "nodeType": "ExpressionStatement",
                  "src": "23616:35:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44501,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "23754:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 44500,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "23752:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 44502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23752:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "302e35",
                        "id": 44503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23760:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 44497,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "23738:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 44499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "23738:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 44504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23738:32:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44505,
                  "nodeType": "ExpressionStatement",
                  "src": "23738:32:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44508,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "23790:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 44507,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "23788:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 44509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23788:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 44506,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "23777:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 44510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23777:18:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44511,
                  "nodeType": "ExpressionStatement",
                  "src": "23777:18:73"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44514,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "23825:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44513,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "23823:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23823:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44517,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "23840:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44516,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "23838:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23838:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 44519,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44482,
                        "src": "23854:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44521,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "23867:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 44520,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "23865:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 44522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23865:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3530",
                        "id": 44523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23880:8:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        },
                        "value": "50"
                      },
                      {
                        "hexValue": "302e35",
                        "id": 44524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23896:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      },
                      {
                        "hexValue": "6d67762f6d616b65725472616e736665724661696c",
                        "id": 44525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23913:23:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_191b6fad9b9873ed5d4dc376f08b9d6dfaeea88da2bbf7929b8c1cd9f5c22f29",
                          "typeString": "literal_string \"mgv/makerTransferFail\""
                        },
                        "value": "mgv/makerTransferFail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_191b6fad9b9873ed5d4dc376f08b9d6dfaeea88da2bbf7929b8c1cd9f5c22f29",
                          "typeString": "literal_string \"mgv/makerTransferFail\""
                        }
                      ],
                      "id": 44512,
                      "name": "OfferFail",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1861,
                      "src": "23806:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 44526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23806:136:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44527,
                  "nodeType": "EmitStatement",
                  "src": "23801:141:73"
                },
                {
                  "assignments": [44529, null, null, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44529,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "23954:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44555,
                      "src": "23949:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44528,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "23949:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 44547,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44533,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "23995:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44532,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "23993:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23993:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44536,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "24010:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44535,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "24008:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24008:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 44539,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44482,
                                "src": "24038:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "3530",
                                "id": 44540,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "24043:8:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_50000000000000000000_by_1",
                                  "typeString": "int_const 50000000000000000000"
                                },
                                "value": "50"
                              },
                              {
                                "hexValue": "302e35",
                                "id": 44541,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "24053:9:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_500000000000000000_by_1",
                                  "typeString": "int_const 500000000000000000"
                                },
                                "value": "0.5"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 44542,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "24064:7:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 44543,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "24037:35:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 44538,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "24024:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 44544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24024:49:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 44545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24081:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 44530,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "23975:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 44531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "23975:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 44546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23975:116:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23948:143:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 44551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 44549,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44529,
                          "src": "24108:9:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 44550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24121:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24108:14:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f726465722073686f756c64206661696c",
                        "id": 44552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24124:19:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_727f3cfc347473ca117a58e0c620e4c6f52fabc3af967183361800b43d50c9db",
                          "typeString": "literal_string \"order should fail\""
                        },
                        "value": "order should fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_727f3cfc347473ca117a58e0c620e4c6f52fabc3af967183361800b43d50c9db",
                          "typeString": "literal_string \"order should fail\""
                        }
                      ],
                      "id": 44548,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "24097:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 44553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24097:47:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44554,
                  "nodeType": "ExpressionStatement",
                  "src": "24097:47:73"
                }
              ]
            },
            "functionSelector": "dc46f1de",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_maker_has_not_enough_base_fails_order",
            "nameLocation": "23497:42:73",
            "parameters": {
              "id": 44479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23539:2:73"
            },
            "returnParameters": {
              "id": 44480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23549:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44632,
            "nodeType": "FunctionDefinition",
            "src": "24153:488:73",
            "body": {
              "id": 44631,
              "nodeType": "Block",
              "src": "24199:442:73",
              "statements": [
                {
                  "assignments": [44560],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44560,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "24210:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44631,
                      "src": "24205:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44559,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "24205:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44568,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 44563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24229:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 44564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24238:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 44565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24247:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 44566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24255:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 44561,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "24216:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 44562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "24216:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 44567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24216:41:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24205:52:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f6d616b6572526576657274",
                        "id": 44572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24274:17:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f1767113efd8f000c2792fdbf6264b4b726d4e8bf3e972fc7ed78ddedf9a514",
                          "typeString": "literal_string \"mgv/makerRevert\""
                        },
                        "value": "mgv/makerRevert"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7f1767113efd8f000c2792fdbf6264b4b726d4e8bf3e972fc7ed78ddedf9a514",
                          "typeString": "literal_string \"mgv/makerRevert\""
                        }
                      ],
                      "expression": {
                        "id": 44569,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "24263:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 44571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "24263:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 44573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24263:29:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44574,
                  "nodeType": "ExpressionStatement",
                  "src": "24263:29:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 44578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24315:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 44575,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "24298:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 44577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shouldRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48965,
                      "src": "24298:16:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 44579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24298:22:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44580,
                  "nodeType": "ExpressionStatement",
                  "src": "24298:22:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44585,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "24342:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 44584,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "24340:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 44586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24340:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 44587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24348:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 44581,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "24326:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 44583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "24326:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 44588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24326:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44589,
                  "nodeType": "ExpressionStatement",
                  "src": "24326:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44592,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "24375:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 44591,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "24373:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 44593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24373:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 44590,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "24362:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 44594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24362:18:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44595,
                  "nodeType": "ExpressionStatement",
                  "src": "24362:18:73"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44598,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "24410:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44597,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "24408:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24408:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44601,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "24425:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44600,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "24423:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24423:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 44603,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44560,
                        "src": "24439:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44605,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "24452:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 44604,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "24450:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 44606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24450:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 44607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24465:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 44608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24480:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "6d67762f6d616b6572526576657274",
                        "id": 44609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24495:17:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f1767113efd8f000c2792fdbf6264b4b726d4e8bf3e972fc7ed78ddedf9a514",
                          "typeString": "literal_string \"mgv/makerRevert\""
                        },
                        "value": "mgv/makerRevert"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f1767113efd8f000c2792fdbf6264b4b726d4e8bf3e972fc7ed78ddedf9a514",
                          "typeString": "literal_string \"mgv/makerRevert\""
                        }
                      ],
                      "id": 44596,
                      "name": "OfferFail",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1861,
                      "src": "24391:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 44610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24391:127:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44611,
                  "nodeType": "EmitStatement",
                  "src": "24386:132:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44616,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "24544:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44615,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "24542:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24542:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44619,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "24559:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44618,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "24557:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24557:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 44622,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44560,
                                "src": "24587:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 44623,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "24592:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 44624,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "24601:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "35305f303030",
                                "id": 44625,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "24610:6:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_50000_by_1",
                                  "typeString": "int_const 50000"
                                },
                                "value": "50_000"
                              }
                            ],
                            "id": 44626,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "24586:31:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 44621,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "24573:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 44627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24573:45:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 44628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24626:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 44612,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "24524:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 44614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "24524:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 44629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24524:112:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 44630,
                  "nodeType": "ExpressionStatement",
                  "src": "24524:112:73"
                }
              ]
            },
            "functionSelector": "b67fc16e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_maker_revert_is_logged",
            "nameLocation": "24162:27:73",
            "parameters": {
              "id": 44557,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24189:2:73"
            },
            "returnParameters": {
              "id": 44558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24199:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44682,
            "nodeType": "FunctionDefinition",
            "src": "24645:411:73",
            "body": {
              "id": 44681,
              "nodeType": "Block",
              "src": "24696:360:73",
              "statements": [
                {
                  "assignments": [44636],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44636,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "24707:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44681,
                      "src": "24702:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44635,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "24702:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44644,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 44639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24726:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 44640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24735:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 44641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24744:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 44642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24753:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 44637,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "24713:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 44638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "24713:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 44643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24713:42:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24702:53:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44649,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "24777:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 44648,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "24775:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 44650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24775:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "302e35",
                        "id": 44651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24783:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 44645,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "24761:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 44647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "24761:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 44652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24761:32:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44653,
                  "nodeType": "ExpressionStatement",
                  "src": "24761:32:73"
                },
                {
                  "assignments": [44655, null, null, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44655,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "24806:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44681,
                      "src": "24801:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44654,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "24801:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 44673,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44659,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "24847:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44658,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "24845:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24845:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44662,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "24862:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44661,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "24860:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24860:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 44665,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44636,
                                "src": "24890:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 44666,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "24895:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "302e35",
                                "id": 44667,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "24904:9:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_500000000000000000_by_1",
                                  "typeString": "int_const 500000000000000000"
                                },
                                "value": "0.5"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 44668,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "24915:7:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 44669,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "24889:34:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 44664,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "24876:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 44670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24876:48:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 44671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24932:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 44656,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "24827:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 44657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "24827:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 44672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24827:115:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24800:142:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 44677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 44675,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44655,
                          "src": "24966:9:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 44676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24979:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24966:14:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f726465722073686f756c64206661696c207768656e206f7264657220707269636520697320686967686572207468616e206f66666572",
                        "id": 44678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24988:57:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5840cf37e54b73cb837cdd7357acbed67730e84a1252de04b6d0035d44174aa6",
                          "typeString": "literal_string \"Order should fail when order price is higher than offer\""
                        },
                        "value": "Order should fail when order price is higher than offer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5840cf37e54b73cb837cdd7357acbed67730e84a1252de04b6d0035d44174aa6",
                          "typeString": "literal_string \"Order should fail when order price is higher than offer\""
                        }
                      ],
                      "id": 44674,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "24948:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 44679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24948:103:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44680,
                  "nodeType": "ExpressionStatement",
                  "src": "24948:103:73"
                }
              ]
            },
            "functionSelector": "2f4ebf8e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_on_higher_price_fails",
            "nameLocation": "24654:32:73",
            "parameters": {
              "id": 44633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24686:2:73"
            },
            "returnParameters": {
              "id": 44634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24696:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44732,
            "nodeType": "FunctionDefinition",
            "src": "25060:402:73",
            "body": {
              "id": 44731,
              "nodeType": "Block",
              "src": "25109:353:73",
              "statements": [
                {
                  "assignments": [44686],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44686,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "25120:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44731,
                      "src": "25115:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44685,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "25115:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44694,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 44689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25139:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 44690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25148:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 44691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25157:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 44692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25166:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 44687,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "25126:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 44688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "25126:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 44693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25126:42:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25115:53:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44699,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "25190:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 44698,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "25188:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 44700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25188:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 44701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25196:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 44695,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "25174:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 44697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "25174:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 44702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25174:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44703,
                  "nodeType": "ExpressionStatement",
                  "src": "25174:30:73"
                },
                {
                  "assignments": [44705, null, null, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44705,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "25217:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44731,
                      "src": "25212:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44704,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "25212:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 44723,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44709,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "25258:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44708,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "25256:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25256:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44712,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "25273:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44711,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "25271:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25271:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 44715,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44686,
                                "src": "25301:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 44716,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "25306:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 44717,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "25315:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "35305f303030",
                                "id": 44718,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "25324:6:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_50000_by_1",
                                  "typeString": "int_const 50000"
                                },
                                "value": "50_000"
                              }
                            ],
                            "id": 44719,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "25300:31:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 44714,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "25287:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 44720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25287:45:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 44721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25340:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 44706,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "25238:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 44707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "25238:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 44722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25238:112:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25211:139:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 44727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 44725,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44705,
                          "src": "25374:9:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 44726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25387:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "25374:14:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f726465722073686f756c64206661696c207768656e206f726465722067617320697320686967686572207468616e206f66666572",
                        "id": 44728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25396:55:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c2cff5808376c6801bcec3034b0f790b2ee2373d3ed24f0a56ecce70a65c4f6",
                          "typeString": "literal_string \"Order should fail when order gas is higher than offer\""
                        },
                        "value": "Order should fail when order gas is higher than offer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c2cff5808376c6801bcec3034b0f790b2ee2373d3ed24f0a56ecce70a65c4f6",
                          "typeString": "literal_string \"Order should fail when order gas is higher than offer\""
                        }
                      ],
                      "id": 44724,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "25356:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 44729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25356:101:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44730,
                  "nodeType": "ExpressionStatement",
                  "src": "25356:101:73"
                }
              ]
            },
            "functionSelector": "64a0bf40",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_on_higher_gas_fails",
            "nameLocation": "25069:30:73",
            "parameters": {
              "id": 44683,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25099:2:73"
            },
            "returnParameters": {
              "id": 44684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25109:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44806,
            "nodeType": "FunctionDefinition",
            "src": "25466:540:73",
            "body": {
              "id": 44805,
              "nodeType": "Block",
              "src": "25503:503:73",
              "statements": [
                {
                  "assignments": [44736],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44736,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "25514:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44805,
                      "src": "25509:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44735,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "25509:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44744,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 44739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25533:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 44740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25542:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 44741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25551:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 44742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25560:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 44737,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "25520:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 44738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "25520:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 44743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25520:42:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25509:53:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44749,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "25584:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 44748,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "25582:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 44750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25582:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 44751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25590:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 44745,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "25568:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 44747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "25568:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 44752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25568:32:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44753,
                  "nodeType": "ExpressionStatement",
                  "src": "25568:32:73"
                },
                {
                  "assignments": [44755],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44755,
                      "mutability": "mutable",
                      "name": "cd",
                      "nameLocation": "25620:2:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44805,
                      "src": "25607:15:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 44754,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "25607:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44776,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 44758,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "25655:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 44759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "snipes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3932,
                          "src": "25655:10:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                            "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                          }
                        },
                        "id": 44760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "25655:19:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44762,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "25684:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44761,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "25682:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25682:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44765,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "25699:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44764,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "25697:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25697:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 44768,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44736,
                                "src": "25727:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 44769,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "25732:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 44770,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "25741:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 44771,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "25750:7:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 44772,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "25726:32:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 44767,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "25713:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 44773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25713:46:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 44774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25767:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 44756,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "25625:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 44757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "25625:22:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 44775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25625:152:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25607:170:73"
                },
                {
                  "assignments": [44778, 44780],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44778,
                      "mutability": "mutable",
                      "name": "noRevert",
                      "nameLocation": "25790:8:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44805,
                      "src": "25785:13:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 44777,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "25785:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 44780,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "25813:4:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44805,
                      "src": "25800:17:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 44779,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "25800:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44789,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 44787,
                        "name": "cd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44755,
                        "src": "25846:2:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 44782,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45875,
                              "src": "25823:3:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                "typeString": "contract AbstractMangrove"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                "typeString": "contract AbstractMangrove"
                              }
                            ],
                            "id": 44781,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 46990,
                            "src": "25821:1:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                              "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                            }
                          },
                          "id": 44783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25821:6:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 44784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "25821:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 44786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["gas"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "313330303030",
                          "id": 44785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25838:6:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_130000_by_1",
                            "typeString": "int_const 130000"
                          },
                          "value": "130000"
                        }
                      ],
                      "src": "25821:24:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 44788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25821:28:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25784:65:73"
                },
                {
                  "condition": {
                    "id": 44790,
                    "name": "noRevert",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44778,
                    "src": "25859:8:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 44803,
                    "nodeType": "Block",
                    "src": "25929:73:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 44798,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44780,
                                  "src": "25956:4:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 44797,
                                "name": "getReason",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47729,
                                "src": "25946:9:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (bytes memory) pure returns (string memory)"
                                }
                              },
                              "id": 44799,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "25946:15:73",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "6d67762f6e6f74456e6f756768476173466f724d616b65725472616465",
                              "id": 44800,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "25963:31:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5246306ac569cc75cea2c306998865132932851dbfd0ba003237c65b3dc8b519",
                                "typeString": "literal_string \"mgv/notEnoughGasForMakerTrade\""
                              },
                              "value": "mgv/notEnoughGasForMakerTrade"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5246306ac569cc75cea2c306998865132932851dbfd0ba003237c65b3dc8b519",
                                "typeString": "literal_string \"mgv/notEnoughGasForMakerTrade\""
                              }
                            ],
                            "id": 44796,
                            "name": "revertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47238,
                            "src": "25937:8:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (string memory,string memory) returns (bool)"
                            }
                          },
                          "id": 44801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25937:58:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44802,
                        "nodeType": "ExpressionStatement",
                        "src": "25937:58:73"
                      }
                    ]
                  },
                  "id": 44804,
                  "nodeType": "IfStatement",
                  "src": "25855:147:73",
                  "trueBody": {
                    "id": 44795,
                    "nodeType": "Block",
                    "src": "25869:54:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "74616b652073686f756c64206661696c2064756520746f206c6f7720676173",
                              "id": 44792,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "25882:33:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5f5a43ee50672e5a0d3d2cce29584a046e40f8291668e429ec8c558e3ae907b1",
                                "typeString": "literal_string \"take should fail due to low gas\""
                              },
                              "value": "take should fail due to low gas"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_5f5a43ee50672e5a0d3d2cce29584a046e40f8291668e429ec8c558e3ae907b1",
                                "typeString": "literal_string \"take should fail due to low gas\""
                              }
                            ],
                            "id": 44791,
                            "name": "fail",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [61358, 59174],
                            "referencedDeclaration": 61358,
                            "src": "25877:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 44793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25877:39:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 44794,
                        "nodeType": "ExpressionStatement",
                        "src": "25877:39:73"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "7d4258d1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_detect_lowgas",
            "nameLocation": "25475:18:73",
            "parameters": {
              "id": 44733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25493:2:73"
            },
            "returnParameters": {
              "id": 44734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25503:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44902,
            "nodeType": "FunctionDefinition",
            "src": "26010:807:73",
            "body": {
              "id": 44901,
              "nodeType": "Block",
              "src": "26063:754:73",
              "statements": [
                {
                  "assignments": [44810],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44810,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "26074:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44901,
                      "src": "26069:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44809,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "26069:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44818,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 44813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26093:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 44814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26102:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 44815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26111:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 44816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26120:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 44811,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "26080:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 44812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "26080:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 44817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26080:42:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26069:53:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44823,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "26144:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 44822,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "26142:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 44824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26142:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 44825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26150:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 44819,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "26128:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 44821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "26128:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 44826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26128:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44827,
                  "nodeType": "ExpressionStatement",
                  "src": "26128:30:73"
                },
                {
                  "assignments": [44829],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44829,
                      "mutability": "mutable",
                      "name": "balTaker",
                      "nameLocation": "26169:8:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44901,
                      "src": "26164:13:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44828,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "26164:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44836,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44833,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "26197:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                              "typeString": "contract TakerOperationsTest"
                            }
                          ],
                          "id": 44832,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "26195:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 44834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26195:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 44830,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "26180:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 44831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50187,
                      "src": "26180:14:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 44835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26180:23:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26164:39:73"
                },
                {
                  "assignments": [44838],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44838,
                      "mutability": "mutable",
                      "name": "balMaker",
                      "nameLocation": "26214:8:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44901,
                      "src": "26209:13:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44837,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "26209:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44846,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44843,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41287,
                            "src": "26249:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 44842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "26241:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44841,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "26241:7:73",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26241:12:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 44839,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "26225:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 44840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50187,
                      "src": "26225:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 44845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26225:29:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26209:45:73"
                },
                {
                  "assignments": [44848, null, null, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44848,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "26267:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 44901,
                      "src": "26262:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44847,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "26262:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 44866,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44852,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "26308:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44851,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "26306:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26306:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44855,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "26323:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44854,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "26321:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26321:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 44858,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44810,
                                "src": "26351:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 44859,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "26356:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "32",
                                "id": 44860,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "26365:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2000000000000000000_by_1",
                                  "typeString": "int_const 2000000000000000000"
                                },
                                "value": "2"
                              },
                              {
                                "hexValue": "3130305f303030",
                                "id": 44861,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "26374:7:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100_000"
                              }
                            ],
                            "id": 44862,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "26350:32:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 44857,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "26337:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 44863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26337:46:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 44864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26391:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 44849,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "26288:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 44850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "26288:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 44865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26288:113:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26261:140:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 44870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 44868,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44848,
                          "src": "26425:9:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 44869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "26438:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "26425:14:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f726465722073686f756c642073756363656564207768656e206f72646572207072696365206973206c6f776572207468616e206f66666572",
                        "id": 44871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26447:59:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22abefe6bc7687346f02ef484ab6c4eb426bc67d8ad0bcd11a5864a227fe2c79",
                          "typeString": "literal_string \"Order should succeed when order price is lower than offer\""
                        },
                        "value": "Order should succeed when order price is lower than offer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22abefe6bc7687346f02ef484ab6c4eb426bc67d8ad0bcd11a5864a227fe2c79",
                          "typeString": "literal_string \"Order should succeed when order price is lower than offer\""
                        }
                      ],
                      "id": 44867,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "26407:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 44872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26407:105:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44873,
                  "nodeType": "ExpressionStatement",
                  "src": "26407:105:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 44882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 44878,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "26603:4:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                                    "typeString": "contract TakerOperationsTest"
                                  }
                                ],
                                "id": 44877,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47041,
                                "src": "26601:1:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                                  "typeString": "function (contract Test) pure returns (address payable)"
                                }
                              },
                              "id": 44879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "26601:7:73",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 44875,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45878,
                              "src": "26586:4:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 44876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50187,
                            "src": "26586:14:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 44880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26586:23:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 44881,
                          "name": "balTaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44829,
                          "src": "26612:8:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "26586:34:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 44883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26628:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "496e636f72726563742064656c69766572656420616d6f756e74202874616b657229",
                        "id": 44884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26643:36:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_672c0a4a486572838d2f8295447fe00a5de7a0639e02422cae58e48234debafd",
                          "typeString": "literal_string \"Incorrect delivered amount (taker)\""
                        },
                        "value": "Incorrect delivered amount (taker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_672c0a4a486572838d2f8295447fe00a5de7a0639e02422cae58e48234debafd",
                          "typeString": "literal_string \"Incorrect delivered amount (taker)\""
                        }
                      ],
                      "id": 44874,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "26570:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 44885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26570:115:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44886,
                  "nodeType": "ExpressionStatement",
                  "src": "26570:115:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 44896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 44892,
                                  "name": "mkr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41287,
                                  "src": "26731:3:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestMaker_$49499",
                                    "typeString": "contract TestMaker"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestMaker_$49499",
                                    "typeString": "contract TestMaker"
                                  }
                                ],
                                "id": 44891,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "26723:7:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 44890,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "26723:7:73",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 44893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "26723:12:73",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 44888,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45881,
                              "src": "26707:5:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 44889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50187,
                            "src": "26707:15:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 44894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26707:29:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 44895,
                          "name": "balMaker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44838,
                          "src": "26739:8:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "26707:40:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 44897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26755:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "496e636f72726563742064656c69766572656420616d6f756e7420286d616b657229",
                        "id": 44898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26770:36:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c21b825bc94078ca03c7a8a95d9e4e8d4aa605eae14783effd0f2a5ee272156",
                          "typeString": "literal_string \"Incorrect delivered amount (maker)\""
                        },
                        "value": "Incorrect delivered amount (maker)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c21b825bc94078ca03c7a8a95d9e4e8d4aa605eae14783effd0f2a5ee272156",
                          "typeString": "literal_string \"Incorrect delivered amount (maker)\""
                        }
                      ],
                      "id": 44887,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "26691:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 44899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26691:121:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44900,
                  "nodeType": "ExpressionStatement",
                  "src": "26691:121:73"
                }
              ]
            },
            "functionSelector": "9737b577",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_on_lower_price_succeeds",
            "nameLocation": "26019:34:73",
            "parameters": {
              "id": 44807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26053:2:73"
            },
            "returnParameters": {
              "id": 44808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26063:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44936,
            "nodeType": "FunctionDefinition",
            "src": "27027:319:73",
            "body": {
              "id": 44935,
              "nodeType": "Block",
              "src": "27080:266:73",
              "statements": [
                {
                  "body": {
                    "id": 44924,
                    "nodeType": "Block",
                    "src": "27116:64:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "302e303031",
                              "id": 44918,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27137:11:73",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000_by_1",
                                "typeString": "int_const 1000000000000000"
                              },
                              "value": "0.001"
                            },
                            {
                              "hexValue": "302e303031",
                              "id": 44919,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27150:11:73",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000_by_1",
                                "typeString": "int_const 1000000000000000"
                              },
                              "value": "0.001"
                            },
                            {
                              "hexValue": "35305f303030",
                              "id": 44920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27163:6:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50000_by_1",
                                "typeString": "int_const 50000"
                              },
                              "value": "50_000"
                            },
                            {
                              "id": 44921,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44906,
                              "src": "27171:1:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000000000000_by_1",
                                "typeString": "int_const 1000000000000000"
                              },
                              {
                                "typeIdentifier": "t_rational_1000000000000000_by_1",
                                "typeString": "int_const 1000000000000000"
                              },
                              {
                                "typeIdentifier": "t_rational_50000_by_1",
                                "typeString": "int_const 50000"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 44915,
                              "name": "mkr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41287,
                              "src": "27124:3:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestMaker_$49499",
                                "typeString": "contract TestMaker"
                              }
                            },
                            "id": 44917,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "newOffer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49210,
                            "src": "27124:12:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                            }
                          },
                          "id": 44922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27124:49:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 44923,
                        "nodeType": "ExpressionStatement",
                        "src": "27124:49:73"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 44911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 44909,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44906,
                      "src": "27103:1:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3530",
                      "id": 44910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "27107:2:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "src": "27103:6:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44925,
                  "initializationExpression": {
                    "assignments": [44906],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 44906,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "27096:1:73",
                        "nodeType": "VariableDeclaration",
                        "scope": 44925,
                        "src": "27091:6:73",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 44905,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "27091:4:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 44908,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 44907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "27100:1:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "27091:10:73"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 44913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "27111:3:73",
                      "subExpression": {
                        "id": 44912,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44906,
                        "src": "27111:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 44914,
                    "nodeType": "ExpressionStatement",
                    "src": "27111:3:73"
                  },
                  "nodeType": "ForStatement",
                  "src": "27086:94:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44930,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "27201:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 44929,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "27199:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 44931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27199:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 44932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27207:8:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 44926,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "27185:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 44928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "27185:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 44933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27185:31:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44934,
                  "nodeType": "ExpressionStatement",
                  "src": "27185:31:73"
                }
              ]
            },
            "functionSelector": "ff762768",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_recursion_depth_is_acceptable",
            "nameLocation": "27036:34:73",
            "parameters": {
              "id": 44903,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27070:2:73"
            },
            "returnParameters": {
              "id": 44904,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27080:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45005,
            "nodeType": "FunctionDefinition",
            "src": "27350:500:73",
            "body": {
              "id": 45004,
              "nodeType": "Block",
              "src": "27386:464:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44943,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "27408:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 44942,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "27406:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 44944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27406:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 44945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27414:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 44939,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "27392:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 44941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "27392:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 44946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27392:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44947,
                  "nodeType": "ExpressionStatement",
                  "src": "27392:30:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "302e31",
                        "id": 44951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27441:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      },
                      {
                        "hexValue": "302e31",
                        "id": 44952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27452:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 44953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27463:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 44954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27471:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 44948,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "27428:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 44950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "27428:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 44955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27428:45:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44956,
                  "nodeType": "ExpressionStatement",
                  "src": "27428:45:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "302e31",
                        "id": 44960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27492:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      },
                      {
                        "hexValue": "302e31",
                        "id": 44961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27503:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 44962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27514:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "31",
                        "id": 44963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27522:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 44957,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "27479:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 44959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "27479:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 44964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27479:45:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44965,
                  "nodeType": "ExpressionStatement",
                  "src": "27479:45:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 44969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27541:18:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 44966,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "27530:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 44968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "27530:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 44970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27530:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44971,
                  "nodeType": "ExpressionStatement",
                  "src": "27530:30:73"
                },
                {
                  "assignments": [44973, null, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44973,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "27572:8:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 45004,
                      "src": "27567:13:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44972,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "27567:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 44986,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44977,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "27615:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44976,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "27613:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27613:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44980,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "27630:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 44979,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "27628:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 44981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27628:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "302e3135",
                        "id": 44982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27644:10:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_150000000000000000_by_1",
                          "typeString": "int_const 150000000000000000"
                        },
                        "value": "0.15"
                      },
                      {
                        "hexValue": "302e3135",
                        "id": 44983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27662:10:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_150000000000000000_by_1",
                          "typeString": "int_const 150000000000000000"
                        },
                        "value": "0.15"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 44984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27680:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_150000000000000000_by_1",
                          "typeString": "int_const 150000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_150000000000000000_by_1",
                          "typeString": "int_const 150000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 44974,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "27590:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 44975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3435,
                      "src": "27590:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 44985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27590:100:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27566:124:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44988,
                        "name": "takerGot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44973,
                        "src": "27705:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e3135",
                        "id": 44989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27715:10:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_150000000000000000_by_1",
                          "typeString": "int_const 150000000000000000"
                        },
                        "value": "0.15"
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c61726564207061727469616c2066696c6c20616d6f756e74",
                        "id": 44990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27727:40:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45907c6fccd24ce57e369ae8a488c23553bea47366eb56cde7372e95795c6dfe",
                          "typeString": "literal_string \"Incorrect declared partial fill amount\""
                        },
                        "value": "Incorrect declared partial fill amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_150000000000000000_by_1",
                          "typeString": "int_const 150000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45907c6fccd24ce57e369ae8a488c23553bea47366eb56cde7372e95795c6dfe",
                          "typeString": "literal_string \"Incorrect declared partial fill amount\""
                        }
                      ],
                      "id": 44987,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "27696:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 44991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27696:72:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44992,
                  "nodeType": "ExpressionStatement",
                  "src": "27696:72:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 44997,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "27800:4:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                                  "typeString": "contract TakerOperationsTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TakerOperationsTest_$45518",
                                  "typeString": "contract TakerOperationsTest"
                                }
                              ],
                              "id": 44996,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47041,
                              "src": "27798:1:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 44998,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "27798:7:73",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 44994,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "27783:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 44995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50187,
                          "src": "27783:14:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 44999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27783:23:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e3135",
                        "id": 45000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27808:10:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_150000000000000000_by_1",
                          "typeString": "int_const 150000000000000000"
                        },
                        "value": "0.15"
                      },
                      {
                        "hexValue": "696e636f7272656374207061727469616c2066696c6c",
                        "id": 45001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27820:24:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd4ce127cb84c621ce96cc7cbbe4112aefad7b7f30ef4f1cbecad8412be0de11",
                          "typeString": "literal_string \"incorrect partial fill\""
                        },
                        "value": "incorrect partial fill"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_150000000000000000_by_1",
                          "typeString": "int_const 150000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd4ce127cb84c621ce96cc7cbbe4112aefad7b7f30ef4f1cbecad8412be0de11",
                          "typeString": "literal_string \"incorrect partial fill\""
                        }
                      ],
                      "id": 44993,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "27774:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 45002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27774:71:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45003,
                  "nodeType": "ExpressionStatement",
                  "src": "27774:71:73"
                }
              ]
            },
            "functionSelector": "835f7cde",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_partial_fill",
            "nameLocation": "27359:17:73",
            "parameters": {
              "id": 44937,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27376:2:73"
            },
            "returnParameters": {
              "id": 44938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27386:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45085,
            "nodeType": "FunctionDefinition",
            "src": "27897:506:73",
            "body": {
              "id": 45084,
              "nodeType": "Block",
              "src": "27954:449:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45012,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "27976:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 45011,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "27974:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 45013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27974:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 45014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27982:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45008,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "27960:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 45010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "27960:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 45015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27960:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45016,
                  "nodeType": "ExpressionStatement",
                  "src": "27960:30:73"
                },
                {
                  "body": {
                    "id": 45042,
                    "nodeType": "Block",
                    "src": "28026:72:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 45036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 45032,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 45030,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45018,
                                      "src": "28048:1:73",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 45031,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "28052:1:73",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "28048:5:73",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 45033,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "28047:7:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "components": [
                                  {
                                    "hexValue": "302e31",
                                    "id": 45034,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "28058:9:73",
                                    "subdenomination": "ether",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100000000000000000_by_1",
                                      "typeString": "int_const 100000000000000000"
                                    },
                                    "value": "0.1"
                                  }
                                ],
                                "id": 45035,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "28057:11:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000000000000000_by_1",
                                  "typeString": "int_const 100000000000000000"
                                }
                              },
                              "src": "28047:21:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "302e31",
                              "id": 45037,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28070:9:73",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000000000000_by_1",
                                "typeString": "int_const 100000000000000000"
                              },
                              "value": "0.1"
                            },
                            {
                              "hexValue": "35305f303030",
                              "id": 45038,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28081:6:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50000_by_1",
                                "typeString": "int_const 50000"
                              },
                              "value": "50_000"
                            },
                            {
                              "id": 45039,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45018,
                              "src": "28089:1:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_100000000000000000_by_1",
                                "typeString": "int_const 100000000000000000"
                              },
                              {
                                "typeIdentifier": "t_rational_50000_by_1",
                                "typeString": "int_const 50000"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 45027,
                              "name": "mkr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41287,
                              "src": "28034:3:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestMaker_$49499",
                                "typeString": "contract TestMaker"
                              }
                            },
                            "id": 45029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "newOffer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49210,
                            "src": "28034:12:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                            }
                          },
                          "id": 45040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28034:57:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 45041,
                        "nodeType": "ExpressionStatement",
                        "src": "28034:57:73"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 45021,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45018,
                      "src": "28013:1:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 45022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28017:2:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "28013:6:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45043,
                  "initializationExpression": {
                    "assignments": [45018],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 45018,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "28006:1:73",
                        "nodeType": "VariableDeclaration",
                        "scope": 45043,
                        "src": "28001:6:73",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 45017,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "28001:4:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 45020,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 45019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28010:1:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "28001:10:73"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 45025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "28021:3:73",
                      "subExpression": {
                        "id": 45024,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45018,
                        "src": "28021:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 45026,
                    "nodeType": "ExpressionStatement",
                    "src": "28021:3:73"
                  },
                  "nodeType": "ForStatement",
                  "src": "27996:102:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 45047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28114:18:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 45044,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "28103:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 45046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "28103:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 45048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28103:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45049,
                  "nodeType": "ExpressionStatement",
                  "src": "28103:30:73"
                },
                {
                  "assignments": [45051],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45051,
                      "mutability": "mutable",
                      "name": "takerWants",
                      "nameLocation": "28187:10:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 45084,
                      "src": "28182:15:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45050,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "28182:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45058,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_400000000000000000_by_1",
                      "typeString": "int_const 400000000000000000"
                    },
                    "id": 45057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "32",
                      "id": 45052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28200:1:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_200000000000000000_by_1",
                            "typeString": "int_const 200000000000000000"
                          },
                          "id": 45055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "302e31",
                            "id": 45053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28205:9:73",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            },
                            "value": "0.1"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "302e31",
                            "id": 45054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28217:9:73",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            },
                            "value": "0.1"
                          },
                          "src": "28205:21:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000000000000000_by_1",
                            "typeString": "int_const 200000000000000000"
                          }
                        }
                      ],
                      "id": 45056,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "28204:23:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_200000000000000000_by_1",
                        "typeString": "int_const 200000000000000000"
                      }
                    },
                    "src": "28200:27:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_400000000000000000_by_1",
                      "typeString": "int_const 400000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28182:45:73"
                },
                {
                  "assignments": [45060],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45060,
                      "mutability": "mutable",
                      "name": "takerGives",
                      "nameLocation": "28238:10:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 45084,
                      "src": "28233:15:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45059,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "28233:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45067,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_600000000000000000_by_1",
                      "typeString": "int_const 600000000000000000"
                    },
                    "id": 45066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "32",
                      "id": 45061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28251:1:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_300000000000000000_by_1",
                            "typeString": "int_const 300000000000000000"
                          },
                          "id": 45064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "302e31",
                            "id": 45062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28256:9:73",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            },
                            "value": "0.1"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "302e32",
                            "id": 45063,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28268:9:73",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_200000000000000000_by_1",
                              "typeString": "int_const 200000000000000000"
                            },
                            "value": "0.2"
                          },
                          "src": "28256:21:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_300000000000000000_by_1",
                            "typeString": "int_const 300000000000000000"
                          }
                        }
                      ],
                      "id": 45065,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "28255:23:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_300000000000000000_by_1",
                        "typeString": "int_const 300000000000000000"
                      }
                    },
                    "src": "28251:27:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_600000000000000000_by_1",
                      "typeString": "int_const 600000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28233:45:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45074,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "28323:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 45073,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "28321:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 45075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28321:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45077,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "28338:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 45076,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "28336:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 45078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28336:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 45079,
                        "name": "takerWants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45051,
                        "src": "28352:10:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 45080,
                        "name": "takerGives",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45060,
                        "src": "28370:10:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 45081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28388:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 45068,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45875,
                          "src": "28284:3:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 45070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "marketOrder",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3435,
                        "src": "28284:15:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                        }
                      },
                      "id": 45072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["gas"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3335305f303030",
                          "id": 45071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "28305:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_350000_by_1",
                            "typeString": "int_const 350000"
                          },
                          "value": "350_000"
                        }
                      ],
                      "src": "28284:29:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$gas",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 45082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28284:114:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 45083,
                  "nodeType": "ExpressionStatement",
                  "src": "28284:114:73"
                }
              ]
            },
            "functionSelector": "6e980fa9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_market_order_stops_for_high_price",
            "nameLocation": "27906:38:73",
            "parameters": {
              "id": 45006,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27944:2:73"
            },
            "returnParameters": {
              "id": 45007,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27954:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45156,
            "nodeType": "FunctionDefinition",
            "src": "28450:495:73",
            "body": {
              "id": 45155,
              "nodeType": "Block",
              "src": "28513:432:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45092,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "28535:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 45091,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "28533:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 45093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28533:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 45094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28541:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45088,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "28519:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 45090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "28519:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 45095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28519:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45096,
                  "nodeType": "ExpressionStatement",
                  "src": "28519:30:73"
                },
                {
                  "body": {
                    "id": 45119,
                    "nodeType": "Block",
                    "src": "28585:66:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 45113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 45110,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45098,
                                "src": "28606:1:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "components": [
                                  {
                                    "hexValue": "302e31",
                                    "id": 45111,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "28611:9:73",
                                    "subdenomination": "ether",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100000000000000000_by_1",
                                      "typeString": "int_const 100000000000000000"
                                    },
                                    "value": "0.1"
                                  }
                                ],
                                "id": 45112,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "28610:11:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000000000000000_by_1",
                                  "typeString": "int_const 100000000000000000"
                                }
                              },
                              "src": "28606:15:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "302e31",
                              "id": 45114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28623:9:73",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000000000000_by_1",
                                "typeString": "int_const 100000000000000000"
                              },
                              "value": "0.1"
                            },
                            {
                              "hexValue": "35305f303030",
                              "id": 45115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "28634:6:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50000_by_1",
                                "typeString": "int_const 50000"
                              },
                              "value": "50_000"
                            },
                            {
                              "id": 45116,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45098,
                              "src": "28642:1:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_100000000000000000_by_1",
                                "typeString": "int_const 100000000000000000"
                              },
                              {
                                "typeIdentifier": "t_rational_50000_by_1",
                                "typeString": "int_const 50000"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 45107,
                              "name": "mkr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41287,
                              "src": "28593:3:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestMaker_$49499",
                                "typeString": "contract TestMaker"
                              }
                            },
                            "id": 45109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "newOffer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49210,
                            "src": "28593:12:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                            }
                          },
                          "id": 45117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28593:51:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 45118,
                        "nodeType": "ExpressionStatement",
                        "src": "28593:51:73"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 45101,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45098,
                      "src": "28572:1:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 45102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28576:2:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "28572:6:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45120,
                  "initializationExpression": {
                    "assignments": [45098],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 45098,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "28565:1:73",
                        "nodeType": "VariableDeclaration",
                        "scope": 45120,
                        "src": "28560:6:73",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 45097,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "28560:4:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 45100,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 45099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28569:1:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "28560:10:73"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 45105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "28580:3:73",
                      "subExpression": {
                        "id": 45104,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45098,
                        "src": "28580:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 45106,
                    "nodeType": "ExpressionStatement",
                    "src": "28580:3:73"
                  },
                  "nodeType": "ForStatement",
                  "src": "28555:96:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 45124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28667:18:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 45121,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "28656:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 45123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "28656:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 45125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28656:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45126,
                  "nodeType": "ExpressionStatement",
                  "src": "28656:30:73"
                },
                {
                  "assignments": [45128],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45128,
                      "mutability": "mutable",
                      "name": "takerWants",
                      "nameLocation": "28740:10:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 45155,
                      "src": "28735:15:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45127,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "28735:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45132,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_150000000000000000_by_1",
                      "typeString": "int_const 150000000000000000"
                    },
                    "id": 45131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "302e31",
                      "id": 45129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28753:9:73",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      },
                      "value": "0.1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "302e3035",
                      "id": 45130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28765:10:73",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50000000000000000_by_1",
                        "typeString": "int_const 50000000000000000"
                      },
                      "value": "0.05"
                    },
                    "src": "28753:22:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_150000000000000000_by_1",
                      "typeString": "int_const 150000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28735:40:73"
                },
                {
                  "assignments": [45134],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45134,
                      "mutability": "mutable",
                      "name": "takerGives",
                      "nameLocation": "28786:10:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 45155,
                      "src": "28781:15:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45133,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "28781:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45138,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_200000000000000000_by_1",
                      "typeString": "int_const 200000000000000000"
                    },
                    "id": 45137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "302e31",
                      "id": 45135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28799:9:73",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      },
                      "value": "0.1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "302e31",
                      "id": 45136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28811:9:73",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      },
                      "value": "0.1"
                    },
                    "src": "28799:21:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000000000000000_by_1",
                      "typeString": "int_const 200000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28781:39:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45145,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "28865:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 45144,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "28863:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 45146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28863:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45148,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "28880:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 45147,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "28878:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 45149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28878:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 45150,
                        "name": "takerWants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45128,
                        "src": "28894:10:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 45151,
                        "name": "takerGives",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45134,
                        "src": "28912:10:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 45152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28930:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 45139,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45875,
                          "src": "28826:3:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 45141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "marketOrder",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3435,
                        "src": "28826:15:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                        }
                      },
                      "id": 45143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["gas"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3335305f303030",
                          "id": 45142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "28847:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_350000_by_1",
                            "typeString": "int_const 350000"
                          },
                          "value": "350_000"
                        }
                      ],
                      "src": "28826:29:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$gas",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 45153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28826:114:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 45154,
                  "nodeType": "ExpressionStatement",
                  "src": "28826:114:73"
                }
              ]
            },
            "functionSelector": "d080b629",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_market_order_stops_for_filled_mid_offer",
            "nameLocation": "28459:44:73",
            "parameters": {
              "id": 45086,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28503:2:73"
            },
            "returnParameters": {
              "id": 45087,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28513:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45227,
            "nodeType": "FunctionDefinition",
            "src": "28949:496:73",
            "body": {
              "id": 45226,
              "nodeType": "Block",
              "src": "29014:431:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45163,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "29036:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 45162,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "29034:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 45164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29034:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 45165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29042:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45159,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "29020:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 45161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "29020:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 45166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29020:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45167,
                  "nodeType": "ExpressionStatement",
                  "src": "29020:30:73"
                },
                {
                  "body": {
                    "id": 45190,
                    "nodeType": "Block",
                    "src": "29086:66:73",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 45184,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 45181,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45169,
                                "src": "29107:1:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "components": [
                                  {
                                    "hexValue": "302e31",
                                    "id": 45182,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "29112:9:73",
                                    "subdenomination": "ether",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100000000000000000_by_1",
                                      "typeString": "int_const 100000000000000000"
                                    },
                                    "value": "0.1"
                                  }
                                ],
                                "id": 45183,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "29111:11:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000000000000000_by_1",
                                  "typeString": "int_const 100000000000000000"
                                }
                              },
                              "src": "29107:15:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "302e31",
                              "id": 45185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "29124:9:73",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000000000000_by_1",
                                "typeString": "int_const 100000000000000000"
                              },
                              "value": "0.1"
                            },
                            {
                              "hexValue": "35305f303030",
                              "id": 45186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "29135:6:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50000_by_1",
                                "typeString": "int_const 50000"
                              },
                              "value": "50_000"
                            },
                            {
                              "id": 45187,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45169,
                              "src": "29143:1:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_100000000000000000_by_1",
                                "typeString": "int_const 100000000000000000"
                              },
                              {
                                "typeIdentifier": "t_rational_50000_by_1",
                                "typeString": "int_const 50000"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 45178,
                              "name": "mkr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41287,
                              "src": "29094:3:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestMaker_$49499",
                                "typeString": "contract TestMaker"
                              }
                            },
                            "id": 45180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "newOffer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49210,
                            "src": "29094:12:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                            }
                          },
                          "id": 45188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "29094:51:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 45189,
                        "nodeType": "ExpressionStatement",
                        "src": "29094:51:73"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 45172,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45169,
                      "src": "29073:1:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 45173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "29077:2:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "29073:6:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45191,
                  "initializationExpression": {
                    "assignments": [45169],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 45169,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "29066:1:73",
                        "nodeType": "VariableDeclaration",
                        "scope": 45191,
                        "src": "29061:6:73",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 45168,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "29061:4:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 45171,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 45170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "29070:1:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "29061:10:73"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 45176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "29081:3:73",
                      "subExpression": {
                        "id": 45175,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45169,
                        "src": "29081:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 45177,
                    "nodeType": "ExpressionStatement",
                    "src": "29081:3:73"
                  },
                  "nodeType": "ForStatement",
                  "src": "29056:96:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f747261646553756363657373",
                        "id": 45195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29168:18:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        },
                        "value": "mgv/tradeSuccess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                          "typeString": "literal_string \"mgv/tradeSuccess\""
                        }
                      ],
                      "expression": {
                        "id": 45192,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "29157:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 45194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49024,
                      "src": "29157:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 45196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29157:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45197,
                  "nodeType": "ExpressionStatement",
                  "src": "29157:30:73"
                },
                {
                  "assignments": [45199],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45199,
                      "mutability": "mutable",
                      "name": "takerWants",
                      "nameLocation": "29241:10:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 45226,
                      "src": "29236:15:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45198,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "29236:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45203,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_200000000000000000_by_1",
                      "typeString": "int_const 200000000000000000"
                    },
                    "id": 45202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "302e31",
                      "id": 45200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "29254:9:73",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      },
                      "value": "0.1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "302e31",
                      "id": 45201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "29266:9:73",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      },
                      "value": "0.1"
                    },
                    "src": "29254:21:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000000000000000_by_1",
                      "typeString": "int_const 200000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29236:39:73"
                },
                {
                  "assignments": [45205],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45205,
                      "mutability": "mutable",
                      "name": "takerGives",
                      "nameLocation": "29286:10:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 45226,
                      "src": "29281:15:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45204,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "29281:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45209,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_300000000000000000_by_1",
                      "typeString": "int_const 300000000000000000"
                    },
                    "id": 45208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "302e31",
                      "id": 45206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "29299:9:73",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      },
                      "value": "0.1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "302e32",
                      "id": 45207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "29311:9:73",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_200000000000000000_by_1",
                        "typeString": "int_const 200000000000000000"
                      },
                      "value": "0.2"
                    },
                    "src": "29299:21:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_300000000000000000_by_1",
                      "typeString": "int_const 300000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29281:39:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45216,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "29365:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 45215,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "29363:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 45217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29363:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45219,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "29380:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 45218,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "29378:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 45220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29378:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 45221,
                        "name": "takerWants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45199,
                        "src": "29394:10:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 45222,
                        "name": "takerGives",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45205,
                        "src": "29412:10:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 45223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29430:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 45210,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45875,
                          "src": "29326:3:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 45212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "marketOrder",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3435,
                        "src": "29326:15:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                        }
                      },
                      "id": 45214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["gas"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3335305f303030",
                          "id": 45213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "29347:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_350000_by_1",
                            "typeString": "int_const 350000"
                          },
                          "value": "350_000"
                        }
                      ],
                      "src": "29326:29:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$gas",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 45224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29326:114:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 45225,
                  "nodeType": "ExpressionStatement",
                  "src": "29326:114:73"
                }
              ]
            },
            "functionSelector": "f4635d04",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_market_order_stops_for_filled_after_offer",
            "nameLocation": "28958:46:73",
            "parameters": {
              "id": 45157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29004:2:73"
            },
            "returnParameters": {
              "id": 45158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29014:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45253,
            "nodeType": "FunctionDefinition",
            "src": "29449:188:73",
            "body": {
              "id": 45252,
              "nodeType": "Block",
              "src": "29521:116:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f6d4f726465722f74616b657257616e74732f31363062697473",
                        "id": 45233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29543:31:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2c80b6eaaa77175b421cb647262f8b13463075cec159961e3e57fea394a5688",
                          "typeString": "literal_string \"mgv/mOrder/takerWants/160bits\""
                        },
                        "value": "mgv/mOrder/takerWants/160bits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a2c80b6eaaa77175b421cb647262f8b13463075cec159961e3e57fea394a5688",
                          "typeString": "literal_string \"mgv/mOrder/takerWants/160bits\""
                        }
                      ],
                      "expression": {
                        "id": 45230,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "29527:2:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "29527:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 45234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29527:48:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45235,
                  "nodeType": "ExpressionStatement",
                  "src": "29527:48:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45240,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "29599:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 45239,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "29597:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 45241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29597:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45243,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "29608:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 45242,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "29606:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 45244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29606:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
                          "typeString": "int_const 1461...(41 digits omitted)...2976"
                        },
                        "id": 45247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 45245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "29616:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "313630",
                          "id": 45246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "29619:3:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_160_by_1",
                            "typeString": "int_const 160"
                          },
                          "value": "160"
                        },
                        "src": "29616:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
                          "typeString": "int_const 1461...(41 digits omitted)...2976"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 45248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29624:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 45249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29627:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
                          "typeString": "int_const 1461...(41 digits omitted)...2976"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 45236,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "29581:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 45238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3435,
                      "src": "29581:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 45250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29581:51:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 45251,
                  "nodeType": "ExpressionStatement",
                  "src": "29581:51:73"
                }
              ]
            },
            "functionSelector": "a218492e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_takerWants_wider_than_160_bits_fails_marketOrder",
            "nameLocation": "29458:53:73",
            "parameters": {
              "id": 45228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29511:2:73"
            },
            "returnParameters": {
              "id": 45229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29521:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45339,
            "nodeType": "FunctionDefinition",
            "src": "29641:581:73",
            "body": {
              "id": 45338,
              "nodeType": "Block",
              "src": "29696:526:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45260,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "29718:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 45259,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "29716:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 45261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29716:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 45262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29724:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45256,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "29702:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 45258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "29702:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 45263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29702:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45264,
                  "nodeType": "ExpressionStatement",
                  "src": "29702:30:73"
                },
                {
                  "assignments": [45266],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45266,
                      "mutability": "mutable",
                      "name": "mkrBal",
                      "nameLocation": "29743:6:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 45338,
                      "src": "29738:11:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45265,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "29738:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45274,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45271,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41287,
                            "src": "29775:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 45270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "29767:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45269,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "29767:7:73",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29767:12:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45267,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "29752:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 45268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50187,
                      "src": "29752:14:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 45273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29752:28:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29738:42:73"
                },
                {
                  "assignments": [45276],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45276,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "29791:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 45338,
                      "src": "29786:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45275,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "29786:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45284,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "302e31",
                        "id": 45279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29810:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      },
                      {
                        "hexValue": "302e31",
                        "id": 45280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29821:9:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 45281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29832:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 45282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29840:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 45277,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "29797:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 45278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "29797:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 45283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29797:45:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29786:56:73"
                },
                {
                  "assignments": [45286, null, null, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45286,
                      "mutability": "mutable",
                      "name": "successes",
                      "nameLocation": "29855:9:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 45338,
                      "src": "29850:14:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45285,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "29850:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 45304,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45290,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "29896:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 45289,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "29894:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 45291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29894:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45293,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "29911:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 45292,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "29909:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 45294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29909:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 45296,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45276,
                                "src": "29939:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 45297,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "29944:1:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "31",
                                "id": 45298,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "29947:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "35305f303030",
                                "id": 45299,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "29956:6:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_50000_by_1",
                                  "typeString": "int_const 50000"
                                },
                                "value": "50_000"
                              }
                            ],
                            "id": 45300,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "29938:25:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 45295,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "29925:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 45301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29925:39:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 45302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29972:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 45287,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "29876:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 45288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "29876:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 45303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29876:106:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29849:133:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 45308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 45306,
                          "name": "successes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45286,
                          "src": "29999:9:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 45307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "30012:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "29999:14:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "736e6970652073686f756c642073756363656564",
                        "id": 45309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30015:22:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8dc00572b0a01c7308e41ed384f8520a436fd96f91a070e50f7a00ed1792a43",
                          "typeString": "literal_string \"snipe should succeed\""
                        },
                        "value": "snipe should succeed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8dc00572b0a01c7308e41ed384f8520a436fd96f91a070e50f7a00ed1792a43",
                          "typeString": "literal_string \"snipe should succeed\""
                        }
                      ],
                      "id": 45305,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "29988:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 45310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29988:50:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45311,
                  "nodeType": "ExpressionStatement",
                  "src": "29988:50:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45316,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45878,
                                "src": "30064:4:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 45315,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "30062:1:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 45317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "30062:7:73",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 45319,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45881,
                                "src": "30073:5:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 45318,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "30071:1:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 45320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "30071:8:73",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 45313,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "30053:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 45314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "best",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1444,
                          "src": "30053:8:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 45321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30053:27:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 45322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30082:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "6f666665722073686f756c6420626520676f6e65",
                        "id": 45323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30085:22:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7fbd36cb232f278c835c7259d0ee92266836962515b643fd30069be6692adb70",
                          "typeString": "literal_string \"offer should be gone\""
                        },
                        "value": "offer should be gone"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7fbd36cb232f278c835c7259d0ee92266836962515b643fd30069be6692adb70",
                          "typeString": "literal_string \"offer should be gone\""
                        }
                      ],
                      "id": 45312,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "30044:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 45324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30044:64:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45325,
                  "nodeType": "ExpressionStatement",
                  "src": "30044:64:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45331,
                                "name": "mkr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41287,
                                "src": "30153:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestMaker_$49499",
                                  "typeString": "contract TestMaker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestMaker_$49499",
                                  "typeString": "contract TestMaker"
                                }
                              ],
                              "id": 45330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "30145:7:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45329,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "30145:7:73",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "30145:12:73",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45327,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "30130:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 45328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50187,
                          "src": "30130:14:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30130:28:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 45334,
                        "name": "mkrBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45266,
                        "src": "30166:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "6d6b722062616c616e63652073686f756c64206e6f74206368616e6765",
                        "id": 45335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30180:31:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_61a78696e6408bf41eeb11bcd131b099753d090a2f0776461f732862662c90eb",
                          "typeString": "literal_string \"mkr balance should not change\""
                        },
                        "value": "mkr balance should not change"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_61a78696e6408bf41eeb11bcd131b099753d090a2f0776461f732862662c90eb",
                          "typeString": "literal_string \"mkr balance should not change\""
                        }
                      ],
                      "id": 45326,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "30114:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 45336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30114:103:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45337,
                  "nodeType": "ExpressionStatement",
                  "src": "30114:103:73"
                }
              ]
            },
            "functionSelector": "a1b78bc8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_with_0_wants_ejects_offer",
            "nameLocation": "29650:36:73",
            "parameters": {
              "id": 45254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29686:2:73"
            },
            "returnParameters": {
              "id": 45255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29696:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45401,
            "nodeType": "FunctionDefinition",
            "src": "30226:380:73",
            "body": {
              "id": 45400,
              "nodeType": "Block",
              "src": "30277:329:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45346,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "30300:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 45345,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "30298:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 45347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30298:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45349,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "30309:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 45348,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "30307:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 45350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30307:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 45351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30317:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 45342,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "30283:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 45344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setGasbase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1196,
                      "src": "30283:14:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 45352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30283:36:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45353,
                  "nodeType": "ExpressionStatement",
                  "src": "30283:36:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45358,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "30341:3:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 45357,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "30339:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 45359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30339:6:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 45360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30347:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45354,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "30325:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 45356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "30325:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 45361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30325:30:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45362,
                  "nodeType": "ExpressionStatement",
                  "src": "30325:30:73"
                },
                {
                  "assignments": [45364],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45364,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "30366:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 45400,
                      "src": "30361:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45363,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "30361:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45372,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 45367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30385:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 45368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30394:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3132305f303030",
                        "id": 45369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30403:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_120000_by_1",
                          "typeString": "int_const 120000"
                        },
                        "value": "120_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 45370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30412:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_120000_by_1",
                          "typeString": "int_const 120000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 45365,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41287,
                        "src": "30372:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 45366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "30372:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 45371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30372:42:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "30361:53:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f6e6f74456e6f756768476173466f724d616b65725472616465",
                        "id": 45376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30436:31:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5246306ac569cc75cea2c306998865132932851dbfd0ba003237c65b3dc8b519",
                          "typeString": "literal_string \"mgv/notEnoughGasForMakerTrade\""
                        },
                        "value": "mgv/notEnoughGasForMakerTrade"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5246306ac569cc75cea2c306998865132932851dbfd0ba003237c65b3dc8b519",
                          "typeString": "literal_string \"mgv/notEnoughGasForMakerTrade\""
                        }
                      ],
                      "expression": {
                        "id": 45373,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "30420:2:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "30420:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 45377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30420:48:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45378,
                  "nodeType": "ExpressionStatement",
                  "src": "30420:48:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45385,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "30508:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 45384,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "30506:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 45386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30506:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45388,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "30523:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 45387,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "30521:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 45389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30521:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 45391,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45364,
                                "src": "30551:3:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 45392,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "30556:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 45393,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "30565:7:73",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "3132305f303030",
                                "id": 45394,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "30574:7:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_120000_by_1",
                                  "typeString": "int_const 120000"
                                },
                                "value": "120_000"
                              }
                            ],
                            "id": 45395,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "30550:32:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 45390,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "30537:12:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 45396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30537:46:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 45397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30591:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                            "typeString": "uint256[4] memory[] memory"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 45379,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45875,
                          "src": "30474:3:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 45381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "snipes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3932,
                        "src": "30474:10:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                        }
                      },
                      "id": 45383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["gas"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3132305f303030",
                          "id": 45382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "30490:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_120000_by_1",
                            "typeString": "int_const 120000"
                          },
                          "value": "120_000"
                        }
                      ],
                      "src": "30474:24:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$gas",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 45398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30474:127:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 45399,
                  "nodeType": "ExpressionStatement",
                  "src": "30474:127:73"
                }
              ]
            },
            "functionSelector": "2e7ed0dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_unsafe_gas_left_fails_order",
            "nameLocation": "30235:32:73",
            "parameters": {
              "id": 45340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30267:2:73"
            },
            "returnParameters": {
              "id": 45341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30277:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45419,
            "nodeType": "FunctionDefinition",
            "src": "30610:134:73",
            "body": {
              "id": 45418,
              "nodeType": "Block",
              "src": "30675:69:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45408,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "30699:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 45407,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "30697:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 45409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30697:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45411,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "30708:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 45410,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "30706:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 45412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30706:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 45413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30716:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 45414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30725:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 45415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30734:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 45404,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "30681:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 45406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3435,
                      "src": "30681:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 45416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30681:58:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 45417,
                  "nodeType": "ExpressionStatement",
                  "src": "30681:58:73"
                }
              ]
            },
            "functionSelector": "e0c77339",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_marketOrder_on_empty_book_does_not_revert",
            "nameLocation": "30619:46:73",
            "parameters": {
              "id": 45402,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30665:2:73"
            },
            "returnParameters": {
              "id": 45403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30675:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45451,
            "nodeType": "FunctionDefinition",
            "src": "30748:265:73",
            "body": {
              "id": 45450,
              "nodeType": "Block",
              "src": "30820:193:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45426,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "30844:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 45425,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "30842:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 45427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30842:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45429,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "30853:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 45428,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "30851:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 45430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30851:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 45431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30861:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 45432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30870:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 45433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30879:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 45422,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "30826:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 45424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3435,
                      "src": "30826:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 45434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30826:58:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 45435,
                  "nodeType": "ExpressionStatement",
                  "src": "30826:58:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "30908:30:73",
                        "subExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 45440,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45878,
                                  "src": "30922:4:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 45439,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "30920:1:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 45441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "30920:7:73",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 45443,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45881,
                                  "src": "30931:5:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 45442,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "30929:1:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 45444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "30929:8:73",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 45437,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45875,
                              "src": "30909:3:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 45438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "locked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5866,
                            "src": "30909:10:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view external returns (bool)"
                            }
                          },
                          "id": 45445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "30909:29:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d67762073686f756c64206e6f74206265206c6f636b6564206166746572206d61726b65744f72646572206f6e20656d707479204f42",
                        "id": 45447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30946:56:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d95fa25734b7f766d0c6e9620c69c0643a22822266c9832e7726ad1c64600235",
                          "typeString": "literal_string \"mgv should not be locked after marketOrder on empty OB\""
                        },
                        "value": "mgv should not be locked after marketOrder on empty OB"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d95fa25734b7f766d0c6e9620c69c0643a22822266c9832e7726ad1c64600235",
                          "typeString": "literal_string \"mgv should not be locked after marketOrder on empty OB\""
                        }
                      ],
                      "id": 45436,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "30890:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 45448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30890:118:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45449,
                  "nodeType": "ExpressionStatement",
                  "src": "30890:118:73"
                }
              ]
            },
            "functionSelector": "bec2e7d3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_marketOrder_on_empty_book_does_not_leave_lock_on",
            "nameLocation": "30757:53:73",
            "parameters": {
              "id": 45420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30810:2:73"
            },
            "returnParameters": {
              "id": 45421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30820:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45484,
            "nodeType": "FunctionDefinition",
            "src": "31017:274:73",
            "body": {
              "id": 45483,
              "nodeType": "Block",
              "src": "31068:223:73",
              "statements": [
                {
                  "assignments": [45455, 45457, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45455,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "31080:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 45483,
                      "src": "31075:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45454,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "31075:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 45457,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "31090:4:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 45483,
                      "src": "31085:9:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45456,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "31085:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 45470,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45461,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "31127:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 45460,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "31125:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 45462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "31125:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45464,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "31142:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 45463,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "31140:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 45465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "31140:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 45466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31156:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "31",
                        "id": 45467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31165:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 45468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31180:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 45458,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "31102:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 45459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3435,
                      "src": "31102:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 45469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31102:88:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31074:116:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45472,
                        "name": "got",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45455,
                        "src": "31205:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 45473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31210:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "54616b657220676f7420746f6f206d756368",
                        "id": 45474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31213:20:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec8ae53f0aa8687191e5668424dd37660b39da84a7f561bf43340b38de374b6e",
                          "typeString": "literal_string \"Taker got too much\""
                        },
                        "value": "Taker got too much"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec8ae53f0aa8687191e5668424dd37660b39da84a7f561bf43340b38de374b6e",
                          "typeString": "literal_string \"Taker got too much\""
                        }
                      ],
                      "id": 45471,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "31196:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 45475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31196:38:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45476,
                  "nodeType": "ExpressionStatement",
                  "src": "31196:38:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45478,
                        "name": "gave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45457,
                        "src": "31249:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 45479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31255:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "54616b6572206761766520746f6f206d756368",
                        "id": 45480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31264:21:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ec481b1b10ac79191882bfb3b36f9036dd5090cc8a135367dc69ca81d01f3e9",
                          "typeString": "literal_string \"Taker gave too much\""
                        },
                        "value": "Taker gave too much"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ec481b1b10ac79191882bfb3b36f9036dd5090cc8a135367dc69ca81d01f3e9",
                          "typeString": "literal_string \"Taker gave too much\""
                        }
                      ],
                      "id": 45477,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "31240:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 45481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31240:46:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45482,
                  "nodeType": "ExpressionStatement",
                  "src": "31240:46:73"
                }
              ]
            },
            "functionSelector": "2c4e73cd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_takerWants_is_zero_succeeds",
            "nameLocation": "31026:32:73",
            "parameters": {
              "id": 45452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31058:2:73"
            },
            "returnParameters": {
              "id": 45453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31068:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45517,
            "nodeType": "FunctionDefinition",
            "src": "31295:274:73",
            "body": {
              "id": 45516,
              "nodeType": "Block",
              "src": "31346:223:73",
              "statements": [
                {
                  "assignments": [45488, 45490, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45488,
                      "mutability": "mutable",
                      "name": "got",
                      "nameLocation": "31358:3:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 45516,
                      "src": "31353:8:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45487,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "31353:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 45490,
                      "mutability": "mutable",
                      "name": "gave",
                      "nameLocation": "31368:4:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 45516,
                      "src": "31363:9:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45489,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "31363:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 45503,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45494,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "31405:4:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 45493,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "31403:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 45495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "31403:7:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45497,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "31420:5:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 45496,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "31418:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 45498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "31418:8:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 45499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31434:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 45500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31449:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 45501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31458:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 45491,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "31380:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 45492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3435,
                      "src": "31380:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 45502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31380:88:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31352:116:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45505,
                        "name": "got",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45488,
                        "src": "31483:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 45506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31488:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "54616b657220676f7420746f6f206d756368",
                        "id": 45507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31491:20:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec8ae53f0aa8687191e5668424dd37660b39da84a7f561bf43340b38de374b6e",
                          "typeString": "literal_string \"Taker got too much\""
                        },
                        "value": "Taker got too much"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec8ae53f0aa8687191e5668424dd37660b39da84a7f561bf43340b38de374b6e",
                          "typeString": "literal_string \"Taker got too much\""
                        }
                      ],
                      "id": 45504,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "31474:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 45508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31474:38:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45509,
                  "nodeType": "ExpressionStatement",
                  "src": "31474:38:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45511,
                        "name": "gave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45490,
                        "src": "31527:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 45512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31533:7:73",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "54616b6572206761766520746f6f206d756368",
                        "id": 45513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31542:21:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ec481b1b10ac79191882bfb3b36f9036dd5090cc8a135367dc69ca81d01f3e9",
                          "typeString": "literal_string \"Taker gave too much\""
                        },
                        "value": "Taker gave too much"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ec481b1b10ac79191882bfb3b36f9036dd5090cc8a135367dc69ca81d01f3e9",
                          "typeString": "literal_string \"Taker gave too much\""
                        }
                      ],
                      "id": 45510,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "31518:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 45514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31518:46:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45515,
                  "nodeType": "ExpressionStatement",
                  "src": "31518:46:73"
                }
              ]
            },
            "functionSelector": "0b851352",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_takerGives_is_zero_succeeds",
            "nameLocation": "31304:32:73",
            "parameters": {
              "id": 45485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31336:2:73"
            },
            "returnParameters": {
              "id": 45486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31346:0:73"
            },
            "scope": 45518,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 41283,
              "name": "MangroveTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47059,
              "src": "298:12:73"
            },
            "id": 41284,
            "nodeType": "InheritanceSpecifier",
            "src": "298:12:73"
          }
        ],
        "canonicalName": "TakerOperationsTest",
        "contractDependencies": [780, 906, 48825, 49499, 50091, 52050],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          45518, 47059, 1914, 47434, 48626, 62095, 60776, 60744
        ],
        "name": "TakerOperationsTest",
        "nameLocation": "275:19:73",
        "scope": 45519,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0"
  },
  "id": 73
}
