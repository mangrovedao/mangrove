{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Credit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Debit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "callname",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "GasCost",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Kill",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IMangrove",
          "name": "mangrove",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "reason",
          "type": "bytes32"
        }
      ],
      "name": "LogIncident",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "NewMgv",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "base",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "quote",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "offerIds",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "wants",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "gives",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "makerAddr",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "gasreqs",
          "type": "uint256[]"
        }
      ],
      "name": "OBState",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "mgvData",
          "type": "bytes32"
        }
      ],
      "name": "OfferFail",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "OfferRetract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGives",
          "type": "uint256"
        }
      ],
      "name": "OfferSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasprice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prev",
          "type": "uint256"
        }
      ],
      "name": "OfferWrite",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGot",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGave",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "penalty",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feePaid",
          "type": "uint256"
        }
      ],
      "name": "OrderComplete",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "OrderStart",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IMangrove",
          "name": "mangrove",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "base",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "quote",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "selling",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGot",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGave",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "penalty",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "restingOrderId",
          "type": "uint256"
        }
      ],
      "name": "OrderSummary",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "posthookData",
          "type": "bytes32"
        }
      ],
      "name": "PosthookFail",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetActive",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetDensity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offer_gasbase",
          "type": "uint256"
        }
      ],
      "name": "SetGasbase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasmax",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasprice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetGovernance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetMonitor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetNotify",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetUseOracle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetVault",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "outbound",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "inbound",
          "type": "address"
        }
      ],
      "name": "offers_head",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        }
      ],
      "name": "offers_line",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract TestToken",
          "name": "t",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "power",
          "type": "uint256"
        }
      ],
      "name": "cash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract TestToken",
          "name": "t",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "cash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "adjust",
          "type": "bool"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "args",
          "type": "bytes"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256[]",
          "name": "ints",
          "type": "int256[]"
        }
      ],
      "name": "logary",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "uints",
          "type": "uint256[]"
        }
      ],
      "name": "logary",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "rewind",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        }
      ],
      "name": "setupMaker",
      "outputs": [
        {
          "internalType": "contract TestMaker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        }
      ],
      "name": "setupMakerDeployer",
      "outputs": [
        {
          "internalType": "contract MakerDeployer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "inverted",
          "type": "bool"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "_mgv",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "inverted",
          "type": "bool"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "_mgv",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "inbound_tkn",
          "type": "address"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        }
      ],
      "name": "setupTaker",
      "outputs": [
        {
          "internalType": "contract TestTaker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "skip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_admin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_failing_resting_offer_releases_uncollected_provision",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_filled_resting_buy_order_ignores_resting_option",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_filled_resting_buy_order_returns_provision",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_iterative_market_order_completes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_ownership_relation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_partial_filled_buy_order_returns_bounty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_partial_filled_buy_order_returns_provision",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_partial_filled_buy_order_returns_residual",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_partial_filled_buy_order_reverts_when_noPartialFill_enabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_resting_buy_order_can_be_partially_filled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_resting_buy_order_is_successfully_posted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_resting_buy_order_reverts_when_unprovisioned",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_resting_offer_retracts_when_unable_to_repost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_user_can_retract_resting_offer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "tip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x6000805462ff00ff191662010001178155600160088190556009556080818152600a610160818152692130b9b2902a37b5b2b760b11b61018090815261010091825260046101a0818152632428412960e01b6101c05261012052601261014081905260a0849052600b6102409081526a28bab7ba32902a37b5b2b760a91b610260526101e09081526102c0604052610280928352632428422960e01b6102a052610200929092526102205260c05260e094909452600e805460ff1916815592939091600f91620000d29183919062000298565b506020828101518051620000ed926001850192019062000298565b50604091820151600291909101805460ff191660ff909216919091179055820151805180516004840191620001289183916020019062000298565b50602082810151805162000143926001850192019062000298565b50604091909101516002909101805460ff191660ff909216919091179055606091909101516007909101553480156200017b57600080fd5b50604080516318caf8e360e31b8152326004820152602481019190915260096044820152683a3c1737b934b3b4b760b91b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b158015620001eb57600080fd5b505af115801562000200573d6000803e3d6000fd5b5050604080516318caf8e360e31b815230600482015260248101829052600b60448201526a2a32b9ba10393ab73732b960a91b60648201529051737109709ecfa91a80626ff3989d68f67f5b1dd12d935063c657c7189250608480830192600092919082900301818387803b1580156200027957600080fd5b505af11580156200028e573d6000803e3d6000fd5b505050506200037a565b828054620002a6906200033e565b90600052602060002090601f016020900481019282620002ca576000855562000315565b82601f10620002e557805160ff191683800117855562000315565b8280016001018555821562000315579182015b8281111562000315578251825591602001919060010190620002f8565b506200032392915062000327565b5090565b5b8082111562000323576000815560010162000328565b600181811c908216806200035357607f821691505b6020821081036200037457634e487b7160e01b600052602260045260246000fd5b50919050565b620240c9806200038b6000396000f3fe608060405260043610620002c25760003560e01c806370aa3a5d1162000177578063bbab0fac11620000d1578063d82555f11162000084578063d82555f1146200081e578063e9a79a7b1462000843578063ea14b5c31462000868578063f87c8c0f146200088d578063f8ccbf4714620008a5578063fa7626d414620008c757600080fd5b8063bbab0fac146200074d578063bfdc35881462000772578063c88a5e6d1462000797578063cc27348314620007bc578063d06d822914620007d4578063d56a22f014620007f957600080fd5b806398ec3a97116200012a57806398ec3a9714620006785780639a8325a01462000690578063af9bbe5f14620006b5578063b84e3eda14620006da578063b9c071b414620006ff578063ba414fa6146200072457600080fd5b806370aa3a5d14620005db5780637508982214620005f3578063830ca968146200060b578063875f859714620006235780638c004832146200063b57806397754ae9146200065357600080fd5b80633336a63f11620002295780635c36d7f611620001dc5780635c36d7f614620005155780635d35978d146200052d57806363dee52014620005455780636bce989b146200055d5780636cc12a2414620005825780636f59707514620005b657600080fd5b80633336a63f14620004515780633a76846314620004765780633bf82db1146200049b578063400efb2914620004c0578063521606d214620004d857806354668b9d14620004fd57600080fd5b8063108554f21162000282578063108554f2146200038057806311d70a7d14620003a5578063233240ee14620003bd57806329a9e30014620003e257806329ce9dde14620004075780632d6c17a3146200042c57600080fd5b80623a668514620002cf578063026f742314620002e95780630645f2be14620003015780630a9254e414620003435780630b3d8c42146200035b57600080fd5b36620002ca57005b600080fd5b348015620002dc57600080fd5b50620002e7620008e3565b005b348015620002f657600080fd5b50620002e762000b2e565b3480156200030e57600080fd5b50620003266200032036600462007fe4565b62000efb565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156200035057600080fd5b50620002e762001025565b3480156200036857600080fd5b50620003266200037a3660046200801a565b6200200e565b3480156200038d57600080fd5b50620002e76200039f3660046200806c565b62002031565b348015620003b257600080fd5b50620002e76200210a565b348015620003ca57600080fd5b50620002e7620003dc3660046200809b565b62002765565b348015620003ef57600080fd5b50620002e762000401366004620080bb565b62002841565b3480156200041457600080fd5b506200032662000426366004620081d4565b620028e5565b3480156200043957600080fd5b50620002e76200044b36600462008254565b62002a15565b3480156200045e57600080fd5b5062000326620004703660046200826e565b62002a55565b3480156200048357600080fd5b506200032660008051602062023e9983398151915281565b348015620004a857600080fd5b50620002e7620004ba366004620082d8565b62002b93565b348015620004cd57600080fd5b50620002e762002c63565b348015620004e557600080fd5b50620002e7620004f736600462008345565b62002ffb565b3480156200050a57600080fd5b50620002e7620030c0565b3480156200052257600080fd5b50620002e7620031e3565b3480156200053a57600080fd5b50620002e76200356d565b3480156200055257600080fd5b50620002e762003dd1565b3480156200056a57600080fd5b50620002e76200057c366004620082d8565b62003fc9565b3480156200058f57600080fd5b50620005a7620005a1366004620083df565b62003fd8565b6040519081526020016200033a565b348015620005c357600080fd5b50620002e7620005d53660046200809b565b62004007565b348015620005e857600080fd5b50620002e7620040b1565b3480156200060057600080fd5b50620002e762004543565b3480156200061857600080fd5b50620002e76200467e565b3480156200063057600080fd5b50620002e762004826565b3480156200064857600080fd5b506200032662004975565b3480156200066057600080fd5b50620002e76200067236600462008417565b62004988565b3480156200068557600080fd5b50620002e762004bc9565b3480156200069d57600080fd5b5062000326620006af36600462008471565b62005094565b348015620006c257600080fd5b50620002e7620006d4366004620082d8565b62005196565b348015620006e757600080fd5b50620002e7620006f936600462008345565b62005236565b3480156200070c57600080fd5b50620002e76200071e36600462008254565b620052e1565b3480156200073157600080fd5b506200073c62005302565b60405190151581526020016200033a565b3480156200075a57600080fd5b50620003266200076c366004620080bb565b62005433565b3480156200077f57600080fd5b5062000326620007913660046200826e565b620054a4565b348015620007a457600080fd5b50620002e7620007b63660046200806c565b620054cd565b348015620007c957600080fd5b50620002e762005503565b348015620007e157600080fd5b50620002e7620007f3366004620080bb565b62005b5a565b3480156200080657600080fd5b50620005a7620008183660046200806c565b62005bfe565b3480156200082b57600080fd5b50620002e76200083d366004620082d8565b62005c8c565b3480156200085057600080fd5b50620002e7620008623660046200806c565b62005d72565b3480156200087557600080fd5b506200032662000887366004620080bb565b62005e18565b3480156200089a57600080fd5b50620002e762005e28565b348015620008b257600080fd5b506000546200073c9062010000900460ff1681565b348015620008d457600080fd5b506000546200073c9060ff1681565b6040805161018081018252600c546001600160a01b039081168252600d541660208201819052600092820183905260608201839052671bc16d674ec800006080830181905260a083015267039bb49f599a000060c0830181905260e08301526101008201839052610120820183905262632ea061014083015261016082019290925290620009719062005faa565b60165460405167039bb49f599a000081526001600160a01b039091169030907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3600d54620009d4906001600160a01b031662005faa565b6016546040516701cdda4faccd0000815230916001600160a01b0316907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3601654604051636a1c7d0560e01b81526000916001600160a01b031690636a1c7d059067016345785d8a00009062000a5b908690600401620084aa565b60a06040518083038185885af115801562000a7a573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062000aa1919062008569565b8051600c5491925062000af89162000ad8906001600160a01b03165b600d546001600160a01b0316670de0b6b3a764000062006002565b6040518060600160405280602581526020016202406f60259139620060ba565b62000b2a81602001516701cdda4faccd00006040518060600160405280602581526020016202406f60259139620060ba565b5050565b6040805161018081018252600c546001600160a01b039081168252600d5481166020830152600082840181905260608301819052671bc16d674ec800006080840181905260a084015267039bb49f599a000060c0840181905260e08401526001610100840152610120830181905262632ea061014084015261016083018190526016549351636a1c7d0560e01b815292939092911690636a1c7d059067016345785d8a00009062000be4908690600401620084aa565b60a06040518083038185885af115801562000c03573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062000c2a919062008569565b90506000601660009054906101000a90046001600160a01b03166001600160a01b031663f887ea406040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000c82573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ca89190620085dd565b6001600160a01b03166332563bc7306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562000cfc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d229190620085fd565b601654600d54600c54608086015160405163ad97db1b60e01b81529495506000946001600160a01b039485169463ad97db1b9462000d6d949082169391169160019060040162008617565b6020604051808303816000875af115801562000d8d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000db39190620085fd565b905062000ef5601660009054906101000a90046001600160a01b03166001600160a01b031663f887ea406040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000e0d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e339190620085dd565b6001600160a01b03166332563bc7306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562000e87573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ead9190620085fd565b62000eb9838562008656565b6040518060400160405280601c81526020017f496e636f72726563742070726f766973696f6e20726563656976656400000000815250620060ba565b50505050565b6000811562000f4d57306028621e848060405162000f199062007f3e565b62000f279392919062008671565b604051809103906000f08015801562000f44573d6000803e3d6000fd5b50905062000f91565b306028621e848060405162000f629062007f4c565b62000f709392919062008671565b604051809103906000f08015801562000f8d573d6000803e3d6000fd5b5090505b60008051602062023e9983398151915263c657c71882604080516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260086044820152674d616e67726f766560c01b6064820152608401600060405180830381600087803b1580156200100757600080fd5b505af11580156200101c573d6000803e3d6000fd5b50505050919050565b6200102f620060f6565b600b54600c54600d5460405163dc7e98df60e01b81526001600160a01b039384169363dc7e98df936200106f9390821692911690601e9060040162008692565b600060405180830381600087803b1580156200108a57600080fd5b505af11580156200109f573d6000803e3d6000fd5b5050600b54600d546001600160a01b03918216935063dc7e98df925016600c546001600160a01b0316601e6040518463ffffffff1660e01b8152600401620010ea9392919062008692565b600060405180830381600087803b1580156200110557600080fd5b505af11580156200111a573d6000803e3d6000fd5b5050600b546001600160a01b03169150636817031b9050816040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b1580156200117457600080fd5b505af115801562001189573d6000803e3d6000fd5b5050600b546001600160a01b03169150309050604051620011aa9062007f5a565b620011b7929190620086b6565b604051809103906000f080158015620011d4573d6000803e3d6000fd5b50601680546001600160a01b0319166001600160a01b03928316908117909155600c5460405163aefe840360e01b8152919263aefe84039262001222929091169060001990600401620086d0565b600060405180830381600087803b1580156200123d57600080fd5b505af115801562001252573d6000803e3d6000fd5b5050601654600d5460405163aefe840360e01b81526001600160a01b03928316945063aefe8403935062001291929091169060001990600401620086d0565b600060405180830381600087803b158015620012ac57600080fd5b505af1158015620012c1573d6000803e3d6000fd5b5050601654600c5460405163f259cd2760e01b81526001600160a01b0391821660048201529116925063f259cd279150602401600060405180830381600087803b1580156200130f57600080fd5b505af115801562001324573d6000803e3d6000fd5b5050601654600d5460405163f259cd2760e01b81526001600160a01b0391821660048201529116925063f259cd279150602401600060405180830381600087803b1580156200137257600080fd5b505af115801562001387573d6000803e3d6000fd5b5050600c54620013af92506001600160a01b031690505b305b678ac7230489e8000062003fc9565b600d54620013c6906001600160a01b03166200139e565b600d54601654604080516303e21fa960e61b815290516001600160a01b039384169363095ea7b3936200144b9391169163f887ea40916004808201926020929091908290030181865afa15801562001422573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014489190620085dd565b90565b678ac7230489e800006040518363ffffffff1660e01b815260040162001473929190620086d0565b6020604051808303816000875af115801562001493573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014b99190620086e9565b50600c54601654604080516303e21fa960e61b815290516001600160a01b039384169363095ea7b393620015169391169163f887ea40916004808201926020929091908290030181865afa15801562001422573d6000803e3d6000fd5b678ac7230489e800006040518363ffffffff1660e01b81526004016200153e929190620086d0565b6020604051808303816000875af11580156200155e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015849190620086e9565b50600d54620015cb906001600160a01b0316600c546001600160a01b03166040518060400160405280600a81526020016939b2b63616ba30b5b2b960b11b81525062002a55565b601980546001600160a01b0319166001600160a01b03928316179055600c546200160291166019546001600160a01b0316620013a0565b60195460008051602062023e998339815191529063ca669fa7906001600160a01b03166040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b1580156200166757600080fd5b505af11580156200167c573d6000803e3d6000fd5b5050600c54600b5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b39350620016c19290911690678ac7230489e8000090600401620086d0565b6020604051808303816000875af1158015620016e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017079190620086e9565b5060195460008051602062023e998339815191529063ca669fa7906001600160a01b03166040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b1580156200176d57600080fd5b505af115801562001782573d6000803e3d6000fd5b5050600d54600b5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b39350620017c79290911690678ac7230489e8000090600401620086d0565b6020604051808303816000875af1158015620017e7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200180d9190620086e9565b50600d5462001853906001600160a01b0316600c546001600160a01b0316604051806040016040528060098152602001683134b216b6b0b5b2b960b91b815250620054a4565b601780546001600160a01b0319166001600160a01b0392909216918217905560405163c88a5e6d60e01b815260008051602062023e998339815191529163c88a5e6d91620018af9190678ac7230489e8000090600401620086d0565b600060405180830381600087803b158015620018ca57600080fd5b505af1158015620018df573d6000803e3d6000fd5b5050600c546200192992506001600160a01b03169050600d546001600160a01b03166040518060400160405280600981526020016830b9b596b6b0b5b2b960b91b815250620054a4565b601880546001600160a01b0319166001600160a01b0392909216918217905560405163c88a5e6d60e01b815260008051602062023e998339815191529163c88a5e6d91620019859190678ac7230489e8000090600401620086d0565b600060405180830381600087803b158015620019a057600080fd5b505af1158015620019b5573d6000803e3d6000fd5b505060175460008051602062023e99833981519152925063ca669fa791506001600160a01b03166040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b15801562001a1e57600080fd5b505af115801562001a33573d6000803e3d6000fd5b5050600d54600b5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b3935062001a789290911690678ac7230489e8000090600401620086d0565b6020604051808303816000875af115801562001a98573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001abe9190620086e9565b50600d5462001ae2906001600160a01b03166017546001600160a01b0316620013a0565b600c5462001b05906001600160a01b03166018546001600160a01b0316620013a0565b60185460008051602062023e998339815191529063ca669fa7906001600160a01b03166040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b15801562001b6a57600080fd5b505af115801562001b7f573d6000803e3d6000fd5b5050600c54600b5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b3935062001bc49290911690678ac7230489e8000090600401620086d0565b6020604051808303816000875af115801562001be4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c0a9190620086e9565b50601754604051637ec95ff360e01b8152670de0b6b3a7640000600482015267016345785d8a00006024820181905261c3506044830152600060648301819052608483015260a48201526001600160a01b0390911690637ec95ff39060c4016020604051808303816000875af115801562001c89573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001caf9190620085fd565b50601754604051637ec95ff360e01b8152670de0b6b3a76400006004820152670186cc6acd4b0000602482015261c3506044820152600060648201819052608482015267016345785d8a000060a48201526001600160a01b0390911690637ec95ff39060c4016020604051808303816000875af115801562001d35573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d5b9190620085fd565b50601754604051637ec95ff360e01b8152670de0b6b3a764000060048201526701aa535d3d0c0000602482015261c3506044820152600060648201819052608482015267016345785d8a000060a48201526001600160a01b0390911690637ec95ff39060c4016020604051808303816000875af115801562001de1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e079190620085fd565b50601854604051637ec95ff360e01b81526701cdda4faccd00006004820152670de0b6b3a7640000602482015261c3506044820152600060648201819052608482015267016345785d8a000060a48201526001600160a01b0390911690637ec95ff39060c4016020604051808303816000875af115801562001e8d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001eb39190620085fd565b50601854604051637ec95ff360e01b81526701f161421c8e00006004820152670de0b6b3a7640000602482015261c3506044820152600060648201819052608482015267016345785d8a000060a48201526001600160a01b0390911690637ec95ff39060c4016020604051808303816000875af115801562001f39573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001f5f9190620085fd565b50601854604051637ec95ff360e01b8152670214e8348c4f00006004820152670de0b6b3a7640000602482015261c3506044820152600060648201819052608482015267016345785d8a000060a48201526001600160a01b0390911690637ec95ff39060c4016020604051808303816000875af115801562001fe5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200200b9190620085fd565b50565b60006200201b8262000efb565b90506200202a8484836200635f565b9392505050565b60405163c88a5e6d60e01b815260008051602062023e998339815191529063c88a5e6d90620020679085908590600401620086d0565b600060405180830381600087803b1580156200208257600080fd5b505af115801562002097573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b038516600482015260008051602062023e9983398151915292506306447d5691506024015b600060405180830381600087803b158015620020ed57600080fd5b505af115801562002102573d6000803e3d6000fd5b505050505050565b6040805161018081018252600c546001600160a01b039081168252600d5481166020830152600082840181905260608301819052671bc16d674ec800006080840181905260a084015267039bb49f599a000060c0840181905260e08401526001610100840152610120830181905262632ea061014084015261016083018190526016549351636a1c7d0560e01b81529293674563918244f400009391921690636a1c7d05908490620021c1908790600401620084aa565b60a06040518083038185885af1158015620021e0573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062002207919062008569565b90506000601660009054906101000a90046001600160a01b03166001600160a01b031663f887ea406040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200225f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620022859190620085dd565b6001600160a01b03166332563bc7306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015620022d9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620022ff9190620085fd565b600d54601654604080516303e21fa960e61b815290519394506001600160a01b039283169363095ea7b3936200235c93169163f887ea409160048083019260209291908290030181865afa15801562001422573d6000803e3d6000fd5b60006040518363ffffffff1660e01b81526004016200237d929190620086d0565b6020604051808303816000875af11580156200239d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620023c39190620086e9565b50600c54601654604080516303e21fa960e61b815290516001600160a01b039384169363095ea7b393620024209391169163f887ea40916004808201926020929091908290030181865afa15801562001422573d6000803e3d6000fd5b60006040518363ffffffff1660e01b815260040162002441929190620086d0565b6020604051808303816000875af115801562002461573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620024879190620086e9565b50601954608083015160405163268e95b360e11b81526004810191909152600160248201526000916001600160a01b031690634d1d2b669060440160a0604051808303816000875af1158015620024e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002508919062008709565b50935050505062002552600082116040518060400160405280601881526020017f736e6970652073686f756c642068617665206661696c656400000000000000008152506200660b565b601654600d54600c54608086015160405163ad97db1b60e01b81526001600160a01b039485169463ad97db1b9462002597949082169391169160019060040162008617565b6020604051808303816000875af1158015620025b7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620025dd9190620085fd565b50601654604080516303e21fa960e61b815290516000926001600160a01b03169163f887ea409160048083019260209291908290030181865afa15801562002629573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200264f9190620085dd565b6001600160a01b03166332563bc7306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015620026a3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620026c99190620085fd565b90506000620026d9848362008755565b90506200271760008211604051806040016040528060158152602001742737903932b632b0b9b2b210383937bb34b9b4b7b760591b8152506200660b565b6200275c818660400151886200272e919062008755565b6200273a91906200876f565b600160405180606001604052806024815260200162023fba60249139620060ba565b50505050505050565b60405163c88a5e6d60e01b815260008051602062023e998339815191529063c88a5e6d906200279f908490600160801b90600401620086d0565b600060405180830381600087803b158015620027ba57600080fd5b505af1158015620027cf573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b038416600482015260008051602062023e99833981519152925063ca669fa791506024015b600060405180830381600087803b1580156200282557600080fd5b505af11580156200283a573d6000803e3d6000fd5b5050505050565b60405163c88a5e6d60e01b815260008051602062023e998339815191529063c88a5e6d906200287b908590600160801b90600401620086d0565b600060405180830381600087803b1580156200289657600080fd5b505af1158015620028ab573d6000803e3d6000fd5b50506040516323f2866760e11b815260008051602062023e9983398151915292506347e50cce9150620020d29085908590600401620086b6565b604051638d1cc92560e01b8152600090819060008051602062023e9983398151915290638d1cc925906200291e908790600401620087ef565b6000604051808303816000875af11580156200293e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200296891908101906200883a565b836040516020016200297c92919062008888565b60405160208183030381529060405290508051602082016000f091506001600160a01b03821662002a0e5760405162461bcd60e51b815260206004820152603160248201527f54657374206465706c6f79436f646528737472696e672c6279746573293a204460448201527032b83637bcb6b2b73a103330b4b632b21760791b60648201526084015b60405180910390fd5b5092915050565b60008051602062023e9983398151915263e5d6bf0262002a36834262008755565b6040518263ffffffff1660e01b81526004016200280a91815260200190565b600080600b60009054906101000a90046001600160a01b0316858560405162002a7e9062007f68565b62002a8c93929190620088bb565b604051809103906000f08015801562002aa9573d6000803e3d6000fd5b5060405163c88a5e6d60e01b815290915060008051602062023e998339815191529063c88a5e6d9062002aec90849068056bc75e2d6310000090600401620086d0565b600060405180830381600087803b15801562002b0757600080fd5b505af115801562002b1c573d6000803e3d6000fd5b50506040516318caf8e360e31b815260008051602062023e99833981519152925063c657c718915062002b569084908790600401620088de565b600060405180830381600087803b15801562002b7157600080fd5b505af115801562002b86573d6000803e3d6000fd5b5092979650505050505050565b60405163c88a5e6d60e01b815260008051602062023e998339815191529063c88a5e6d9062002bc99086908590600401620086d0565b600060405180830381600087803b15801562002be457600080fd5b505af115801562002bf9573d6000803e3d6000fd5b50506040516308b6ac0f60e31b815260008051602062023e9983398151915292506345b56078915062002c339086908690600401620086b6565b600060405180830381600087803b15801562002c4e57600080fd5b505af11580156200275c573d6000803e3d6000fd5b600d546000906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562002cbd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002ce39190620085fd565b600c549091506000906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562002d40573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d669190620085fd565b6040805161018081018252600c546001600160a01b039081168252600d5481166020830152600082840181905260608301819052670de0b6b3a76400006080840181905260a08401526701cdda4faccd000060c0840181905260e08401526001610100840152610120830181905262632ea061014084015261016083018190526016549351636a1c7d0560e01b8152949550919391921690636a1c7d059067016345785d8a00009062002e1e908690600401620084aa565b60a06040518083038185885af115801562002e3d573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062002e64919062008569565b600d5490915062002f36906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562002ec3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002ee99190620085fd565b602083015162002efa908762008755565b6040518060400160405280601781526020017f696e636f72726563742071756f74652062616c616e6365000000000000000000815250620060ba565b600c5462000ef5906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562002f92573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002fb89190620085fd565b825162002fc6908662008656565b60405180604001604052806016815260200175696e636f727265637420626173652062616c616e636560501b815250620060ba565b604080516020810190915260008082525b8251811015620030b457816200303e84838151811062003030576200303062008904565b602002602001015162006644565b6040516020016200305192919062008888565b60405160208183030381529060405291506001835162003072919062008755565b8110156200309f57816040516020016200308d91906200891a565b60405160208183030381529060405291505b80620030ab8162008942565b9150506200300c565b5062000b2a8162006731565b600b5460408051635aa6e67560e01b81529051620031e1926001600160a01b031691635aa6e6759160048083019260209291908290030181865afa1580156200310d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620031339190620085dd565b601660009054906101000a90046001600160a01b03166001600160a01b031663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa15801562003187573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620031ad9190620085dd565b60405180604001604052806015815260200174496e76616c69642061646d696e206164647265737360581b81525062006778565b565b601854604051637a943a3760e01b8152600160048201526001600160a01b0390911690637a943a3790602401600060405180830381600087803b1580156200322a57600080fd5b505af11580156200323f573d6000803e3d6000fd5b5050600b546200325b92506001600160a01b0316905062005faa565b601654600d54600c546001600160a01b039283169291821691167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47620032a18262000abd565b600c546701cdda4faccd000090600090620032db906001600160a01b03165b600d546001600160a01b0316670de0b6b3a7640000620067c6565b60408051948552602085019390935291830152606082015260800160405180910390a4600b5462003315906001600160a01b031662005faa565b601654600d54600c546001600160a01b039283169291821691167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec476200335b8262000abd565b600c546701cdda4faccd0000906000906200337f906001600160a01b0316620032c0565b60408051948552602085019390935291830152606082015260800160405180910390a4601654620033b9906001600160a01b031662005faa565b600d54600c54600b5430926001600160a01b039081169281169160008051602062023eb98339815191529116600062003408845b600d546001600160a01b0316671bc16d674ec8000062006002565b67039bb49f599a000060008060405162003428969594939291906200895e565b60405180910390a46040805161018081018252600c546001600160a01b039081168252600d5481166020830152600082840181905260608301819052671bc16d674ec800006080840181905260a084015267039bb49f599a000060c0840181905260e08401526001610100840181905261012084015262632ea061014084015261016083018190526016549351636a1c7d0560e01b815292939092911690636a1c7d059067016345785d8a000090620034e6908690600401620084aa565b60a06040518083038185885af115801562003505573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906200352c919062008569565b8051600c5491925062000b2a916200354d906001600160a01b0316620033ed565b60405180606001604052806027815260200162023ef960279139620060ba565b6040805161018081018252600c546001600160a01b039081168252600d548116602080840191909152600083850181905260608401819052671bc16d674ec800006080850181905260a085015267039bb49f599a000060c08501526703893b4000c5000060e08501526001610100850152610120840181905262632ea0610140850152610160840181905260165485516303e21fa960e61b815295519495919493169263f887ea40926004808401939192918290030181865afa15801562003639573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200365f9190620085dd565b600d546040516302b427ef60e11b81526001600160a01b03928316926305684fde9262003694929116903090600401620086b6565b602060405180830381865afa158015620036b2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620036d89190620085fd565b90506000601660009054906101000a90046001600160a01b03166001600160a01b031663f887ea406040518163ffffffff1660e01b8152600401602060405180830381865afa15801562003730573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620037569190620085dd565b600d546040516302b427ef60e11b81526001600160a01b03928316926305684fde926200378b929116903090600401620086b6565b602060405180830381865afa158015620037a9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620037cf9190620085fd565b600b5460165491925062003899916001600160a01b03918216916370a0823191166040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562003835573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200385b9190620085fd565b60006040518060400160405280601b81526020017f496e76616c69642062616c616e6365206f6e204d616e67726f76650000000000815250620060ba565b601654620038b0906001600160a01b031662005faa565b600d54600c54600b5430926001600160a01b039081169281169160008051602062023eb983398151915291166000620038e98462000abd565b6701cdda4faccd0000600060046040516200390a969594939291906200895e565b60405180910390a4601654604051636a1c7d0560e01b81526000916001600160a01b031690636a1c7d059067016345785d8a0000906200394f908890600401620084aa565b60a06040518083038185885af11580156200396e573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062003995919062008569565b9050620039c3600082608001511160405180606001604052806030815260200162023f8a603091396200660b565b600b54600d54600c5460808401516040516368c13d6b60e01b81526000946001600160a01b03908116946368c13d6b9462003a08949183169392169160040162008692565b602060405180830381865afa15801562003a26573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003a4c9190620085fd565b905062003aa4606082901c6001600160601b03166060840151845162003a73919062008656565b8760a0015162003a84919062008755565b60405180606001604052806025815260200162023f6560259139620060ba565b62003ae86001600160601b03821683602001518760e0015162003ac8919062008755565b6040518060600160405280602581526020016202402860259139620060ba565b601654600d54600c54608085015160405163f92495e560e01b815262003ba6946001600160a01b039081169463f92495e59462003b2f949183169392169160040162008692565b602060405180830381865afa15801562003b4d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003b739190620085dd565b306040518060400160405280601381526020017224b73b30b634b21037b33332b91037bbb732b960691b81525062006778565b601654604080516303e21fa960e61b8152905162003cd7926001600160a01b03169163f887ea409160048083019260209291908290030181865afa15801562003bf3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003c199190620085dd565b600d546040516302b427ef60e11b81526001600160a01b03928316926305684fde9262003c4e929116903090600401620086b6565b602060405180830381865afa15801562003c6c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003c929190620085fd565b602084015162003ca3908762008755565b60405180604001604052806015815260200174496e76616c69642071756f74652062616c616e636560581b815250620060ba565b601654604080516303e21fa960e61b815290516200283a926001600160a01b03169163f887ea409160048083019260209291908290030181865afa15801562003d24573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003d4a9190620085dd565b600c546040516302b427ef60e11b81526001600160a01b03928316926305684fde9262003d7f929116903090600401620086b6565b602060405180830381865afa15801562003d9d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003dc39190620085fd565b835162003ca3908662008656565b60003060185460405160016228e33160e11b03198152600160048201526001600160a01b0392831631935091169063ffae399e90602401600060405180830381600087803b15801562003e2357600080fd5b505af115801562003e38573d6000803e3d6000fd5b50506040805161018081018252600c546001600160a01b039081168252600d5481166020830152600082840181905260608301819052671bc16d674ec800006080840181905260a084015267039bb49f599a000060c0840181905260e08401526101008301819052610120830181905262632ea061014084015261016083018190526016549351636a1c7d0560e01b815292955093509190911690636a1c7d059067016345785d8a00009062003ef3908690600401620084aa565b60a06040518083038185885af115801562003f12573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062003f39919062008569565b905062003f8360008260400151116040518060400160405280601981526020017f426f756e74792073686f756c64206e6f74206265207a65726f000000000000008152506200660b565b62003fc481604001518462003f99919062008656565b306001600160a01b03163160405180606001604052806023815260200162023f4260239139620060ba565b505050565b62003fc4838383600062004988565b600062003fe782600a62008a8e565b62003ff3858562005bfe565b62003fff91906200876f565b949350505050565b60405163c88a5e6d60e01b815260008051602062023e998339815191529063c88a5e6d9062004041908490600160801b90600401620086d0565b600060405180830381600087803b1580156200405c57600080fd5b505af115801562004071573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b038416600482015260008051602062023e9983398151915292506306447d5691506024016200280a565b6040805161018081018252600c546001600160a01b039081168252600d5481166020830152600092820183905260608201839052671bc16d674ec800006080830181905260a083015267016345785d8a000060c0830181905260e08301526001610100830181905261012083015262632ea0610140830152610160820192909252601654909162004143911662005faa565b600d54600c54600b5460405130936001600160a01b039081169381169260008051602062023eb9833981519152926200418c92909116906000908190819081906004906200895e565b60405180910390a4601654604051636a1c7d0560e01b81526001600160a01b0390911690636a1c7d059067016345785d8a000090620041d0908590600401620084aa565b60a06040518083038185885af1158015620041ef573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062004216919062008569565b506016546200422e906001600160a01b031662005faa565b600d54600c54600b5460405130936001600160a01b039081169381169260008051602062023eb9833981519152926200427792909116906000908190819081906005906200895e565b60405180910390a4601654604051636a1c7d0560e01b81526001600160a01b0390911690636a1c7d059067016345785d8a000090620042bb908590600401620084aa565b60a06040518083038185885af1158015620042da573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062004301919062008569565b50601654600d54600c546040516337b966bf60e01b815260009384936001600160a01b03918216936337b966bf93620043449330938116921690600401620088bb565b600060405180830381865afa15801562004362573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200438c919081019062008b09565b91509150620043d882516002148015620043a557508151155b60405180604001604052806014815260200173125b98dbdc9c9958dd081bd999995c881b1a5cdd60621b8152506200660b565b601654600d54600c5484516001600160a01b039384169363ad97db1b93811692169086906000906200440e576200440e62008904565b602002602001015160006040518563ffffffff1660e01b815260040162004439949392919062008617565b6020604051808303816000875af115801562004459573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200447f9190620085fd565b50601654600d54600c546040516337b966bf60e01b81526001600160a01b03938416936337b966bf93620044be933093918316921690600401620088bb565b600060405180830381865afa158015620044dc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262004506919081019062008b09565b8151919350915062003fc490600114801562004523575081516001145b6040518060600160405280602281526020016202404d602291396200660b565b6040805161018081018252600c546001600160a01b039081168252600d5481166020830152600082840181905260608301819052670de0b6b3a76400006080840181905260a08401526701cdda4faccd000060c0840181905260e08401526001610100840152610120830181905262632ea061014084015261016083018190526016549351636a1c7d0560e01b815230319491929190911690636a1c7d0590620045f2908590600401620084aa565b60a0604051808303816000875af115801562004612573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004638919062008569565b905062003fc4306001600160a01b0316318460405180604001604052806015815260200174696e636f7272656374207765692062616c616e636560581b815250620060ba565b6040805161018081018252600c546001600160a01b039081168252600d54166020820152600081830181905260608201819052671bc16d674ec800006080830181905260a083015267039bb49f599a000060c0830181905260e08301526001610100830152610120820181905262632ea0610140830152610160820152905163f28dceb360e01b815260008051602062023e998339815191529063f28dceb39062004772906004016020808252602c908201527f4d756c7469557365722f6465726976655f67617370726963652f4e6f74456e6f60408201526b3ab3b4283937bb34b9b4b7b760a11b606082015260800190565b600060405180830381600087803b1580156200478d57600080fd5b505af1158015620047a2573d6000803e3d6000fd5b5050601654604051636a1c7d0560e01b81526001600160a01b039091169250636a1c7d059150655af3107a400090620047e0908590600401620084aa565b60a06040518083038185885af1158015620047ff573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062000b2a919062008569565b6040805161018081018252600c546001600160a01b039081168252600d54166020820152600181830152600060608201819052671bc16d674ec800006080830181905260a083015267039bb49f599a000060c0830181905260e08301526101008201819052610120820181905262632ea0610140830152610160820152905163f28dceb360e01b815260008051602062023e998339815191529063f28dceb390620049059060040160208082526019908201527f6d67764f726465722f6d6f2f6e6f5061727469616c46696c6c00000000000000604082015260600190565b600060405180830381600087803b1580156200492057600080fd5b505af115801562004935573d6000803e3d6000fd5b5050601654604051636a1c7d0560e01b81526001600160a01b039091169250636a1c7d05915067016345785d8a000090620047e0908590600401620084aa565b600062004983600062000efb565b905090565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b1790529151600092871691620049de9162008b6a565b6000604051808303816000865af19150503d806000811462004a1d576040519150601f19603f3d011682016040523d82523d6000602084013e62004a22565b606091505b5091505060008180602001905181019062004a3e9190620085fd565b905062004ab08462004aa98762004a806370a0823160e01b62004a6360018d62006858565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b906200687d565b8215620021025760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b0389169162004afb919062008b6a565b6000604051808303816000865af19150503d806000811462004b3a576040519150601f19603f3d011682016040523d82523d6000602084013e62004b3f565b606091505b5091505060008180602001905181019062004b5b9190620085fd565b90508286101562004b865762004b72868462008755565b62004b7e908262008755565b905062004ba1565b62004b92838762008755565b62004b9e908262008656565b90505b62004bbf8162004aa96318160ddd60e01b62004a6360018d62006858565b5050505050505050565b6040805161018081018252600c546001600160a01b039081168252600d5481166020830152600082840181905260608301819052671bc16d674ec800006080840181905260a084015267039bb49f599a000060c0840181905260e08401526001610100840152610120830181905262632ea061014084015261016083018190526016549351636a1c7d0560e01b815292939092911690636a1c7d059067016345785d8a00009062004c7f908690600401620084aa565b60a06040518083038185885af115801562004c9e573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062004cc5919062008569565b90506000601660009054906101000a90046001600160a01b03166001600160a01b031663f887ea406040518163ffffffff1660e01b8152600401602060405180830381865afa15801562004d1d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004d439190620085dd565b6001600160a01b03166332563bc7306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562004d97573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004dbd9190620085fd565b600b54600d54600c54604051630fbb669160e41b81529394506001600160a01b039283169363fbb669109362004e05938116921690670de0b6b3a76400009060040162008692565b600060405180830381600087803b15801562004e2057600080fd5b505af115801562004e35573d6000803e3d6000fd5b5050600b5462004e5192506001600160a01b0316905062005faa565b600c546001600160a01b0316600d546001600160a01b0391821691166001600160a01b03167fe2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b846080015160405162004eac91815260200190565b60405180910390a3601954608083015160405163268e95b360e11b81526004810191909152600060248201819052916001600160a01b031690634d1d2b669060440160a0604051808303816000875af115801562004f0e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004f34919062008709565b50505050905062004f6a816040518060400160405280600c81526020016b1cdb9a5c194819985a5b195960a21b8152506200660b565b601654604080516303e21fa960e61b8152905162000ef5926001600160a01b03169163f887ea409160048083019260209291908290030181865afa15801562004fb7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004fdd9190620085dd565b6001600160a01b03166332563bc7306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562005031573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620050579190620085fd565b836040518060400160405280601e81526020017f726574726163742073686f756c64206e6f7420646570726f766973696f6e0000815250620060ba565b604051638d1cc92560e01b8152600090819060008051602062023e9983398151915290638d1cc92590620050cd908690600401620087ef565b6000604051808303816000875af1158015620050ed573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200511791908101906200883a565b90508051602082016000f091506001600160a01b038216620051905760405162461bcd60e51b815260206004820152602b60248201527f54657374206465706c6f79436f646528737472696e67293a204465706c6f796d60448201526a32b73a103330b4b632b21760a91b606482015260840162002a05565b50919050565b60405163c88a5e6d60e01b815260008051602062023e998339815191529063c88a5e6d90620051cc9086908590600401620086d0565b600060405180830381600087803b158015620051e757600080fd5b505af1158015620051fc573d6000803e3d6000fd5b50506040516323f2866760e11b815260008051602062023e9983398151915292506347e50cce915062002c339086908690600401620086b6565b604080516020810190915260008082525b8251811015620030b457816200526b84838151811062003030576200303062008904565b6040516020016200527e92919062008888565b6040516020818303038152906040529150600183516200529f919062008755565b811015620052cc5781604051602001620052ba91906200891a565b60405160208183030381529060405291505b80620052d88162008942565b91505062005247565b60008051602062023e9983398151915263e5d6bf0262002a36834262008656565b60008054610100900460ff1615620053235750600054610100900460ff1690565b600060008051602062023e998339815191523b156200542e5760405160009060008051602062023e99833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490620053909083906519985a5b195960d21b90602001620086d0565b60408051601f1981840301815290829052620053b0929160200162008b88565b60408051601f1981840301815290829052620053cc9162008b6a565b6000604051808303816000865af19150503d80600081146200540b576040519150601f19603f3d011682016040523d82523d6000602084013e62005410565b606091505b50915050808060200190518101906200542a9190620086e9565b9150505b919050565b600b546000906200544d906001600160a01b031662006889565b50600b546040516001600160a01b0390911690849084906200546f9062007f76565b6200547d93929190620088bb565b604051809103906000f0801580156200549a573d6000803e3d6000fd5b5090505b92915050565b600080600b60009054906101000a90046001600160a01b0316858560405162002a7e9062007f84565b60405163c88a5e6d60e01b815260008051602062023e998339815191529063c88a5e6d90620020d29085908590600401620086d0565b6040805161018081018252600c546001600160a01b039081168252600d5481166020830152600082840181905260608301819052671bc16d674ec800006080840181905260a084015267039bb49f599a000060c0840181905260e08401526001610100840152610120830181905262632ea061014084015261016083018190526016549351636a1c7d0560e01b815292939092911690636a1c7d059067016345785d8a000090620055b9908690600401620084aa565b60a06040518083038185885af1158015620055d8573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190620055ff919062008569565b600c549091506000906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156200565c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620056829190620085fd565b90506000601660009054906101000a90046001600160a01b03166001600160a01b031663f887ea406040518163ffffffff1660e01b8152600401602060405180830381865afa158015620056da573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620057009190620085dd565b600d546040516302b427ef60e11b81526001600160a01b03928316926305684fde9262005735929116903090600401620086b6565b602060405180830381865afa15801562005753573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620057799190620085fd565b601954608085015160405163268e95b360e11b8152600481019190915267016345785d8a000060248201529192506000918291829182916001600160a01b031690634d1d2b669060440160a0604051808303816000875af1158015620057e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005809919062008709565b9450509350935093506200584a846040518060400160405280601481526020017314995cdd1a5b99c81bdc99195c8819985a5b195960621b8152506200660b565b600d546200589d9084906200587d906001600160a01b0316600c546001600160a01b031667016345785d8a000062006002565b6040518060600160405280602a815260200162023fde602a9139620060ba565b600c546200594b906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015620058f9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200591f9190620085fd565b6200592b848962008656565b6040518060600160405280602b815260200162023e6e602b9139620060ba565b601654604080516303e21fa960e61b8152905162005a8b926001600160a01b03169163f887ea409160048083019260209291908290030181865afa15801562005998573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620059be9190620085dd565b600d546040516302b427ef60e11b81526001600160a01b03928316926305684fde92620059f3929116903090600401620086b6565b602060405180830381865afa15801562005a11573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005a379190620085fd565b62005a43838662008656565b62005a4f908862008755565b6040518060400160405280601e81526020017f496e636f727265637420746f6b656e2062616c616e6365206f6e206d676f0000815250620060ba565b600b54600d54600c5460808a01516040516368c13d6b60e01b81526000946001600160a01b03908116946368c13d6b9462005ad0949183169392169160040162008692565b602060405180830381865afa15801562005aee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005b149190620085fd565b905062005b4f6001600160601b03821667016345785d8a00008a602001518c60c0015162005b43919062008755565b62003ac8919062008755565b505050505050505050565b60405163c88a5e6d60e01b815260008051602062023e998339815191529063c88a5e6d9062005b94908590600160801b90600401620086d0565b600060405180830381600087803b15801562005baf57600080fd5b505af115801562005bc4573d6000803e3d6000fd5b50506040516308b6ac0f60e31b815260008051602062023e9983398151915292506345b560789150620020d29085908590600401620086b6565b60008062005c7162005c6b6040518060400160405280600c81526020016b5f5f646563696d616c73282960a01b81525062005c448760016200685890919063ffffffff16565b90805160209091012060038201805460e09290921c63ffffffff1990921691909117905590565b62006962565b905062005c8081600a62008a8e565b62003fff908462008bbb565b60008051602062023ed983398151915260405162005d47906040808252600790820152665741524e494e4760c81b6060820152608060208201819052605e908201527f546573742074697028616464726573732c616464726573732c75696e7432353660a08201527f293a2054686520607469706020737464636865617420686173206265656e206460c08201527f6570726563617465642e2055736520606465616c6020696e73746561642e000060e08201526101000190565b60405180910390a162003fc48162004aa98462004a806370a0823160e01b62004a6360018a62006858565b60405163c88a5e6d60e01b815260008051602062023e998339815191529063c88a5e6d9062005da89085908590600401620086d0565b600060405180830381600087803b15801562005dc357600080fd5b505af115801562005dd8573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b038516600482015260008051602062023e99833981519152925063ca669fa79150602401620020d2565b60006200202a838360006200200e565b6040805161018081018252600c546001600160a01b039081168252600d5481166020830152600082840181905260608301819052671bc16d674ec800006080840181905260a084015267039bb49f599a000060c0840181905260e08401526101008301819052610120830181905262632ea061014084015261016083018190526016549351636a1c7d0560e01b815230319491929190911690636a1c7d059067016345785d8a00009062005ee1908690600401620084aa565b60a06040518083038185885af115801562005f00573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062005f27919062008569565b8051600c5491925062005f7a9162005f48906001600160a01b031662000abd565b60405180604001604052806013815260200172125b98dbdc9c9958dd081d185ad95c8819dbdd606a1b815250620060ba565b62003fc483306001600160a01b03163160405180606001604052806022815260200162023f2060229139620060ba565b6040516381bad6f360e01b8152600160048201819052602482018190526044820181905260648201526001600160a01b038216608482015260008051602062023e99833981519152906381bad6f39060a4016200280a565b600b546040516365fbae4d60e11b815260009182916001600160a01b039091169063cbf75c9a906200603b9088908890600401620086b6565b6040805180830381865afa15801562006058573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200607e919062008bdd565b915061271090506200609961ffff60e884901c168262008755565b620060a5908562008bbb565b620060b191906200876f565b95945050505050565b81831462003fc45760008051602062023ed983398151915281604051620060e2919062008c02565b60405180910390a162003fc4838362006984565b6011546040513091600f9160109160ff1690620061139062007f92565b62006122949392919062008cda565b604051809103906000f0801580156200613f573d6000803e3d6000fd5b50600c80546001600160a01b0319166001600160a01b03929092169190911790553060145460405160129160139160ff909116906200617e9062007f92565b6200618d949392919062008cda565b604051809103906000f080158015620061aa573d6000803e3d6000fd5b50600d80546001600160a01b0319166001600160a01b03928316908117909155600c54600e54620061e49391909116919060ff166200200e565b600b80546001600160a01b0319166001600160a01b03929092169182179055604080516316c1a85160e31b8152905163b60d428891678ac7230489e8000091600480830192600092919082900301818588803b1580156200624457600080fd5b505af115801562006259573d6000803e3d6000fd5b5050600c54600b5460405163095ea7b360e01b81526001600160a01b03928316955063095ea7b3945062006298935091169060001990600401620086d0565b6020604051808303816000875af1158015620062b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620062de9190620086e9565b50600d54600b5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392620063199291169060001990600401620086d0565b6020604051808303816000875af115801562006339573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200200b9190620086e9565b6200636a8362006889565b50620063768262006889565b50601554604051630b73a18f60e01b81526001600160a01b0385811660048301528481166024830152604482019290925260006064820152614e20608482015290821690630b73a18f9060a401600060405180830381600087803b158015620063de57600080fd5b505af1158015620063f3573d6000803e3d6000fd5b5050601554604051630b73a18f60e01b81526001600160a01b0386811660048301528781166024830152604482019290925260006064820152614e2060848201529084169250630b73a18f915060a401600060405180830381600087803b1580156200645e57600080fd5b505af115801562006473573d6000803e3d6000fd5b505050506000805160206202400883398151915260001c60601b60601c6001600160a01b031663c657c71884856001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015620064de573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200650891908101906200883a565b6040518363ffffffff1660e01b815260040162006527929190620088de565b600060405180830381600087803b1580156200654257600080fd5b505af115801562006557573d6000803e3d6000fd5b505050506000805160206202400883398151915260001c60601b60601c6001600160a01b031663c657c71883846001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015620065c2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620065ec91908101906200883a565b6040518363ffffffff1660e01b815260040162002c33929190620088de565b8162000b2a5760008051602062023ed98339815191528160405162006631919062008c02565b60405180910390a162000b2a8262006a6a565b6060816000036200666c5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156200668657600101600a8204915062006670565b60008167ffffffffffffffff811115620066a457620066a4620080f9565b6040519080825280601f01601f191660200182016040528015620066cf576020820181803683370190505b50905060001982015b85156200672857600a860660300160f81b8282806001900393508151811062006705576200670562008904565b60200101906001600160f81b031916908160001a905350600a86049550620066d8565b50949350505050565b6200200b81604051602401620067489190620087ef565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905262006ad1565b816001600160a01b0316836001600160a01b03161462003fc45760008051602062023ed983398151915281604051620067b2919062008c02565b60405180910390a162003fc4838362006af2565b600b546040516365fbae4d60e11b815260009182916001600160a01b039091169063cbf75c9a90620067ff9088908890600401620086b6565b6040805180830381865afa1580156200681c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006842919062008bdd565b9150612710905060e882901c61ffff1662006099565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b62000b2a828262006bdb565b60006001600160a01b038216620069535760008051602062023e4e833981519152604051620068e9906020808252601e908201527f4572726f723a20616464726573732073686f756c64206e6f7420626520300000604082015260600190565b60405180910390a160408051818152600781830152664164647265737360c81b60608201526001600160a01b038416602082015290517f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9181900360800190a16200695362006f44565b506001600160a01b0316151590565b60006200696f8262007048565b8060200190518101906200549e9190620085fd565b80821462000b2a5760008051602062023e4e833981519152604051620069e69060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162006a1f919062008d29565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162006a58919062008d62565b60405180910390a162000b2a62006f44565b806200200b5760008051602062023e4e83398151915260405162006abf9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16200200b62006f44565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b806001600160a01b0316826001600160a01b03161462000b2a5760008051602062023e4e83398151915260405162006b699060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405162006ba2919062008d8d565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8260405162006a58919062008dd2565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b946000939092909183018282801562006c4e57602002820191906000526020600020905b81548152602001906001019080831162006c39575b5050505050905060008362006c638362007110565b60405160200162006c7692919062008b88565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a16835281529281209194509092909162006cca91869188910162008dfd565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1662006d055762006d0387620071bd565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b031988168452825280832090519091839162006d4691879189910162008dfd565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b03168460405162006d8d919062008b6a565b600060405180830381855afa9150503d806000811462006dca576040519150601f19603f3d011682016040523d82523d6000602084013e62006dcf565b606091505b50915062006dec90508162006de688602062008bbb565b62007eb4565b604051630667f9d760e41b81529092506000915060008051602062023e998339815191529063667f9d709062006e29908b908790600401620086d0565b6020604051808303816000875af115801562006e49573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006e6f9190620085fd565b905080821462006e935760405162461bcd60e51b815260040162002a059062008e39565b6040516370ca10bb60e01b815260008051602062023e99833981519152906370ca10bb9062006ecb908b9087908e9060040162008671565b600060405180830381600087803b15801562006ee657600080fd5b505af115801562006efb573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff1916905562006f3060028b01600062007fa0565b896004016000905550505050505050505050565b60008051602062023e998339815191523b15620070375760405160009060008051602062023e99833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49062006fb29083906519985a5b195960d21b9060019060200162008671565b60408051601f198184030181529082905262006fd2929160200162008b88565b60408051601f198184030181529082905262006fee9162008b6a565b6000604051808303816000865af19150503d80600081146200702d576040519150601f19603f3d011682016040523d82523d6000602084013e62007032565b606091505b505050505b6000805461ff001916610100179055565b60058101546060906001600160a01b031660006200706684620071bd565b604051630667f9d760e41b815290915060008051602062023e998339815191529063667f9d70906200709f9085908590600401620086d0565b6020604051808303816000875af1158015620070bf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620070e59190620085fd565b604051602001620070f891815260200190565b60405160208183030381529060405292505050919050565b606060008251602062007124919062008bbb565b67ffffffffffffffff8111156200713f576200713f620080f9565b6040519080825280601f01601f1916602001820160405280156200716a576020820181803683370190505b50905060005b835181101562002a0e57600084828151811062007191576200719162008904565b602002602001015190508082602002602001840152508080620071b49062008942565b91505062007170565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b9493879391929091908301828280156200722f57602002820191906000526020600020905b8154815260200190600101908083116200721a575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051959650949193506200727b9250859187910162008dfd565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16156200731a576001600160a01b0384166000908152602087815260408083206001600160e01b03198716845282528083209051909291620072ea91859187910162008dfd565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b600083620073288362007110565b6040516020016200733b92919062008b88565b60405160208183030381529060405290506000805160206202400883398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200739a57600080fd5b505af1158015620073af573d6000803e3d6000fd5b50505050600080866001600160a01b031683604051620073d0919062008b6a565b600060405180830381855afa9150503d80600081146200740d576040519150601f19603f3d011682016040523d82523d6000602084013e62007412565b606091505b5091506200742990508162006de687602062008bbb565b6040516365bc948160e01b81526001600160a01b03891660048201529092506000915060008051602062023e99833981519152906365bc9481906024016000604051808303816000875af115801562007486573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620074b0919081019062008b09565b5090508051600103620077795760006000805160206202400883398151915260001c6001600160a01b031663667f9d708984600081518110620074f757620074f762008904565b60200260200101516040518363ffffffff1660e01b81526004016200751e929190620086d0565b6020604051808303816000875af11580156200753e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620075649190620085fd565b905080620075c8577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58883600081518110620075a457620075a462008904565b602002602001015160001c604051620075bf929190620086d0565b60405180910390a15b808314620075ea5760405162461bcd60e51b815260040162002a059062008e39565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed888887896040516020016200762292919062008dfd565b60405160208183030381529060405280519060200120856000815181106200764e576200764e62008904565b602002602001015160001c6040516200766b949392919062008ed4565b60405180910390a18160008151811062007689576200768962008904565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c1683528452808220905192939092620076d4918a918c910162008dfd565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c168552825282842092519093916200773e918a918c910162008dfd565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff19169115159190911790555062007d37565b60018151111562007cc65760005b815181101562007cbf5760006000805160206202400883398151915260001c6001600160a01b031663667f9d708a858581518110620077ca57620077ca62008904565b60200260200101516040518363ffffffff1660e01b8152600401620077f1929190620086d0565b6020604051808303816000875af115801562007811573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620078379190620085fd565b9050806200789a577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58984848151811062007876576200787662008904565b602002602001015160001c60405162007891929190620086d0565b60405180910390a15b6000805160206202400883398151915260001c6001600160a01b03166370ca10bb8a858581518110620078d157620078d162008904565b602002602001015161133760f01b6040518463ffffffff1660e01b8152600401620078ff9392919062008671565b600060405180830381600087803b1580156200791a57600080fd5b505af11580156200792f573d6000803e3d6000fd5b50505050600060608a6001600160a01b03168760405162007951919062008b6a565b600060405180830381855afa9150503d80600081146200798e576040519150601f19603f3d011682016040523d82523d6000602084013e62007993565b606091505b509092509050620079ab8162006de68b602062008bbb565b9550818015620079bf575061133760f01b86145b1562007c12577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001620079fd92919062008dfd565b6040516020818303038152906040528051906020012088888151811062007a285762007a2862008904565b602002602001015160001c60405162007a45949392919062008ed4565b60405180910390a184848151811062007a625762007a6262008904565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f168352845280822090519293909262007aad918d918f910162008dfd565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c60405160200162007b3a92919062008dfd565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff0219169083151502179055506000805160206202400883398151915260001c6001600160a01b03166370ca10bb8c87878151811062007bac5762007bac62008904565b6020026020010151866040518463ffffffff1660e01b815260040162007bd59392919062008671565b600060405180830381600087803b15801562007bf057600080fd5b505af115801562007c05573d6000803e3d6000fd5b5050505050505062007cbf565b6000805160206202400883398151915260001c6001600160a01b03166370ca10bb8c87878151811062007c495762007c4962008904565b6020026020010151866040518463ffffffff1660e01b815260040162007c729392919062008671565b600060405180830381600087803b15801562007c8d57600080fd5b505af115801562007ca2573d6000803e3d6000fd5b50505050505050808062007cb69062008942565b91505062007787565b5062007d37565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e606482015260840162002a05565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905190929162007d7b9188918a910162008dfd565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1662007e0a5760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b606482015260840162002a05565b6005890180546001600160a01b031916905560038901805463ffffffff1916905562007e3b60028a01600062007fa0565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a1684528252808320905190929162007e819188918a910162008dfd565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b6000806000602085511162007ecb57845162007ece565b60205b905060005b8181101562007f345762007ee981600862008bbb565b8662007ef6838862008656565b8151811062007f095762007f0962008904565b01602001516001600160f81b031916901c92909217918062007f2b8162008942565b91505062007ed3565b5090949350505050565b61567e8062008f0583390190565b6155e4806200e58383390190565b61576a8062013b6783390190565b610baf80620192d183390190565b6145218062019e8083390190565b613ef5806201e3a183390190565b611bb8806202229683390190565b50805460008255906000526020600020908101906200200b91905b8082111562007fd1576000815560010162007fbb565b5090565b80151581146200200b57600080fd5b60006020828403121562007ff757600080fd5b81356200202a8162007fd5565b6001600160a01b03811681146200200b57600080fd5b6000806000606084860312156200803057600080fd5b83356200803d8162008004565b925060208401356200804f8162008004565b91506040840135620080618162007fd5565b809150509250925092565b600080604083850312156200808057600080fd5b82356200808d8162008004565b946020939093013593505050565b600060208284031215620080ae57600080fd5b81356200202a8162008004565b60008060408385031215620080cf57600080fd5b8235620080dc8162008004565b91506020830135620080ee8162008004565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156200813b576200813b620080f9565b604052919050565b600067ffffffffffffffff821115620081605762008160620080f9565b50601f01601f191660200190565b6000620081856200817f8462008143565b6200810f565b90508281528383830111156200819a57600080fd5b828260208301376000602084830101529392505050565b600082601f830112620081c357600080fd5b6200202a838335602085016200816e565b60008060408385031215620081e857600080fd5b823567ffffffffffffffff808211156200820157600080fd5b6200820f86838701620081b1565b935060208501359150808211156200822657600080fd5b508301601f810185136200823957600080fd5b6200824a858235602084016200816e565b9150509250929050565b6000602082840312156200826757600080fd5b5035919050565b6000806000606084860312156200828457600080fd5b8335620082918162008004565b92506020840135620082a38162008004565b9150604084013567ffffffffffffffff811115620082c057600080fd5b620082ce86828701620081b1565b9150509250925092565b600080600060608486031215620082ee57600080fd5b8335620082fb8162008004565b925060208401356200830d8162008004565b929592945050506040919091013590565b600067ffffffffffffffff8211156200833b576200833b620080f9565b5060051b60200190565b600060208083850312156200835957600080fd5b823567ffffffffffffffff8111156200837157600080fd5b8301601f810185136200838357600080fd5b8035620083946200817f826200831e565b81815260059190911b82018301908381019087831115620083b457600080fd5b928401925b82841015620083d457833582529284019290840190620083b9565b979650505050505050565b600080600060608486031215620083f557600080fd5b8335620084028162008004565b95602085013595506040909401359392505050565b600080600080608085870312156200842e57600080fd5b84356200843b8162008004565b935060208501356200844d8162008004565b9250604085013591506060850135620084668162007fd5565b939692955090935050565b6000602082840312156200848457600080fd5b813567ffffffffffffffff8111156200849c57600080fd5b62003fff84828501620081b1565b81516001600160a01b0316815261018081016020830151620084d760208401826001600160a01b03169052565b506040830151620084ec604084018215159052565b50606083015162008501606084018215159052565b506080830151608083015260a083015160a083015260c083015160c083015260e083015160e0830152610100808401516200853f8285018215159052565b50506101208381015190830152610140808401519083015261016092830151929091019190915290565b600060a082840312156200857c57600080fd5b60405160a0810181811067ffffffffffffffff82111715620085a257620085a2620080f9565b806040525082518152602083015160208201526040830151604082015260608301516060820152608083015160808201528091505092915050565b600060208284031215620085f057600080fd5b81516200202a8162008004565b6000602082840312156200861057600080fd5b5051919050565b6001600160a01b0394851681529290931660208301526040820152901515606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600082198211156200866c576200866c62008640565b500190565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b600060208284031215620086fc57600080fd5b81516200202a8162007fd5565b600080600080600060a086880312156200872257600080fd5b85516200872f8162007fd5565b602087015160408801516060890151608090990151929a91995097965090945092505050565b6000828210156200876a576200876a62008640565b500390565b6000826200878d57634e487b7160e01b600052601260045260246000fd5b500490565b60005b83811015620087af57818101518382015260200162008795565b8381111562000ef55750506000910152565b60008151808452620087db81602086016020860162008792565b601f01601f19169290920160200192915050565b6020815260006200202a6020830184620087c1565b6000620088156200817f8462008143565b90508281528383830111156200882a57600080fd5b6200202a83602083018462008792565b6000602082840312156200884d57600080fd5b815167ffffffffffffffff8111156200886557600080fd5b8201601f810184136200887757600080fd5b62003fff8482516020840162008804565b600083516200889c81846020880162008792565b835190830190620088b281836020880162008792565b01949350505050565b6001600160a01b0393841681529183166020830152909116604082015260600190565b6001600160a01b038316815260406020820181905260009062003fff90830184620087c1565b634e487b7160e01b600052603260045260246000fd5b600082516200892e81846020870162008792565b61016160f51b920191825250600201919050565b60006001820162008957576200895762008640565b5060010190565b6001600160a01b03969096168652931515602086015260408501929092526060840152608083015260a082015260c00190565b600181815b80851115620089d2578160001904821115620089b657620089b662008640565b80851615620089c457918102915b93841c939080029062008996565b509250929050565b600082620089eb575060016200549e565b81620089fa575060006200549e565b816001811462008a13576002811462008a1e5762008a3e565b60019150506200549e565b60ff84111562008a325762008a3262008640565b50506001821b6200549e565b5060208310610133831016604e8410600b841016171562008a63575081810a6200549e565b62008a6f838362008991565b806000190482111562008a865762008a8662008640565b029392505050565b60006200202a8383620089da565b600082601f83011262008aae57600080fd5b8151602062008ac16200817f836200831e565b82815260059290921b8401810191818101908684111562008ae157600080fd5b8286015b8481101562008afe578051835291830191830162008ae5565b509695505050505050565b6000806040838503121562008b1d57600080fd5b825167ffffffffffffffff8082111562008b3657600080fd5b62008b448683870162008a9c565b9350602085015191508082111562008b5b57600080fd5b506200824a8582860162008a9c565b6000825162008b7e81846020870162008792565b9190910192915050565b6001600160e01b031983168152815160009062008bad81600485016020870162008792565b919091016004019392505050565b600081600019048311821515161562008bd85762008bd862008640565b500290565b6000806040838503121562008bf157600080fd5b505080516020909101519092909150565b60408152600560408201526422b93937b960d91b60608201526080602082015260006200202a6080830184620087c1565b8054600090600181811c908083168062008c4e57607f831692505b6020808410820362008c7057634e487b7160e01b600052602260045260246000fd5b8388526020880182801562008c8e576001811462008ca05762008ccd565b60ff1987168252828201975062008ccd565b60008981526020902060005b8781101562008cc75781548482015290860190840162008cac565b83019850505b5050505050505092915050565b6001600160a01b038516815260806020820181905260009062008d009083018662008c33565b828103604084015262008d14818662008c33565b91505060ff8316606083015295945050505050565b60408152600062008d5460408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b60408152600062008d5460408301600a815269080808081058dd1d585b60b21b602082015260400190565b60408152600062008db860408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b60408152600062008db860408301600a815269080808081058dd1d585b60b21b602082015260400190565b825160009082906020808701845b8381101562008e295781518552938201939082019060010162008e0b565b5050948252509092019392505050565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe60a06040523480156200001157600080fd5b506040516200567e3803806200567e83398101604081905262000034916200048c565b8282826040518060400160405280601081526020016f496e7665727465644d616e67726f766560801b815250808484847f72201d073f249840099a96530e189c4291c1852040b1e96ff1f606db656be4ff60405160405180910390a16200009b836200016d565b620000a682620001cc565b620000b1816200027f565b620000bc836200032f565b5050815160208084019190912060408051808201825260018152603160f81b9084015280517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f938101939093528201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001905060408051601f19818403018152919052805160209091012060805250620004d19650505050505050565b62000177620003e0565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f30906020015b60405180910390a150565b620001d6620003e0565b61ffff811681146200022f5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f31366269747300000000000060448201526064015b60405180910390fd5b6200024b816001546200045160201b62001d4e1790919060201c565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001620001c1565b62000289620003e0565b808162ffffff1614620002df5760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f3234626974730000000000000000604482015260640162000226565b620002fb816001546200046f60201b62001d711790919060201c565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001620001c1565b62000339620003e0565b6001600160a01b038116620003915760405162461bcd60e51b815260206004820152601360248201527f6d67762f636f6e6669672f676f762f6e6f743000000000000000000000000000604482015260640162000226565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001620001c1565b6003546001600160a01b0316331480620003f957503330145b806200040e57506003546001600160a01b0316155b6200044f5760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b604482015260640162000226565b565b60401b69ffff00000000000000001661ffff60401b19919091161790565b60281b67ffffff00000000001662ffffff60281b19919091161790565b600080600060608486031215620004a257600080fd5b83516001600160a01b0381168114620004ba57600080fd5b602085015160409095015190969495509392505050565b60805161518a620004f46000396000818161036401526116aa015261518a6000f3fe60806040526004361061024a5760003560e01c80636d27de6711610139578063b60d4288116100b6578063dc7e98df1161007a578063dc7e98df146108a8578063def5ddaa146108c8578063fbb66910146108e8578063fbfa77cf14610908578063fbffe5fd14610928578063fcaa7e2e1461094857600080fd5b8063b60d4288146107e4578063c7bb25d0146107ec578063cbf75c9a14610833578063d0ee509914610868578063db20266f1461088857600080fd5b8063aa4dd282116100fd578063aa4dd28214610744578063ab033ea914610764578063ad97db1b14610784578063b09d2a16146107a4578063b2b12057146107c457600080fd5b80636d27de671461061457806370a08231146106545780637ecebe00146106815780638c66715c146106ae57806395999ee31461072457600080fd5b80635722647b116101c7578063644e67031161018b578063644e6703146104cc5780636804f613146105835780636817031b146105a357806368c13d6b146105c35780636a4f76911461060157600080fd5b80635722647b146103f657806359eba454146104345780635a611f4e146104545780635aa6e675146104745780635cd82390146104ac57600080fd5b806330adf81f1161020e57806330adf81f146103105780633644e5151461035257806341c0e1b51461038657806346e142fa1461039b57806349f6d2dc146103e357600080fd5b80630b73a18f1461025f578063230244081461027f578063275074581461029257806327d097c6146102d05780632e1a7d4d146102f057600080fd5b3661025a5761025833610968565b005b600080fd5b34801561026b57600080fd5b5061025861027a3660046149b8565b61098f565b61025861028d366004614a05565b610968565b34801561029e57600080fd5b506102bb6102ad366004614a20565b6001600160601b0316151590565b60405190151581526020015b60405180910390f35b3480156102dc57600080fd5b506102586102eb366004614a39565b610a2d565b3480156102fc57600080fd5b506102bb61030b366004614a20565b610b08565b34801561031c57600080fd5b506103447fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a281565b6040519081526020016102c7565b34801561035e57600080fd5b506103447f000000000000000000000000000000000000000000000000000000000000000081565b34801561039257600080fd5b50610258610b62565b3480156103a757600080fd5b506103bb6103b6366004614ac8565b610baa565b604080519586526020860194909452928401919091526060830152608082015260a0016102c7565b6103446103f1366004614b41565b610bd6565b34801561040257600080fd5b50610344610411366004614a39565b600560209081526000938452604080852082529284528284209052825290205481565b34801561044057600080fd5b506102bb61044f366004614b9f565b610d41565b34801561046057600080fd5b5061025861046f366004614bea565b610dca565b34801561048057600080fd5b50600354610494906001600160a01b031681565b6040516001600160a01b0390911681526020016102c7565b3480156104b857600080fd5b506102586104c7366004614a05565b610e24565b3480156104d857600080fd5b506104ec6104e7366004614c07565b610e84565b6040805183516001600160a01b0316815260208085015115158183015284830151151582840152606080860151818401526080808701518185015260a0968701511515878501528551151560c0808601919091529286015160e0850152938501516101008401528401516101208301529183015115156101408201529282015161016084015201516101808201526101a0016102c7565b34801561058f57600080fd5b5061025861059e366004614bea565b610f87565b3480156105af57600080fd5b506102586105be366004614a05565b610fd1565b3480156105cf57600080fd5b506103446105de366004614a39565b600460209081526000938452604080852082529284528284209052825290205481565b61025861060f366004614c3a565b611027565b34801561062057600080fd5b5061063461062f366004614ca1565b61113a565b6040805194855260208501939093529183015260608201526080016102c7565b34801561066057600080fd5b5061034461066f366004614a05565b60066020526000908152604090205481565b34801561068d57600080fd5b5061034461069c366004614a05565b60086020526000908152604090205481565b3480156106ba57600080fd5b506106ce6106c9366004614a39565b611171565b60408051835181526020808501518183015284830151828401526060948501518583015283516001600160a01b0316608083015283015160a08201529082015160c082015291015160e0820152610100016102c7565b34801561073057600080fd5b5061025861073f366004614a20565b61124d565b34801561075057600080fd5b5061034461075f366004614d09565b6112e9565b34801561077057600080fd5b5061025861077f366004614a05565b61134a565b34801561079057600080fd5b5061034461079f366004614d3c565b6113ec565b3480156107b057600080fd5b506102586107bf366004614d8b565b6115be565b3480156107d057600080fd5b506103bb6107df366004614e21565b6118b7565b6102586118f3565b3480156107f857600080fd5b50610344610807366004614e9b565b600760209081526000948552604080862082529385528385208152918452828420909152825290205481565b34801561083f57600080fd5b5061085361084e366004614c07565b6118fe565b604080519283526020830191909152016102c7565b34801561087457600080fd5b50610258610883366004614c07565b6119fb565b34801561089457600080fd5b506102bb6108a3366004614c07565b611a6c565b3480156108b457600080fd5b506102586108c3366004614a39565b611aa7565b3480156108d457600080fd5b506103446108e3366004614c07565b611b67565b3480156108f457600080fd5b50610258610903366004614a39565b611b9f565b34801561091457600080fd5b50600054610494906001600160a01b031681565b34801561093457600080fd5b50610634610943366004614eef565b611c8c565b34801561095457600080fd5b50610258610963366004614a20565b611cb3565b60006109756000806118fe565b50905061098181611d90565b61098b8234611dd3565b5050565b610997611e2f565b6001600160a01b0385811660008181526002602090815260408083209489168084529482529182902080546001600160f81b0316600160f81b17905581516001815291517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a3610a10858585611aa7565b610a1b858584611b9f565b610a26858583610a2d565b5050505050565b610a35611e2f565b808162ffffff1614610a8e5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f636f6e6669672f6f666665725f676173626173652f3234626974730060448201526064015b60405180910390fd5b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805462ffffff60601b191662ffffff60601b606088901b1617905590518481527fc5859916e5f3fc1ed4d2cfb8c7a6cf709580f228fa0c9d9e0fa468744c7e4a9191015b60405180910390a3505050565b6000610b143383611e9a565b60405133908390600081818185875af1925050503d8060008114610b54576040519150601f19603f3d011682016040523d82523d6000602084013e610b59565b606091505b50909392505050565b610b6a611e2f565b60015464ff000000001916640100000000176001556040517fbe26733c2bf6ff3ea5ba8cfe744422bd49052ff9ed5685c9e81e6f9321dbaddd90600090a1565b6000806000806000610bc08a8a8a8a8a33611f5f565b939e929d50909b50995090975095505050505050565b6000610be0614864565b610bea89896118fe565b6101208301819052610100830191909152610c04906120ac565b610c188161010001518261012001516120f8565b3415610c2857610c283334611dd3565b61012081015160181c63ffffffff166001016080820181905263ffffffff811614610c8b5760405162461bcd60e51b81526020600482015260136024820152726d67762f6f6666657249644f766572666c6f7760681b6044820152606401610a85565b6080810151610120820151610cb79160181b66ffffffff0000001666ffffffff00000019919091161790565b6101208201526001600160a01b03808a16825288166020820152604081018790526060810186905260a0810185905260c0810184905260e08101839052610cff816000612148565b61012081015181516001600160a01b03908116600090815260026020908152604080832082870151909416835292905220556080015198975050505050505050565b6001600160a01b038085166000818152600760209081526040808320888616808552908352818420338086529084528285209689168552959092528083208690555191939092917f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d91610db79188908890614f3c565b60405180910390a3506001949350505050565b610dd2611e2f565b60015460ff60501b191660ff60501b605083901b161760015560405181151581527f9b84fe4d9ffc14a6f7ec50c18884ee0d4bb8165aa718a28558df12ab4bd32b14906020015b60405180910390a150565b610e2c611e2f565b6001546001600160601b03166001600160601b0319606083901b16176001556040516001600160a01b03821681527ff592e42c32883b35bebfbf9d9b801570a25d5ccbba452310746ad2cfd20d548f90602001610e19565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152610efa6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b600080610f0786866118fe565b91509150610f71826040805160c081018252606083811c8252605884901c60ff9081161515602080850191909152605086901c82161515848601529385901c61ffff1691830191909152602884901c62ffffff1660808301529290911c909116151560a082015290565b9350610f7c816128c5565b925050509250929050565b610f8f611e2f565b600154610f9c9082612973565b60015560405181151581527fbf39fbfab835c119637f4dbc4fb0f428c559c210200405d1ec25ddb50a93f9d490602001610e19565b610fd9611e2f565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f3090602001610e19565b61102f614864565b61103989896118fe565b6101208301819052610100830191909152611053906120ac565b6110678161010001518261012001516120f8565b3415611077576110773334611dd3565b6001600160a01b03808a16808352908916602080840182905260408085018b9052606085018a90526080850186905260a0850189905260c0850188905260e0850187905260009384526004825280842092845291815281832085845290529020546101408201526101208101516110ef826001612148565b610120820151811461112e5761012082015182516001600160a01b03908116600090815260026020908152604080832082880151909416835292905220555b50505050505050505050565b60008060008061114e8a8a8a8a8a8a61298a565b929650909450925090506111648a8a8786612c72565b9650965096509692505050565b61119c6040518060800160405280600081526020016000815260200160008152602001600081525090565b6111d0604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b6001600160a01b03808616600090815260046020908152604080832093881683529281528282208683529052205461120781612d72565b6001600160a01b038088166000908152600560209081526040808320938a1683529281528282208883529052205490935061124181612dd4565b92505050935093915050565b611255611e2f565b808162ffffff16146112a95760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f32346269747300000000000000006044820152606401610a85565b6001546112b69082611d71565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001610e19565b600033301461133a5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f696e766572746564466c6173686c6f616e2f70726f746563746564006044820152606401610a85565b61134383612e43565b9392505050565b611352611e2f565b6001600160a01b03811661139e5760405162461bcd60e51b815260206004820152601360248201527206d67762f636f6e6669672f676f762f6e6f743606c1b6044820152606401610a85565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001610e19565b6000806113f986866118fe565b915050611405816120ac565b6001600160a01b038087166000818152600460209081526040808320948a16808452948252808320898452825280832054938352600582528083209483529381528382208883529052919091205461145d8160601c90565b6001600160a01b0316336001600160a01b0316146114bd5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f726574726163744f666665722f756e617574686f72697a65640000006044820152606401610a85565b6001600160601b0382161561152157826114ed89896114dc8660e01c90565b60c087901c63ffffffff1688612fc4565b935080841461151f576001600160a01b03808a166000908152600260209081526040808320938c168352929052208490555b505b61152f88888885858a6130a4565b841561156657603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020293506115663385611dd3565b866001600160a01b0316886001600160a01b03167fe2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b886040516115ab91815260200190565b60405180910390a3505050949350505050565b428410156116035760405162461bcd60e51b81526020600482015260126024820152711b59dd8bdc195c9b5a5d0bd95e1c1a5c995960721b6044820152606401610a85565b6001600160a01b03878116600081815260086020908152604080832080546001810190915581517fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a2818501528f8716818401528e871660608201526080810195909552948b1660a085015260c084018a905260e084018590526101008085018a9052815180860390910181526101208501909152805191012061190160f01b6101408401527f0000000000000000000000000000000000000000000000000000000000000000610142840152610162830152906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611745573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061177b5750896001600160a01b0316816001600160a01b0316145b6117c75760405162461bcd60e51b815260206004820152601b60248201527f6d67762f7065726d69742f696e76616c69645369676e617475726500000000006044820152606401610a85565b87600760008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020819055508a6001600160a01b03168c6001600160a01b03167f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d8c8c8c6040516118a193929190614f3c565b60405180910390a3505050505050505050505050565b60008060008060006118cd8b8b8b8b8b8b611f5f565b9398509196509450925090506118e58b8b8886612c72565b965096509650965096915050565b6118fc33610968565b565b6001546001600160a01b03838116600090815260026020908152604080832093861683529290522054605882901c60ff16156119f4576000806119418460601c90565b604051636968abd360e01b81526001600160a01b03888116600483015287811660248301529190911690636968abd3906044016040805180830381865afa158015611990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b49190614f60565b915091506119c58261ffff81161490565b156119d7576119d48483611d4e565b93505b6001600160701b03811681036119f157610f7c8382613119565b50505b9250929050565b611a03611e2f565b6001600160a01b03828116600081815260026020908152604080832094861680845294825280832080546001600160f81b031690558051928352517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a35050565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054605881901c60ff1615155b949350505050565b611aaf611e2f565b6101f4811115611af85760405162461bcd60e51b815260206004820152601460248201527306d67762f636f6e6669672f6665652f3c3d3530360641b6044820152606401610a85565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805461ffff60e81b191661ffff60e81b60e888901b1617905590518481527f44a6d70a601a6f8a85c075467e9d7245897140cbf6dd505c9d9d764459f5fb649101610afb565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054603881901c63ffffffff16611a9f565b611ba7611e2f565b6001600160701b0381168114611bff5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f64656e736974792f313132626974730000000000006044820152606401610a85565b6001600160a01b03808416600090815260026020908152604080832093861683529290522054611c2f9082613119565b6001600160a01b038481166000818152600260209081526040808320948816808452948252918290209490945551848152919290917f95f1a495c6d9d1a215995408f6ad898c2b33798d6eb3cf3220b4c6cc8b61b0649101610afb565b600080600080611ca089898989893361298a565b929c919b50995090975095505050505050565b611cbb611e2f565b61ffff81168114611d0e5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f3136626974730000000000006044820152606401610a85565b600154611d1b9082611d4e565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001610e19565b60401b69ffff00000000000000001669ffff000000000000000019919091161790565b60281b67ffffff00000000001667ffffff000000000019919091161790565b602081901c60ff1615611dd05760405162461bcd60e51b81526020600482015260086024820152671b59dd8bd919585960c21b6044820152606401610a85565b50565b6001600160a01b03821660008181526006602052604090819020805484019055517f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09490611e239084815260200190565b60405180910390a25050565b6003546001600160a01b0316331480611e4757503330145b80611e5b57506003546001600160a01b0316155b6118fc5760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b6044820152606401610a85565b6001600160a01b03821660009081526006602052604090205481811015611f035760405162461bcd60e51b815260206004820152601960248201527f6d67762f696e73756666696369656e7450726f766973696f6e000000000000006044820152606401610a85565b6001600160a01b038316600081815260066020526040908190208484039055517f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc604690611f529085815260200190565b60405180910390a2505050565b6000806000806000611f6f6148d0565b6001600160a01b03808d1682528b166020820152611f8d8c8c6118fe565b61010083015260e0820152611fa061492e565b6001600160a01b03881660a082015288151560c082015260e0820151610100830151611fcc91906120f8565b611fda8261010001516120ac565b6040517fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b990600090a161200f81838d8d61314a565b60808401519299509097509550612025906135d9565b602080830151835160808085015160e0860151604080518d81529687018c905286019190915260608501526001600160a01b03808d1694938116939216917ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47910160405180910390a4806080015193508060e0015192505050965096509650965096915050565b605881901c60ff1615611dd05760405162461bcd60e51b81526020600482015260146024820152731b59dd8bdc99595b9d1c985b98de531bd8dad95960621b6044820152606401610a85565b61210182611d90565b61210d8160f81c151590565b61098b5760405162461bcd60e51b815260206004820152600c60248201526b6d67762f696e61637469766560a01b6044820152606401610a85565b60c082015161ffff81161461219f5760405162461bcd60e51b815260206004820152601e60248201527f6d67762f77726974654f666665722f67617370726963652f31366269747300006044820152606401610a85565b61010082015160401c61ffff168260c0015110156121ca5761010082015160401c61ffff1660c08301525b61010082015160281c62ffffff168260a00151111561222b5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f6761737265712f746f6f486967680000006044820152606401610a85565b600082606001511161227f5760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f746f6f4c6f7700000000006044820152606401610a85565b61012082015160781c6001600160701b031661012083015160601c62ffffff168360a001510102826060015110156122f95760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f770000006044820152606401610a85565b60608201516001600160601b038116146123555760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f39366269747300000000006044820152606401610a85565b60408201516001600160601b038116146123b15760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f77616e74732f39366269747300000000006044820152606401610a85565b6000806123bd84613677565b9150915083602001516001600160a01b031684600001516001600160a01b03167f2b101f9ef8ca2761d91bea55ab50a4d051e9248088ff7314ddb8826839544c2a33876040015188606001518960c001518a60a001518b608001518a60405161246297969594939291906001600160a01b03979097168752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b60405180910390a383516001600160a01b03908116600090815260056020908152604080832082890151909416835292815282822060808801518352905290812054841561253c576124b48160601c90565b6001600160a01b0316336001600160a01b0316146125145760405162461bcd60e51b815260206004820152601c60248201527f6d67762f7570646174654f666665722f756e617574686f72697a6564000000006044820152606401610a85565b603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020291505b841580612556575060a0860151604882901c62ffffff1614155b8061256d575060c0860151602082901c61ffff1614155b8061258e575061012086015160601c62ffffff16603082901c62ffffff1614155b156126385761012086015160009060601c62ffffff1690506125fe338860a00151838a60c0015160201b65ffff000000001660309190911b68ffffff0000000000001660489290921b6bffffff0000000000000000001660609390931b6001600160601b03191692909217171790565b87516001600160a01b039081166000908152600560209081526040808320828d0151909416835292815282822060808c0151835290522055505b5060c08501516101208601516000919060601c62ffffff168760a001510102633b9aca00029050818111156126785761267333838303611e9a565b61268c565b8181101561268c5761268c33828403611dd3565b506101408501516001600160601b031615806126b0575061014085015160e01c8314155b1561283c57821561273657608085015185516001600160a01b039081166000908152600460209081526040808320828b01519094168352928152828220878352905220546126fd916138a3565b85516001600160a01b039081166000908152600460209081526040808320828b0151909416835292815282822087835290522055612769565b60808501516101208601516127629160381b63ffffffff60381b1663ffffffff60381b19919091161790565b6101208601525b81156127e057608085015185516001600160a01b039081166000908152600460208181526040808420828c018051871686529083528185208986528352818520548c518716865293835281852090519095168452938152838320878452905291902060e09290921b6001600160e01b039091161790555b8380156127fa57506101408501516001600160601b031615155b1561283c576128358560000151866020015161281b88610140015160e01c90565b61014089015160c01c63ffffffff16896101200151612fc4565b6101208601525b60408501516060808701516000926001600160601b03909116911b6bffffffffffffffffffffffff60601b1660c085901b63ffffffff60c01b1660e087901b17171786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282206080909a0151825298909852909620959095555050505050565b6129096040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b60f882901c1515815260e882901c61ffff166020820152607882901c6001600160701b03166040820152606082811c62ffffff1690820152605882901c60ff1615156080820152603882901c63ffffffff90811660a083015260189290921c90911660c082015290565b60581b60ff60581b1660ff60581b19919091161790565b60008060008087886001600160a01b0316146129e85760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657257616e74732f313630626974730000006044820152606401610a85565b86876001600160a01b031614612a405760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657247697665732f313630626974730000006044820152606401610a85565b612a486148d0565b6001600160a01b03808c1682528a166020820152612a668b8b6118fe565b610100830181905260e083019190915260381c63ffffffff1660408083019182526001600160a01b03808e16600090815260046020908152838220928f1682529182528281209351815292905290205460608201526080810189905260a08101889052612ad161492e565b898152602081018990526001600160a01b03871660a082015287151560c082015260e0820151610100830151612b0791906120f8565b612b158261010001516120ac565b610100820151612b26906001612973565b82610100018181525050816101000151600260008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020819055507fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b960405160405180910390a1612bba818360016138c0565b612bc781608001516135d9565b866001600160a01b03168b6001600160a01b03168d6001600160a01b03167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec478460400151856060015186608001518760e00151604051612c40949392919093845260208401929092526040830152606082015260800190565b60405180910390a460408101516060820151608083015160e090930151919e909d50919b509950975050505050505050565b6001600160a01b0380851660009081526007602090815260408083208785168452825280832093861683529281528282203383529052205481811015612ced5760405162461bcd60e51b815260206004820152601060248201526f6d67762f6c6f77416c6c6f77616e636560801b6044820152606401610a85565b6001600160a01b0380861660008181526007602090815260408083208986168085529083528184209589168452948252808320338085529252918290208686039081905591517f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d92612d63928992909190614f3c565b60405180910390a35050505050565b612d9d6040518060800160405280600081526020016000815260200160008152602001600081525090565b60e082901c815263ffffffff60c083901c1660208201526001600160601b03606083811c8216604084015292169181019190915290565b612e08604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b606082811c8252604883901c62ffffff908116602080850191909152603085901c90911660408401529290921c61ffff169181019190915290565b600080636c49c32c60e01b83604051602401612e5f9190614f84565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b0390931692909217909152905060c0830135604881901c62ffffff169060601c60005a9050826040820482031015612f0157604080516060810182527f6d67762f6e6f74456e6f756768476173466f724d616b65725472616465000000815260006020820181905291810191909152612f0190606081fd5b600080612f0f848688613b32565b915091505a8303965081612f5557612f5560405180606001604052806e1b59dd8bdb585ad95c94995d995c9d608a1b81526020018960001b815260200183815250606081fd5b6000612f73612f6760208b018b614a05565b86308c60800135613b60565b905080612fb857612fb86040518060600160405280741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b81526020018a60001b815260200184815250606081fd5b50505050505050919050565b60008315613037576001600160a01b03808716600090815260046020908152604080832093891683529281528282208783529052205461300490846138a3565b6001600160a01b038088166000908152600460209081526040808320938a16835292815282822088835290522055613054565b63ffffffff60381b19821663ffffffff60381b603885901b161791505b821561309b576001600160a01b038681166000908152600460209081526040808320938916835292815282822086835290522080546001600160e01b031660e086901b1790555b50949350505050565b6001600160601b03198316925080156130c45765ffff0000000019821691505b506001600160a01b039485166000818152600460209081526040808320979098168083529681528782208683528152878220949094559081526005835285812094815293825284842092845291905291902055565b60781b6dffffffffffffffffffffffffffff60781b166dffffffffffffffffffffffffffff60781b19919091161790565b60008080805b848110156135ce57600060408901819052606089015285858281811061317857613178615016565b90506080020160006004811061319057613190615016565b60209081029190910135604089810191825289516001600160a01b039081166000908152600485528281208c86018051841683529086528382208551835286528382205460608e019081528d518416835260058752848320915190931682528552828120935181529290935290205460c0890152516001600160601b0316158061325c575085858281811061322757613227615016565b90506080020160036004811061323f5761323f615016565b602002013561325a8860c0015162ffffff60489190911c1690565b115b6135c65785858281811061327257613272615016565b90506080020160016004811061328a5761328a615016565b60200201358686838181106132a1576132a1615016565b9050608002016001600481106132b9576132b9615016565b60200201356001600160601b0316146133145760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657257616e74732f393662697473000000006044820152606401610a85565b85858281811061332657613326615016565b90506080020160026004811061333e5761333e615016565b602002013586868381811061335557613355615016565b90506080020160026004811061336d5761336d615016565b60200201356001600160601b0316146133c85760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657247697665732f393662697473000000006044820152606401610a85565b8585828181106133da576133da615016565b9050608002016001600481106133f2576133f2615016565b6020020135608088015285858281811061340e5761340e615016565b90506080020160026004811061342657613426615016565b602002013560a0880152610100870151613441906001612973565b610100880181905287516001600160a01b039081166000908152600260209081526040808320828d015190941683529290529081209190915580806134868b8b613c48565b925092509250806f6d67762f74726164655375636365737360801b036134ad576001870196505b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b14613501576134fa8a600001518b602001516134e18d6060015160e01c90565b60608e015160c01c63ffffffff168e6101000151612fc4565b6101008b01525b6101008a0151613512906000612973565b8a610100018181525050896101000151600260008c600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008c602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055506135808b8b614248565b61358a8b8b61434a565b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b146135b0576135b08b8b858585614436565b8a60400151860195508a60600151850194505050505b600101613150565b509450945094915050565b8015611dd057604051600090339083908381818185875af1925050503d8060008114613621576040519150601f19603f3d011682016040523d82523d6000602084013e613626565b606091505b505090508061098b5760405162461bcd60e51b815260206004820152601760248201527f6d67762f73656e6450656e616c747952657665727465640000000000000000006044820152606401610a85565b60008060008060008560e0015190506000866080015182146136cc5786516001600160a01b039081166000908152600460209081526040808320828c01519094168352928152828220858352905220546136d3565b8661014001515b90506001600160601b03811661372c5761012087015160381c63ffffffff1687516001600160a01b039081166000908152600460209081526040808320828d015190941683529281528282208483529052205490925090505b6137378782846144bc565b156137d15760005b60c082901c63ffffffff16156137b9575086516001600160a01b039081166000908152600460209081526040808320828c0151909416835292815282822063ffffffff60c086901c168084529152919020549061379d8983836144bc565b156137ad578093508192506137b3565b506137b9565b5061373f565b8260c083901c63ffffffff16909550935061385a9050565b60005b6137de8260e01c90565b156138475760006137ef8360e01c90565b89516001600160a01b039081166000908152600460209081526040808320828f0151909416835292815282822084835290522054925090506138328983836144bc565b1561383d5750613847565b92509050806137d4565b6138518260e01c90565b94509192508291505b8660800151841461386b5783613875565b61014087015160e01c5b876080015184146138865783613896565b61014088015160c01c63ffffffff165b9550955050505050915091565b60c01b63ffffffff60c01b1663ffffffff60c01b19919091161790565b8080156138e757508260c001516138de5760008260a00151116138e7565b60008260800151115b80156138f7575060008260400151115b15613ab35781516001600160a01b03908116600090815260056020908152604080832082870151909416835292815282822083860151835290529081205460c084015280806139468686613c48565b608088015160a089015160408a015160608b015160c08c015196995094975092955090939092906e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613a3d5760408b01518b51116139995760006139a2565b60408b01518b51035b60808b015260608b81015160208d01510360a08c01528a015160c01c63ffffffff168a6040018181525050600460008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b602001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b604001518152602001908152602001600020548a60600181815250505b613a5d8b8b886e1b59dd8bdb9bdd115e1958dd5d1959608a1b14156138c0565b60408a0183905260808a0185905260a08a0184905260608a0182905260c08a018190526e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613aa657613aa68b8b8a8a8a614436565b5050505050505050505050565b613ad28260000151836020015160008560400151866101000151612fc4565b6101008301819052613ae5906000612973565b610100830181905282516001600160a01b0390811660009081526002602090815260408083208288015190941683529290522055613b238383614248565b613b2d838361434a565b505050565b600080613b3d61497e565b60648185516020870160008a8af192508060448415020151915050935093915050565b6000806323b872dd60e01b858585604051602401613b8093929190614f3c565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080876001600160a01b031683604051613bd0919061502c565b6000604051808303816000865af19150503d8060008114613c0d576040519150601f19603f3d011682016040523d82523d6000602084013e613c12565b606091505b5091509150818015613c3c575080511580613c3c575080806020019051810190613c3c9190615067565b98975050505050505050565b600080600080613c6885606001516001600160601b0360609190911c1690565b90506000613c8086606001516001600160601b031690565b608087015160a0880151919250908083028483021115613cc05750600095508594506e1b59dd8bdb9bdd115e1958dd5d1959608a1b935061424192505050565b8860c001518015613cd057508183105b80613ce757508860c00151158015613ce757508084105b15613cff576080880183905260a08801849052613d76565b8860c0015115613d4a57838202838181613d1b57613d1b615000565b0615613d28576001613d2b565b60005b60ff16848281613d3d57613d3d615000565b040160a08a015250613d76565b83600003613d5e5760808801839052613d76565b8381840281613d6f57613d6f615000565b0460808901525b50505050600080306001600160a01b031663aa4dd28260e01b878960a00151604051602401613da69291906150ea565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051613de4919061502c565b6000604051808303816000865af19150503d8060008114613e21576040519150601f19603f3d011682016040523d82523d6000602084013e613e26565b606091505b50915091508115613f805780806020019051810190613e459190615112565b94506f6d67762f74726164655375636365737360801b925085602001516001600160a01b031686600001516001600160a01b03167f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d88604001518a60a001518a608001518b60a00151604051613edd94939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405180910390a360e086015160501c60ff1615613f5b5760e086015160a088015160405163cac1827160e01b815260609290921c9163cac1827191613f28918a91906004016150ea565b600060405180830381600087803b158015613f4257600080fd5b505af1158015613f56573d6000803e3d6000fd5b505050505b6080860151604088018051909101905260a08601516060880180519091019052614206565b602081015160408201516060830151909650945092506e1b59dd8bdb585ad95c94995d995c9d608a1b831480613fcd575082741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b145b80613fee575082731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b145b156141005785602001516001600160a01b031686600001516001600160a01b03167f1d59c048edb5397821854bd12cbe02242b82101c677f949d076d14eb7bd8343688604001518a60a001518a608001518b60a001518960405161407d9594939291909485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b60405180910390a360e086015160501c60ff16156140fb5760e086015160a0880151604051631159507360e01b815260609290921c916311595073916140c8918a91906004016150ea565b600060405180830381600087803b1580156140e257600080fd5b505af11580156140f6573d6000803e3d6000fd5b505050505b614206565b827f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000000361416f5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000006044820152606401610a85565b82741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b036141ce5760405162461bcd60e51b81526020600482015260156024820152741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b6044820152606401610a85565b60405162461bcd60e51b815260206004820152600d60248201526c36b3bb17b9bbb0b822b93937b960991b6044820152606401610a85565b61423e86600001518760200151886040015189606001518a60c00151886f6d67762f74726164655375636365737360801b14156130a4565b50505b9250925092565b6101008101516000906127109060e81c61ffff168460400151028161426f5761426f615000565b04905080156142e557604083018051829003905260e0830181905281516000546142a391906001600160a01b031683614562565b6142e55760405162461bcd60e51b81526020600482015260136024820152721b59dd8bd99959551c985b9cd9995c91985a5b606a1b6044820152606401610a85565b604083015115613b2d5761430682600001518460a001518560400151614562565b613b2d5760405162461bcd60e51b815260206004820152601560248201527436b3bb17a6b3bb2330b4b62a37a830bcaa30b5b2b960591b6044820152606401610a85565b60a08201518151602083015160408086015160608701519151631154020b60e01b81526001600160a01b039485166004820152928416602484015260448301526064820152911690631154020b90608401600060405180830381600087803b1580156143b557600080fd5b505af11580156143c9573d6000803e3d6000fd5b5050505060006143e782602001518460a00151308660600151613b60565b905080613b2d5760405162461bcd60e51b815260206004820152601760248201527f6d67762f74616b65724661696c546f506179546f74616c0000000000000000006044820152606401610a85565b806f6d67762f74726164655375636365737360801b036144595761445984614637565b60c084015160481c62ffffff1680841115614472578093505b61448085858303858561467c565b84019350816f6d67762f74726164655375636365737360801b146144b4576144a885856147d2565b60808701805190910190525b505050505050565b6000816000036144ce57506001611343565b60408401516060858101516001600160601b039186901c82169291861691908084028284028082036145555789516001600160a01b039081166000908152600560209081526040808320828f015190941683529281528282208b835290529081205460481c62ffffff1660a08c015194029590930294909410159550611343945050505050565b1194506113439350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839182918816906145c090859061502c565b6000604051808303816000865af19150503d80600081146145fd576040519150601f19603f3d011682016040523d82523d6000602084013e614602565b606091505b509150915081801561462c57508051158061462c57508080602001905181019061462c9190615067565b979650505050505050565b614657816020015161464d8360c0015160601c90565b8360a00151614562565b611dd057602081015160005460a083015161098b92916001600160a01b031690614562565b600080633d3d130d60e01b866040518060400160405280878152602001868152506040516024016146ae92919061512b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319939093169290921790915260c087015190915060601c60005a90508660408204820310156147465760405162461bcd60e51b815260206004820181905260248201527f6d67762f6e6f74456e6f756768476173466f724d616b6572506f7374686f6f6b6044820152606401610a85565b600080614754848a87613b32565b915091505a83039550816147c55789602001516001600160a01b03168a600001516001600160a01b03167f51d5a3ecf332626d83c8207fe9bd22f38801f578c7eb222e2d811cd1b4c629a58c60400151846040516147bc929190918252602082015260400190565b60405180910390a35b5050505050949350505050565b60c082015160009062ffffff604882901c81169161ffff602082901c1660309190911c909116820102633b9aca00028184111561480d578193505b61010085015160009060601c62ffffff1660e08701519086019060401c61ffff16633b9aca0002029050818111156148425750805b61485b6148538760c0015160601c90565b828403611dd3565b95945050505050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610120016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600081525090565b60405180608001604052806004906020820280368337509192915050565b80356001600160a01b03811681146149b357600080fd5b919050565b600080600080600060a086880312156149d057600080fd5b6149d98661499c565b94506149e76020870161499c565b94979496505050506040830135926060810135926080909101359150565b600060208284031215614a1757600080fd5b6113438261499c565b600060208284031215614a3257600080fd5b5035919050565b600080600060608486031215614a4e57600080fd5b614a578461499c565b9250614a656020850161499c565b9150604084013590509250925092565b60008083601f840112614a8757600080fd5b50813567ffffffffffffffff811115614a9f57600080fd5b6020830191508360208260071b85010111156119f457600080fd5b8015158114611dd057600080fd5b600080600080600060808688031215614ae057600080fd5b614ae98661499c565b9450614af76020870161499c565b9350604086013567ffffffffffffffff811115614b1357600080fd5b614b1f88828901614a75565b9094509250506060860135614b3381614aba565b809150509295509295909350565b600080600080600080600060e0888a031215614b5c57600080fd5b614b658861499c565b9650614b736020890161499c565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b60008060008060808587031215614bb557600080fd5b614bbe8561499c565b9350614bcc6020860161499c565b9250614bda6040860161499c565b9396929550929360600135925050565b600060208284031215614bfc57600080fd5b813561134381614aba565b60008060408385031215614c1a57600080fd5b614c238361499c565b9150614c316020840161499c565b90509250929050565b600080600080600080600080610100898b031215614c5757600080fd5b614c608961499c565b9750614c6e60208a0161499c565b979a9799505050506040860135956060810135956080820135955060a0820135945060c0820135935060e0909101359150565b60008060008060008060c08789031215614cba57600080fd5b614cc38761499c565b9550614cd16020880161499c565b945060408701359350606087013592506080870135614cef81614aba565b9150614cfd60a0880161499c565b90509295509295509295565b600080828403610140811215614d1e57600080fd5b61012080821215614d2e57600080fd5b849350610f7c81860161499c565b60008060008060808587031215614d5257600080fd5b614d5b8561499c565b9350614d696020860161499c565b9250604085013591506060850135614d8081614aba565b939692955090935050565b60008060008060008060008060006101208a8c031215614daa57600080fd5b614db38a61499c565b9850614dc160208b0161499c565b9750614dcf60408b0161499c565b9650614ddd60608b0161499c565b955060808a0135945060a08a0135935060c08a013560ff81168114614e0157600080fd5b8093505060e08a013591506101008a013590509295985092959850929598565b60008060008060008060a08789031215614e3a57600080fd5b614e438761499c565b9550614e516020880161499c565b9450604087013567ffffffffffffffff811115614e6d57600080fd5b614e7989828a01614a75565b9095509350506060870135614e8d81614aba565b9150614cfd6080880161499c565b60008060008060808587031215614eb157600080fd5b614eba8561499c565b9350614ec86020860161499c565b9250614ed66040860161499c565b9150614ee46060860161499c565b905092959194509250565b600080600080600060a08688031215614f0757600080fd5b614f108661499c565b9450614f1e6020870161499c565b935060408601359250606086013591506080860135614b3381614aba565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60008060408385031215614f7357600080fd5b505080516020909101519092909150565b61012081016001600160a01b0380614f9b8561499c565b16835280614fab6020860161499c565b1660208401525060408301356040830152606083013560608301526080830135608083015260a083013560a083015260c083013560c083015260e083013560e083015261010080840135818401525092915050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000825160005b8181101561504d5760208186018101518583015201615033565b8181111561505c576000828501525b509190910192915050565b60006020828403121561507957600080fd5b815161134381614aba565b60018060a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b61014081016150f98285615084565b6001600160a01b03929092166101209190910152919050565b60006020828403121561512457600080fd5b5051919050565b610160810161513a8285615084565b82516101208301526020830151610140830152939250505056fea26469706673582212209a27c46efe9a049a0c8d78cb7362a0c516bbb9784d448b972f2886aca3b09ff464736f6c634300080e003360a06040523480156200001157600080fd5b50604051620055e4380380620055e4833981016040819052620000349162000484565b828282604051806040016040528060088152602001674d616e67726f766560c01b815250808484847f72201d073f249840099a96530e189c4291c1852040b1e96ff1f606db656be4ff60405160405180910390a1620000938362000165565b6200009e82620001c4565b620000a98162000277565b620000b48362000327565b5050815160208084019190912060408051808201825260018152603160f81b9084015280517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f938101939093528201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001905060408051601f19818403018152919052805160209091012060805250620004c99650505050505050565b6200016f620003d8565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f30906020015b60405180910390a150565b620001ce620003d8565b61ffff81168114620002275760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f31366269747300000000000060448201526064015b60405180910390fd5b62000243816001546200044960201b62001e221790919060201c565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001620001b9565b62000281620003d8565b808162ffffff1614620002d75760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f323462697473000000000000000060448201526064016200021e565b620002f3816001546200046760201b62001e451790919060201c565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001620001b9565b62000331620003d8565b6001600160a01b038116620003895760405162461bcd60e51b815260206004820152601360248201527f6d67762f636f6e6669672f676f762f6e6f74300000000000000000000000000060448201526064016200021e565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001620001b9565b6003546001600160a01b0316331480620003f157503330145b806200040657506003546001600160a01b0316155b620004475760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b60448201526064016200021e565b565b60401b69ffff00000000000000001661ffff60401b19919091161790565b60281b67ffffff00000000001662ffffff60281b19919091161790565b6000806000606084860312156200049a57600080fd5b83516001600160a01b0381168114620004b257600080fd5b602085015160409095015190969495509392505050565b6080516150f8620004ec60003960008181610364015261177e01526150f86000f3fe60806040526004361061024a5760003560e01c80636d27de6711610139578063b60d4288116100b6578063dc7e98df1161007a578063dc7e98df146108a8578063def5ddaa146108c8578063fbb66910146108e8578063fbfa77cf14610908578063fbffe5fd14610928578063fcaa7e2e1461094857600080fd5b8063b60d4288146107e4578063c7bb25d0146107ec578063cbf75c9a14610833578063d0ee509914610868578063db20266f1461088857600080fd5b8063aa4dd282116100fd578063aa4dd28214610744578063ab033ea914610764578063ad97db1b14610784578063b09d2a16146107a4578063b2b12057146107c457600080fd5b80636d27de671461061457806370a08231146106545780637ecebe00146106815780638c66715c146106ae57806395999ee31461072457600080fd5b80635722647b116101c7578063644e67031161018b578063644e6703146104cc5780636804f613146105835780636817031b146105a357806368c13d6b146105c35780636a4f76911461060157600080fd5b80635722647b146103f657806359eba454146104345780635a611f4e146104545780635aa6e675146104745780635cd82390146104ac57600080fd5b806330adf81f1161020e57806330adf81f146103105780633644e5151461035257806341c0e1b51461038657806346e142fa1461039b57806349f6d2dc146103e357600080fd5b80630b73a18f1461025f578063230244081461027f578063275074581461029257806327d097c6146102d05780632e1a7d4d146102f057600080fd5b3661025a5761025833610968565b005b600080fd5b34801561026b57600080fd5b5061025861027a366004614926565b61098f565b61025861028d366004614973565b610968565b34801561029e57600080fd5b506102bb6102ad36600461498e565b6001600160601b0316151590565b60405190151581526020015b60405180910390f35b3480156102dc57600080fd5b506102586102eb3660046149a7565b610a2d565b3480156102fc57600080fd5b506102bb61030b36600461498e565b610b08565b34801561031c57600080fd5b506103447fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a281565b6040519081526020016102c7565b34801561035e57600080fd5b506103447f000000000000000000000000000000000000000000000000000000000000000081565b34801561039257600080fd5b50610258610b62565b3480156103a757600080fd5b506103bb6103b6366004614a36565b610baa565b604080519586526020860194909452928401919091526060830152608082015260a0016102c7565b6103446103f1366004614aaf565b610bd6565b34801561040257600080fd5b506103446104113660046149a7565b600560209081526000938452604080852082529284528284209052825290205481565b34801561044057600080fd5b506102bb61044f366004614b0d565b610d41565b34801561046057600080fd5b5061025861046f366004614b58565b610dca565b34801561048057600080fd5b50600354610494906001600160a01b031681565b6040516001600160a01b0390911681526020016102c7565b3480156104b857600080fd5b506102586104c7366004614973565b610e24565b3480156104d857600080fd5b506104ec6104e7366004614b75565b610e84565b6040805183516001600160a01b0316815260208085015115158183015284830151151582840152606080860151818401526080808701518185015260a0968701511515878501528551151560c0808601919091529286015160e0850152938501516101008401528401516101208301529183015115156101408201529282015161016084015201516101808201526101a0016102c7565b34801561058f57600080fd5b5061025861059e366004614b58565b610f87565b3480156105af57600080fd5b506102586105be366004614973565b610fd1565b3480156105cf57600080fd5b506103446105de3660046149a7565b600460209081526000938452604080852082529284528284209052825290205481565b61025861060f366004614ba8565b611027565b34801561062057600080fd5b5061063461062f366004614c0f565b61113a565b6040805194855260208501939093529183015260608201526080016102c7565b34801561066057600080fd5b5061034461066f366004614973565b60066020526000908152604090205481565b34801561068d57600080fd5b5061034461069c366004614973565b60086020526000908152604090205481565b3480156106ba57600080fd5b506106ce6106c93660046149a7565b611171565b60408051835181526020808501518183015284830151828401526060948501518583015283516001600160a01b0316608083015283015160a08201529082015160c082015291015160e0820152610100016102c7565b34801561073057600080fd5b5061025861073f36600461498e565b61124d565b34801561075057600080fd5b5061034461075f366004614c77565b6112e9565b34801561077057600080fd5b5061025861077f366004614973565b61141e565b34801561079057600080fd5b5061034461079f366004614caa565b6114c0565b3480156107b057600080fd5b506102586107bf366004614cf9565b611692565b3480156107d057600080fd5b506103bb6107df366004614d8f565b61198b565b6102586119c7565b3480156107f857600080fd5b50610344610807366004614e09565b600760209081526000948552604080862082529385528385208152918452828420909152825290205481565b34801561083f57600080fd5b5061085361084e366004614b75565b6119d2565b604080519283526020830191909152016102c7565b34801561087457600080fd5b50610258610883366004614b75565b611acf565b34801561089457600080fd5b506102bb6108a3366004614b75565b611b40565b3480156108b457600080fd5b506102586108c33660046149a7565b611b7b565b3480156108d457600080fd5b506103446108e3366004614b75565b611c3b565b3480156108f457600080fd5b506102586109033660046149a7565b611c73565b34801561091457600080fd5b50600054610494906001600160a01b031681565b34801561093457600080fd5b50610634610943366004614e5d565b611d60565b34801561095457600080fd5b5061025861096336600461498e565b611d87565b60006109756000806119d2565b50905061098181611e64565b61098b8234611ea7565b5050565b610997611f03565b6001600160a01b0385811660008181526002602090815260408083209489168084529482529182902080546001600160f81b0316600160f81b17905581516001815291517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a3610a10858585611b7b565b610a1b858584611c73565b610a26858583610a2d565b5050505050565b610a35611f03565b808162ffffff1614610a8e5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f636f6e6669672f6f666665725f676173626173652f3234626974730060448201526064015b60405180910390fd5b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805462ffffff60601b191662ffffff60601b606088901b1617905590518481527fc5859916e5f3fc1ed4d2cfb8c7a6cf709580f228fa0c9d9e0fa468744c7e4a9191015b60405180910390a3505050565b6000610b143383611f6e565b60405133908390600081818185875af1925050503d8060008114610b54576040519150601f19603f3d011682016040523d82523d6000602084013e610b59565b606091505b50909392505050565b610b6a611f03565b60015464ff000000001916640100000000176001556040517fbe26733c2bf6ff3ea5ba8cfe744422bd49052ff9ed5685c9e81e6f9321dbaddd90600090a1565b6000806000806000610bc08a8a8a8a8a33612033565b939e929d50909b50995090975095505050505050565b6000610be06147d2565b610bea89896119d2565b6101208301819052610100830191909152610c0490612180565b610c188161010001518261012001516121cc565b3415610c2857610c283334611ea7565b61012081015160181c63ffffffff166001016080820181905263ffffffff811614610c8b5760405162461bcd60e51b81526020600482015260136024820152726d67762f6f6666657249644f766572666c6f7760681b6044820152606401610a85565b6080810151610120820151610cb79160181b66ffffffff0000001666ffffffff00000019919091161790565b6101208201526001600160a01b03808a16825288166020820152604081018790526060810186905260a0810185905260c0810184905260e08101839052610cff81600061221c565b61012081015181516001600160a01b03908116600090815260026020908152604080832082870151909416835292905220556080015198975050505050505050565b6001600160a01b038085166000818152600760209081526040808320888616808552908352818420338086529084528285209689168552959092528083208690555191939092917f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d91610db79188908890614eaa565b60405180910390a3506001949350505050565b610dd2611f03565b60015460ff60501b191660ff60501b605083901b161760015560405181151581527f9b84fe4d9ffc14a6f7ec50c18884ee0d4bb8165aa718a28558df12ab4bd32b14906020015b60405180910390a150565b610e2c611f03565b6001546001600160601b03166001600160601b0319606083901b16176001556040516001600160a01b03821681527ff592e42c32883b35bebfbf9d9b801570a25d5ccbba452310746ad2cfd20d548f90602001610e19565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152610efa6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b600080610f0786866119d2565b91509150610f71826040805160c081018252606083811c8252605884901c60ff9081161515602080850191909152605086901c82161515848601529385901c61ffff1691830191909152602884901c62ffffff1660808301529290911c909116151560a082015290565b9350610f7c81612999565b925050509250929050565b610f8f611f03565b600154610f9c9082612a47565b60015560405181151581527fbf39fbfab835c119637f4dbc4fb0f428c559c210200405d1ec25ddb50a93f9d490602001610e19565b610fd9611f03565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f3090602001610e19565b61102f6147d2565b61103989896119d2565b610120830181905261010083019190915261105390612180565b6110678161010001518261012001516121cc565b3415611077576110773334611ea7565b6001600160a01b03808a16808352908916602080840182905260408085018b9052606085018a90526080850186905260a0850189905260c0850188905260e0850187905260009384526004825280842092845291815281832085845290529020546101408201526101208101516110ef82600161221c565b610120820151811461112e5761012082015182516001600160a01b03908116600090815260026020908152604080832082880151909416835292905220555b50505050505050505050565b60008060008061114e8a8a8a8a8a8a612a5e565b929650909450925090506111648a8a8786612d46565b9650965096509692505050565b61119c6040518060800160405280600081526020016000815260200160008152602001600081525090565b6111d0604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b6001600160a01b03808616600090815260046020908152604080832093881683529281528282208683529052205461120781612e46565b6001600160a01b038088166000908152600560209081526040808320938a1683529281528282208883529052205490935061124181612ea8565b92505050935093915050565b611255611f03565b808162ffffff16146112a95760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f32346269747300000000000000006044820152606401610a85565b6001546112b69082611e45565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001610e19565b600033301461133a5760405162461bcd60e51b815260206004820152601760248201527f6d67762f666c6173686c6f616e2f70726f7465637465640000000000000000006044820152606401610a85565b61135961134d6040850160208601614973565b83308660a00135612f17565b156113da576113836113716040850160208601614973565b60c085013560601c8560a00135612fff565b1561139857611391836130d6565b9050611418565b60408051606081018252731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b8152600060208201819052918101919091526113d590606081fd5b611418565b60408051606081018252741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b81526000602082018190529181019190915261141890606081fd5b92915050565b611426611f03565b6001600160a01b0381166114725760405162461bcd60e51b815260206004820152601360248201527206d67762f636f6e6669672f676f762f6e6f743606c1b6044820152606401610a85565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001610e19565b6000806114cd86866119d2565b9150506114d981612180565b6001600160a01b038087166000818152600460209081526040808320948a1680845294825280832089845282528083205493835260058252808320948352938152838220888352905291909120546115318160601c90565b6001600160a01b0316336001600160a01b0316146115915760405162461bcd60e51b815260206004820152601d60248201527f6d67762f726574726163744f666665722f756e617574686f72697a65640000006044820152606401610a85565b6001600160601b038216156115f557826115c189896115b08660e01c90565b60c087901c63ffffffff1688613257565b93508084146115f3576001600160a01b03808a166000908152600260209081526040808320938c168352929052208490555b505b61160388888885858a613337565b841561163a57603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca000202935061163a3385611ea7565b866001600160a01b0316886001600160a01b03167fe2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b8860405161167f91815260200190565b60405180910390a3505050949350505050565b428410156116d75760405162461bcd60e51b81526020600482015260126024820152711b59dd8bdc195c9b5a5d0bd95e1c1a5c995960721b6044820152606401610a85565b6001600160a01b03878116600081815260086020908152604080832080546001810190915581517fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a2818501528f8716818401528e871660608201526080810195909552948b1660a085015260c084018a905260e084018590526101008085018a9052815180860390910181526101208501909152805191012061190160f01b6101408401527f0000000000000000000000000000000000000000000000000000000000000000610142840152610162830152906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611819573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061184f5750896001600160a01b0316816001600160a01b0316145b61189b5760405162461bcd60e51b815260206004820152601b60248201527f6d67762f7065726d69742f696e76616c69645369676e617475726500000000006044820152606401610a85565b87600760008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020819055508a6001600160a01b03168c6001600160a01b03167f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d8c8c8c60405161197593929190614eaa565b60405180910390a3505050505050505050505050565b60008060008060006119a18b8b8b8b8b8b612033565b9398509196509450925090506119b98b8b8886612d46565b965096509650965096915050565b6119d033610968565b565b6001546001600160a01b03838116600090815260026020908152604080832093861683529290522054605882901c60ff1615611ac857600080611a158460601c90565b604051636968abd360e01b81526001600160a01b03888116600483015287811660248301529190911690636968abd3906044016040805180830381865afa158015611a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a889190614ece565b91509150611a998261ffff81161490565b15611aab57611aa88483611e22565b93505b6001600160701b0381168103611ac557610f7c83826133ac565b50505b9250929050565b611ad7611f03565b6001600160a01b03828116600081815260026020908152604080832094861680845294825280832080546001600160f81b031690558051928352517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a35050565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054605881901c60ff1615155b949350505050565b611b83611f03565b6101f4811115611bcc5760405162461bcd60e51b815260206004820152601460248201527306d67762f636f6e6669672f6665652f3c3d3530360641b6044820152606401610a85565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805461ffff60e81b191661ffff60e81b60e888901b1617905590518481527f44a6d70a601a6f8a85c075467e9d7245897140cbf6dd505c9d9d764459f5fb649101610afb565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054603881901c63ffffffff16611b73565b611c7b611f03565b6001600160701b0381168114611cd35760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f64656e736974792f313132626974730000000000006044820152606401610a85565b6001600160a01b03808416600090815260026020908152604080832093861683529290522054611d0390826133ac565b6001600160a01b038481166000818152600260209081526040808320948816808452948252918290209490945551848152919290917f95f1a495c6d9d1a215995408f6ad898c2b33798d6eb3cf3220b4c6cc8b61b0649101610afb565b600080600080611d74898989898933612a5e565b929c919b50995090975095505050505050565b611d8f611f03565b61ffff81168114611de25760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f3136626974730000000000006044820152606401610a85565b600154611def9082611e22565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001610e19565b60401b69ffff00000000000000001669ffff000000000000000019919091161790565b60281b67ffffff00000000001667ffffff000000000019919091161790565b602081901c60ff1615611ea45760405162461bcd60e51b81526020600482015260086024820152671b59dd8bd919585960c21b6044820152606401610a85565b50565b6001600160a01b03821660008181526006602052604090819020805484019055517f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09490611ef79084815260200190565b60405180910390a25050565b6003546001600160a01b0316331480611f1b57503330145b80611f2f57506003546001600160a01b0316155b6119d05760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b6044820152606401610a85565b6001600160a01b03821660009081526006602052604090205481811015611fd75760405162461bcd60e51b815260206004820152601960248201527f6d67762f696e73756666696369656e7450726f766973696f6e000000000000006044820152606401610a85565b6001600160a01b038316600081815260066020526040908190208484039055517f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc6046906120269085815260200190565b60405180910390a2505050565b600080600080600061204361483e565b6001600160a01b03808d1682528b1660208201526120618c8c6119d2565b61010083015260e082015261207461489c565b6001600160a01b03881660a082015288151560c082015260e08201516101008301516120a091906121cc565b6120ae826101000151612180565b6040517fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b990600090a16120e381838d8d6133dd565b608084015192995090975095506120f990613862565b602080830151835160808085015160e0860151604080518d81529687018c905286019190915260608501526001600160a01b03808d1694938116939216917ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47910160405180910390a4806080015193508060e0015192505050965096509650965096915050565b605881901c60ff1615611ea45760405162461bcd60e51b81526020600482015260146024820152731b59dd8bdc99595b9d1c985b98de531bd8dad95960621b6044820152606401610a85565b6121d582611e64565b6121e18160f81c151590565b61098b5760405162461bcd60e51b815260206004820152600c60248201526b6d67762f696e61637469766560a01b6044820152606401610a85565b60c082015161ffff8116146122735760405162461bcd60e51b815260206004820152601e60248201527f6d67762f77726974654f666665722f67617370726963652f31366269747300006044820152606401610a85565b61010082015160401c61ffff168260c00151101561229e5761010082015160401c61ffff1660c08301525b61010082015160281c62ffffff168260a0015111156122ff5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f6761737265712f746f6f486967680000006044820152606401610a85565b60008260600151116123535760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f746f6f4c6f7700000000006044820152606401610a85565b61012082015160781c6001600160701b031661012083015160601c62ffffff168360a001510102826060015110156123cd5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f770000006044820152606401610a85565b60608201516001600160601b038116146124295760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f39366269747300000000006044820152606401610a85565b60408201516001600160601b038116146124855760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f77616e74732f39366269747300000000006044820152606401610a85565b60008061249184613900565b9150915083602001516001600160a01b031684600001516001600160a01b03167f2b101f9ef8ca2761d91bea55ab50a4d051e9248088ff7314ddb8826839544c2a33876040015188606001518960c001518a60a001518b608001518a60405161253697969594939291906001600160a01b03979097168752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b60405180910390a383516001600160a01b039081166000908152600560209081526040808320828901519094168352928152828220608088015183529052908120548415612610576125888160601c90565b6001600160a01b0316336001600160a01b0316146125e85760405162461bcd60e51b815260206004820152601c60248201527f6d67762f7570646174654f666665722f756e617574686f72697a6564000000006044820152606401610a85565b603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020291505b84158061262a575060a0860151604882901c62ffffff1614155b80612641575060c0860151602082901c61ffff1614155b80612662575061012086015160601c62ffffff16603082901c62ffffff1614155b1561270c5761012086015160009060601c62ffffff1690506126d2338860a00151838a60c0015160201b65ffff000000001660309190911b68ffffff0000000000001660489290921b6bffffff0000000000000000001660609390931b6001600160601b03191692909217171790565b87516001600160a01b039081166000908152600560209081526040808320828d0151909416835292815282822060808c0151835290522055505b5060c08501516101208601516000919060601c62ffffff168760a001510102633b9aca000290508181111561274c5761274733838303611f6e565b612760565b818110156127605761276033828403611ea7565b506101408501516001600160601b03161580612784575061014085015160e01c8314155b1561291057821561280a57608085015185516001600160a01b039081166000908152600460209081526040808320828b01519094168352928152828220878352905220546127d191613b2c565b85516001600160a01b039081166000908152600460209081526040808320828b015190941683529281528282208783529052205561283d565b60808501516101208601516128369160381b63ffffffff60381b1663ffffffff60381b19919091161790565b6101208601525b81156128b457608085015185516001600160a01b039081166000908152600460208181526040808420828c018051871686529083528185208986528352818520548c518716865293835281852090519095168452938152838320878452905291902060e09290921b6001600160e01b039091161790555b8380156128ce57506101408501516001600160601b031615155b1561291057612909856000015186602001516128ef88610140015160e01c90565b61014089015160c01c63ffffffff16896101200151613257565b6101208601525b60408501516060808701516000926001600160601b03909116911b6bffffffffffffffffffffffff60601b1660c085901b63ffffffff60c01b1660e087901b17171786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282206080909a0151825298909852909620959095555050505050565b6129dd6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b60f882901c1515815260e882901c61ffff166020820152607882901c6001600160701b03166040820152606082811c62ffffff1690820152605882901c60ff1615156080820152603882901c63ffffffff90811660a083015260189290921c90911660c082015290565b60581b60ff60581b1660ff60581b19919091161790565b60008060008087886001600160a01b031614612abc5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657257616e74732f313630626974730000006044820152606401610a85565b86876001600160a01b031614612b145760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657247697665732f313630626974730000006044820152606401610a85565b612b1c61483e565b6001600160a01b03808c1682528a166020820152612b3a8b8b6119d2565b610100830181905260e083019190915260381c63ffffffff1660408083019182526001600160a01b03808e16600090815260046020908152838220928f1682529182528281209351815292905290205460608201526080810189905260a08101889052612ba561489c565b898152602081018990526001600160a01b03871660a082015287151560c082015260e0820151610100830151612bdb91906121cc565b612be9826101000151612180565b610100820151612bfa906001612a47565b82610100018181525050816101000151600260008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020819055507fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b960405160405180910390a1612c8e81836001613b49565b612c9b8160800151613862565b866001600160a01b03168b6001600160a01b03168d6001600160a01b03167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec478460400151856060015186608001518760e00151604051612d14949392919093845260208401929092526040830152606082015260800190565b60405180910390a460408101516060820151608083015160e090930151919e909d50919b509950975050505050505050565b6001600160a01b0380851660009081526007602090815260408083208785168452825280832093861683529281528282203383529052205481811015612dc15760405162461bcd60e51b815260206004820152601060248201526f6d67762f6c6f77416c6c6f77616e636560801b6044820152606401610a85565b6001600160a01b0380861660008181526007602090815260408083208986168085529083528184209589168452948252808320338085529252918290208686039081905591517f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d92612e37928992909190614eaa565b60405180910390a35050505050565b612e716040518060800160405280600081526020016000815260200160008152602001600081525090565b60e082901c815263ffffffff60c083901c1660208201526001600160601b03606083811c8216604084015292169181019190915290565b612edc604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b606082811c8252604883901c62ffffff908116602080850191909152603085901c90911660408401529290921c61ffff169181019190915290565b6000806323b872dd60e01b858585604051602401612f3793929190614eaa565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080876001600160a01b031683604051612f879190614ef2565b6000604051808303816000865af19150503d8060008114612fc4576040519150601f19603f3d011682016040523d82523d6000602084013e612fc9565b606091505b5091509150818015612ff3575080511580612ff3575080806020019051810190612ff39190614f2d565b98975050505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928391829188169061305d908590614ef2565b6000604051808303816000865af19150503d806000811461309a576040519150601f19603f3d011682016040523d82523d6000602084013e61309f565b606091505b50915091508180156130c95750805115806130c95750808060200190518101906130c99190614f2d565b93505050505b9392505050565b600080636c49c32c60e01b836040516024016130f29190614f4a565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b0390931692909217909152905060c0830135604881901c62ffffff169060601c60005a905082604082048203101561319457604080516060810182527f6d67762f6e6f74456e6f756768476173466f724d616b6572547261646500000081526000602082018190529181019190915261319490606081fd5b6000806131a2848688613db1565b915091505a83039650816131e8576131e860405180606001604052806e1b59dd8bdb585ad95c94995d995c9d608a1b81526020018960001b815260200183815250606081fd5b60006132066131fa60208b018b614973565b86308c60800135612f17565b90508061324b5761324b6040518060600160405280741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b81526020018a60001b815260200184815250606081fd5b50505050505050919050565b600083156132ca576001600160a01b0380871660009081526004602090815260408083209389168352928152828220878352905220546132979084613b2c565b6001600160a01b038088166000908152600460209081526040808320938a168352928152828220888352905220556132e7565b63ffffffff60381b19821663ffffffff60381b603885901b161791505b821561332e576001600160a01b038681166000908152600460209081526040808320938916835292815282822086835290522080546001600160e01b031660e086901b1790555b50949350505050565b6001600160601b03198316925080156133575765ffff0000000019821691505b506001600160a01b039485166000818152600460209081526040808320979098168083529681528782208683528152878220949094559081526005835285812094815293825284842092845291905291902055565b60781b6dffffffffffffffffffffffffffff60781b166dffffffffffffffffffffffffffff60781b19919091161790565b60008080805b8481101561385757600060408901819052606089015285858281811061340b5761340b614fdc565b90506080020160006004811061342357613423614fdc565b60209081029190910135604089810191825289516001600160a01b039081166000908152600485528281208c86018051841683529086528382208551835286528382205460608e019081528d518416835260058752848320915190931682528552828120935181529290935290205460c0890152516001600160601b031615806134ef57508585828181106134ba576134ba614fdc565b9050608002016003600481106134d2576134d2614fdc565b60200201356134ed8860c0015162ffffff60489190911c1690565b115b61384f5785858281811061350557613505614fdc565b90506080020160016004811061351d5761351d614fdc565b602002013586868381811061353457613534614fdc565b90506080020160016004811061354c5761354c614fdc565b60200201356001600160601b0316146135a75760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657257616e74732f393662697473000000006044820152606401610a85565b8585828181106135b9576135b9614fdc565b9050608002016002600481106135d1576135d1614fdc565b60200201358686838181106135e8576135e8614fdc565b90506080020160026004811061360057613600614fdc565b60200201356001600160601b03161461365b5760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657247697665732f393662697473000000006044820152606401610a85565b85858281811061366d5761366d614fdc565b90506080020160016004811061368557613685614fdc565b602002013560808801528585828181106136a1576136a1614fdc565b9050608002016002600481106136b9576136b9614fdc565b602002013560a08801526101008701516136d4906001612a47565b610100880181905287516001600160a01b039081166000908152600260209081526040808320828d015190941683529290529081209190915580806137198b8b613ddf565b925092509250806f6d67762f74726164655375636365737360801b03613740576001870196505b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b146137945761378d8a600001518b602001516137748d6060015160e01c90565b60608e015160c01c63ffffffff168e6101000151613257565b6101008b01525b6101008a01516137a5906000612a47565b8a610100018181525050896101000151600260008c600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008c602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055506138138b8b6143df565b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b14613839576138398b8b8585856144e1565b8a60400151860195508a60600151850194505050505b6001016133e3565b509450945094915050565b8015611ea457604051600090339083908381818185875af1925050503d80600081146138aa576040519150601f19603f3d011682016040523d82523d6000602084013e6138af565b606091505b505090508061098b5760405162461bcd60e51b815260206004820152601760248201527f6d67762f73656e6450656e616c747952657665727465640000000000000000006044820152606401610a85565b60008060008060008560e0015190506000866080015182146139555786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282208583529052205461395c565b8661014001515b90506001600160601b0381166139b55761012087015160381c63ffffffff1687516001600160a01b039081166000908152600460209081526040808320828d015190941683529281528282208483529052205490925090505b6139c0878284614544565b15613a5a5760005b60c082901c63ffffffff1615613a42575086516001600160a01b039081166000908152600460209081526040808320828c0151909416835292815282822063ffffffff60c086901c1680845291529190205490613a26898383614544565b15613a3657809350819250613a3c565b50613a42565b506139c8565b8260c083901c63ffffffff169095509350613ae39050565b60005b613a678260e01c90565b15613ad0576000613a788360e01c90565b89516001600160a01b039081166000908152600460209081526040808320828f015190941683529281528282208483529052205492509050613abb898383614544565b15613ac65750613ad0565b9250905080613a5d565b613ada8260e01c90565b94509192508291505b86608001518414613af45783613afe565b61014087015160e01c5b87608001518414613b0f5783613b1f565b61014088015160c01c63ffffffff165b9550955050505050915091565b60c01b63ffffffff60c01b1663ffffffff60c01b19919091161790565b808015613b7057508260c00151613b675760008260a0015111613b70565b60008260800151115b8015613b80575060008260400151115b15613d3c5781516001600160a01b03908116600090815260056020908152604080832082870151909416835292815282822083860151835290529081205460c08401528080613bcf8686613ddf565b608088015160a089015160408a015160608b015160c08c015196995094975092955090939092906e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613cc65760408b01518b5111613c22576000613c2b565b60408b01518b51035b60808b015260608b81015160208d01510360a08c01528a015160c01c63ffffffff168a6040018181525050600460008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b602001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b604001518152602001908152602001600020548a60600181815250505b613ce68b8b886e1b59dd8bdb9bdd115e1958dd5d1959608a1b1415613b49565b60408a0183905260808a0185905260a08a0184905260608a0182905260c08a018190526e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613d2f57613d2f8b8b8a8a8a6144e1565b5050505050505050505050565b613d5b8260000151836020015160008560400151866101000151613257565b6101008301819052613d6e906000612a47565b610100830181905282516001600160a01b0390811660009081526002602090815260408083208288015190941683529290522055613dac83836143df565b505050565b600080613dbc6148ec565b60648185516020870160008a8af192508060448415020151915050935093915050565b600080600080613dff85606001516001600160601b0360609190911c1690565b90506000613e1786606001516001600160601b031690565b608087015160a0880151919250908083028483021115613e575750600095508594506e1b59dd8bdb9bdd115e1958dd5d1959608a1b93506143d892505050565b8860c001518015613e6757508183105b80613e7e57508860c00151158015613e7e57508084105b15613e96576080880183905260a08801849052613f0d565b8860c0015115613ee157838202838181613eb257613eb2614fc6565b0615613ebf576001613ec2565b60005b60ff16848281613ed457613ed4614fc6565b040160a08a015250613f0d565b83600003613ef55760808801839052613f0d565b8381840281613f0657613f06614fc6565b0460808901525b50505050600080306001600160a01b031663aa4dd28260e01b878960a00151604051602401613f3d929190615058565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051613f7b9190614ef2565b6000604051808303816000865af19150503d8060008114613fb8576040519150601f19603f3d011682016040523d82523d6000602084013e613fbd565b606091505b509150915081156141175780806020019051810190613fdc9190615080565b94506f6d67762f74726164655375636365737360801b925085602001516001600160a01b031686600001516001600160a01b03167f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d88604001518a60a001518a608001518b60a0015160405161407494939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405180910390a360e086015160501c60ff16156140f25760e086015160a088015160405163cac1827160e01b815260609290921c9163cac18271916140bf918a9190600401615058565b600060405180830381600087803b1580156140d957600080fd5b505af11580156140ed573d6000803e3d6000fd5b505050505b6080860151604088018051909101905260a0860151606088018051909101905261439d565b602081015160408201516060830151909650945092506e1b59dd8bdb585ad95c94995d995c9d608a1b831480614164575082741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b145b80614185575082731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b145b156142975785602001516001600160a01b031686600001516001600160a01b03167f1d59c048edb5397821854bd12cbe02242b82101c677f949d076d14eb7bd8343688604001518a60a001518a608001518b60a00151896040516142149594939291909485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b60405180910390a360e086015160501c60ff16156142925760e086015160a0880151604051631159507360e01b815260609290921c9163115950739161425f918a9190600401615058565b600060405180830381600087803b15801561427957600080fd5b505af115801561428d573d6000803e3d6000fd5b505050505b61439d565b827f6d67762f6e6f74456e6f756768476173466f724d616b65725472616465000000036143065760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000006044820152606401610a85565b82741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b036143655760405162461bcd60e51b81526020600482015260156024820152741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b6044820152606401610a85565b60405162461bcd60e51b815260206004820152600d60248201526c36b3bb17b9bbb0b822b93937b960991b6044820152606401610a85565b6143d586600001518760200151886040015189606001518a60c00151886f6d67762f74726164655375636365737360801b1415613337565b50505b9250925092565b6101008101516000906127109060e81c61ffff168460400151028161440657614406614fc6565b049050801561447c57604083018051829003905260e08301819052815160005461443a91906001600160a01b031683612fff565b61447c5760405162461bcd60e51b81526020600482015260136024820152721b59dd8bd99959551c985b9cd9995c91985a5b606a1b6044820152606401610a85565b604083015115613dac5761449d82600001518460a001518560400151612fff565b613dac5760405162461bcd60e51b815260206004820152601560248201527436b3bb17a6b3bb2330b4b62a37a830bcaa30b5b2b960591b6044820152606401610a85565b60c084015160481c62ffffff16808411156144fa578093505b6145088585830385856145ea565b84019350816f6d67762f74726164655375636365737360801b1461453c576145308585614740565b60808701805190910190525b505050505050565b600081600003614556575060016130cf565b60408401516060858101516001600160601b039186901c82169291861691908084028284028082036145dd5789516001600160a01b039081166000908152600560209081526040808320828f015190941683529281528282208b835290529081205460481c62ffffff1660a08c0151940295909302949094101595506130cf945050505050565b1194506130cf9350505050565b600080633d3d130d60e01b8660405180604001604052808781526020018681525060405160240161461c929190615099565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319939093169290921790915260c087015190915060601c60005a90508660408204820310156146b45760405162461bcd60e51b815260206004820181905260248201527f6d67762f6e6f74456e6f756768476173466f724d616b6572506f7374686f6f6b6044820152606401610a85565b6000806146c2848a87613db1565b915091505a83039550816147335789602001516001600160a01b03168a600001516001600160a01b03167f51d5a3ecf332626d83c8207fe9bd22f38801f578c7eb222e2d811cd1b4c629a58c604001518460405161472a929190918252602082015260400190565b60405180910390a35b5050505050949350505050565b60c082015160009062ffffff604882901c81169161ffff602082901c1660309190911c909116820102633b9aca00028184111561477b578193505b61010085015160009060601c62ffffff1660e08701519086019060401c61ffff16633b9aca0002029050818111156147b05750805b6147c96147c18760c0015160601c90565b828403611ea7565b95945050505050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610120016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600081525090565b60405180608001604052806004906020820280368337509192915050565b80356001600160a01b038116811461492157600080fd5b919050565b600080600080600060a0868803121561493e57600080fd5b6149478661490a565b94506149556020870161490a565b94979496505050506040830135926060810135926080909101359150565b60006020828403121561498557600080fd5b6130cf8261490a565b6000602082840312156149a057600080fd5b5035919050565b6000806000606084860312156149bc57600080fd5b6149c58461490a565b92506149d36020850161490a565b9150604084013590509250925092565b60008083601f8401126149f557600080fd5b50813567ffffffffffffffff811115614a0d57600080fd5b6020830191508360208260071b8501011115611ac857600080fd5b8015158114611ea457600080fd5b600080600080600060808688031215614a4e57600080fd5b614a578661490a565b9450614a656020870161490a565b9350604086013567ffffffffffffffff811115614a8157600080fd5b614a8d888289016149e3565b9094509250506060860135614aa181614a28565b809150509295509295909350565b600080600080600080600060e0888a031215614aca57600080fd5b614ad38861490a565b9650614ae16020890161490a565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b60008060008060808587031215614b2357600080fd5b614b2c8561490a565b9350614b3a6020860161490a565b9250614b486040860161490a565b9396929550929360600135925050565b600060208284031215614b6a57600080fd5b81356130cf81614a28565b60008060408385031215614b8857600080fd5b614b918361490a565b9150614b9f6020840161490a565b90509250929050565b600080600080600080600080610100898b031215614bc557600080fd5b614bce8961490a565b9750614bdc60208a0161490a565b979a9799505050506040860135956060810135956080820135955060a0820135945060c0820135935060e0909101359150565b60008060008060008060c08789031215614c2857600080fd5b614c318761490a565b9550614c3f6020880161490a565b945060408701359350606087013592506080870135614c5d81614a28565b9150614c6b60a0880161490a565b90509295509295509295565b600080828403610140811215614c8c57600080fd5b61012080821215614c9c57600080fd5b849350610f7c81860161490a565b60008060008060808587031215614cc057600080fd5b614cc98561490a565b9350614cd76020860161490a565b9250604085013591506060850135614cee81614a28565b939692955090935050565b60008060008060008060008060006101208a8c031215614d1857600080fd5b614d218a61490a565b9850614d2f60208b0161490a565b9750614d3d60408b0161490a565b9650614d4b60608b0161490a565b955060808a0135945060a08a0135935060c08a013560ff81168114614d6f57600080fd5b8093505060e08a013591506101008a013590509295985092959850929598565b60008060008060008060a08789031215614da857600080fd5b614db18761490a565b9550614dbf6020880161490a565b9450604087013567ffffffffffffffff811115614ddb57600080fd5b614de789828a016149e3565b9095509350506060870135614dfb81614a28565b9150614c6b6080880161490a565b60008060008060808587031215614e1f57600080fd5b614e288561490a565b9350614e366020860161490a565b9250614e446040860161490a565b9150614e526060860161490a565b905092959194509250565b600080600080600060a08688031215614e7557600080fd5b614e7e8661490a565b9450614e8c6020870161490a565b935060408601359250606086013591506080860135614aa181614a28565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60008060408385031215614ee157600080fd5b505080516020909101519092909150565b6000825160005b81811015614f135760208186018101518583015201614ef9565b81811115614f22576000828501525b509190910192915050565b600060208284031215614f3f57600080fd5b81516130cf81614a28565b61012081016001600160a01b0380614f618561490a565b16835280614f716020860161490a565b1660208401525060408301356040830152606083013560608301526080830135608083015260a083013560a083015260c083013560c083015260e083013560e083015261010080840135818401525092915050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60018060a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b61014081016150678285614ff2565b6001600160a01b03929092166101209190910152919050565b60006020828403121561509257600080fd5b5051919050565b61016081016150a88285614ff2565b82516101208301526020830151610140830152939250505056fea2646970667358221220499241dc243bdcb4e833b09a1b7eec4b8948311d5c1950899a510972d4b519f164736f6c634300080e003360a06040523480156200001157600080fd5b506040516200576a3803806200576a833981016040819052620000349162000612565b8181816040516200004590620005eb565b604051809103906000f08015801562000062573d6000803e3d6000fd5b5062015f9082828282813380620000c05760405162461bcd60e51b815260206004820152601860248201527f616363657373436f6e74726f6c6c65642f307841646d696e000000000000000060448201526064015b60405180910390fd5b80620000d66200026960201b620028d11760201c565b80546001600160a01b0319166001600160a01b03929092169190911790555062ffffff811681146200014b5760405162461bcd60e51b815260206004820152601b60248201527f4d616e67726f76654f666665722f676173726571546f6f4869676800000000006044820152606401620000b7565b6001600160a01b038216608052806200016f6200028d602090811b620028f517901c565b5550506001600160a01b038216620001bf5760405162461bcd60e51b815260206004820152601260248201527126bab63a34aab9b2b917983c2937baba32b960711b6044820152606401620000b7565b620001ca82620002b1565b505050505050336001600160a01b0316816001600160a01b0316146200025f57620001f5816200045b565b620001ff62000556565b604051633825b60160e11b81526001600160a01b038381166004830152919091169063704b6c0290602401600060405180830381600087803b1580156200024557600080fd5b505af11580156200025a573d6000803e3d6000fd5b505050505b5050505062000651565b7f7d382ebca3e46505071795e192d28166a3d4bd0685585591bc6c5b8df6769fd290565b7fae7e31c3220e851db9f204a28b279dfe52b973600b0a456991089c220ae7222490565b620002bb620005c5565b6001600160a01b0316336001600160a01b03161480620002ee57506080516001600160a01b0316336001600160a01b0316145b6200033c5760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f496e76616c696400000000000000006044820152606401620000b7565b6001600160a01b038116620003945760405162461bcd60e51b815260206004820152601c60248201527f6d67764f666665722f7365745f726f757465722f3078526f75746572000000006044820152606401620000b7565b80620003aa6200028d60201b620028f51760201c565b60010180546001600160a01b0319166001600160a01b039283161790556040516381bac14f60e01b8152306004820152908216906381bac14f90602401600060405180830381600087803b1580156200040257600080fd5b505af115801562000417573d6000803e3d6000fd5b50506040516001600160a01b03841681527f6de4326a8b9054d72d9dbab97d27bc4edffadee7d966f5af9cc4eafdaf8e54559250602001905060405180910390a150565b62000465620005c5565b6001600160a01b0316336001600160a01b031614620004c75760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f496e76616c696400000000000000006044820152606401620000b7565b6001600160a01b0381166200051f5760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e00000000000000006044820152606401620000b7565b80620005356200026960201b620028d11760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6000806200056e6200028d60201b620028f51760201c565b600101546001600160a01b0316905080620005c05760405162461bcd60e51b815260206004820152601160248201527036b3bb27b33332b917983c2937baba32b960791b6044820152606401620000b7565b919050565b6000620005dc6200026960201b620028d11760201c565b546001600160a01b0316919050565b610e25806200494583390190565b6001600160a01b03811681146200060f57600080fd5b50565b600080604083850312156200062657600080fd5b82516200063381620005f9565b60208401519092506200064681620005f9565b809150509250929050565b6080516141ff620007466000396000818161032e015281816106840152818161087d01528181610a2001528181610ade01528181610d110152818161108c0152818161152e015281816115b4015281816118020152818161185e015281816118f001528181611b7a01528181611c3501528181611cda01528181611e9d01528181611ef201528181612085015281816122910152818161232e0152818161248e015281816125d901528181612805015281816129af01528181612a3801528181612aca01528181612d6401528181612f36015281816130750152818161329e015281816133b70152613a9701526141ff6000f3fe60806040526004361061014f5760003560e01c8063ad97db1b116100b6578063eedc966a1161006f578063eedc966a1461042a578063f259cd271461044a578063f851a4401461046a578063f887ea401461047f578063f92495e514610494578063fc488a38146104b457600080fd5b8063ad97db1b14610368578063aefe840314610388578063d1baa1ef146103a8578063db11851e146103bd578063dec8c86b146103dd578063e4c34f841461040a57600080fd5b80636a1c7d05116101085780636a1c7d05146102525780636c49c32c146102a7578063704b6c02146102c75780637144df24146102e757806384b627f91461030757806399fa5e2d1461031c57600080fd5b806301e336671461015b57806310aded601461019057806337b966bf146101a55780633d3d130d146101d35780634e7effa8146101f35780635486c95f1461023f57600080fd5b3661015657005b600080fd5b34801561016757600080fd5b5061017b610176366004613b3e565b6104d4565b60405190151581526020015b60405180910390f35b6101a361019e366004613b7f565b6105d1565b005b3480156101b157600080fd5b506101c56101c0366004613b92565b610638565b604051610187929190613c18565b3480156101df57600080fd5b506101a36101ee366004613c59565b610a1e565b3480156101ff57600080fd5b5061023161020e366004613b3e565b600160209081526000938452604080852082529284528284209052825290205481565b604051908152602001610187565b61023161024d366004613b7f565b610b47565b610265610260366004613c9c565b610b68565b6040516101879190600060a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b3480156102b357600080fd5b506102316102c2366004613caf565b6115b0565b3480156102d357600080fd5b506101a36102e2366004613ccc565b61171d565b3480156102f357600080fd5b506101a3610302366004613ce9565b6117d5565b34801561031357600080fd5b5061017b611afc565b34801561032857600080fd5b506103507f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610187565b34801561037457600080fd5b50610231610383366004613d27565b611b1b565b34801561039457600080fd5b506101a36103a3366004613d7a565b611e70565b3480156103b457600080fd5b50610231611fba565b3480156103c957600080fd5b506101a36103d8366004613ccc565b612058565b3480156103e957600080fd5b506103fd6103f8366004613da6565b6121d2565b6040516101879190613e3b565b34801561041657600080fd5b50610231610425366004613e88565b612283565b34801561043657600080fd5b50610231610445366004613ccc565b612530565b34801561045657600080fd5b506101a3610465366004613ccc565b6125ac565b34801561047657600080fd5b506103506126ec565b34801561048b57600080fd5b50610350612705565b3480156104a057600080fd5b506103506104af366004613b3e565b612765565b3480156104c057600080fd5b506101a36104cf366004613ed9565b6127d8565b60006001600160a01b03831661053c5760405162461bcd60e51b815260206004820152602260248201527f4d756c7469557365722f7769746864726177546f6b656e2f307852656365697660448201526132b960f11b60648201526084015b60405180910390fd5b610544612705565b6040516310baa6cf60e11b81526001600160a01b03868116600483015233602483015285811660448301526064820185905291909116906321754d9e906084016020604051808303816000875af11580156105a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c79190613ef2565b90505b9392505050565b6105e96105e336839003830183613f25565b34612919565b6106355760405162461bcd60e51b815260206004820152601960248201527f4d756c7469557365722f7570646174654f666665724661696c000000000000006044820152606401610533565b50565b6001600160a01b0380831660009081526002602090815260408083208585168452825280832093871683529281528282208280529052908120546060918291908190805b82156107df577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166327507458816368c13d6b8b8b886040518463ffffffff1660e01b81526004016106d893929190613fd1565b602060405180830381865afa1580156106f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107199190613ff5565b6040518263ffffffff1660e01b815260040161073791815260200190565b602060405180830381865afa158015610754573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107789190613ef2565b1561078f578161078781614024565b92505061079d565b8061079981614024565b9150505b6001600160a01b0380891660009081526002602090815260408083208b851684528252808320938d16835292815282822095825294909452909220549161067c565b8167ffffffffffffffff8111156107f8576107f8613f0f565b604051908082528060200260200182016040528015610821578160200160208202803683370190505b5095508067ffffffffffffffff81111561083d5761083d613f0f565b604051908082528060200260200182016040528015610866578160200160208202803683370190505b50945083925060009150600090505b8215610a12577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166327507458816368c13d6b8b8b886040518463ffffffff1660e01b81526004016108d193929190613fd1565b602060405180830381865afa1580156108ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109129190613ff5565b6040518263ffffffff1660e01b815260040161093091815260200190565b602060405180830381865afa15801561094d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109719190613ef2565b156109a55782868361098281614024565b9450815181106109945761099461403d565b6020026020010181815250506109d0565b8285826109b181614024565b9350815181106109c3576109c361403d565b6020026020010181815250505b6001600160a01b0380891660009081526002602090815260408083208b851684528252808320938d168352928152828220958252949094529092205491610875565b50505050935093915050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0381161580610a5d5750336001600160a01b038216145b610a795760405162461bcd60e51b815260040161053390614053565b81602001356f6d67762f74726164655375636365737360801b03610aa657610aa083612e67565b50505050565b60408301803590610aba9060208601613ccc565b6001600160a01b0316610ad06020860186613ccc565b604080516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811682528735602083015292909216917f736a3993b9f8b1c5603896c76376792887f376b1fe7fc981e09a16530bf1e4e0910160405180910390a4610aa08383612ea5565b505050565b6000610b62610b5b36849003840184613f25565b3334613269565b92915050565b610b9a6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b600080610bad608085016060860161408a565b610bd357610bbe6020850185613ccc565b610bce6040860160208701613ccc565b610bf0565b610be36040850160208601613ccc565b610bf06020860186613ccc565b915091506000610bfe612705565b6001600160a01b031663333dbb0d83338860c0013560016040518563ffffffff1660e01b8152600401610c3494939291906140a7565b6020604051808303816000875af1158015610c53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c779190613ff5565b90508460c001358114610ccc5760405162461bcd60e51b815260206004820152601a60248201527f6d67764f726465722f6d6f2f7472616e73666572496e4661696c0000000000006044820152606401610533565b60005b610cdf61012087013560016140d0565b811015610e7d5761014086013515801590610cfe57508561014001355a105b610e7d5760008080806001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663fbffe5fd89898d608001358e60c001358f6060016020810190610d55919061408a565b610d60576001610d63565b60005b6040516001600160e01b031960e088901b1681526001600160a01b039586166004820152949093166024850152604484019190915260648301521515608482015260a4016080604051808303816000875af1158015610dc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dea91906140e8565b93509350935093508389600001818151610e0491906140d0565b905250602089018051849190610e1b9083906140d0565b905250604089018051839190610e329083906140d0565b905250606089018051829190610e499083906140d0565b90525083158015610e58575081155b15610e665750505050610e7d565b505050508080610e7590614024565b915050610ccf565b506000610e8a86866134d3565b9050610e9c606087016040880161408a565b1580610ea55750805b80610ebd5750610ebd6101208701610100880161408a565b610f055760405162461bcd60e51b81526020600482015260196024820152781b59dd93dc99195c8bdb5bcbdb9bd4185c9d1a585b119a5b1b603a1b6044820152606401610533565b845115610f7957610f14612705565b855160405163137476d160e11b81526001600160a01b0392909216916326e8eda291610f469188913391600401613fd1565b600060405180830381600087803b158015610f6057600080fd5b505af1158015610f74573d6000803e3d6000fd5b505050505b610f8b6101208701610100880161408a565b8015610f95575080155b1561137c5760408051610100810182526001600160a01b038086168252861660208201526060870151875161102393830191610fd0916140d0565b610fde9060a08b013561411e565b815260200187602001518960e00135610ff7919061411e565b8152602001611004611fba565b8152602001600081526020016000815260200160008152503334613269565b608086018190526110399033908590879061351c565b3361104a6040880160208901613ccc565b6001600160a01b03166110606020890189613ccc565b6001600160a01b03167f587734843819064f2153f96c808d1aeacaceccfa595ec4b9ed484c4bff687f7c7f00000000000000000000000000000000000000000000000000000000000000006110bb60808c0160608d0161408a565b8a5160208c01516040808e015160808f0151915161110b9695949392906001600160a01b03969096168652931515602086015260408501929092526060840152608083015260a082015260c00190565b60405180910390a484608001516000036112ab5761112f606087016040880161408a565b156111785760405162461bcd60e51b81526020600482015260196024820152781b59dd93dc99195c8bdb5bcbdb9bd4185c9d1a585b119a5b1b603a1b6044820152606401610533565b611196833387602001518960c00135611191919061411e565b6135a1565b6111e25760405162461bcd60e51b815260206004820152601a60248201527f6d67764f726465722f6d6f2f7472616e73666572496e4661696c0000000000006044820152606401610533565b60008560400151346111f491906140d0565b11156112a2576040850151600090339061120e90346140d0565b604051600081818185875af1925050503d806000811461124a576040519150601f19603f3d011682016040523d82523d6000602084013e61124f565b606091505b50509050806112a05760405162461bcd60e51b815260206004820152601f60248201527f6d67764f726465722f6d6f2f726566756e6450726f766973696f6e4661696c006044820152606401610533565b505b50505050919050565b6112b3612705565b6001600160a01b03166326e8eda2843388602001518a60c001356112d7919061411e565b6040518463ffffffff1660e01b81526004016112f593929190613fd1565b600060405180830381600087803b15801561130f57600080fd5b505af1158015611323573d6000803e3d6000fd5b50505050610160860135156112a257611341610160870135436140d0565b6001600160a01b038085166000908152600160209081526040808320938916835292815282822060808a015183529052205550505050919050565b611384612705565b6001600160a01b03166326e8eda2843388602001518a60c001356113a8919061411e565b6040518463ffffffff1660e01b81526004016113c693929190613fd1565b600060405180830381600087803b1580156113e057600080fd5b505af11580156113f4573d6000803e3d6000fd5b50505050600085604001513461140a91906140d0565b11156114db57611418612705565b6001600160a01b031663d7c153a886604001513461143691906140d0565b6040516001600160e01b031960e084901b16815233600482015260240160206040518083038185885af1158015611471573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906114969190613ef2565b6114db5760405162461bcd60e51b81526020600482015260166024820152751b59dd93dc99195c8bdb5bcbdc99599d5b9911985a5b60521b6044820152606401610533565b336114ec6040880160208901613ccc565b6001600160a01b03166115026020890189613ccc565b6001600160a01b03167f587734843819064f2153f96c808d1aeacaceccfa595ec4b9ed484c4bff687f7c7f000000000000000000000000000000000000000000000000000000000000000061155d60808c0160608d0161408a565b8a516020808d01516040808f015181516001600160a01b039097168752941515928601929092529084019190915260608301526080820152600060a082015260c00160405180910390a450505050919050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03811615806115f15750336001600160a01b038216145b61160d5760405162461bcd60e51b815260040161053390614053565b61161683613697565b61165b5760405162461bcd60e51b81526020600482015260166024820152751b59dd93d999995c8bd8589bdc9d0bdc995b9959d95960521b6044820152606401610533565b600061166b8460a001358561371c565b11156116b95760405162461bcd60e51b815260206004820152601860248201527f6d67764f666665722f61626f72742f7075744661696c656400000000000000006044820152606401610533565b60006116c98460800135856137ca565b11156117175760405162461bcd60e51b815260206004820152601860248201527f6d67764f666665722f61626f72742f6765744661696c656400000000000000006044820152606401610533565b50919050565b6117256126ec565b6001600160a01b0316336001600160a01b0316146117555760405162461bcd60e51b815260040161053390614053565b6001600160a01b0381166117ab5760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e00000000000000006044820152606401610533565b806117b46128d1565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6117dd6126ec565b6001600160a01b0316336001600160a01b031614806118245750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6118405760405162461bcd60e51b815260040161053390614053565b60001982036118da576040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156118ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d19190613ff5565b91508115611af8575b604051632e1a7d4d60e01b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d906024016020604051808303816000875af1158015611941573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119659190613ef2565b6119bf5760405162461bcd60e51b815260206004820152602560248201527f6d67764f666665722f776974686472617746726f6d4d67762f776974686472616044820152641dd1985a5b60da1b6064820152608401610533565b6119c7611afc565b15611a44576119d4612705565b604051631af82a7560e31b81526001600160a01b038381166004830152919091169063d7c153a890849060240160206040518083038185885af1158015611a1f573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610b429190613ef2565b6000816001600160a01b03168360405160006040518083038185875af1925050503d8060008114611a91576040519150601f19603f3d011682016040523d82523d6000602084013e611a96565b606091505b5050905080610b425760405162461bcd60e51b815260206004820152602860248201527f6d67764f666665722f776974686472617746726f6d4d67762f70617961626c6560448201526710d85b1b11985a5b60c21b6064820152608401610533565b5050565b600080611b076128f5565b600101546001600160a01b03161415919050565b6001600160a01b03848116600090815260208181526040808320878516845282528083208684528252808320815180830190925254938416808252600160a01b9094046001600160601b0316918101919091529091331480611ba557507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633145b611bf15760405162461bcd60e51b815260206004820152601f60248201527f4d756c74692f726574726163744f666665722f756e617574686f72697a6564006044820152606401610533565b60208101516001600160601b031615611c265782611c10576000611c16565b80602001515b6001600160601b03169150611cbe565b60405163ad97db1b60e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063ad97db1b90611c789089908990899089906004016140a7565b6020604051808303816000875af1158015611c97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cbb9190613ff5565b91505b8115611e6757604051632e1a7d4d60e01b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d906024016020604051808303816000875af1158015611d2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d4f9190613ef2565b611d945760405162461bcd60e51b8152602060048201526016602482015275135d5b1d1a555cd95c8bddda5d1a191c985dd1985a5b60521b6044820152606401610533565b60408051808201825282516001600160a01b039081168252600060208084018281528b841683528282528583208b8516845282528583208a8452909152939020915192516001600160601b0316600160a01b029216919091179055611df7612705565b604051631af82a7560e31b81523360048201526001600160a01b03919091169063d7c153a890849060240160206040518083038185885af1158015611e40573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611e659190613ef2565b505b50949350505050565b611e786126ec565b6001600160a01b0316336001600160a01b03161480611ebf5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b611edb5760405162461bcd60e51b815260040161053390614053565b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820183905283169063095ea7b3906044016020604051808303816000875af1158015611f4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f6e9190613ef2565b611af85760405162461bcd60e51b815260206004820152601d60248201527f6d67764f666665722f617070726f76654d616e67726f76652f4661696c0000006044820152606401610533565b6000611fc4611afc565b1561204a57611fd1612705565b6001600160a01b0316630417ffda6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561200e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120329190613ff5565b61203a6128f5565b5461204591906140d0565b905090565b6120526128f5565b54919050565b6120606126ec565b6001600160a01b0316336001600160a01b031614806120a75750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6120c35760405162461bcd60e51b815260040161053390614053565b6001600160a01b0381166121195760405162461bcd60e51b815260206004820152601c60248201527f6d67764f666665722f7365745f726f757465722f3078526f75746572000000006044820152606401610533565b806121226128f5565b60010180546001600160a01b0319166001600160a01b039283161790556040516381bac14f60e01b8152306004820152908216906381bac14f90602401600060405180830381600087803b15801561217957600080fd5b505af115801561218d573d6000803e3d6000fd5b50506040516001600160a01b03841681527f6de4326a8b9054d72d9dbab97d27bc4edffadee7d966f5af9cc4eafdaf8e5455925060200190505b60405180910390a150565b60608167ffffffffffffffff8111156121ed576121ed613f0f565b604051908082528060200260200182016040528015612216578160200160208202803683370190505b50905060005b82811015611e6757612247868686868581811061223b5761223b61403d565b90506020020135612765565b8282815181106122595761225961403d565b6001600160a01b03909216602092830291909101909101528061227b81614024565b91505061221c565b600080806001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663cbf75c9a89896040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016040805180830381865afa158015612302573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123269190614135565b9150915060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635722647b6123628b90565b8a886040518463ffffffff1660e01b815260040161238293929190613fd1565b602060405180830381865afa15801561239f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123c39190613ff5565b9050600086604085901c61ffff1611156123e6575061ffff604084901c166123e9565b50855b62ffffff88106123fe576123fb611fba565b97505b60008161241462ffffff606087901c168b6140d0565b61241e9190614159565b61242c90633b9aca00614159565b9050600061ffff602085901c1661245362ffffff603087901c811690604888901c166140d0565b61245d9190614159565b61246b90633b9aca00614159565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156124d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124f99190613ff5565b61250390836140d0565b90508281101561251c57612517818461411e565b61251f565b60005b9d9c50505050505050505050505050565b600061253a612705565b6040516302b427ef60e11b81526001600160a01b03848116600483015233602483015291909116906305684fde90604401602060405180830381865afa158015612588573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b629190613ff5565b6125b46126ec565b6001600160a01b0316336001600160a01b031614806125fb5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6126175760405162461bcd60e51b815260040161053390614053565b806001600160a01b031663095ea7b361262e612705565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260001960248201526044016020604051808303816000875af115801561267c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126a09190613ef2565b6106355760405162461bcd60e51b815260206004820152601b60248201527f6d67764f666665722f617070726f7665526f757465722f4661696c00000000006044820152606401610533565b60006126f66128d1565b546001600160a01b0316919050565b6000806127106128f5565b600101546001600160a01b03169050806127605760405162461bcd60e51b815260206004820152601160248201527036b3bb27b33332b917983c2937baba32b960791b6044820152606401610533565b919050565b6001600160a01b038084166000908152602081815260408083208685168452825280832085845290915290205416806105ca5760405162461bcd60e51b815260206004820152601560248201527436bab63a34aab9b2b917bab735b7bbb727b33332b960591b6044820152606401610533565b6127e06126ec565b6001600160a01b0316336001600160a01b031614806128275750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6128435760405162461bcd60e51b815260040161053390614053565b808162ffffff16146128975760405162461bcd60e51b815260206004820152601860248201527f6d67764f666665722f6761737265712f6f766572666c6f7700000000000000006044820152606401610533565b806128a06128f5565b556040518181527fafef3ad374c0b972e3c793be825735801fa05cc4c67157d98d9a111b4027988d906020016121c7565b7f7d382ebca3e46505071795e192d28166a3d4bd0685585591bc6c5b8df6769fd290565b7fae7e31c3220e851db9f204a28b279dfe52b973600b0a456991089c220ae7222490565b81516001600160a01b039081166000908152602081815260408083208287015185168452825280832060e0870151845282528083208151808301835290549485168152600160a01b9094046001600160601b031684830152805160808101825283815291820183905281018290526060810182905290919081516001600160a01b03163314806129d15750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b612a1d5760405162461bcd60e51b815260206004820152601e60248201527f4d756c74692f7570646174654f666665722f756e617574686f72697a656400006044820152606401610533565b8451602086015160e0870151604051635722647b60e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031693635722647b93612a78939192909190600401613fd1565b602060405180830381865afa158015612a95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ab99190613ff5565b604082015284516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063cbf75c9a9060208801516040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016040805180830381865afa158015612b40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b649190614135565b6020830152815260608101849052608085015162ffffff10612b8a578460800151612b92565b612b92611fba565b6080860152604081015160201c61ffff1660a08601819052600003612c745760208201516001600160601b031615612c4a5781602001516001600160601b031681606001818151612be391906140d0565b90525060408051808201825283516001600160a01b039081168252600060208084018281528a51841683528282528583208b83015185168452825285832060e08c01518452909152939020915192516001600160601b0316600160a01b0292169190911790555b60808501516060808301516020840151612c6a93921c62ffffff16613899565b60a0860152612cf5565b8315612cf557602081015160601c62ffffff16604082015160481c62ffffff16612c9e91906140d0565b60a0860151612cb190633b9aca00614159565b612cbb9190614159565b81606001818151612ccc91906140d0565b90525060808501516060808301516020840151612cef93921c62ffffff16613899565b60a08601525b805160401c61ffff168560a001511015612d625760405162461bcd60e51b815260206004820152602860248201527f4d756c7469557365722f7570646174654f666665722f4e6f74456e6f756768506044820152673937bb34b9b4b7b760c11b6064820152608401610533565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636a4f769185612d9d886000015190565b602089015189604001518a606001518b608001518c60a001518d60c001518e60e001516040518a63ffffffff1660e01b8152600401612e229897969594939291906001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b6000604051808303818588803b158015612e3b57600080fd5b505af193505050508015612e4d575060015b612e5c57600092505050610b62565b506001949350505050565b6000612e7282613934565b90508061276057611717612e896020840184613ccc565b612e996040850160208601613ccc565b84604001356001611b1b565b600080612eb56020850185613ccc565b90506000612ec96040860160208701613ccc565b6001600160a01b03838116600090815260208181526040808320858516845282528083208a82013584528252918290208251808401845290548085168252600160a01b90046001600160601b03169181019190915290516370a0823160e01b8152306004820152929350917f000000000000000000000000000000000000000000000000000000000000000090911690632e1a7d4d9082906370a0823190602401602060405180830381865afa158015612f87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fab9190613ff5565b6040518263ffffffff1660e01b8152600401612fc991815260200190565b6020604051808303816000875af1158015612fe8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061300c9190613ef2565b6130685760405162461bcd60e51b815260206004820152602760248201527f4d756c7469557365722f706f7374686f6f6b46616c6c6261636b2f77697468646044820152661c985dd1985a5b60ca1b6064820152608401610533565b6000806001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663cbf75c9a6130a760208b018b613ccc565b6130b760408c0160208d01613ccc565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016040805180830381865afa158015613101573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131259190614135565b9092509050600061314261ffff604085901c16633b9aca00614159565b9050600060c08a013560301c62ffffff1660c08b013560481c62ffffff1661316a91906140d0565b61318361ffff60c08d013560201c16633b9aca00614159565b61318d9190614159565b9050600082606085901c62ffffff165a60c08e013560481c62ffffff166131b4919061411e565b6131c090610bb86140d0565b6131ca91906140d0565b6131d49190614159565b90506000828210156131ef576131ea828461411e565b6131f2565b60005b60408051808201825298516001600160a01b039081168a526001600160601b039283166020808c019182529c82166000908152808e528381209c831681529b8d52828c209f8301358c529e909b5290982096519b51909716600160a01b029a90971699909917909355506001979650505050505050565b825160208401516040516365fbae4d60e11b81526001600160a01b0392831660048201529082166024820152600091829182917f0000000000000000000000000000000000000000000000000000000000000000169063cbf75c9a906044016040805180830381865afa1580156132e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133089190614135565b9150915062ffffff801686608001511161332657856080015161332e565b61332e611fba565b608087018190526133499085606084901c62ffffff16613899565b60a0870181905261ffff604084901c1611156133b55760405162461bcd60e51b815260206004820152602560248201527f4d756c7469557365722f6e65774f666665722f4e6f74456e6f75676850726f7660448201526434b9b4b7b760d91b6064820152608401610533565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166349f6d2dc856133f0896000015190565b60208a01518a604001518b606001518c608001518d60a001518e60c001516040518963ffffffff1660e01b815260040161346997969594939291906001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b60206040518083038185885af1158015613487573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906134ac9190613ff5565b60e08701819052865160208801516134c49288613a0b565b50505060e08301519392505050565b60006134e5608084016060850161408a565b156134fd578260c00135826020015110159050610b62565b60608201518251608085013591613513916140d0565b10159050610b62565b6001600160a01b038381166000908152600260209081526040808320868516845282528083209388168352928152828220828052905220805490829055801561359a576001600160a01b0380851660009081526002602090815260408083208785168452825280832093891683529281528282208583529052208190555b5050505050565b60008115806135b857506001600160a01b03831630145b156135c5575060016105ca565b604080516001600160a01b038581166024830152604480830186905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908816916136219190614178565b6000604051808303816000865af19150503d806000811461365e576040519150601f19603f3d011682016040523d82523d6000602084013e613663565b606091505b509150915081801561368d57508051158061368d57508080602001905181019061368d9190613ef2565b9695505050505050565b6000806001816136aa6020860186613ccc565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008460200160208101906136df9190613ccc565b6001600160a01b031681526020808201929092526040908101600090812086830135825290925290205490508015806105ca575043111592915050565b60008061372c6020840184613ccc565b905060006137406040850160208601613ccc565b9050600061375383838760400135612765565b905061375d612705565b6001600160a01b03166326e8eda28383896040518463ffffffff1660e01b815260040161378c93929190613fd1565b600060405180830381600087803b1580156137a657600080fd5b505af11580156137ba573d6000803e3d6000fd5b5060009998505050505050505050565b6000806137da6020840184613ccc565b905060006137ee6040850160208601613ccc565b9050600061380183838760400135612765565b9050600061380d612705565b6001600160a01b031663333dbb0d85848a60016040518563ffffffff1660e01b815260040161383f94939291906140a7565b6020604051808303816000875af115801561385e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138829190613ff5565b905061388e818861411e565b979650505050505050565b6000806138a685846140d0565b6138b490633b9aca00614159565b90508084101561391b5760405162461bcd60e51b815260206004820152602c60248201527f4d756c7469557365722f6465726976655f67617370726963652f4e6f74456e6f60448201526b3ab3b4283937bb34b9b4b7b760a11b6064820152608401610533565b80848161392a5761392a6141b3565b0495945050505050565b60008061394083613ae1565b9050600061394d84613b01565b905081600003613961575060019392505050565b604080516101008101909152613a03908061397f6020880188613ccc565b6001600160a01b031681526020018660200160208101906139a09190613ccc565b6001600160a01b03168152602081018490526040810185905260600160c087013560481c62ffffff16815260209081019060c0880135901c61ffff168152602001606087013560c01c63ffffffff16815260200186604001358152506000612919565b949350505050565b6040805180820182526001600160a01b038084168252600060208084018281528984168084528383528684208a86168086529084528785208a865290935292869020945190516001600160601b0316600160a01b029316929092179092559151849291907f460a431c86ecaea27134277388c72021356689d9eb62c3b25a5e4a97da7a8a1490613ad3907f00000000000000000000000000000000000000000000000000000000000000009087906001600160a01b0392831681529116602082015260400190565b60405180910390a450505050565b600060808201356001600160601b036060840135165b610b62919061411e565b600060a0820135606080840135901c6001600160601b0316613af7565b6001600160a01b038116811461063557600080fd5b803561276081613b1e565b600080600060608486031215613b5357600080fd5b8335613b5e81613b1e565b92506020840135613b6e81613b1e565b929592945050506040919091013590565b6000610100828403121561171757600080fd5b600080600060608486031215613ba757600080fd5b8335613bb281613b1e565b92506020840135613bc281613b1e565b91506040840135613bd281613b1e565b809150509250925092565b600081518084526020808501945080840160005b83811015613c0d57815187529582019590820190600101613bf1565b509495945050505050565b604081526000613c2b6040830185613bdd565b8281036020840152613c3d8185613bdd565b95945050505050565b6000610120828403121561171757600080fd5b600080828403610160811215613c6e57600080fd5b613c788585613c46565b9250604061011f1982011215613c8d57600080fd5b50610120830190509250929050565b6000610180828403121561171757600080fd5b60006101208284031215613cc257600080fd5b6105ca8383613c46565b600060208284031215613cde57600080fd5b81356105ca81613b1e565b60008060408385031215613cfc57600080fd5b823591506020830135613d0e81613b1e565b809150509250929050565b801515811461063557600080fd5b60008060008060808587031215613d3d57600080fd5b8435613d4881613b1e565b93506020850135613d5881613b1e565b9250604085013591506060850135613d6f81613d19565b939692955090935050565b60008060408385031215613d8d57600080fd5b8235613d9881613b1e565b946020939093013593505050565b60008060008060608587031215613dbc57600080fd5b8435613dc781613b1e565b93506020850135613dd781613b1e565b9250604085013567ffffffffffffffff80821115613df457600080fd5b818701915087601f830112613e0857600080fd5b813581811115613e1757600080fd5b8860208260051b8501011115613e2c57600080fd5b95989497505060200194505050565b6020808252825182820181905260009190848201906040850190845b81811015613e7c5783516001600160a01b031683529284019291840191600101613e57565b50909695505050505050565b600080600080600060a08688031215613ea057600080fd5b8535613eab81613b1e565b94506020860135613ebb81613b1e565b94979496505050506040830135926060810135926080909101359150565b600060208284031215613eeb57600080fd5b5035919050565b600060208284031215613f0457600080fd5b81516105ca81613d19565b634e487b7160e01b600052604160045260246000fd5b6000610100808385031215613f3957600080fd5b6040519081019067ffffffffffffffff82118183101715613f6a57634e487b7160e01b600052604160045260246000fd5b81604052613f7784613b33565b8152613f8560208501613b33565b602082015260408401356040820152606084013560608201526080840135608082015260a084013560a082015260c084013560c082015260e084013560e0820152809250505092915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121561400757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000600182016140365761403661400e565b5060010190565b634e487b7160e01b600052603260045260246000fd5b60208082526018908201527f416363657373436f6e74726f6c6c65642f496e76616c69640000000000000000604082015260600190565b60006020828403121561409c57600080fd5b81356105ca81613d19565b6001600160a01b0394851681529290931660208301526040820152901515606082015260800190565b600082198211156140e3576140e361400e565b500190565b600080600080608085870312156140fe57600080fd5b505082516020840151604085015160609095015191969095509092509050565b6000828210156141305761413061400e565b500390565b6000806040838503121561414857600080fd5b505080516020909101519092909150565b60008160001904831182151516156141735761417361400e565b500290565b6000825160005b81811015614199576020818601810151858301520161417f565b818111156141a8576000828501525b509190910192915050565b634e487b7160e01b600052601260045260246000fdfea26469706673582212200ba6ec1d2ab8f6246d7c12745da4a9650a0fc603f857d0c821c5386cb6e28ada64736f6c634300080e0033608060405234801561001057600080fd5b5061c35033806100675760405162461bcd60e51b815260206004820152601860248201527f616363657373436f6e74726f6c6c65642f307841646d696e000000000000000060448201526064015b60405180910390fd5b8061007a6100f560201b6107a71760201c565b80546001600160a01b0319166001600160a01b03929092169190911790555062ffffff811681146100ed5760405162461bcd60e51b815260206004820152601e60248201527f4162737472616374526f757465722f6f76657268656164546f6f486967680000604482015260640161005e565b600155610119565b7f7d382ebca3e46505071795e192d28166a3d4bd0685585591bc6c5b8df6769fd290565b610cfd806101286000396000f3fe6080604052600436106100c25760003560e01c8063362aecb11161007f578063cf5e7bd311610059578063cf5e7bd31461021a578063d7c153a81461023a578063f850a81c1461024d578063f851a4401461026d57600080fd5b8063362aecb1146101aa578063704b6c02146101da57806381bac14f146101fa57600080fd5b80630417ffda146100c757806305684fde146100f057806321754d9e1461011057806326e8eda21461014057806332563bc714610162578063333dbb0d1461018a575b600080fd5b3480156100d357600080fd5b506100dd60015481565b6040519081526020015b60405180910390f35b3480156100fc57600080fd5b506100dd61010b366004610a16565b61029a565b34801561011c57600080fd5b5061013061012b366004610a4f565b610311565b60405190151581526020016100e7565b34801561014c57600080fd5b5061016061015b366004610aa0565b610360565b005b34801561016e57600080fd5b506100dd61017d366004610ae1565b6001600160a01b03163190565b34801561019657600080fd5b506100dd6101a5366004610b13565b6103a0565b3480156101b657600080fd5b506101306101c5366004610ae1565b60006020819052908152604090205460ff1681565b3480156101e657600080fd5b506101606101f5366004610ae1565b610464565b34801561020657600080fd5b50610160610215366004610ae1565b61054c565b34801561022657600080fd5b50610160610235366004610ae1565b6105c2565b610130610248366004610ae1565b610635565b34801561025957600080fd5b50610160610268366004610b66565b61066e565b34801561027957600080fd5b5061028261078e565b6040516001600160a01b0390911681526020016100e7565b6040516370a0823160e01b81526001600160a01b038281166004830152600091908416906370a0823190602401602060405180830381865afa1580156102e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103089190610bec565b90505b92915050565b3360009081526020819052604081205460ff166103495760405162461bcd60e51b815260040161034090610c05565b60405180910390fd5b610355858585856107cb565b90505b949350505050565b3360009081526020819052604090205460ff1661038f5760405162461bcd60e51b815260040161034090610c05565b61039b838333846107d9565b505050565b3360009081526020819052604081205460ff166103cf5760405162461bcd60e51b815260040161034090610c05565b6040516370a0823160e01b81523360048201526000906001600160a01b038716906370a0823190602401602060405180830381865afa158015610416573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043a9190610bec565b905083811061044d576000915050610358565b61045a8686338787610831565b9695505050505050565b61046c61078e565b6001600160a01b0316336001600160a01b0316146104cc5760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f496e76616c696400000000000000006044820152606401610340565b6001600160a01b0381166105225760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e00000000000000006044820152606401610340565b8061052b6107a7565b80546001600160a01b0319166001600160a01b039290921691909117905550565b61055461078e565b6001600160a01b0316336001600160a01b0316148061058257503360009081526020819052604090205460ff165b61059e5760405162461bcd60e51b815260040161034090610c05565b6001600160a01b03166000908152602081905260409020805460ff19166001179055565b6105ca61078e565b6001600160a01b0316336001600160a01b031614806105f857503360009081526020819052604090205460ff165b6106145760405162461bcd60e51b815260040161034090610c05565b6001600160a01b03166000908152602081905260409020805460ff19169055565b3360009081526020819052604081205460ff166106645760405162461bcd60e51b815260040161034090610c05565b61030b8234610858565b3360009081526020819052604090205460ff1661069d5760405162461bcd60e51b815260040161034090610c05565b60005b828110156107885760008484838181106106bc576106bc610c32565b90506020020160208101906106d19190610ae1565b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610717573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073b9190610bec565b905080156107755761077585858481811061075857610758610c32565b905060200201602081019061076d9190610ae1565b8433846107d9565b508061078081610c48565b9150506106a0565b50505050565b60006107986107a7565b546001600160a01b0316919050565b7f7d382ebca3e46505071795e192d28166a3d4bd0685585591bc6c5b8df6769fd290565b6000610355858585856108f6565b6107e5848385846108f6565b6107885760405162461bcd60e51b815260206004820152601e60248201527f53696d706c65526f757465722f707573682f7472616e736665724661696c00006044820152606401610340565b600061083f868686866108f6565b1561084b57508161084f565b5060005b95945050505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146108a5576040519150601f19603f3d011682016040523d82523d6000602084013e6108aa565b606091505b5050809150508061030b5760405162461bcd60e51b81526020600482015260166024820152751b59dd93dc99195c8bdb5bcbdc99599d5b9911985a5b60521b6044820152606401610340565b60008115806109165750826001600160a01b0316846001600160a01b0316145b1561092357506001610358565b604080516001600160a01b0386811660248301528581166044830152606480830186905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908916916109879190610c6f565b6000604051808303816000865af19150503d80600081146109c4576040519150601f19603f3d011682016040523d82523d6000602084013e6109c9565b606091505b50915091508180156109f35750805115806109f35750808060200190518101906109f39190610caa565b979650505050505050565b6001600160a01b0381168114610a1357600080fd5b50565b60008060408385031215610a2957600080fd5b8235610a34816109fe565b91506020830135610a44816109fe565b809150509250929050565b60008060008060808587031215610a6557600080fd5b8435610a70816109fe565b93506020850135610a80816109fe565b92506040850135610a90816109fe565b9396929550929360600135925050565b600080600060608486031215610ab557600080fd5b8335610ac0816109fe565b92506020840135610ad0816109fe565b929592945050506040919091013590565b600060208284031215610af357600080fd5b8135610afe816109fe565b9392505050565b8015158114610a1357600080fd5b60008060008060808587031215610b2957600080fd5b8435610b34816109fe565b93506020850135610b44816109fe565b9250604085013591506060850135610b5b81610b05565b939692955090935050565b600080600060408486031215610b7b57600080fd5b833567ffffffffffffffff80821115610b9357600080fd5b818601915086601f830112610ba757600080fd5b813581811115610bb657600080fd5b8760208260051b8501011115610bcb57600080fd5b60209283019550935050840135610be1816109fe565b809150509250925092565b600060208284031215610bfe57600080fd5b5051919050565b602080825260139082015272149bdd5d195c8bdd5b985d5d1a1bdc9a5e9959606a1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060018201610c6857634e487b7160e01b600052601160045260246000fd5b5060010190565b6000825160005b81811015610c905760208186018101518583015201610c76565b81811115610c9f576000828501525b509190910192915050565b600060208284031215610cbc57600080fd5b8151610afe81610b0556fea264697066735822122032abe7da40276151732235ff38bf2bb6331c01855dd914247ffec73ec2807d6264736f6c634300080e0033608060405234801561001057600080fd5b50604051610baf380380610baf83398101604081905261002f91610089565b600080546001600160a01b039485166001600160a01b0319918216179091556001805493851693821693909317909255600280549190931691161790556100d6565b6001600160a01b038116811461008657600080fd5b50565b60008060006060848603121561009e57600080fd5b83516100a981610071565b60208501519093506100ba81610071565b60408501519092506100cb81610071565b809150509250925092565b610aca806100e56000396000f3fe6080604052600436106100955760003560e01c8063a3cfe14d11610059578063a3cfe14d14610198578063aa2cc08b146101b8578063b04220dd146100e4578063e1f21c67146101d8578063ff2e2d33146101f857600080fd5b8063080d7c4d146100a15780631154020b146100c35780632d24c42f146100e45780634d1d2b661461011e578063978b7c021461016857600080fd5b3661009c57005b600080fd5b3480156100ad57600080fd5b506100c16100bc366004610757565b610218565b005b3480156100cf57600080fd5b506100c16100de366004610783565b50505050565b3480156100f057600080fd5b506101046100ff3660046107c9565b6102aa565b604080519283526020830191909152015b60405180910390f35b34801561012a57600080fd5b5061013e6101393660046107c9565b61034d565b6040805195151586526020860194909452928401919091526060830152608082015260a001610115565b34801561017457600080fd5b506101886101833660046107c9565b610444565b6040519015158152602001610115565b3480156101a457600080fd5b506100c16101b3366004610757565b6104bc565b3480156101c457600080fd5b506101046101d33660046107eb565b6104f5565b3480156101e457600080fd5b506100c16101f3366004610846565b610593565b34801561020457600080fd5b50610188610213366004610887565b610606565b60005460015460025460405163167ae91560e21b81526001600160a01b03928316600482015290821660248201528482166044820152606481018490529116906359eba454906084015b6020604051808303816000875af1158015610281573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a5919061090a565b505050565b600080546001805460025460405163fbffe5fd60e01b81526001600160a01b0392831660048201529082166024820152604481018790526064810186905260848101929092528392169063fbffe5fd9060a4016080604051808303816000875af115801561031c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610340919061092c565b5091969095509350505050565b60008060008060008061039560405180608001604052808a81526020018981526020016bffffffffffffffffffffffff8016815260200165ffffffffffff80168152506106c4565b6000805460018054600254604051632370a17d60e11b8152959650939485948594859485946001600160a01b03928316946346e142fa946103e194928316939216918c91600401610962565b60a0604051808303816000875af1158015610400573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042491906109f7565b60019094149e50919c509a50985096505050505050509295509295909350565b60405163268e95b360e11b815260048101839052602481018290526000903090634d1d2b669060440160a0604051808303816000875af115801561048c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b09190610a37565b50929695505050505050565b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b390604401610262565b60405163fbffe5fd60e01b81526001600160a01b0385811660048301528481166024830152604482018490526064820183905260016084830152600091829188169063fbffe5fd9060a4016080604051808303816000875af115801561055f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610583919061092c565b5091999098509650505050505050565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b3906044016020604051808303816000875af11580156105e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100de919061090a565b6000806106326040518060800160405280888152602001878152602001868152602001858152506106c4565b90506000896001600160a01b03166346e142fa8a8a8560016040518563ffffffff1660e01b81526004016106699493929190610962565b60a0604051808303816000875af1158015610688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ac91906109f7565b50506001909214945050505050979650505050505050565b60408051600180825281830190925260609160009190816020015b6106e7610721565b8152602001906001900390816106df579050509050828160008151811061071057610710610a7e565b602090810291909101015292915050565b60405180608001604052806004906020820280368337509192915050565b6001600160a01b038116811461075457600080fd5b50565b6000806040838503121561076a57600080fd5b82356107758161073f565b946020939093013593505050565b6000806000806080858703121561079957600080fd5b84356107a48161073f565b935060208501356107b48161073f565b93969395505050506040820135916060013590565b600080604083850312156107dc57600080fd5b50508035926020909101359150565b600080600080600060a0868803121561080357600080fd5b853561080e8161073f565b9450602086013561081e8161073f565b9350604086013561082e8161073f565b94979396509394606081013594506080013592915050565b60008060006060848603121561085b57600080fd5b83356108668161073f565b925060208401356108768161073f565b929592945050506040919091013590565b600080600080600080600060e0888a0312156108a257600080fd5b87356108ad8161073f565b965060208801356108bd8161073f565b955060408801356108cd8161073f565b969995985095966060810135965060808101359560a0820135955060c0909101359350915050565b8051801515811461090557600080fd5b919050565b60006020828403121561091c57600080fd5b610925826108f5565b9392505050565b6000806000806080858703121561094257600080fd5b505082516020840151604085015160609095015191969095509092509050565b6001600160a01b038581168252841660208083019190915260806040830181905284518382018190526000928681019160a08601919085805b828110156109d857855185835b60048110156109c5578251825291860191908601906001016109a8565b505050948301949386019360010161099b565b50505050851515606086015292506109ee915050565b95945050505050565b600080600080600060a08688031215610a0f57600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b600080600080600060a08688031215610a4f57600080fd5b610a58866108f5565b602087015160408801516060890151608090990151929a91995097965090945092505050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220ee5af508a000963283870ccb1238e226334c277144ecdb6cbe941aa9b871504c64736f6c634300080e0033608060405234801561001057600080fd5b5060405161452138038061452183398101604081905261002f91610092565b600180546001600160a01b0394851661010002610100600160a81b0319909116179055600280549284166001600160a01b0319938416179055600380549190931691161790556100df565b6001600160a01b038116811461008f57600080fd5b50565b6000806000606084860312156100a757600080fd5b83516100b28161007a565b60208501519093506100c38161007a565b60408501519092506100d48161007a565b809150509250925092565b614433806100ee6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631f7b6d32146100515780635686153214610067578063a5e3875114610092578063e9c4a3ac146100a7575b600080fd5b6000546040519081526020015b60405180910390f35b61007a61007536600461047a565b6100af565b6040516001600160a01b03909116815260200161005e565b6100a56100a036600461047a565b6100de565b005b6100a5610320565b60008082815481106100c3576100c3610493565b6000918252602090912001546001600160a01b031692915050565b60015460ff16610311578067ffffffffffffffff811115610101576101016104a9565b60405190808252806020026020018201604052801561012a578160200160208202803683370190505b50805161013f916000916020909101906103f3565b5060005b8181101561030f576001546002546003546040516101009093046001600160a01b03908116939281169291169061017990610458565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f0801580156101b5573d6000803e3d6000fd5b50600082815481106101c9576101c9610493565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506000818154811061020a5761020a610493565b60009182526020909120015460025460405163a3cfe14d60e01b81526001600160a01b039182166004820152678ac7230489e80000602482015291169063a3cfe14d90604401600060405180830381600087803b15801561026a57600080fd5b505af115801561027e573d6000803e3d6000fd5b505050506000818154811061029557610295610493565b600091825260209091200154604051635239cafb60e11b8152821560048201526001600160a01b039091169063a47395f690602401600060405180830381600087803b1580156102e457600080fd5b505af11580156102f8573d6000803e3d6000fd5b505050508080610307906104bf565b915050610143565b505b506001805460ff191681179055565b600080549061032f82476104e6565b90506000811161037b5760405162461bcd60e51b8152602060048201526013602482015272181032ba3432b9103a37903a3930b739b332b960691b604482015260640160405180910390fd5b60005b828110156103ee57600080828154811061039a5761039a610493565b60009182526020822001546040516001600160a01b039091169250829085156108fc0290869084818181858888f193505050509050806103d957600080fd5b505080806103e6906104bf565b91505061037e565b505050565b828054828255906000526020600020908101928215610448579160200282015b8281111561044857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610413565b50610454929150610465565b5090565b613ef58061050983390190565b5b808211156104545760008155600101610466565b60006020828403121561048c57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6000600182016104df57634e487b7160e01b600052601160045260246000fd5b5060010190565b60008261050357634e487b7160e01b600052601260045260246000fd5b50049056fe60806040526000805462ff00ff1916620100011790553480156200002257600080fd5b5060405162003ef538038062003ef58339810160408190526200004591620000a1565b600880546001600160a01b039485166001600160a01b0319918216179091556009805493851693821693909317909255600a8054919093169116179055620000f5565b6001600160a01b03811681146200009e57600080fd5b50565b600080600060608486031215620000b757600080fd5b8351620000c48162000088565b6020850151909350620000d78162000088565b6040850151909250620000ea8162000088565b809150509250925092565b613df080620001056000396000f3fe60806040526004361061026b5760003560e01c8063a3cfe14d11610144578063d3845fea116100b6578063f5537ede1161007a578063f5537ede146107b9578063f8ccbf47146107d9578063fa7626d4146107f9578063fc3816c814610813578063fc8349f214610833578063ffae399e1461085357600080fd5b8063d3845fea14610719578063d82555f114610739578063e67ecda114610759578063e923c65114610779578063e9a79a7b1461079957600080fd5b8063c4c6c87d11610108578063c4c6c87d14610659578063c88a5e6d14610679578063cafffca814610699578063ccfbf94d146106b9578063cda30c3b146106d9578063d06d8229146106f957600080fd5b8063a3cfe14d1461059b578063a47395f6146105bb578063af9bbe5f146105f4578063b9c071b414610614578063ba414fa61461063457600080fd5b806353e575ac116101dd5780636f597075116101a15780636f597075146104cd5780637a943a37146104ed5780637ec95ff3146105265780638b0af9bb1461054657806397754ae91461055b5780639a8325a01461057b57600080fd5b806353e575ac146103f8578063557f49c3146104265780635a4924e81461045f5780636bce989b1461048d5780636c49c32c146104ad57600080fd5b806329ce9dde1161022f57806329ce9dde146103195780632d6c17a31461035657806333ac5efd146103765780633a768463146103965780633bf82db1146103b85780633d3d130d146103d857600080fd5b80630cc9d65614610277578063108554f214610299578063233240ee146102b95780632644c05c146102d957806329a9e300146102f957600080fd5b3661027257005b600080fd5b34801561028357600080fd5b5061029761029236600461333e565b61088c565b005b3480156102a557600080fd5b506102976102b43660046133a3565b6108d5565b3480156102c557600080fd5b506102976102d43660046133cf565b6109a6565b3480156102e557600080fd5b506102976102f43660046133f3565b610a7a565b34801561030557600080fd5b5061029761031436600461342e565b610afb565b34801561032557600080fd5b50610339610334366004613534565b610ba6565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561036257600080fd5b506102976103713660046135ac565b610ccd565b34801561038257600080fd5b506102976103913660046135c5565b610d09565b3480156103a257600080fd5b50610339600080516020613d7b83398151915281565b3480156103c457600080fd5b506102976103d3366004613608565b610d8c565b3480156103e457600080fd5b506102976103f336600461365c565b610e66565b34801561040457600080fd5b506104186104133660046133f3565b610fa2565b60405190815260200161034d565b34801561043257600080fd5b506102976104413660046136ad565b600a8054911515600160a81b0260ff60a81b19909216919091179055565b34801561046b57600080fd5b5061029761047a3660046136ad565b600c805460ff1916911515919091179055565b34801561049957600080fd5b506102976104a8366004613608565b61103a565b3480156104b957600080fd5b506104186104c83660046136ca565b61104c565b3480156104d957600080fd5b506102976104e83660046133cf565b6111b0565b3480156104f957600080fd5b506102976105083660046136ad565b600a8054911515600160b81b0260ff60b81b19909216919091179055565b34801561053257600080fd5b506104186105413660046135c5565b611253565b34801561055257600080fd5b506104186112ec565b34801561056757600080fd5b506102976105763660046136e7565b61135e565b34801561058757600080fd5b5061033961059636600461373a565b61157e565b3480156105a757600080fd5b506102976105b63660046133a3565b611678565b3480156105c757600080fd5b506102976105d63660046136ad565b600a8054911515600160a01b0260ff60a01b19909216919091179055565b34801561060057600080fd5b5061029761060f366004613608565b6116ef565b34801561062057600080fd5b5061029761062f3660046135ac565b611796565b34801561064057600080fd5b506106496117b4565b604051901515815260200161034d565b34801561066557600080fd5b506104186106743660046135ac565b6118d7565b34801561068557600080fd5b506102976106943660046133a3565b61196e565b3480156106a557600080fd5b506104186106b43660046135ac565b6119a1565b3480156106c557600080fd5b506104186106d4366004613777565b6119f3565b3480156106e557600080fd5b506104186106f43660046137d0565b611a73565b34801561070557600080fd5b5061029761071436600461342e565b611b06565b34801561072557600080fd5b506102976107343660046135ac565b611bb1565b34801561074557600080fd5b50610297610754366004613608565b611bf7565b34801561076557600080fd5b506102976107743660046135ac565b600b55565b34801561078557600080fd5b506104186107943660046133f3565b611ce8565b3480156107a557600080fd5b506102976107b43660046133a3565b611d72565b3480156107c557600080fd5b506102976107d4366004613608565b611e11565b3480156107e557600080fd5b506000546106499062010000900460ff1681565b34801561080557600080fd5b506000546106499060ff1681565b34801561081f57600080fd5b5061041861082e366004613802565b611e88565b34801561083f57600080fd5b5061064961084e3660046135ac565b611f16565b34801561085f57600080fd5b5061029761086e3660046136ad565b600a8054911515600160b01b0260ff60b01b19909216919091179055565b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c28686868686866040516108c596959493929190613864565b60405180910390a1505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610908908590859060040161389d565b600060405180830381600087803b15801561092257600080fd5b505af1158015610936573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0385166004820152600080516020613d7b83398151915292506306447d5691506024015b600060405180830381600087803b15801561098a57600080fd5b505af115801561099e573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d906109dd908490600160801b9060040161389d565b600060405180830381600087803b1580156109f757600080fd5b505af1158015610a0b573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0384166004820152600080516020613d7b833981519152925063ca669fa791506024015b600060405180830381600087803b158015610a5f57600080fd5b505af1158015610a73573d6000803e3d6000fd5b5050505050565b600854600954600a54604051636a4f769160e01b81526001600160a01b0393841693636a4f769193610ac293908216929116908a908a908a906000908b908b906004016138b6565b600060405180830381600087803b158015610adc57600080fd5b505af1158015610af0573d6000803e3d6000fd5b505050505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610b32908590600160801b9060040161389d565b600060405180830381600087803b158015610b4c57600080fd5b505af1158015610b60573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808616600483015284166024820152600080516020613d7b83398151915292506347e50cce9150604401610970565b604051638d1cc92560e01b81526000908190600080516020613d7b83398151915290638d1cc92590610bdc908790600401613952565b6000604051808303816000875af1158015610bfb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c239190810190613965565b83604051602001610c359291906139d3565b60405160208183030381529060405290508051602082016000f091506001600160a01b038216610cc65760405162461bcd60e51b815260206004820152603160248201527f54657374206465706c6f79436f646528737472696e672c6279746573293a204460448201527032b83637bcb6b2b73a103330b4b632b21760791b60648201526084015b60405180910390fd5b5092915050565b600080516020613d7b83398151915263e5d6bf02610ceb8342613a18565b6040518263ffffffff1660e01b8152600401610a4591815260200190565b600854600954600a54604051636a4f769160e01b81526001600160a01b0393841693636a4f7691938693610d52939183169216908c908c908c906000908d908d906004016138b6565b6000604051808303818588803b158015610d6b57600080fd5b505af1158015610d7f573d6000803e3d6000fd5b5050505050505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610dbf908690859060040161389d565b600060405180830381600087803b158015610dd957600080fd5b505af1158015610ded573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808716600483015285166024820152600080516020613d7b83398151915292506345b5607891506044015b600060405180830381600087803b158015610e4957600080fd5b505af1158015610e5d573d6000803e3d6000fd5b50505050505050565b600c5460ff1615610ea85760405162461bcd60e51b815260206004820152600c60248201526b1c1bdcdd1a1bdbdad1985a5b60a21b6044820152606401610cbd565b600b5415610ef657610ef68160200135600b546040518060400160405280601881526020017f496e636f727265637420737461747573206d6573736167650000000000000000815250611f86565b600a54600160b81b900460ff1615610f9e576008546001600160a01b0316636a4f7691610f2660208501856133cf565b610f3660408601602087016133cf565b606080870135901c6bffffffffffffffffffffffff166bffffffffffffffffffffffff60608801351660c088013560481c62ffffff16600060608a013560e01c8a604001356040518963ffffffff1660e01b81526004016109709897969594939291906138b6565b5050565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc938793610fed9392831692909116908c908c908c908a908d90600401613a2f565b60206040518083038185885af115801561100b573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906110309190613a6d565b9695505050505050565b611047838383600061135e565b505050565b600a54600090600160b01b900460ff1615611087576040805160208082019092526f1d195cdd13585ad95c8bdc995d995c9d60821b81529081fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c2336110b660208501856133cf565b6110c660408601602087016133cf565b856040013586608001358760a001356040516110e796959493929190613864565b60405180910390a1600a54600160a01b900460ff16156111875761110e60208301836133cf565b60085460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926111429291169060009060040161389d565b6020604051808303816000875af1158015611161573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111859190613a86565b505b600a54600160a81b900460ff16156111a857506418589bdc9d60da1b919050565b506000919050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d906111e7908490600160801b9060040161389d565b600060405180830381600087803b15801561120157600080fd5b505af1158015611215573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0384166004820152600080516020613d7b83398151915292506306447d569150602401610a45565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc93879361129e9392831692909116908d908d908d908d908d90600401613a2f565b60206040518083038185885af11580156112bc573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906112e19190613a6d565b979650505050505050565b6008546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611335573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113599190613a6d565b905090565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b17905291516000928716916113b291613aa3565b6000604051808303816000865af19150503d80600081146113ef576040519150601f19603f3d011682016040523d82523d6000602084013e6113f4565b606091505b5091505060008180602001905181019061140e9190613a6d565b905061147a846114748761144b6370a0823160e01b61142e60018d611fce565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b90611ff3565b821561099e5760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b038916916114c29190613aa3565b6000604051808303816000865af19150503d80600081146114ff576040519150601f19603f3d011682016040523d82523d6000602084013e611504565b606091505b5091505060008180602001905181019061151e9190613a6d565b905082861015611543576115328684613a18565b61153c9082613a18565b905061155a565b61154d8387613a18565b6115579082613abf565b90505b611574816114746318160ddd60e01b61142e60018d611fce565b5050505050505050565b604051638d1cc92560e01b81526000908190600080516020613d7b83398151915290638d1cc925906115b4908690600401613952565b6000604051808303816000875af11580156115d3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115fb9190810190613965565b90508051602082016000f091506001600160a01b0382166116725760405162461bcd60e51b815260206004820152602b60248201527f54657374206465706c6f79436f646528737472696e67293a204465706c6f796d60448201526a32b73a103330b4b632b21760a91b6064820152608401610cbd565b50919050565b60085460405163095ea7b360e01b81526001600160a01b038481169263095ea7b3926116ac9290911690859060040161389d565b6020604051808303816000875af11580156116cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110479190613a86565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90611722908690859060040161389d565b600060405180830381600087803b15801561173c57600080fd5b505af1158015611750573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808716600483015285166024820152600080516020613d7b83398151915292506347e50cce9150604401610e2f565b600080516020613d7b83398151915263e5d6bf02610ceb8342613abf565b60008054610100900460ff16156117d45750600054610100900460ff1690565b6000600080516020613d7b8339815191523b156118d257604051600090600080516020613d7b833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49061183c9083906519985a5b195960d21b9060200161389d565b60408051601f198184030181529082905261185a9291602001613ad7565b60408051601f198184030181529082905261187491613aa3565b6000604051808303816000865af19150503d80600081146118b1576040519150601f19603f3d011682016040523d82523d6000602084013e6118b6565b606091505b50915050808060200190518101906118ce9190613a86565b9150505b919050565b600854600954600a5460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810184905260006064820181905292919091169063ad97db1b906084015b6020604051808303816000875af1158015611944573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119689190613a6d565b92915050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610970908590859060040161389d565b600854600954600a5460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810184905260016064820152600092919091169063ad97db1b90608401611925565b60085460405163127db4b760e21b81526000916001600160a01b0316906349f6d2dc90611a30908a908a908a908a908a9089908b90600401613a2f565b6020604051808303816000875af1158015611a4f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e19190613a6d565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc93611aba939183169216908a908a908a9089908b90600401613a2f565b6020604051808303816000875af1158015611ad9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611afd9190613a6d565b95945050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90611b3d908590600160801b9060040161389d565b600060405180830381600087803b158015611b5757600080fd5b505af1158015611b6b573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808616600483015284166024820152600080516020613d7b83398151915292506345b560789150604401610970565b600854604051630460488160e31b81523060048201526001600160a01b039091169063230244089083906024016000604051808303818588803b15801561098a57600080fd5b7f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583604051611cc2906040808252600790820152665741524e494e4760c81b6060820152608060208201819052605e908201527f546573742074697028616464726573732c616464726573732c75696e7432353660a08201527f293a2054686520607469706020737464636865617420686173206265656e206460c08201527f6570726563617465642e2055736520606465616c6020696e73746561642e000060e08201526101000190565b60405180910390a1611047816114748461144b6370a0823160e01b61142e60018a611fce565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc93611d2f939183169216908b908b908b908b908b90600401613a2f565b6020604051808303816000875af1158015611d4e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110309190613a6d565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90611da5908590859060040161389d565b600060405180830381600087803b158015611dbf57600080fd5b505af1158015611dd3573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0385166004820152600080516020613d7b833981519152925063ca669fa79150602401610970565b60405163a9059cbb60e01b81526001600160a01b0384169063a9059cbb90611e3f908590859060040161389d565b6020604051808303816000875af1158015611e5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e829190613a86565b50505050565b60085460405163127db4b760e21b81526000916001600160a01b0316906349f6d2dc908490611ec7908c908c908c908c908c908a908d90600401613a2f565b60206040518083038185885af1158015611ee5573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611f0a9190613a6d565b98975050505050505050565b600854604051632e1a7d4d60e01b8152600481018390526000916001600160a01b031690632e1a7d4d906024016020604051808303816000875af1158015611f62573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119689190613a86565b818314611047577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051611fbc9190613b08565b60405180910390a16110478383611ffd565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b610f9e8282612127565b808214610f9e577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516120719060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a1610f9e61246b565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b946000939092909183018282801561219857602002820191906000526020600020905b815481526020019060010190808311612184575b505050505090506000836121ab83612564565b6040516020016121bc929190613ad7565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a16835281529281209194509092909161220e918691889101613b37565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166122465761224487612604565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905190918391612285918791899101613b37565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b0316846040516122ca9190613aa3565b600060405180830381855afa9150503d8060008114612305576040519150601f19603f3d011682016040523d82523d6000602084013e61230a565b606091505b50915061232390508161231e886020613b71565b613272565b604051630667f9d760e41b815290925060009150600080516020613d7b8339815191529063667f9d709061235d908b90879060040161389d565b6020604051808303816000875af115801561237c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123a09190613a6d565b90508082146123c15760405162461bcd60e51b8152600401610cbd90613b90565b6040516370ca10bb60e01b8152600080516020613d7b833981519152906370ca10bb906123f6908b9087908e90600401613c2b565b600060405180830381600087803b15801561241057600080fd5b505af1158015612424573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff1916905561245760028b0160006132ef565b896004016000905550505050505050505050565b600080516020613d7b8339815191523b1561255357604051600090600080516020613d7b833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc4906124d49083906519985a5b195960d21b90600190602001613c2b565b60408051601f19818403018152908290526124f29291602001613ad7565b60408051601f198184030181529082905261250c91613aa3565b6000604051808303816000865af19150503d8060008114612549576040519150601f19603f3d011682016040523d82523d6000602084013e61254e565b606091505b505050505b6000805461ff001916610100179055565b60606000825160206125769190613b71565b67ffffffffffffffff81111561258e5761258e613467565b6040519080825280601f01601f1916602001820160405280156125b8576020820181803683370190505b50905060005b8351811015610cc65760008482815181106125db576125db613c4c565b6020026020010151905080826020026020018401525080806125fc90613c62565b9150506125be565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b94938793919290919083018282801561267457602002820191906000526020600020905b815481526020019060010190808311612660575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051959650949193506126be92508591879101613b37565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161561275a576001600160a01b0384166000908152602087815260408083206001600160e01b0319871684528252808320905190929161272a918591879101613b37565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b60008361276683612564565b604051602001612777929190613ad7565b6040516020818303038152906040529050600080516020613d9b83398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156127d457600080fd5b505af11580156127e8573d6000803e3d6000fd5b50505050600080866001600160a01b0316836040516128079190613aa3565b600060405180830381855afa9150503d8060008114612842576040519150601f19603f3d011682016040523d82523d6000602084013e612847565b606091505b50915061285b90508161231e876020613b71565b6040516365bc948160e01b81526001600160a01b038916600482015290925060009150600080516020613d7b833981519152906365bc9481906024016000604051808303816000875af11580156128b6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526128de9190810190613cf0565b5090508051600103612b85576000600080516020613d9b83398151915260001c6001600160a01b031663667f9d70898460008151811061292057612920613c4c565b60200260200101516040518363ffffffff1660e01b815260040161294592919061389d565b6020604051808303816000875af1158015612964573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129889190613a6d565b9050806129e6577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a588836000815181106129c4576129c4613c4c565b602002602001015160001c6040516129dd92919061389d565b60405180910390a15b808314612a055760405162461bcd60e51b8152600401610cbd90613b90565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed88888789604051602001612a3b929190613b37565b6040516020818303038152906040528051906020012085600081518110612a6457612a64613c4c565b602002602001015160001c604051612a7f9493929190613d4a565b60405180910390a181600081518110612a9a57612a9a613c4c565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c1683528452808220905192939092612ae3918a918c9101613b37565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c16855282528284209251909391612b4b918a918c9101613b37565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff1916911515919091179055506130fd565b60018151111561308d5760005b8151811015613087576000600080516020613d9b83398151915260001c6001600160a01b031663667f9d708a858581518110612bd057612bd0613c4c565b60200260200101516040518363ffffffff1660e01b8152600401612bf592919061389d565b6020604051808303816000875af1158015612c14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c389190613a6d565b905080612c95577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a589848481518110612c7357612c73613c4c565b602002602001015160001c604051612c8c92919061389d565b60405180910390a15b600080516020613d9b83398151915260001c6001600160a01b03166370ca10bb8a858581518110612cc857612cc8613c4c565b602002602001015161133760f01b6040518463ffffffff1660e01b8152600401612cf493929190613c2b565b600060405180830381600087803b158015612d0e57600080fd5b505af1158015612d22573d6000803e3d6000fd5b50505050600060608a6001600160a01b031687604051612d429190613aa3565b600060405180830381855afa9150503d8060008114612d7d576040519150601f19603f3d011682016040523d82523d6000602084013e612d82565b606091505b509092509050612d978161231e8b6020613b71565b9550818015612daa575061133760f01b86145b15612fe5577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001612de5929190613b37565b60405160208183030381529060405280519060200120888881518110612e0d57612e0d613c4c565b602002602001015160001c604051612e289493929190613d4a565b60405180910390a1848481518110612e4257612e42613c4c565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f1683528452808220905192939092612e8b918d918f9101613b37565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c604051602001612f16929190613b37565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff021916908315150217905550600080516020613d9b83398151915260001c6001600160a01b03166370ca10bb8c878781518110612f8457612f84613c4c565b6020026020010151866040518463ffffffff1660e01b8152600401612fab93929190613c2b565b600060405180830381600087803b158015612fc557600080fd5b505af1158015612fd9573d6000803e3d6000fd5b50505050505050613087565b600080516020613d9b83398151915260001c6001600160a01b03166370ca10bb8c87878151811061301857613018613c4c565b6020026020010151866040518463ffffffff1660e01b815260040161303f93929190613c2b565b600060405180830381600087803b15801561305957600080fd5b505af115801561306d573d6000803e3d6000fd5b50505050505050808061307f90613c62565b915050612b92565b506130fd565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e6064820152608401610cbd565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905190929161313f9188918a9101613b37565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166131cc5760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b6064820152608401610cbd565b6005890180546001600160a01b031916905560038901805463ffffffff191690556131fb60028a0160006132ef565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a1684528252808320905190929161323f9188918a9101613b37565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b6000806000602085511161328757845161328a565b60205b905060005b818110156132e5576132a2816008613b71565b866132ad8388613abf565b815181106132bd576132bd613c4c565b01602001516001600160f81b031916901c9290921791806132dd81613c62565b91505061328f565b5090949350505050565b508054600082559060005260206000209081019061330d9190613310565b50565b5b808211156133255760008155600101613311565b5090565b6001600160a01b038116811461330d57600080fd5b60008060008060008060c0878903121561335757600080fd5b863561336281613329565b9550602087013561337281613329565b9450604087013561338281613329565b959894975094956060810135955060808101359460a0909101359350915050565b600080604083850312156133b657600080fd5b82356133c181613329565b946020939093013593505050565b6000602082840312156133e157600080fd5b81356133ec81613329565b9392505050565b600080600080600060a0868803121561340b57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b6000806040838503121561344157600080fd5b823561344c81613329565b9150602083013561345c81613329565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156134a6576134a6613467565b604052919050565b600067ffffffffffffffff8211156134c8576134c8613467565b50601f01601f191660200190565b60006134e96134e4846134ae565b61347d565b90508281528383830111156134fd57600080fd5b828260208301376000602084830101529392505050565b600082601f83011261352557600080fd5b6133ec838335602085016134d6565b6000806040838503121561354757600080fd5b823567ffffffffffffffff8082111561355f57600080fd5b61356b86838701613514565b9350602085013591508082111561358157600080fd5b508301601f8101851361359357600080fd5b6135a2858235602084016134d6565b9150509250929050565b6000602082840312156135be57600080fd5b5035919050565b60008060008060008060c087890312156135de57600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b60008060006060848603121561361d57600080fd5b833561362881613329565b9250602084013561363881613329565b929592945050506040919091013590565b6000610120828403121561167257600080fd5b60008082840361016081121561367157600080fd5b61367b8585613649565b9250604061011f198201121561369057600080fd5b50610120830190509250929050565b801515811461330d57600080fd5b6000602082840312156136bf57600080fd5b81356133ec8161369f565b600061012082840312156136dd57600080fd5b6133ec8383613649565b600080600080608085870312156136fd57600080fd5b843561370881613329565b9350602085013561371881613329565b925060408501359150606085013561372f8161369f565b939692955090935050565b60006020828403121561374c57600080fd5b813567ffffffffffffffff81111561376357600080fd5b61376f84828501613514565b949350505050565b60008060008060008060c0878903121561379057600080fd5b863561379b81613329565b955060208701356137ab81613329565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600080600080608085870312156137e657600080fd5b5050823594602084013594506040840135936060013592509050565b600080600080600080600060e0888a03121561381d57600080fd5b873561382881613329565b9650602088013561383881613329565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b60005b838110156139155781810151838201526020016138fd565b83811115611e825750506000910152565b6000815180845261393e8160208601602086016138fa565b601f01601f19169290920160200192915050565b6020815260006133ec6020830184613926565b60006020828403121561397757600080fd5b815167ffffffffffffffff81111561398e57600080fd5b8201601f8101841361399f57600080fd5b80516139ad6134e4826134ae565b8181528560208385010111156139c257600080fd5b611afd8260208301602086016138fa565b600083516139e58184602088016138fa565b8351908301906139f98183602088016138fa565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600082821015613a2a57613a2a613a02565b500390565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b600060208284031215613a7f57600080fd5b5051919050565b600060208284031215613a9857600080fd5b81516133ec8161369f565b60008251613ab58184602087016138fa565b9190910192915050565b60008219821115613ad257613ad2613a02565b500190565b6001600160e01b0319831681528151600090613afa8160048501602087016138fa565b919091016004019392505050565b60408152600560408201526422b93937b960d91b60608201526080602082015260006133ec6080830184613926565b825160009082906020808701845b83811015613b6157815185529382019390820190600101613b45565b5050948252509092019392505050565b6000816000190483118215151615613b8b57613b8b613a02565b500290565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b6001600160a01b039390931683526020830191909152604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060018201613c7457613c74613a02565b5060010190565b600082601f830112613c8c57600080fd5b8151602067ffffffffffffffff821115613ca857613ca8613467565b8160051b613cb782820161347d565b9283528481018201928281019087851115613cd157600080fd5b83870192505b848310156112e157825182529183019190830190613cd7565b60008060408385031215613d0357600080fd5b825167ffffffffffffffff80821115613d1b57600080fd5b613d2786838701613c7b565b93506020850151915080821115613d3d57600080fd5b506135a285828601613c7b565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe0000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220f9422ffe2dc0cea5614cee05acbced5148d638eb509e3a6adff8d2274a16877b64736f6c634300080e0033a264697066735822122015d66ca0797b173b00ee5f4ef88a00f3037e9384fb101d577dd391797849ef3964736f6c634300080e003360806040526000805462ff00ff1916620100011790553480156200002257600080fd5b5060405162003ef538038062003ef58339810160408190526200004591620000a1565b600880546001600160a01b039485166001600160a01b0319918216179091556009805493851693821693909317909255600a8054919093169116179055620000f5565b6001600160a01b03811681146200009e57600080fd5b50565b600080600060608486031215620000b757600080fd5b8351620000c48162000088565b6020850151909350620000d78162000088565b6040850151909250620000ea8162000088565b809150509250925092565b613df080620001056000396000f3fe60806040526004361061026b5760003560e01c8063a3cfe14d11610144578063d3845fea116100b6578063f5537ede1161007a578063f5537ede146107b9578063f8ccbf47146107d9578063fa7626d4146107f9578063fc3816c814610813578063fc8349f214610833578063ffae399e1461085357600080fd5b8063d3845fea14610719578063d82555f114610739578063e67ecda114610759578063e923c65114610779578063e9a79a7b1461079957600080fd5b8063c4c6c87d11610108578063c4c6c87d14610659578063c88a5e6d14610679578063cafffca814610699578063ccfbf94d146106b9578063cda30c3b146106d9578063d06d8229146106f957600080fd5b8063a3cfe14d1461059b578063a47395f6146105bb578063af9bbe5f146105f4578063b9c071b414610614578063ba414fa61461063457600080fd5b806353e575ac116101dd5780636f597075116101a15780636f597075146104cd5780637a943a37146104ed5780637ec95ff3146105265780638b0af9bb1461054657806397754ae91461055b5780639a8325a01461057b57600080fd5b806353e575ac146103f8578063557f49c3146104265780635a4924e81461045f5780636bce989b1461048d5780636c49c32c146104ad57600080fd5b806329ce9dde1161022f57806329ce9dde146103195780632d6c17a31461035657806333ac5efd146103765780633a768463146103965780633bf82db1146103b85780633d3d130d146103d857600080fd5b80630cc9d65614610277578063108554f214610299578063233240ee146102b95780632644c05c146102d957806329a9e300146102f957600080fd5b3661027257005b600080fd5b34801561028357600080fd5b5061029761029236600461333e565b61088c565b005b3480156102a557600080fd5b506102976102b43660046133a3565b6108d5565b3480156102c557600080fd5b506102976102d43660046133cf565b6109a6565b3480156102e557600080fd5b506102976102f43660046133f3565b610a7a565b34801561030557600080fd5b5061029761031436600461342e565b610afb565b34801561032557600080fd5b50610339610334366004613534565b610ba6565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561036257600080fd5b506102976103713660046135ac565b610ccd565b34801561038257600080fd5b506102976103913660046135c5565b610d09565b3480156103a257600080fd5b50610339600080516020613d7b83398151915281565b3480156103c457600080fd5b506102976103d3366004613608565b610d8c565b3480156103e457600080fd5b506102976103f336600461365c565b610e66565b34801561040457600080fd5b506104186104133660046133f3565b610fa2565b60405190815260200161034d565b34801561043257600080fd5b506102976104413660046136ad565b600a8054911515600160a81b0260ff60a81b19909216919091179055565b34801561046b57600080fd5b5061029761047a3660046136ad565b600c805460ff1916911515919091179055565b34801561049957600080fd5b506102976104a8366004613608565b61103a565b3480156104b957600080fd5b506104186104c83660046136ca565b61104c565b3480156104d957600080fd5b506102976104e83660046133cf565b6111b0565b3480156104f957600080fd5b506102976105083660046136ad565b600a8054911515600160b81b0260ff60b81b19909216919091179055565b34801561053257600080fd5b506104186105413660046135c5565b611253565b34801561055257600080fd5b506104186112ec565b34801561056757600080fd5b506102976105763660046136e7565b61135e565b34801561058757600080fd5b5061033961059636600461373a565b61157e565b3480156105a757600080fd5b506102976105b63660046133a3565b611678565b3480156105c757600080fd5b506102976105d63660046136ad565b600a8054911515600160a01b0260ff60a01b19909216919091179055565b34801561060057600080fd5b5061029761060f366004613608565b6116ef565b34801561062057600080fd5b5061029761062f3660046135ac565b611796565b34801561064057600080fd5b506106496117b4565b604051901515815260200161034d565b34801561066557600080fd5b506104186106743660046135ac565b6118d7565b34801561068557600080fd5b506102976106943660046133a3565b61196e565b3480156106a557600080fd5b506104186106b43660046135ac565b6119a1565b3480156106c557600080fd5b506104186106d4366004613777565b6119f3565b3480156106e557600080fd5b506104186106f43660046137d0565b611a73565b34801561070557600080fd5b5061029761071436600461342e565b611b06565b34801561072557600080fd5b506102976107343660046135ac565b611bb1565b34801561074557600080fd5b50610297610754366004613608565b611bf7565b34801561076557600080fd5b506102976107743660046135ac565b600b55565b34801561078557600080fd5b506104186107943660046133f3565b611ce8565b3480156107a557600080fd5b506102976107b43660046133a3565b611d72565b3480156107c557600080fd5b506102976107d4366004613608565b611e11565b3480156107e557600080fd5b506000546106499062010000900460ff1681565b34801561080557600080fd5b506000546106499060ff1681565b34801561081f57600080fd5b5061041861082e366004613802565b611e88565b34801561083f57600080fd5b5061064961084e3660046135ac565b611f16565b34801561085f57600080fd5b5061029761086e3660046136ad565b600a8054911515600160b01b0260ff60b01b19909216919091179055565b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c28686868686866040516108c596959493929190613864565b60405180910390a1505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610908908590859060040161389d565b600060405180830381600087803b15801561092257600080fd5b505af1158015610936573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0385166004820152600080516020613d7b83398151915292506306447d5691506024015b600060405180830381600087803b15801561098a57600080fd5b505af115801561099e573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d906109dd908490600160801b9060040161389d565b600060405180830381600087803b1580156109f757600080fd5b505af1158015610a0b573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0384166004820152600080516020613d7b833981519152925063ca669fa791506024015b600060405180830381600087803b158015610a5f57600080fd5b505af1158015610a73573d6000803e3d6000fd5b5050505050565b600854600954600a54604051636a4f769160e01b81526001600160a01b0393841693636a4f769193610ac293908216929116908a908a908a906000908b908b906004016138b6565b600060405180830381600087803b158015610adc57600080fd5b505af1158015610af0573d6000803e3d6000fd5b505050505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610b32908590600160801b9060040161389d565b600060405180830381600087803b158015610b4c57600080fd5b505af1158015610b60573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808616600483015284166024820152600080516020613d7b83398151915292506347e50cce9150604401610970565b604051638d1cc92560e01b81526000908190600080516020613d7b83398151915290638d1cc92590610bdc908790600401613952565b6000604051808303816000875af1158015610bfb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c239190810190613965565b83604051602001610c359291906139d3565b60405160208183030381529060405290508051602082016000f091506001600160a01b038216610cc65760405162461bcd60e51b815260206004820152603160248201527f54657374206465706c6f79436f646528737472696e672c6279746573293a204460448201527032b83637bcb6b2b73a103330b4b632b21760791b60648201526084015b60405180910390fd5b5092915050565b600080516020613d7b83398151915263e5d6bf02610ceb8342613a18565b6040518263ffffffff1660e01b8152600401610a4591815260200190565b600854600954600a54604051636a4f769160e01b81526001600160a01b0393841693636a4f7691938693610d52939183169216908c908c908c906000908d908d906004016138b6565b6000604051808303818588803b158015610d6b57600080fd5b505af1158015610d7f573d6000803e3d6000fd5b5050505050505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610dbf908690859060040161389d565b600060405180830381600087803b158015610dd957600080fd5b505af1158015610ded573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808716600483015285166024820152600080516020613d7b83398151915292506345b5607891506044015b600060405180830381600087803b158015610e4957600080fd5b505af1158015610e5d573d6000803e3d6000fd5b50505050505050565b600c5460ff1615610ea85760405162461bcd60e51b815260206004820152600c60248201526b1c1bdcdd1a1bdbdad1985a5b60a21b6044820152606401610cbd565b600b5415610ef657610ef68160200135600b546040518060400160405280601881526020017f496e636f727265637420737461747573206d6573736167650000000000000000815250611f86565b600a54600160b81b900460ff1615610f9e576008546001600160a01b0316636a4f7691610f2660208501856133cf565b610f3660408601602087016133cf565b606080870135901c6bffffffffffffffffffffffff166bffffffffffffffffffffffff60608801351660c088013560481c62ffffff16600060608a013560e01c8a604001356040518963ffffffff1660e01b81526004016109709897969594939291906138b6565b5050565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc938793610fed9392831692909116908c908c908c908a908d90600401613a2f565b60206040518083038185885af115801561100b573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906110309190613a6d565b9695505050505050565b611047838383600061135e565b505050565b600a54600090600160b01b900460ff1615611087576040805160208082019092526f1d195cdd13585ad95c8bdc995d995c9d60821b81529081fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c2336110b660208501856133cf565b6110c660408601602087016133cf565b856040013586608001358760a001356040516110e796959493929190613864565b60405180910390a1600a54600160a01b900460ff16156111875761110e60208301836133cf565b60085460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926111429291169060009060040161389d565b6020604051808303816000875af1158015611161573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111859190613a86565b505b600a54600160a81b900460ff16156111a857506418589bdc9d60da1b919050565b506000919050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d906111e7908490600160801b9060040161389d565b600060405180830381600087803b15801561120157600080fd5b505af1158015611215573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0384166004820152600080516020613d7b83398151915292506306447d569150602401610a45565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc93879361129e9392831692909116908d908d908d908d908d90600401613a2f565b60206040518083038185885af11580156112bc573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906112e19190613a6d565b979650505050505050565b6008546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611335573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113599190613a6d565b905090565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b17905291516000928716916113b291613aa3565b6000604051808303816000865af19150503d80600081146113ef576040519150601f19603f3d011682016040523d82523d6000602084013e6113f4565b606091505b5091505060008180602001905181019061140e9190613a6d565b905061147a846114748761144b6370a0823160e01b61142e60018d611fce565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b90611ff3565b821561099e5760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b038916916114c29190613aa3565b6000604051808303816000865af19150503d80600081146114ff576040519150601f19603f3d011682016040523d82523d6000602084013e611504565b606091505b5091505060008180602001905181019061151e9190613a6d565b905082861015611543576115328684613a18565b61153c9082613a18565b905061155a565b61154d8387613a18565b6115579082613abf565b90505b611574816114746318160ddd60e01b61142e60018d611fce565b5050505050505050565b604051638d1cc92560e01b81526000908190600080516020613d7b83398151915290638d1cc925906115b4908690600401613952565b6000604051808303816000875af11580156115d3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115fb9190810190613965565b90508051602082016000f091506001600160a01b0382166116725760405162461bcd60e51b815260206004820152602b60248201527f54657374206465706c6f79436f646528737472696e67293a204465706c6f796d60448201526a32b73a103330b4b632b21760a91b6064820152608401610cbd565b50919050565b60085460405163095ea7b360e01b81526001600160a01b038481169263095ea7b3926116ac9290911690859060040161389d565b6020604051808303816000875af11580156116cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110479190613a86565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90611722908690859060040161389d565b600060405180830381600087803b15801561173c57600080fd5b505af1158015611750573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808716600483015285166024820152600080516020613d7b83398151915292506347e50cce9150604401610e2f565b600080516020613d7b83398151915263e5d6bf02610ceb8342613abf565b60008054610100900460ff16156117d45750600054610100900460ff1690565b6000600080516020613d7b8339815191523b156118d257604051600090600080516020613d7b833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49061183c9083906519985a5b195960d21b9060200161389d565b60408051601f198184030181529082905261185a9291602001613ad7565b60408051601f198184030181529082905261187491613aa3565b6000604051808303816000865af19150503d80600081146118b1576040519150601f19603f3d011682016040523d82523d6000602084013e6118b6565b606091505b50915050808060200190518101906118ce9190613a86565b9150505b919050565b600854600954600a5460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810184905260006064820181905292919091169063ad97db1b906084015b6020604051808303816000875af1158015611944573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119689190613a6d565b92915050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610970908590859060040161389d565b600854600954600a5460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810184905260016064820152600092919091169063ad97db1b90608401611925565b60085460405163127db4b760e21b81526000916001600160a01b0316906349f6d2dc90611a30908a908a908a908a908a9089908b90600401613a2f565b6020604051808303816000875af1158015611a4f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e19190613a6d565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc93611aba939183169216908a908a908a9089908b90600401613a2f565b6020604051808303816000875af1158015611ad9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611afd9190613a6d565b95945050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90611b3d908590600160801b9060040161389d565b600060405180830381600087803b158015611b5757600080fd5b505af1158015611b6b573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808616600483015284166024820152600080516020613d7b83398151915292506345b560789150604401610970565b600854604051630460488160e31b81523060048201526001600160a01b039091169063230244089083906024016000604051808303818588803b15801561098a57600080fd5b7f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583604051611cc2906040808252600790820152665741524e494e4760c81b6060820152608060208201819052605e908201527f546573742074697028616464726573732c616464726573732c75696e7432353660a08201527f293a2054686520607469706020737464636865617420686173206265656e206460c08201527f6570726563617465642e2055736520606465616c6020696e73746561642e000060e08201526101000190565b60405180910390a1611047816114748461144b6370a0823160e01b61142e60018a611fce565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc93611d2f939183169216908b908b908b908b908b90600401613a2f565b6020604051808303816000875af1158015611d4e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110309190613a6d565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90611da5908590859060040161389d565b600060405180830381600087803b158015611dbf57600080fd5b505af1158015611dd3573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0385166004820152600080516020613d7b833981519152925063ca669fa79150602401610970565b60405163a9059cbb60e01b81526001600160a01b0384169063a9059cbb90611e3f908590859060040161389d565b6020604051808303816000875af1158015611e5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e829190613a86565b50505050565b60085460405163127db4b760e21b81526000916001600160a01b0316906349f6d2dc908490611ec7908c908c908c908c908c908a908d90600401613a2f565b60206040518083038185885af1158015611ee5573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611f0a9190613a6d565b98975050505050505050565b600854604051632e1a7d4d60e01b8152600481018390526000916001600160a01b031690632e1a7d4d906024016020604051808303816000875af1158015611f62573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119689190613a86565b818314611047577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051611fbc9190613b08565b60405180910390a16110478383611ffd565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b610f9e8282612127565b808214610f9e577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516120719060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a1610f9e61246b565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b946000939092909183018282801561219857602002820191906000526020600020905b815481526020019060010190808311612184575b505050505090506000836121ab83612564565b6040516020016121bc929190613ad7565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a16835281529281209194509092909161220e918691889101613b37565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166122465761224487612604565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905190918391612285918791899101613b37565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b0316846040516122ca9190613aa3565b600060405180830381855afa9150503d8060008114612305576040519150601f19603f3d011682016040523d82523d6000602084013e61230a565b606091505b50915061232390508161231e886020613b71565b613272565b604051630667f9d760e41b815290925060009150600080516020613d7b8339815191529063667f9d709061235d908b90879060040161389d565b6020604051808303816000875af115801561237c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123a09190613a6d565b90508082146123c15760405162461bcd60e51b8152600401610cbd90613b90565b6040516370ca10bb60e01b8152600080516020613d7b833981519152906370ca10bb906123f6908b9087908e90600401613c2b565b600060405180830381600087803b15801561241057600080fd5b505af1158015612424573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff1916905561245760028b0160006132ef565b896004016000905550505050505050505050565b600080516020613d7b8339815191523b1561255357604051600090600080516020613d7b833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc4906124d49083906519985a5b195960d21b90600190602001613c2b565b60408051601f19818403018152908290526124f29291602001613ad7565b60408051601f198184030181529082905261250c91613aa3565b6000604051808303816000865af19150503d8060008114612549576040519150601f19603f3d011682016040523d82523d6000602084013e61254e565b606091505b505050505b6000805461ff001916610100179055565b60606000825160206125769190613b71565b67ffffffffffffffff81111561258e5761258e613467565b6040519080825280601f01601f1916602001820160405280156125b8576020820181803683370190505b50905060005b8351811015610cc65760008482815181106125db576125db613c4c565b6020026020010151905080826020026020018401525080806125fc90613c62565b9150506125be565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b94938793919290919083018282801561267457602002820191906000526020600020905b815481526020019060010190808311612660575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051959650949193506126be92508591879101613b37565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161561275a576001600160a01b0384166000908152602087815260408083206001600160e01b0319871684528252808320905190929161272a918591879101613b37565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b60008361276683612564565b604051602001612777929190613ad7565b6040516020818303038152906040529050600080516020613d9b83398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156127d457600080fd5b505af11580156127e8573d6000803e3d6000fd5b50505050600080866001600160a01b0316836040516128079190613aa3565b600060405180830381855afa9150503d8060008114612842576040519150601f19603f3d011682016040523d82523d6000602084013e612847565b606091505b50915061285b90508161231e876020613b71565b6040516365bc948160e01b81526001600160a01b038916600482015290925060009150600080516020613d7b833981519152906365bc9481906024016000604051808303816000875af11580156128b6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526128de9190810190613cf0565b5090508051600103612b85576000600080516020613d9b83398151915260001c6001600160a01b031663667f9d70898460008151811061292057612920613c4c565b60200260200101516040518363ffffffff1660e01b815260040161294592919061389d565b6020604051808303816000875af1158015612964573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129889190613a6d565b9050806129e6577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a588836000815181106129c4576129c4613c4c565b602002602001015160001c6040516129dd92919061389d565b60405180910390a15b808314612a055760405162461bcd60e51b8152600401610cbd90613b90565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed88888789604051602001612a3b929190613b37565b6040516020818303038152906040528051906020012085600081518110612a6457612a64613c4c565b602002602001015160001c604051612a7f9493929190613d4a565b60405180910390a181600081518110612a9a57612a9a613c4c565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c1683528452808220905192939092612ae3918a918c9101613b37565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c16855282528284209251909391612b4b918a918c9101613b37565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff1916911515919091179055506130fd565b60018151111561308d5760005b8151811015613087576000600080516020613d9b83398151915260001c6001600160a01b031663667f9d708a858581518110612bd057612bd0613c4c565b60200260200101516040518363ffffffff1660e01b8152600401612bf592919061389d565b6020604051808303816000875af1158015612c14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c389190613a6d565b905080612c95577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a589848481518110612c7357612c73613c4c565b602002602001015160001c604051612c8c92919061389d565b60405180910390a15b600080516020613d9b83398151915260001c6001600160a01b03166370ca10bb8a858581518110612cc857612cc8613c4c565b602002602001015161133760f01b6040518463ffffffff1660e01b8152600401612cf493929190613c2b565b600060405180830381600087803b158015612d0e57600080fd5b505af1158015612d22573d6000803e3d6000fd5b50505050600060608a6001600160a01b031687604051612d429190613aa3565b600060405180830381855afa9150503d8060008114612d7d576040519150601f19603f3d011682016040523d82523d6000602084013e612d82565b606091505b509092509050612d978161231e8b6020613b71565b9550818015612daa575061133760f01b86145b15612fe5577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001612de5929190613b37565b60405160208183030381529060405280519060200120888881518110612e0d57612e0d613c4c565b602002602001015160001c604051612e289493929190613d4a565b60405180910390a1848481518110612e4257612e42613c4c565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f1683528452808220905192939092612e8b918d918f9101613b37565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c604051602001612f16929190613b37565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff021916908315150217905550600080516020613d9b83398151915260001c6001600160a01b03166370ca10bb8c878781518110612f8457612f84613c4c565b6020026020010151866040518463ffffffff1660e01b8152600401612fab93929190613c2b565b600060405180830381600087803b158015612fc557600080fd5b505af1158015612fd9573d6000803e3d6000fd5b50505050505050613087565b600080516020613d9b83398151915260001c6001600160a01b03166370ca10bb8c87878151811061301857613018613c4c565b6020026020010151866040518463ffffffff1660e01b815260040161303f93929190613c2b565b600060405180830381600087803b15801561305957600080fd5b505af115801561306d573d6000803e3d6000fd5b50505050505050808061307f90613c62565b915050612b92565b506130fd565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e6064820152608401610cbd565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905190929161313f9188918a9101613b37565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166131cc5760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b6064820152608401610cbd565b6005890180546001600160a01b031916905560038901805463ffffffff191690556131fb60028a0160006132ef565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a1684528252808320905190929161323f9188918a9101613b37565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b6000806000602085511161328757845161328a565b60205b905060005b818110156132e5576132a2816008613b71565b866132ad8388613abf565b815181106132bd576132bd613c4c565b01602001516001600160f81b031916901c9290921791806132dd81613c62565b91505061328f565b5090949350505050565b508054600082559060005260206000209081019061330d9190613310565b50565b5b808211156133255760008155600101613311565b5090565b6001600160a01b038116811461330d57600080fd5b60008060008060008060c0878903121561335757600080fd5b863561336281613329565b9550602087013561337281613329565b9450604087013561338281613329565b959894975094956060810135955060808101359460a0909101359350915050565b600080604083850312156133b657600080fd5b82356133c181613329565b946020939093013593505050565b6000602082840312156133e157600080fd5b81356133ec81613329565b9392505050565b600080600080600060a0868803121561340b57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b6000806040838503121561344157600080fd5b823561344c81613329565b9150602083013561345c81613329565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156134a6576134a6613467565b604052919050565b600067ffffffffffffffff8211156134c8576134c8613467565b50601f01601f191660200190565b60006134e96134e4846134ae565b61347d565b90508281528383830111156134fd57600080fd5b828260208301376000602084830101529392505050565b600082601f83011261352557600080fd5b6133ec838335602085016134d6565b6000806040838503121561354757600080fd5b823567ffffffffffffffff8082111561355f57600080fd5b61356b86838701613514565b9350602085013591508082111561358157600080fd5b508301601f8101851361359357600080fd5b6135a2858235602084016134d6565b9150509250929050565b6000602082840312156135be57600080fd5b5035919050565b60008060008060008060c087890312156135de57600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b60008060006060848603121561361d57600080fd5b833561362881613329565b9250602084013561363881613329565b929592945050506040919091013590565b6000610120828403121561167257600080fd5b60008082840361016081121561367157600080fd5b61367b8585613649565b9250604061011f198201121561369057600080fd5b50610120830190509250929050565b801515811461330d57600080fd5b6000602082840312156136bf57600080fd5b81356133ec8161369f565b600061012082840312156136dd57600080fd5b6133ec8383613649565b600080600080608085870312156136fd57600080fd5b843561370881613329565b9350602085013561371881613329565b925060408501359150606085013561372f8161369f565b939692955090935050565b60006020828403121561374c57600080fd5b813567ffffffffffffffff81111561376357600080fd5b61376f84828501613514565b949350505050565b60008060008060008060c0878903121561379057600080fd5b863561379b81613329565b955060208701356137ab81613329565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600080600080608085870312156137e657600080fd5b5050823594602084013594506040840135936060013592509050565b600080600080600080600060e0888a03121561381d57600080fd5b873561382881613329565b9650602088013561383881613329565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b60005b838110156139155781810151838201526020016138fd565b83811115611e825750506000910152565b6000815180845261393e8160208601602086016138fa565b601f01601f19169290920160200192915050565b6020815260006133ec6020830184613926565b60006020828403121561397757600080fd5b815167ffffffffffffffff81111561398e57600080fd5b8201601f8101841361399f57600080fd5b80516139ad6134e4826134ae565b8181528560208385010111156139c257600080fd5b611afd8260208301602086016138fa565b600083516139e58184602088016138fa565b8351908301906139f98183602088016138fa565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600082821015613a2a57613a2a613a02565b500390565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b600060208284031215613a7f57600080fd5b5051919050565b600060208284031215613a9857600080fd5b81516133ec8161369f565b60008251613ab58184602087016138fa565b9190910192915050565b60008219821115613ad257613ad2613a02565b500190565b6001600160e01b0319831681528151600090613afa8160048501602087016138fa565b919091016004019392505050565b60408152600560408201526422b93937b960d91b60608201526080602082015260006133ec6080830184613926565b825160009082906020808701845b83811015613b6157815185529382019390820190600101613b45565b5050948252509092019392505050565b6000816000190483118215151615613b8b57613b8b613a02565b500290565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b6001600160a01b039390931683526020830191909152604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060018201613c7457613c74613a02565b5060010190565b600082601f830112613c8c57600080fd5b8151602067ffffffffffffffff821115613ca857613ca8613467565b8160051b613cb782820161347d565b9283528481018201928281019087851115613cd157600080fd5b83870192505b848310156112e157825182529183019190830190613cd7565b60008060408385031215613d0357600080fd5b825167ffffffffffffffff80821115613d1b57600080fd5b613d2786838701613c7b565b93506020850151915080821115613d3d57600080fd5b506135a285828601613c7b565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe0000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220f9422ffe2dc0cea5614cee05acbced5148d638eb509e3a6adff8d2274a16877b64736f6c634300080e00336101406040523480156200001257600080fd5b5060405162001bb838038062001bb88339810160408190526200003591620002c1565b82828180604051806040016040528060018152602001603160f81b815250848481600390805190602001906200006d9291906200014e565b508051620000839060049060208401906200014e565b5050825160208085019190912083518483012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c0019052805194019390932091935091906080523060c05261012052505050506001600160a01b03969096166000908152600860205260409020805460ff19166001179055505060ff1660095550620003a1915050565b8280546200015c9062000365565b90600052602060002090601f016020900481019282620001805760008555620001cb565b82601f106200019b57805160ff1916838001178555620001cb565b82800160010185558215620001cb579182015b82811115620001cb578251825591602001919060010190620001ae565b50620001d9929150620001dd565b5090565b5b80821115620001d95760008155600101620001de565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200021c57600080fd5b81516001600160401b0380821115620002395762000239620001f4565b604051601f8301601f19908116603f01168101908282118183101715620002645762000264620001f4565b816040528381526020925086838588010111156200028157600080fd5b600091505b83821015620002a5578582018301518183018401529082019062000286565b83821115620002b75760008385830101525b9695505050505050565b60008060008060808587031215620002d857600080fd5b84516001600160a01b0381168114620002f057600080fd5b60208601519094506001600160401b03808211156200030e57600080fd5b6200031c888389016200020a565b945060408701519150808211156200033357600080fd5b5062000342878288016200020a565b925050606085015160ff811681146200035a57600080fd5b939692955090935050565b600181811c908216806200037a57607f821691505b6020821081036200039b57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516117c7620003f160003960006109290152600061097801526000610953015260006108ac015260006108d60152600061090001526117c76000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806340c10f19116100c357806395d89b411161007c57806395d89b41146102c45780639dc29fac146102cc578063a457c2d7146102df578063a9059cbb146102f2578063d505accf14610305578063dd62ed3e1461031857600080fd5b806340c10f1914610236578063704802751461024957806370a082311461025c5780637a6d69b4146102855780637ecebe00146102a85780638ea2da7d146102bb57600080fd5b80631e7be210116101155780631e7be210146101cd57806323b872dd146101e057806325db769e146101f3578063313ce567146102065780633644e5151461021b578063395093511461022357600080fd5b806306fdde0314610152578063095ea7b31461017057806316c02129146101935780631785f53c146101a857806318160ddd146101bb575b600080fd5b61015a61032b565b604051610167919061140b565b60405180910390f35b61018361017e36600461147c565b6103bd565b6040519015158152602001610167565b6101a66101a13660046114a6565b610444565b005b6101a66101b63660046114a6565b610477565b6002545b604051908152602001610167565b6101a66101db3660046114a6565b6104a0565b6101836101ee3660046114c8565b6104cd565b6101bf610201366004611504565b610589565b60095460405160ff9091168152602001610167565b6101bf6105af565b61018361023136600461147c565b6105be565b6101a661024436600461147c565b6105ea565b6101a66102573660046114a6565b610600565b6101bf61026a3660046114a6565b6001600160a01b031660009081526020819052604090205490565b6101836102933660046114a6565b60076020526000908152604090205460ff1681565b6101bf6102b63660046114a6565b61062c565b6101bf60095481565b61015a61064a565b6101a66102da36600461147c565b610659565b6101836102ed36600461147c565b61066b565b61018361030036600461147c565b6106f1565b6101a661031336600461151d565b610766565b6101bf610326366004611590565b6107f6565b60606003805461033a906115c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610366906115c3565b80156103b35780601f10610388576101008083540402835291602001916103b3565b820191906000526020600020905b81548152906001019060200180831161039657829003601f168201915b5050505050905090565b6001600160a01b038216600090815260076020526040812054839060ff16156104015760405162461bcd60e51b81526004016103f8906115f7565b60405180910390fd5b3360008181526007602052604090205460ff16156104315760405162461bcd60e51b81526004016103f8906115f7565b61043b8585610821565b95945050505050565b61044c61082f565b610474816001600160a01b03166000908152600760205260409020805460ff19166001179055565b50565b61047f61082f565b6001600160a01b03166000908152600860205260409020805460ff19169055565b6104a861082f565b610474816001600160a01b03166000908152600760205260409020805460ff19169055565b6001600160a01b038316600090815260076020526040812054849060ff16156105085760405162461bcd60e51b81526004016103f8906115f7565b6001600160a01b038416600090815260076020526040902054849060ff16156105435760405162461bcd60e51b81526004016103f8906115f7565b3360008181526007602052604090205460ff16156105735760405162461bcd60e51b81526004016103f8906115f7565b61057e878787610886565b979650505050505050565b600061059460095490565b61059f90600a61171e565b6105a9908361172d565b92915050565b60006105b961089f565b905090565b6000336105e08185856105d183836107f6565b6105db919061174c565b6109c6565b5060019392505050565b6105f261082f565b6105fc8282610aeb565b5050565b61060861082f565b6001600160a01b03166000908152600860205260409020805460ff19166001179055565b6001600160a01b0381166000908152600560205260408120546105a9565b60606004805461033a906115c3565b61066161082f565b6105fc8282610bca565b6000338161067982866107f6565b9050838110156106d95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103f8565b6106e682868684036109c6565b506001949350505050565b6001600160a01b038216600090815260076020526040812054839060ff161561072c5760405162461bcd60e51b81526004016103f8906115f7565b3360008181526007602052604090205460ff161561075c5760405162461bcd60e51b81526004016103f8906115f7565b61043b8585610d10565b6001600160a01b038716600090815260076020526040902054879060ff16156107a15760405162461bcd60e51b81526004016103f8906115f7565b6001600160a01b038716600090815260076020526040902054879060ff16156107dc5760405162461bcd60e51b81526004016103f8906115f7565b6107eb89898989898989610d1e565b505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000336105e08185856109c6565b3360009081526008602052604090205460ff166108845760405162461bcd60e51b815260206004820152601360248201527254657374546f6b656e2f61646d696e4f6e6c7960681b60448201526064016103f8565b565b600033610894858285610e82565b6106e6858585610efc565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156108f857507f000000000000000000000000000000000000000000000000000000000000000046145b1561092257507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6001600160a01b038316610a285760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103f8565b6001600160a01b038216610a895760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103f8565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038216610b415760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103f8565b8060026000828254610b53919061174c565b90915550506001600160a01b03821660009081526020819052604081208054839290610b8090849061174c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610c2a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103f8565b6001600160a01b03821660009081526020819052604090205481811015610c9e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103f8565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610ccd908490611764565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610ade565b6000336105e0818585610efc565b83421115610d6e5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016103f8565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610d9d8c6110ca565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610df8826110f2565b90506000610e0882878787611140565b9050896001600160a01b0316816001600160a01b031614610e6b5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016103f8565b610e768a8a8a6109c6565b50505050505050505050565b6000610e8e84846107f6565b90506000198114610ef65781811015610ee95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103f8565b610ef684848484036109c6565b50505050565b6001600160a01b038316610f605760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103f8565b6001600160a01b038216610fc25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103f8565b6001600160a01b0383166000908152602081905260409020548181101561103a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103f8565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061107190849061174c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110bd91815260200190565b60405180910390a3610ef6565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b60006105a96110ff61089f565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061115187878787611168565b9150915061115e81611255565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561119f575060009050600361124c565b8460ff16601b141580156111b757508460ff16601c14155b156111c8575060009050600461124c565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561121c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166112455760006001925092505061124c565b9150600090505b94509492505050565b60008160048111156112695761126961177b565b036112715750565b60018160048111156112855761128561177b565b036112d25760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016103f8565b60028160048111156112e6576112e661177b565b036113335760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103f8565b60038160048111156113475761134761177b565b0361139f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016103f8565b60048160048111156113b3576113b361177b565b036104745760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016103f8565b600060208083528351808285015260005b818110156114385785810183015185820160400152820161141c565b8181111561144a576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461147757600080fd5b919050565b6000806040838503121561148f57600080fd5b61149883611460565b946020939093013593505050565b6000602082840312156114b857600080fd5b6114c182611460565b9392505050565b6000806000606084860312156114dd57600080fd5b6114e684611460565b92506114f460208501611460565b9150604084013590509250925092565b60006020828403121561151657600080fd5b5035919050565b600080600080600080600060e0888a03121561153857600080fd5b61154188611460565b965061154f60208901611460565b95506040880135945060608801359350608088013560ff8116811461157357600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156115a357600080fd5b6115ac83611460565b91506115ba60208401611460565b90509250929050565b600181811c908216806115d757607f821691505b6020821081036110ec57634e487b7160e01b600052602260045260246000fd5b602080825260139082015272115490cc8c10930bd09b1858dadb1a5cdd1959606a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561167557816000190482111561165b5761165b611624565b8085161561166857918102915b93841c939080029061163f565b509250929050565b60008261168c575060016105a9565b81611699575060006105a9565b81600181146116af57600281146116b9576116d5565b60019150506105a9565b60ff8411156116ca576116ca611624565b50506001821b6105a9565b5060208310610133831016604e8410600b84101617156116f8575081810a6105a9565b611702838361163a565b806000190482111561171657611716611624565b029392505050565b60006114c160ff84168361167d565b600081600019048311821515161561174757611747611624565b500290565b6000821982111561175f5761175f611624565b500190565b60008282101561177657611776611624565b500390565b634e487b7160e01b600052602160045260246000fdfea26469706673582212209bdbfaec88bd6f48fcba6d4557d696967a35e239ba335fd932eea09261da1b0864736f6c634300080e003341304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50496e636f727265637420666f7277617264656420616d6f756e7420746f20696e697469616c2074616b65720000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d587734843819064f2153f96c808d1aeacaceccfa595ec4b9ed484c4bff687f7c280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583497465726174697665206d61726b6574206f7264657220776173206e6f7420636f6d706c65746554616b652066756e6374696f6e20646964206e6f742072657475726e2066756e647354616b652066756e6374696f6e20646964206e6f742072657475726e20626f756e7479496e636f72726563742077616e747320666f72206269642072657374696e67206f7264657252657374696e67206f66666572206661696c656420746f206265207075626c6973686564206f6e206d616e67726f7665696e76616c696420616d6f756e74206f662072656c65617365642070726f766973696f6e496e636f727265637420726563656976656420616d6f756e7420666f722073656c6c65722074616b6572885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d496e636f727265637420676976657320666f72206269642072657374696e67206f72646572496e636f7272656374206f66666572206c6973742061667465722072657472616374496e636f7272656374207061727469616c2066696c6c206f662074616b6572206f72646572a2646970667358221220d873b275398b65dd12eb03628fff211d5bddc9581b9e402b8bf8636f9f67e13a64736f6c634300080e0033",
    "sourceMap": "1572:26:101:-:0;;;-1:-1:-1;;171:28:102;;;;;-1:-1:-1;624:20:77;;;;2159:34;;589:19528:88;1763:237:76;;;1828:64;;;;;-1:-1:-1;;;1828:64:76;;;;1572:26:101;1828:64:76;;;;;;;;-1:-1:-1;;;1828:64:76;;;;1888:2;-1:-1:-1;1828:64:76;;;-1:-1:-1;1763:237:76;;;1907:65;;;;;-1:-1:-1;;;1907:65:76;;1828:64;1907:65;;;;-1:-1:-1;1907:65:76;;;;;-1:-1:-1;;;1907:65:76;;-1:-1:-1;1907:65:76;;;;-1:-1:-1;1907:65:76;-1:-1:-1;1763:237:76;-1:-1:-1;1763:237:76;;;;1729:271;;;-1:-1:-1;;1729:271:76;;;589:19528:88;;1572:26:101;;1729:271:76;;;;;;1828:64;1729:271;:::i;:::-;-1:-1:-1;1729:271:76;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1729:271:76;;;;;;;;;;;;-1:-1:-1;;1729:271:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1729:271:76;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1729:271:76;;;;;;;;;;;;-1:-1:-1;;1729:271:76;;;;;;;;;;;;;;;;;;;;;;589:19528:88;;;;;;;;;-1:-1:-1;2055:32:76;;;-1:-1:-1;;;2055:32:76;;2064:9;2055:32;;;226:51:107;293:18;;;286:30;;;;352:1;332:18;;;325:29;-1:-1:-1;;;370:18:107;;;363:39;251:64:102;;2055:8:76;;419:19:107;;2055:32:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2093:32:76;;;-1:-1:-1;;;2093:32:76;;2104:4;2093:32;;;669:51:107;736:18;;;729:30;;;795:2;775:18;;;768:30;-1:-1:-1;;;814:18:107;;;807:41;2093:32:76;;251:64:102;;-1:-1:-1;2093:8:76;;-1:-1:-1;865:19:107;;;;;-1:-1:-1;;2093:32:76;;;;;;;-1:-1:-1;251:64:102;2093:32:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;589:19528:88;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;589:19528:88;;;-1:-1:-1;589:19528:88;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;895:380:107;974:1;970:12;;;;1017;;;1038:61;;1092:4;1084:6;1080:17;1070:27;;1038:61;1145:2;1137:6;1134:14;1114:18;1111:38;1108:161;;1191:10;1186:3;1182:20;1179:1;1172:31;1226:4;1223:1;1216:15;1254:4;1251:1;1244:15;1108:161;;895:380;;;:::o;:::-;589:19528:88;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405260043610620002c25760003560e01c806370aa3a5d1162000177578063bbab0fac11620000d1578063d82555f11162000084578063d82555f1146200081e578063e9a79a7b1462000843578063ea14b5c31462000868578063f87c8c0f146200088d578063f8ccbf4714620008a5578063fa7626d414620008c757600080fd5b8063bbab0fac146200074d578063bfdc35881462000772578063c88a5e6d1462000797578063cc27348314620007bc578063d06d822914620007d4578063d56a22f014620007f957600080fd5b806398ec3a97116200012a57806398ec3a9714620006785780639a8325a01462000690578063af9bbe5f14620006b5578063b84e3eda14620006da578063b9c071b414620006ff578063ba414fa6146200072457600080fd5b806370aa3a5d14620005db5780637508982214620005f3578063830ca968146200060b578063875f859714620006235780638c004832146200063b57806397754ae9146200065357600080fd5b80633336a63f11620002295780635c36d7f611620001dc5780635c36d7f614620005155780635d35978d146200052d57806363dee52014620005455780636bce989b146200055d5780636cc12a2414620005825780636f59707514620005b657600080fd5b80633336a63f14620004515780633a76846314620004765780633bf82db1146200049b578063400efb2914620004c0578063521606d214620004d857806354668b9d14620004fd57600080fd5b8063108554f21162000282578063108554f2146200038057806311d70a7d14620003a5578063233240ee14620003bd57806329a9e30014620003e257806329ce9dde14620004075780632d6c17a3146200042c57600080fd5b80623a668514620002cf578063026f742314620002e95780630645f2be14620003015780630a9254e414620003435780630b3d8c42146200035b57600080fd5b36620002ca57005b600080fd5b348015620002dc57600080fd5b50620002e7620008e3565b005b348015620002f657600080fd5b50620002e762000b2e565b3480156200030e57600080fd5b50620003266200032036600462007fe4565b62000efb565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156200035057600080fd5b50620002e762001025565b3480156200036857600080fd5b50620003266200037a3660046200801a565b6200200e565b3480156200038d57600080fd5b50620002e76200039f3660046200806c565b62002031565b348015620003b257600080fd5b50620002e76200210a565b348015620003ca57600080fd5b50620002e7620003dc3660046200809b565b62002765565b348015620003ef57600080fd5b50620002e762000401366004620080bb565b62002841565b3480156200041457600080fd5b506200032662000426366004620081d4565b620028e5565b3480156200043957600080fd5b50620002e76200044b36600462008254565b62002a15565b3480156200045e57600080fd5b5062000326620004703660046200826e565b62002a55565b3480156200048357600080fd5b506200032660008051602062023e9983398151915281565b348015620004a857600080fd5b50620002e7620004ba366004620082d8565b62002b93565b348015620004cd57600080fd5b50620002e762002c63565b348015620004e557600080fd5b50620002e7620004f736600462008345565b62002ffb565b3480156200050a57600080fd5b50620002e7620030c0565b3480156200052257600080fd5b50620002e7620031e3565b3480156200053a57600080fd5b50620002e76200356d565b3480156200055257600080fd5b50620002e762003dd1565b3480156200056a57600080fd5b50620002e76200057c366004620082d8565b62003fc9565b3480156200058f57600080fd5b50620005a7620005a1366004620083df565b62003fd8565b6040519081526020016200033a565b348015620005c357600080fd5b50620002e7620005d53660046200809b565b62004007565b348015620005e857600080fd5b50620002e7620040b1565b3480156200060057600080fd5b50620002e762004543565b3480156200061857600080fd5b50620002e76200467e565b3480156200063057600080fd5b50620002e762004826565b3480156200064857600080fd5b506200032662004975565b3480156200066057600080fd5b50620002e76200067236600462008417565b62004988565b3480156200068557600080fd5b50620002e762004bc9565b3480156200069d57600080fd5b5062000326620006af36600462008471565b62005094565b348015620006c257600080fd5b50620002e7620006d4366004620082d8565b62005196565b348015620006e757600080fd5b50620002e7620006f936600462008345565b62005236565b3480156200070c57600080fd5b50620002e76200071e36600462008254565b620052e1565b3480156200073157600080fd5b506200073c62005302565b60405190151581526020016200033a565b3480156200075a57600080fd5b50620003266200076c366004620080bb565b62005433565b3480156200077f57600080fd5b5062000326620007913660046200826e565b620054a4565b348015620007a457600080fd5b50620002e7620007b63660046200806c565b620054cd565b348015620007c957600080fd5b50620002e762005503565b348015620007e157600080fd5b50620002e7620007f3366004620080bb565b62005b5a565b3480156200080657600080fd5b50620005a7620008183660046200806c565b62005bfe565b3480156200082b57600080fd5b50620002e76200083d366004620082d8565b62005c8c565b3480156200085057600080fd5b50620002e7620008623660046200806c565b62005d72565b3480156200087557600080fd5b506200032662000887366004620080bb565b62005e18565b3480156200089a57600080fd5b50620002e762005e28565b348015620008b257600080fd5b506000546200073c9062010000900460ff1681565b348015620008d457600080fd5b506000546200073c9060ff1681565b6040805161018081018252600c546001600160a01b039081168252600d541660208201819052600092820183905260608201839052671bc16d674ec800006080830181905260a083015267039bb49f599a000060c0830181905260e08301526101008201839052610120820183905262632ea061014083015261016082019290925290620009719062005faa565b60165460405167039bb49f599a000081526001600160a01b039091169030907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3600d54620009d4906001600160a01b031662005faa565b6016546040516701cdda4faccd0000815230916001600160a01b0316907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3601654604051636a1c7d0560e01b81526000916001600160a01b031690636a1c7d059067016345785d8a00009062000a5b908690600401620084aa565b60a06040518083038185885af115801562000a7a573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062000aa1919062008569565b8051600c5491925062000af89162000ad8906001600160a01b03165b600d546001600160a01b0316670de0b6b3a764000062006002565b6040518060600160405280602581526020016202406f60259139620060ba565b62000b2a81602001516701cdda4faccd00006040518060600160405280602581526020016202406f60259139620060ba565b5050565b6040805161018081018252600c546001600160a01b039081168252600d5481166020830152600082840181905260608301819052671bc16d674ec800006080840181905260a084015267039bb49f599a000060c0840181905260e08401526001610100840152610120830181905262632ea061014084015261016083018190526016549351636a1c7d0560e01b815292939092911690636a1c7d059067016345785d8a00009062000be4908690600401620084aa565b60a06040518083038185885af115801562000c03573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062000c2a919062008569565b90506000601660009054906101000a90046001600160a01b03166001600160a01b031663f887ea406040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000c82573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ca89190620085dd565b6001600160a01b03166332563bc7306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562000cfc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d229190620085fd565b601654600d54600c54608086015160405163ad97db1b60e01b81529495506000946001600160a01b039485169463ad97db1b9462000d6d949082169391169160019060040162008617565b6020604051808303816000875af115801562000d8d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000db39190620085fd565b905062000ef5601660009054906101000a90046001600160a01b03166001600160a01b031663f887ea406040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000e0d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e339190620085dd565b6001600160a01b03166332563bc7306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562000e87573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ead9190620085fd565b62000eb9838562008656565b6040518060400160405280601c81526020017f496e636f72726563742070726f766973696f6e20726563656976656400000000815250620060ba565b50505050565b6000811562000f4d57306028621e848060405162000f199062007f3e565b62000f279392919062008671565b604051809103906000f08015801562000f44573d6000803e3d6000fd5b50905062000f91565b306028621e848060405162000f629062007f4c565b62000f709392919062008671565b604051809103906000f08015801562000f8d573d6000803e3d6000fd5b5090505b60008051602062023e9983398151915263c657c71882604080516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260086044820152674d616e67726f766560c01b6064820152608401600060405180830381600087803b1580156200100757600080fd5b505af11580156200101c573d6000803e3d6000fd5b50505050919050565b6200102f620060f6565b600b54600c54600d5460405163dc7e98df60e01b81526001600160a01b039384169363dc7e98df936200106f9390821692911690601e9060040162008692565b600060405180830381600087803b1580156200108a57600080fd5b505af11580156200109f573d6000803e3d6000fd5b5050600b54600d546001600160a01b03918216935063dc7e98df925016600c546001600160a01b0316601e6040518463ffffffff1660e01b8152600401620010ea9392919062008692565b600060405180830381600087803b1580156200110557600080fd5b505af11580156200111a573d6000803e3d6000fd5b5050600b546001600160a01b03169150636817031b9050816040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b1580156200117457600080fd5b505af115801562001189573d6000803e3d6000fd5b5050600b546001600160a01b03169150309050604051620011aa9062007f5a565b620011b7929190620086b6565b604051809103906000f080158015620011d4573d6000803e3d6000fd5b50601680546001600160a01b0319166001600160a01b03928316908117909155600c5460405163aefe840360e01b8152919263aefe84039262001222929091169060001990600401620086d0565b600060405180830381600087803b1580156200123d57600080fd5b505af115801562001252573d6000803e3d6000fd5b5050601654600d5460405163aefe840360e01b81526001600160a01b03928316945063aefe8403935062001291929091169060001990600401620086d0565b600060405180830381600087803b158015620012ac57600080fd5b505af1158015620012c1573d6000803e3d6000fd5b5050601654600c5460405163f259cd2760e01b81526001600160a01b0391821660048201529116925063f259cd279150602401600060405180830381600087803b1580156200130f57600080fd5b505af115801562001324573d6000803e3d6000fd5b5050601654600d5460405163f259cd2760e01b81526001600160a01b0391821660048201529116925063f259cd279150602401600060405180830381600087803b1580156200137257600080fd5b505af115801562001387573d6000803e3d6000fd5b5050600c54620013af92506001600160a01b031690505b305b678ac7230489e8000062003fc9565b600d54620013c6906001600160a01b03166200139e565b600d54601654604080516303e21fa960e61b815290516001600160a01b039384169363095ea7b3936200144b9391169163f887ea40916004808201926020929091908290030181865afa15801562001422573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014489190620085dd565b90565b678ac7230489e800006040518363ffffffff1660e01b815260040162001473929190620086d0565b6020604051808303816000875af115801562001493573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014b99190620086e9565b50600c54601654604080516303e21fa960e61b815290516001600160a01b039384169363095ea7b393620015169391169163f887ea40916004808201926020929091908290030181865afa15801562001422573d6000803e3d6000fd5b678ac7230489e800006040518363ffffffff1660e01b81526004016200153e929190620086d0565b6020604051808303816000875af11580156200155e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015849190620086e9565b50600d54620015cb906001600160a01b0316600c546001600160a01b03166040518060400160405280600a81526020016939b2b63616ba30b5b2b960b11b81525062002a55565b601980546001600160a01b0319166001600160a01b03928316179055600c546200160291166019546001600160a01b0316620013a0565b60195460008051602062023e998339815191529063ca669fa7906001600160a01b03166040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b1580156200166757600080fd5b505af11580156200167c573d6000803e3d6000fd5b5050600c54600b5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b39350620016c19290911690678ac7230489e8000090600401620086d0565b6020604051808303816000875af1158015620016e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017079190620086e9565b5060195460008051602062023e998339815191529063ca669fa7906001600160a01b03166040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b1580156200176d57600080fd5b505af115801562001782573d6000803e3d6000fd5b5050600d54600b5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b39350620017c79290911690678ac7230489e8000090600401620086d0565b6020604051808303816000875af1158015620017e7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200180d9190620086e9565b50600d5462001853906001600160a01b0316600c546001600160a01b0316604051806040016040528060098152602001683134b216b6b0b5b2b960b91b815250620054a4565b601780546001600160a01b0319166001600160a01b0392909216918217905560405163c88a5e6d60e01b815260008051602062023e998339815191529163c88a5e6d91620018af9190678ac7230489e8000090600401620086d0565b600060405180830381600087803b158015620018ca57600080fd5b505af1158015620018df573d6000803e3d6000fd5b5050600c546200192992506001600160a01b03169050600d546001600160a01b03166040518060400160405280600981526020016830b9b596b6b0b5b2b960b91b815250620054a4565b601880546001600160a01b0319166001600160a01b0392909216918217905560405163c88a5e6d60e01b815260008051602062023e998339815191529163c88a5e6d91620019859190678ac7230489e8000090600401620086d0565b600060405180830381600087803b158015620019a057600080fd5b505af1158015620019b5573d6000803e3d6000fd5b505060175460008051602062023e99833981519152925063ca669fa791506001600160a01b03166040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b15801562001a1e57600080fd5b505af115801562001a33573d6000803e3d6000fd5b5050600d54600b5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b3935062001a789290911690678ac7230489e8000090600401620086d0565b6020604051808303816000875af115801562001a98573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001abe9190620086e9565b50600d5462001ae2906001600160a01b03166017546001600160a01b0316620013a0565b600c5462001b05906001600160a01b03166018546001600160a01b0316620013a0565b60185460008051602062023e998339815191529063ca669fa7906001600160a01b03166040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b15801562001b6a57600080fd5b505af115801562001b7f573d6000803e3d6000fd5b5050600c54600b5460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b3935062001bc49290911690678ac7230489e8000090600401620086d0565b6020604051808303816000875af115801562001be4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c0a9190620086e9565b50601754604051637ec95ff360e01b8152670de0b6b3a7640000600482015267016345785d8a00006024820181905261c3506044830152600060648301819052608483015260a48201526001600160a01b0390911690637ec95ff39060c4016020604051808303816000875af115801562001c89573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001caf9190620085fd565b50601754604051637ec95ff360e01b8152670de0b6b3a76400006004820152670186cc6acd4b0000602482015261c3506044820152600060648201819052608482015267016345785d8a000060a48201526001600160a01b0390911690637ec95ff39060c4016020604051808303816000875af115801562001d35573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d5b9190620085fd565b50601754604051637ec95ff360e01b8152670de0b6b3a764000060048201526701aa535d3d0c0000602482015261c3506044820152600060648201819052608482015267016345785d8a000060a48201526001600160a01b0390911690637ec95ff39060c4016020604051808303816000875af115801562001de1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e079190620085fd565b50601854604051637ec95ff360e01b81526701cdda4faccd00006004820152670de0b6b3a7640000602482015261c3506044820152600060648201819052608482015267016345785d8a000060a48201526001600160a01b0390911690637ec95ff39060c4016020604051808303816000875af115801562001e8d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001eb39190620085fd565b50601854604051637ec95ff360e01b81526701f161421c8e00006004820152670de0b6b3a7640000602482015261c3506044820152600060648201819052608482015267016345785d8a000060a48201526001600160a01b0390911690637ec95ff39060c4016020604051808303816000875af115801562001f39573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001f5f9190620085fd565b50601854604051637ec95ff360e01b8152670214e8348c4f00006004820152670de0b6b3a7640000602482015261c3506044820152600060648201819052608482015267016345785d8a000060a48201526001600160a01b0390911690637ec95ff39060c4016020604051808303816000875af115801562001fe5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200200b9190620085fd565b50565b60006200201b8262000efb565b90506200202a8484836200635f565b9392505050565b60405163c88a5e6d60e01b815260008051602062023e998339815191529063c88a5e6d90620020679085908590600401620086d0565b600060405180830381600087803b1580156200208257600080fd5b505af115801562002097573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b038516600482015260008051602062023e9983398151915292506306447d5691506024015b600060405180830381600087803b158015620020ed57600080fd5b505af115801562002102573d6000803e3d6000fd5b505050505050565b6040805161018081018252600c546001600160a01b039081168252600d5481166020830152600082840181905260608301819052671bc16d674ec800006080840181905260a084015267039bb49f599a000060c0840181905260e08401526001610100840152610120830181905262632ea061014084015261016083018190526016549351636a1c7d0560e01b81529293674563918244f400009391921690636a1c7d05908490620021c1908790600401620084aa565b60a06040518083038185885af1158015620021e0573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062002207919062008569565b90506000601660009054906101000a90046001600160a01b03166001600160a01b031663f887ea406040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200225f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620022859190620085dd565b6001600160a01b03166332563bc7306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015620022d9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620022ff9190620085fd565b600d54601654604080516303e21fa960e61b815290519394506001600160a01b039283169363095ea7b3936200235c93169163f887ea409160048083019260209291908290030181865afa15801562001422573d6000803e3d6000fd5b60006040518363ffffffff1660e01b81526004016200237d929190620086d0565b6020604051808303816000875af11580156200239d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620023c39190620086e9565b50600c54601654604080516303e21fa960e61b815290516001600160a01b039384169363095ea7b393620024209391169163f887ea40916004808201926020929091908290030181865afa15801562001422573d6000803e3d6000fd5b60006040518363ffffffff1660e01b815260040162002441929190620086d0565b6020604051808303816000875af115801562002461573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620024879190620086e9565b50601954608083015160405163268e95b360e11b81526004810191909152600160248201526000916001600160a01b031690634d1d2b669060440160a0604051808303816000875af1158015620024e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002508919062008709565b50935050505062002552600082116040518060400160405280601881526020017f736e6970652073686f756c642068617665206661696c656400000000000000008152506200660b565b601654600d54600c54608086015160405163ad97db1b60e01b81526001600160a01b039485169463ad97db1b9462002597949082169391169160019060040162008617565b6020604051808303816000875af1158015620025b7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620025dd9190620085fd565b50601654604080516303e21fa960e61b815290516000926001600160a01b03169163f887ea409160048083019260209291908290030181865afa15801562002629573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200264f9190620085dd565b6001600160a01b03166332563bc7306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015620026a3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620026c99190620085fd565b90506000620026d9848362008755565b90506200271760008211604051806040016040528060158152602001742737903932b632b0b9b2b210383937bb34b9b4b7b760591b8152506200660b565b6200275c818660400151886200272e919062008755565b6200273a91906200876f565b600160405180606001604052806024815260200162023fba60249139620060ba565b50505050505050565b60405163c88a5e6d60e01b815260008051602062023e998339815191529063c88a5e6d906200279f908490600160801b90600401620086d0565b600060405180830381600087803b158015620027ba57600080fd5b505af1158015620027cf573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b038416600482015260008051602062023e99833981519152925063ca669fa791506024015b600060405180830381600087803b1580156200282557600080fd5b505af11580156200283a573d6000803e3d6000fd5b5050505050565b60405163c88a5e6d60e01b815260008051602062023e998339815191529063c88a5e6d906200287b908590600160801b90600401620086d0565b600060405180830381600087803b1580156200289657600080fd5b505af1158015620028ab573d6000803e3d6000fd5b50506040516323f2866760e11b815260008051602062023e9983398151915292506347e50cce9150620020d29085908590600401620086b6565b604051638d1cc92560e01b8152600090819060008051602062023e9983398151915290638d1cc925906200291e908790600401620087ef565b6000604051808303816000875af11580156200293e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200296891908101906200883a565b836040516020016200297c92919062008888565b60405160208183030381529060405290508051602082016000f091506001600160a01b03821662002a0e5760405162461bcd60e51b815260206004820152603160248201527f54657374206465706c6f79436f646528737472696e672c6279746573293a204460448201527032b83637bcb6b2b73a103330b4b632b21760791b60648201526084015b60405180910390fd5b5092915050565b60008051602062023e9983398151915263e5d6bf0262002a36834262008755565b6040518263ffffffff1660e01b81526004016200280a91815260200190565b600080600b60009054906101000a90046001600160a01b0316858560405162002a7e9062007f68565b62002a8c93929190620088bb565b604051809103906000f08015801562002aa9573d6000803e3d6000fd5b5060405163c88a5e6d60e01b815290915060008051602062023e998339815191529063c88a5e6d9062002aec90849068056bc75e2d6310000090600401620086d0565b600060405180830381600087803b15801562002b0757600080fd5b505af115801562002b1c573d6000803e3d6000fd5b50506040516318caf8e360e31b815260008051602062023e99833981519152925063c657c718915062002b569084908790600401620088de565b600060405180830381600087803b15801562002b7157600080fd5b505af115801562002b86573d6000803e3d6000fd5b5092979650505050505050565b60405163c88a5e6d60e01b815260008051602062023e998339815191529063c88a5e6d9062002bc99086908590600401620086d0565b600060405180830381600087803b15801562002be457600080fd5b505af115801562002bf9573d6000803e3d6000fd5b50506040516308b6ac0f60e31b815260008051602062023e9983398151915292506345b56078915062002c339086908690600401620086b6565b600060405180830381600087803b15801562002c4e57600080fd5b505af11580156200275c573d6000803e3d6000fd5b600d546000906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562002cbd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002ce39190620085fd565b600c549091506000906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562002d40573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d669190620085fd565b6040805161018081018252600c546001600160a01b039081168252600d5481166020830152600082840181905260608301819052670de0b6b3a76400006080840181905260a08401526701cdda4faccd000060c0840181905260e08401526001610100840152610120830181905262632ea061014084015261016083018190526016549351636a1c7d0560e01b8152949550919391921690636a1c7d059067016345785d8a00009062002e1e908690600401620084aa565b60a06040518083038185885af115801562002e3d573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062002e64919062008569565b600d5490915062002f36906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562002ec3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002ee99190620085fd565b602083015162002efa908762008755565b6040518060400160405280601781526020017f696e636f72726563742071756f74652062616c616e6365000000000000000000815250620060ba565b600c5462000ef5906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562002f92573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002fb89190620085fd565b825162002fc6908662008656565b60405180604001604052806016815260200175696e636f727265637420626173652062616c616e636560501b815250620060ba565b604080516020810190915260008082525b8251811015620030b457816200303e84838151811062003030576200303062008904565b602002602001015162006644565b6040516020016200305192919062008888565b60405160208183030381529060405291506001835162003072919062008755565b8110156200309f57816040516020016200308d91906200891a565b60405160208183030381529060405291505b80620030ab8162008942565b9150506200300c565b5062000b2a8162006731565b600b5460408051635aa6e67560e01b81529051620031e1926001600160a01b031691635aa6e6759160048083019260209291908290030181865afa1580156200310d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620031339190620085dd565b601660009054906101000a90046001600160a01b03166001600160a01b031663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa15801562003187573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620031ad9190620085dd565b60405180604001604052806015815260200174496e76616c69642061646d696e206164647265737360581b81525062006778565b565b601854604051637a943a3760e01b8152600160048201526001600160a01b0390911690637a943a3790602401600060405180830381600087803b1580156200322a57600080fd5b505af11580156200323f573d6000803e3d6000fd5b5050600b546200325b92506001600160a01b0316905062005faa565b601654600d54600c546001600160a01b039283169291821691167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47620032a18262000abd565b600c546701cdda4faccd000090600090620032db906001600160a01b03165b600d546001600160a01b0316670de0b6b3a7640000620067c6565b60408051948552602085019390935291830152606082015260800160405180910390a4600b5462003315906001600160a01b031662005faa565b601654600d54600c546001600160a01b039283169291821691167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec476200335b8262000abd565b600c546701cdda4faccd0000906000906200337f906001600160a01b0316620032c0565b60408051948552602085019390935291830152606082015260800160405180910390a4601654620033b9906001600160a01b031662005faa565b600d54600c54600b5430926001600160a01b039081169281169160008051602062023eb98339815191529116600062003408845b600d546001600160a01b0316671bc16d674ec8000062006002565b67039bb49f599a000060008060405162003428969594939291906200895e565b60405180910390a46040805161018081018252600c546001600160a01b039081168252600d5481166020830152600082840181905260608301819052671bc16d674ec800006080840181905260a084015267039bb49f599a000060c0840181905260e08401526001610100840181905261012084015262632ea061014084015261016083018190526016549351636a1c7d0560e01b815292939092911690636a1c7d059067016345785d8a000090620034e6908690600401620084aa565b60a06040518083038185885af115801562003505573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906200352c919062008569565b8051600c5491925062000b2a916200354d906001600160a01b0316620033ed565b60405180606001604052806027815260200162023ef960279139620060ba565b6040805161018081018252600c546001600160a01b039081168252600d548116602080840191909152600083850181905260608401819052671bc16d674ec800006080850181905260a085015267039bb49f599a000060c08501526703893b4000c5000060e08501526001610100850152610120840181905262632ea0610140850152610160840181905260165485516303e21fa960e61b815295519495919493169263f887ea40926004808401939192918290030181865afa15801562003639573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200365f9190620085dd565b600d546040516302b427ef60e11b81526001600160a01b03928316926305684fde9262003694929116903090600401620086b6565b602060405180830381865afa158015620036b2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620036d89190620085fd565b90506000601660009054906101000a90046001600160a01b03166001600160a01b031663f887ea406040518163ffffffff1660e01b8152600401602060405180830381865afa15801562003730573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620037569190620085dd565b600d546040516302b427ef60e11b81526001600160a01b03928316926305684fde926200378b929116903090600401620086b6565b602060405180830381865afa158015620037a9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620037cf9190620085fd565b600b5460165491925062003899916001600160a01b03918216916370a0823191166040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562003835573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200385b9190620085fd565b60006040518060400160405280601b81526020017f496e76616c69642062616c616e6365206f6e204d616e67726f76650000000000815250620060ba565b601654620038b0906001600160a01b031662005faa565b600d54600c54600b5430926001600160a01b039081169281169160008051602062023eb983398151915291166000620038e98462000abd565b6701cdda4faccd0000600060046040516200390a969594939291906200895e565b60405180910390a4601654604051636a1c7d0560e01b81526000916001600160a01b031690636a1c7d059067016345785d8a0000906200394f908890600401620084aa565b60a06040518083038185885af11580156200396e573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062003995919062008569565b9050620039c3600082608001511160405180606001604052806030815260200162023f8a603091396200660b565b600b54600d54600c5460808401516040516368c13d6b60e01b81526000946001600160a01b03908116946368c13d6b9462003a08949183169392169160040162008692565b602060405180830381865afa15801562003a26573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003a4c9190620085fd565b905062003aa4606082901c6001600160601b03166060840151845162003a73919062008656565b8760a0015162003a84919062008755565b60405180606001604052806025815260200162023f6560259139620060ba565b62003ae86001600160601b03821683602001518760e0015162003ac8919062008755565b6040518060600160405280602581526020016202402860259139620060ba565b601654600d54600c54608085015160405163f92495e560e01b815262003ba6946001600160a01b039081169463f92495e59462003b2f949183169392169160040162008692565b602060405180830381865afa15801562003b4d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003b739190620085dd565b306040518060400160405280601381526020017224b73b30b634b21037b33332b91037bbb732b960691b81525062006778565b601654604080516303e21fa960e61b8152905162003cd7926001600160a01b03169163f887ea409160048083019260209291908290030181865afa15801562003bf3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003c199190620085dd565b600d546040516302b427ef60e11b81526001600160a01b03928316926305684fde9262003c4e929116903090600401620086b6565b602060405180830381865afa15801562003c6c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003c929190620085fd565b602084015162003ca3908762008755565b60405180604001604052806015815260200174496e76616c69642071756f74652062616c616e636560581b815250620060ba565b601654604080516303e21fa960e61b815290516200283a926001600160a01b03169163f887ea409160048083019260209291908290030181865afa15801562003d24573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003d4a9190620085dd565b600c546040516302b427ef60e11b81526001600160a01b03928316926305684fde9262003d7f929116903090600401620086b6565b602060405180830381865afa15801562003d9d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003dc39190620085fd565b835162003ca3908662008656565b60003060185460405160016228e33160e11b03198152600160048201526001600160a01b0392831631935091169063ffae399e90602401600060405180830381600087803b15801562003e2357600080fd5b505af115801562003e38573d6000803e3d6000fd5b50506040805161018081018252600c546001600160a01b039081168252600d5481166020830152600082840181905260608301819052671bc16d674ec800006080840181905260a084015267039bb49f599a000060c0840181905260e08401526101008301819052610120830181905262632ea061014084015261016083018190526016549351636a1c7d0560e01b815292955093509190911690636a1c7d059067016345785d8a00009062003ef3908690600401620084aa565b60a06040518083038185885af115801562003f12573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062003f39919062008569565b905062003f8360008260400151116040518060400160405280601981526020017f426f756e74792073686f756c64206e6f74206265207a65726f000000000000008152506200660b565b62003fc481604001518462003f99919062008656565b306001600160a01b03163160405180606001604052806023815260200162023f4260239139620060ba565b505050565b62003fc4838383600062004988565b600062003fe782600a62008a8e565b62003ff3858562005bfe565b62003fff91906200876f565b949350505050565b60405163c88a5e6d60e01b815260008051602062023e998339815191529063c88a5e6d9062004041908490600160801b90600401620086d0565b600060405180830381600087803b1580156200405c57600080fd5b505af115801562004071573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b038416600482015260008051602062023e9983398151915292506306447d5691506024016200280a565b6040805161018081018252600c546001600160a01b039081168252600d5481166020830152600092820183905260608201839052671bc16d674ec800006080830181905260a083015267016345785d8a000060c0830181905260e08301526001610100830181905261012083015262632ea0610140830152610160820192909252601654909162004143911662005faa565b600d54600c54600b5460405130936001600160a01b039081169381169260008051602062023eb9833981519152926200418c92909116906000908190819081906004906200895e565b60405180910390a4601654604051636a1c7d0560e01b81526001600160a01b0390911690636a1c7d059067016345785d8a000090620041d0908590600401620084aa565b60a06040518083038185885af1158015620041ef573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062004216919062008569565b506016546200422e906001600160a01b031662005faa565b600d54600c54600b5460405130936001600160a01b039081169381169260008051602062023eb9833981519152926200427792909116906000908190819081906005906200895e565b60405180910390a4601654604051636a1c7d0560e01b81526001600160a01b0390911690636a1c7d059067016345785d8a000090620042bb908590600401620084aa565b60a06040518083038185885af1158015620042da573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062004301919062008569565b50601654600d54600c546040516337b966bf60e01b815260009384936001600160a01b03918216936337b966bf93620043449330938116921690600401620088bb565b600060405180830381865afa15801562004362573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200438c919081019062008b09565b91509150620043d882516002148015620043a557508151155b60405180604001604052806014815260200173125b98dbdc9c9958dd081bd999995c881b1a5cdd60621b8152506200660b565b601654600d54600c5484516001600160a01b039384169363ad97db1b93811692169086906000906200440e576200440e62008904565b602002602001015160006040518563ffffffff1660e01b815260040162004439949392919062008617565b6020604051808303816000875af115801562004459573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200447f9190620085fd565b50601654600d54600c546040516337b966bf60e01b81526001600160a01b03938416936337b966bf93620044be933093918316921690600401620088bb565b600060405180830381865afa158015620044dc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262004506919081019062008b09565b8151919350915062003fc490600114801562004523575081516001145b6040518060600160405280602281526020016202404d602291396200660b565b6040805161018081018252600c546001600160a01b039081168252600d5481166020830152600082840181905260608301819052670de0b6b3a76400006080840181905260a08401526701cdda4faccd000060c0840181905260e08401526001610100840152610120830181905262632ea061014084015261016083018190526016549351636a1c7d0560e01b815230319491929190911690636a1c7d0590620045f2908590600401620084aa565b60a0604051808303816000875af115801562004612573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004638919062008569565b905062003fc4306001600160a01b0316318460405180604001604052806015815260200174696e636f7272656374207765692062616c616e636560581b815250620060ba565b6040805161018081018252600c546001600160a01b039081168252600d54166020820152600081830181905260608201819052671bc16d674ec800006080830181905260a083015267039bb49f599a000060c0830181905260e08301526001610100830152610120820181905262632ea0610140830152610160820152905163f28dceb360e01b815260008051602062023e998339815191529063f28dceb39062004772906004016020808252602c908201527f4d756c7469557365722f6465726976655f67617370726963652f4e6f74456e6f60408201526b3ab3b4283937bb34b9b4b7b760a11b606082015260800190565b600060405180830381600087803b1580156200478d57600080fd5b505af1158015620047a2573d6000803e3d6000fd5b5050601654604051636a1c7d0560e01b81526001600160a01b039091169250636a1c7d059150655af3107a400090620047e0908590600401620084aa565b60a06040518083038185885af1158015620047ff573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062000b2a919062008569565b6040805161018081018252600c546001600160a01b039081168252600d54166020820152600181830152600060608201819052671bc16d674ec800006080830181905260a083015267039bb49f599a000060c0830181905260e08301526101008201819052610120820181905262632ea0610140830152610160820152905163f28dceb360e01b815260008051602062023e998339815191529063f28dceb390620049059060040160208082526019908201527f6d67764f726465722f6d6f2f6e6f5061727469616c46696c6c00000000000000604082015260600190565b600060405180830381600087803b1580156200492057600080fd5b505af115801562004935573d6000803e3d6000fd5b5050601654604051636a1c7d0560e01b81526001600160a01b039091169250636a1c7d05915067016345785d8a000090620047e0908590600401620084aa565b600062004983600062000efb565b905090565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b1790529151600092871691620049de9162008b6a565b6000604051808303816000865af19150503d806000811462004a1d576040519150601f19603f3d011682016040523d82523d6000602084013e62004a22565b606091505b5091505060008180602001905181019062004a3e9190620085fd565b905062004ab08462004aa98762004a806370a0823160e01b62004a6360018d62006858565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b906200687d565b8215620021025760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b0389169162004afb919062008b6a565b6000604051808303816000865af19150503d806000811462004b3a576040519150601f19603f3d011682016040523d82523d6000602084013e62004b3f565b606091505b5091505060008180602001905181019062004b5b9190620085fd565b90508286101562004b865762004b72868462008755565b62004b7e908262008755565b905062004ba1565b62004b92838762008755565b62004b9e908262008656565b90505b62004bbf8162004aa96318160ddd60e01b62004a6360018d62006858565b5050505050505050565b6040805161018081018252600c546001600160a01b039081168252600d5481166020830152600082840181905260608301819052671bc16d674ec800006080840181905260a084015267039bb49f599a000060c0840181905260e08401526001610100840152610120830181905262632ea061014084015261016083018190526016549351636a1c7d0560e01b815292939092911690636a1c7d059067016345785d8a00009062004c7f908690600401620084aa565b60a06040518083038185885af115801562004c9e573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062004cc5919062008569565b90506000601660009054906101000a90046001600160a01b03166001600160a01b031663f887ea406040518163ffffffff1660e01b8152600401602060405180830381865afa15801562004d1d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004d439190620085dd565b6001600160a01b03166332563bc7306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562004d97573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004dbd9190620085fd565b600b54600d54600c54604051630fbb669160e41b81529394506001600160a01b039283169363fbb669109362004e05938116921690670de0b6b3a76400009060040162008692565b600060405180830381600087803b15801562004e2057600080fd5b505af115801562004e35573d6000803e3d6000fd5b5050600b5462004e5192506001600160a01b0316905062005faa565b600c546001600160a01b0316600d546001600160a01b0391821691166001600160a01b03167fe2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b846080015160405162004eac91815260200190565b60405180910390a3601954608083015160405163268e95b360e11b81526004810191909152600060248201819052916001600160a01b031690634d1d2b669060440160a0604051808303816000875af115801562004f0e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004f34919062008709565b50505050905062004f6a816040518060400160405280600c81526020016b1cdb9a5c194819985a5b195960a21b8152506200660b565b601654604080516303e21fa960e61b8152905162000ef5926001600160a01b03169163f887ea409160048083019260209291908290030181865afa15801562004fb7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004fdd9190620085dd565b6001600160a01b03166332563bc7306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801562005031573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620050579190620085fd565b836040518060400160405280601e81526020017f726574726163742073686f756c64206e6f7420646570726f766973696f6e0000815250620060ba565b604051638d1cc92560e01b8152600090819060008051602062023e9983398151915290638d1cc92590620050cd908690600401620087ef565b6000604051808303816000875af1158015620050ed573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200511791908101906200883a565b90508051602082016000f091506001600160a01b038216620051905760405162461bcd60e51b815260206004820152602b60248201527f54657374206465706c6f79436f646528737472696e67293a204465706c6f796d60448201526a32b73a103330b4b632b21760a91b606482015260840162002a05565b50919050565b60405163c88a5e6d60e01b815260008051602062023e998339815191529063c88a5e6d90620051cc9086908590600401620086d0565b600060405180830381600087803b158015620051e757600080fd5b505af1158015620051fc573d6000803e3d6000fd5b50506040516323f2866760e11b815260008051602062023e9983398151915292506347e50cce915062002c339086908690600401620086b6565b604080516020810190915260008082525b8251811015620030b457816200526b84838151811062003030576200303062008904565b6040516020016200527e92919062008888565b6040516020818303038152906040529150600183516200529f919062008755565b811015620052cc5781604051602001620052ba91906200891a565b60405160208183030381529060405291505b80620052d88162008942565b91505062005247565b60008051602062023e9983398151915263e5d6bf0262002a36834262008656565b60008054610100900460ff1615620053235750600054610100900460ff1690565b600060008051602062023e998339815191523b156200542e5760405160009060008051602062023e99833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490620053909083906519985a5b195960d21b90602001620086d0565b60408051601f1981840301815290829052620053b0929160200162008b88565b60408051601f1981840301815290829052620053cc9162008b6a565b6000604051808303816000865af19150503d80600081146200540b576040519150601f19603f3d011682016040523d82523d6000602084013e62005410565b606091505b50915050808060200190518101906200542a9190620086e9565b9150505b919050565b600b546000906200544d906001600160a01b031662006889565b50600b546040516001600160a01b0390911690849084906200546f9062007f76565b6200547d93929190620088bb565b604051809103906000f0801580156200549a573d6000803e3d6000fd5b5090505b92915050565b600080600b60009054906101000a90046001600160a01b0316858560405162002a7e9062007f84565b60405163c88a5e6d60e01b815260008051602062023e998339815191529063c88a5e6d90620020d29085908590600401620086d0565b6040805161018081018252600c546001600160a01b039081168252600d5481166020830152600082840181905260608301819052671bc16d674ec800006080840181905260a084015267039bb49f599a000060c0840181905260e08401526001610100840152610120830181905262632ea061014084015261016083018190526016549351636a1c7d0560e01b815292939092911690636a1c7d059067016345785d8a000090620055b9908690600401620084aa565b60a06040518083038185885af1158015620055d8573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190620055ff919062008569565b600c549091506000906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156200565c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620056829190620085fd565b90506000601660009054906101000a90046001600160a01b03166001600160a01b031663f887ea406040518163ffffffff1660e01b8152600401602060405180830381865afa158015620056da573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620057009190620085dd565b600d546040516302b427ef60e11b81526001600160a01b03928316926305684fde9262005735929116903090600401620086b6565b602060405180830381865afa15801562005753573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620057799190620085fd565b601954608085015160405163268e95b360e11b8152600481019190915267016345785d8a000060248201529192506000918291829182916001600160a01b031690634d1d2b669060440160a0604051808303816000875af1158015620057e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005809919062008709565b9450509350935093506200584a846040518060400160405280601481526020017314995cdd1a5b99c81bdc99195c8819985a5b195960621b8152506200660b565b600d546200589d9084906200587d906001600160a01b0316600c546001600160a01b031667016345785d8a000062006002565b6040518060600160405280602a815260200162023fde602a9139620060ba565b600c546200594b906001600160a01b03166370a08231306040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015620058f9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200591f9190620085fd565b6200592b848962008656565b6040518060600160405280602b815260200162023e6e602b9139620060ba565b601654604080516303e21fa960e61b8152905162005a8b926001600160a01b03169163f887ea409160048083019260209291908290030181865afa15801562005998573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620059be9190620085dd565b600d546040516302b427ef60e11b81526001600160a01b03928316926305684fde92620059f3929116903090600401620086b6565b602060405180830381865afa15801562005a11573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005a379190620085fd565b62005a43838662008656565b62005a4f908862008755565b6040518060400160405280601e81526020017f496e636f727265637420746f6b656e2062616c616e6365206f6e206d676f0000815250620060ba565b600b54600d54600c5460808a01516040516368c13d6b60e01b81526000946001600160a01b03908116946368c13d6b9462005ad0949183169392169160040162008692565b602060405180830381865afa15801562005aee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005b149190620085fd565b905062005b4f6001600160601b03821667016345785d8a00008a602001518c60c0015162005b43919062008755565b62003ac8919062008755565b505050505050505050565b60405163c88a5e6d60e01b815260008051602062023e998339815191529063c88a5e6d9062005b94908590600160801b90600401620086d0565b600060405180830381600087803b15801562005baf57600080fd5b505af115801562005bc4573d6000803e3d6000fd5b50506040516308b6ac0f60e31b815260008051602062023e9983398151915292506345b560789150620020d29085908590600401620086b6565b60008062005c7162005c6b6040518060400160405280600c81526020016b5f5f646563696d616c73282960a01b81525062005c448760016200685890919063ffffffff16565b90805160209091012060038201805460e09290921c63ffffffff1990921691909117905590565b62006962565b905062005c8081600a62008a8e565b62003fff908462008bbb565b60008051602062023ed983398151915260405162005d47906040808252600790820152665741524e494e4760c81b6060820152608060208201819052605e908201527f546573742074697028616464726573732c616464726573732c75696e7432353660a08201527f293a2054686520607469706020737464636865617420686173206265656e206460c08201527f6570726563617465642e2055736520606465616c6020696e73746561642e000060e08201526101000190565b60405180910390a162003fc48162004aa98462004a806370a0823160e01b62004a6360018a62006858565b60405163c88a5e6d60e01b815260008051602062023e998339815191529063c88a5e6d9062005da89085908590600401620086d0565b600060405180830381600087803b15801562005dc357600080fd5b505af115801562005dd8573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b038516600482015260008051602062023e99833981519152925063ca669fa79150602401620020d2565b60006200202a838360006200200e565b6040805161018081018252600c546001600160a01b039081168252600d5481166020830152600082840181905260608301819052671bc16d674ec800006080840181905260a084015267039bb49f599a000060c0840181905260e08401526101008301819052610120830181905262632ea061014084015261016083018190526016549351636a1c7d0560e01b815230319491929190911690636a1c7d059067016345785d8a00009062005ee1908690600401620084aa565b60a06040518083038185885af115801562005f00573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062005f27919062008569565b8051600c5491925062005f7a9162005f48906001600160a01b031662000abd565b60405180604001604052806013815260200172125b98dbdc9c9958dd081d185ad95c8819dbdd606a1b815250620060ba565b62003fc483306001600160a01b03163160405180606001604052806022815260200162023f2060229139620060ba565b6040516381bad6f360e01b8152600160048201819052602482018190526044820181905260648201526001600160a01b038216608482015260008051602062023e99833981519152906381bad6f39060a4016200280a565b600b546040516365fbae4d60e11b815260009182916001600160a01b039091169063cbf75c9a906200603b9088908890600401620086b6565b6040805180830381865afa15801562006058573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200607e919062008bdd565b915061271090506200609961ffff60e884901c168262008755565b620060a5908562008bbb565b620060b191906200876f565b95945050505050565b81831462003fc45760008051602062023ed983398151915281604051620060e2919062008c02565b60405180910390a162003fc4838362006984565b6011546040513091600f9160109160ff1690620061139062007f92565b62006122949392919062008cda565b604051809103906000f0801580156200613f573d6000803e3d6000fd5b50600c80546001600160a01b0319166001600160a01b03929092169190911790553060145460405160129160139160ff909116906200617e9062007f92565b6200618d949392919062008cda565b604051809103906000f080158015620061aa573d6000803e3d6000fd5b50600d80546001600160a01b0319166001600160a01b03928316908117909155600c54600e54620061e49391909116919060ff166200200e565b600b80546001600160a01b0319166001600160a01b03929092169182179055604080516316c1a85160e31b8152905163b60d428891678ac7230489e8000091600480830192600092919082900301818588803b1580156200624457600080fd5b505af115801562006259573d6000803e3d6000fd5b5050600c54600b5460405163095ea7b360e01b81526001600160a01b03928316955063095ea7b3945062006298935091169060001990600401620086d0565b6020604051808303816000875af1158015620062b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620062de9190620086e9565b50600d54600b5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392620063199291169060001990600401620086d0565b6020604051808303816000875af115801562006339573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200200b9190620086e9565b6200636a8362006889565b50620063768262006889565b50601554604051630b73a18f60e01b81526001600160a01b0385811660048301528481166024830152604482019290925260006064820152614e20608482015290821690630b73a18f9060a401600060405180830381600087803b158015620063de57600080fd5b505af1158015620063f3573d6000803e3d6000fd5b5050601554604051630b73a18f60e01b81526001600160a01b0386811660048301528781166024830152604482019290925260006064820152614e2060848201529084169250630b73a18f915060a401600060405180830381600087803b1580156200645e57600080fd5b505af115801562006473573d6000803e3d6000fd5b505050506000805160206202400883398151915260001c60601b60601c6001600160a01b031663c657c71884856001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015620064de573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200650891908101906200883a565b6040518363ffffffff1660e01b815260040162006527929190620088de565b600060405180830381600087803b1580156200654257600080fd5b505af115801562006557573d6000803e3d6000fd5b505050506000805160206202400883398151915260001c60601b60601c6001600160a01b031663c657c71883846001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015620065c2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620065ec91908101906200883a565b6040518363ffffffff1660e01b815260040162002c33929190620088de565b8162000b2a5760008051602062023ed98339815191528160405162006631919062008c02565b60405180910390a162000b2a8262006a6a565b6060816000036200666c5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156200668657600101600a8204915062006670565b60008167ffffffffffffffff811115620066a457620066a4620080f9565b6040519080825280601f01601f191660200182016040528015620066cf576020820181803683370190505b50905060001982015b85156200672857600a860660300160f81b8282806001900393508151811062006705576200670562008904565b60200101906001600160f81b031916908160001a905350600a86049550620066d8565b50949350505050565b6200200b81604051602401620067489190620087ef565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905262006ad1565b816001600160a01b0316836001600160a01b03161462003fc45760008051602062023ed983398151915281604051620067b2919062008c02565b60405180910390a162003fc4838362006af2565b600b546040516365fbae4d60e11b815260009182916001600160a01b039091169063cbf75c9a90620067ff9088908890600401620086b6565b6040805180830381865afa1580156200681c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006842919062008bdd565b9150612710905060e882901c61ffff1662006099565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b62000b2a828262006bdb565b60006001600160a01b038216620069535760008051602062023e4e833981519152604051620068e9906020808252601e908201527f4572726f723a20616464726573732073686f756c64206e6f7420626520300000604082015260600190565b60405180910390a160408051818152600781830152664164647265737360c81b60608201526001600160a01b038416602082015290517f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9181900360800190a16200695362006f44565b506001600160a01b0316151590565b60006200696f8262007048565b8060200190518101906200549e9190620085fd565b80821462000b2a5760008051602062023e4e833981519152604051620069e69060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162006a1f919062008d29565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162006a58919062008d62565b60405180910390a162000b2a62006f44565b806200200b5760008051602062023e4e83398151915260405162006abf9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16200200b62006f44565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b806001600160a01b0316826001600160a01b03161462000b2a5760008051602062023e4e83398151915260405162006b699060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405162006ba2919062008d8d565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8260405162006a58919062008dd2565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b946000939092909183018282801562006c4e57602002820191906000526020600020905b81548152602001906001019080831162006c39575b5050505050905060008362006c638362007110565b60405160200162006c7692919062008b88565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a16835281529281209194509092909162006cca91869188910162008dfd565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1662006d055762006d0387620071bd565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b031988168452825280832090519091839162006d4691879189910162008dfd565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b03168460405162006d8d919062008b6a565b600060405180830381855afa9150503d806000811462006dca576040519150601f19603f3d011682016040523d82523d6000602084013e62006dcf565b606091505b50915062006dec90508162006de688602062008bbb565b62007eb4565b604051630667f9d760e41b81529092506000915060008051602062023e998339815191529063667f9d709062006e29908b908790600401620086d0565b6020604051808303816000875af115801562006e49573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006e6f9190620085fd565b905080821462006e935760405162461bcd60e51b815260040162002a059062008e39565b6040516370ca10bb60e01b815260008051602062023e99833981519152906370ca10bb9062006ecb908b9087908e9060040162008671565b600060405180830381600087803b15801562006ee657600080fd5b505af115801562006efb573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff1916905562006f3060028b01600062007fa0565b896004016000905550505050505050505050565b60008051602062023e998339815191523b15620070375760405160009060008051602062023e99833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49062006fb29083906519985a5b195960d21b9060019060200162008671565b60408051601f198184030181529082905262006fd2929160200162008b88565b60408051601f198184030181529082905262006fee9162008b6a565b6000604051808303816000865af19150503d80600081146200702d576040519150601f19603f3d011682016040523d82523d6000602084013e62007032565b606091505b505050505b6000805461ff001916610100179055565b60058101546060906001600160a01b031660006200706684620071bd565b604051630667f9d760e41b815290915060008051602062023e998339815191529063667f9d70906200709f9085908590600401620086d0565b6020604051808303816000875af1158015620070bf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620070e59190620085fd565b604051602001620070f891815260200190565b60405160208183030381529060405292505050919050565b606060008251602062007124919062008bbb565b67ffffffffffffffff8111156200713f576200713f620080f9565b6040519080825280601f01601f1916602001820160405280156200716a576020820181803683370190505b50905060005b835181101562002a0e57600084828151811062007191576200719162008904565b602002602001015190508082602002602001840152508080620071b49062008942565b91505062007170565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b9493879391929091908301828280156200722f57602002820191906000526020600020905b8154815260200190600101908083116200721a575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051959650949193506200727b9250859187910162008dfd565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16156200731a576001600160a01b0384166000908152602087815260408083206001600160e01b03198716845282528083209051909291620072ea91859187910162008dfd565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b600083620073288362007110565b6040516020016200733b92919062008b88565b60405160208183030381529060405290506000805160206202400883398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200739a57600080fd5b505af1158015620073af573d6000803e3d6000fd5b50505050600080866001600160a01b031683604051620073d0919062008b6a565b600060405180830381855afa9150503d80600081146200740d576040519150601f19603f3d011682016040523d82523d6000602084013e62007412565b606091505b5091506200742990508162006de687602062008bbb565b6040516365bc948160e01b81526001600160a01b03891660048201529092506000915060008051602062023e99833981519152906365bc9481906024016000604051808303816000875af115801562007486573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620074b0919081019062008b09565b5090508051600103620077795760006000805160206202400883398151915260001c6001600160a01b031663667f9d708984600081518110620074f757620074f762008904565b60200260200101516040518363ffffffff1660e01b81526004016200751e929190620086d0565b6020604051808303816000875af11580156200753e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620075649190620085fd565b905080620075c8577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58883600081518110620075a457620075a462008904565b602002602001015160001c604051620075bf929190620086d0565b60405180910390a15b808314620075ea5760405162461bcd60e51b815260040162002a059062008e39565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed888887896040516020016200762292919062008dfd565b60405160208183030381529060405280519060200120856000815181106200764e576200764e62008904565b602002602001015160001c6040516200766b949392919062008ed4565b60405180910390a18160008151811062007689576200768962008904565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c1683528452808220905192939092620076d4918a918c910162008dfd565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c168552825282842092519093916200773e918a918c910162008dfd565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff19169115159190911790555062007d37565b60018151111562007cc65760005b815181101562007cbf5760006000805160206202400883398151915260001c6001600160a01b031663667f9d708a858581518110620077ca57620077ca62008904565b60200260200101516040518363ffffffff1660e01b8152600401620077f1929190620086d0565b6020604051808303816000875af115801562007811573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620078379190620085fd565b9050806200789a577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58984848151811062007876576200787662008904565b602002602001015160001c60405162007891929190620086d0565b60405180910390a15b6000805160206202400883398151915260001c6001600160a01b03166370ca10bb8a858581518110620078d157620078d162008904565b602002602001015161133760f01b6040518463ffffffff1660e01b8152600401620078ff9392919062008671565b600060405180830381600087803b1580156200791a57600080fd5b505af11580156200792f573d6000803e3d6000fd5b50505050600060608a6001600160a01b03168760405162007951919062008b6a565b600060405180830381855afa9150503d80600081146200798e576040519150601f19603f3d011682016040523d82523d6000602084013e62007993565b606091505b509092509050620079ab8162006de68b602062008bbb565b9550818015620079bf575061133760f01b86145b1562007c12577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001620079fd92919062008dfd565b6040516020818303038152906040528051906020012088888151811062007a285762007a2862008904565b602002602001015160001c60405162007a45949392919062008ed4565b60405180910390a184848151811062007a625762007a6262008904565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f168352845280822090519293909262007aad918d918f910162008dfd565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c60405160200162007b3a92919062008dfd565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff0219169083151502179055506000805160206202400883398151915260001c6001600160a01b03166370ca10bb8c87878151811062007bac5762007bac62008904565b6020026020010151866040518463ffffffff1660e01b815260040162007bd59392919062008671565b600060405180830381600087803b15801562007bf057600080fd5b505af115801562007c05573d6000803e3d6000fd5b5050505050505062007cbf565b6000805160206202400883398151915260001c6001600160a01b03166370ca10bb8c87878151811062007c495762007c4962008904565b6020026020010151866040518463ffffffff1660e01b815260040162007c729392919062008671565b600060405180830381600087803b15801562007c8d57600080fd5b505af115801562007ca2573d6000803e3d6000fd5b50505050505050808062007cb69062008942565b91505062007787565b5062007d37565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e606482015260840162002a05565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905190929162007d7b9188918a910162008dfd565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1662007e0a5760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b606482015260840162002a05565b6005890180546001600160a01b031916905560038901805463ffffffff1916905562007e3b60028a01600062007fa0565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a1684528252808320905190929162007e819188918a910162008dfd565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b6000806000602085511162007ecb57845162007ece565b60205b905060005b8181101562007f345762007ee981600862008bbb565b8662007ef6838862008656565b8151811062007f095762007f0962008904565b01602001516001600160f81b031916901c92909217918062007f2b8162008942565b91505062007ed3565b5090949350505050565b61567e8062008f0583390190565b6155e4806200e58383390190565b61576a8062013b6783390190565b610baf80620192d183390190565b6145218062019e8083390190565b613ef5806201e3a183390190565b611bb8806202229683390190565b50805460008255906000526020600020908101906200200b91905b8082111562007fd1576000815560010162007fbb565b5090565b80151581146200200b57600080fd5b60006020828403121562007ff757600080fd5b81356200202a8162007fd5565b6001600160a01b03811681146200200b57600080fd5b6000806000606084860312156200803057600080fd5b83356200803d8162008004565b925060208401356200804f8162008004565b91506040840135620080618162007fd5565b809150509250925092565b600080604083850312156200808057600080fd5b82356200808d8162008004565b946020939093013593505050565b600060208284031215620080ae57600080fd5b81356200202a8162008004565b60008060408385031215620080cf57600080fd5b8235620080dc8162008004565b91506020830135620080ee8162008004565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156200813b576200813b620080f9565b604052919050565b600067ffffffffffffffff821115620081605762008160620080f9565b50601f01601f191660200190565b6000620081856200817f8462008143565b6200810f565b90508281528383830111156200819a57600080fd5b828260208301376000602084830101529392505050565b600082601f830112620081c357600080fd5b6200202a838335602085016200816e565b60008060408385031215620081e857600080fd5b823567ffffffffffffffff808211156200820157600080fd5b6200820f86838701620081b1565b935060208501359150808211156200822657600080fd5b508301601f810185136200823957600080fd5b6200824a858235602084016200816e565b9150509250929050565b6000602082840312156200826757600080fd5b5035919050565b6000806000606084860312156200828457600080fd5b8335620082918162008004565b92506020840135620082a38162008004565b9150604084013567ffffffffffffffff811115620082c057600080fd5b620082ce86828701620081b1565b9150509250925092565b600080600060608486031215620082ee57600080fd5b8335620082fb8162008004565b925060208401356200830d8162008004565b929592945050506040919091013590565b600067ffffffffffffffff8211156200833b576200833b620080f9565b5060051b60200190565b600060208083850312156200835957600080fd5b823567ffffffffffffffff8111156200837157600080fd5b8301601f810185136200838357600080fd5b8035620083946200817f826200831e565b81815260059190911b82018301908381019087831115620083b457600080fd5b928401925b82841015620083d457833582529284019290840190620083b9565b979650505050505050565b600080600060608486031215620083f557600080fd5b8335620084028162008004565b95602085013595506040909401359392505050565b600080600080608085870312156200842e57600080fd5b84356200843b8162008004565b935060208501356200844d8162008004565b9250604085013591506060850135620084668162007fd5565b939692955090935050565b6000602082840312156200848457600080fd5b813567ffffffffffffffff8111156200849c57600080fd5b62003fff84828501620081b1565b81516001600160a01b0316815261018081016020830151620084d760208401826001600160a01b03169052565b506040830151620084ec604084018215159052565b50606083015162008501606084018215159052565b506080830151608083015260a083015160a083015260c083015160c083015260e083015160e0830152610100808401516200853f8285018215159052565b50506101208381015190830152610140808401519083015261016092830151929091019190915290565b600060a082840312156200857c57600080fd5b60405160a0810181811067ffffffffffffffff82111715620085a257620085a2620080f9565b806040525082518152602083015160208201526040830151604082015260608301516060820152608083015160808201528091505092915050565b600060208284031215620085f057600080fd5b81516200202a8162008004565b6000602082840312156200861057600080fd5b5051919050565b6001600160a01b0394851681529290931660208301526040820152901515606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600082198211156200866c576200866c62008640565b500190565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b600060208284031215620086fc57600080fd5b81516200202a8162007fd5565b600080600080600060a086880312156200872257600080fd5b85516200872f8162007fd5565b602087015160408801516060890151608090990151929a91995097965090945092505050565b6000828210156200876a576200876a62008640565b500390565b6000826200878d57634e487b7160e01b600052601260045260246000fd5b500490565b60005b83811015620087af57818101518382015260200162008795565b8381111562000ef55750506000910152565b60008151808452620087db81602086016020860162008792565b601f01601f19169290920160200192915050565b6020815260006200202a6020830184620087c1565b6000620088156200817f8462008143565b90508281528383830111156200882a57600080fd5b6200202a83602083018462008792565b6000602082840312156200884d57600080fd5b815167ffffffffffffffff8111156200886557600080fd5b8201601f810184136200887757600080fd5b62003fff8482516020840162008804565b600083516200889c81846020880162008792565b835190830190620088b281836020880162008792565b01949350505050565b6001600160a01b0393841681529183166020830152909116604082015260600190565b6001600160a01b038316815260406020820181905260009062003fff90830184620087c1565b634e487b7160e01b600052603260045260246000fd5b600082516200892e81846020870162008792565b61016160f51b920191825250600201919050565b60006001820162008957576200895762008640565b5060010190565b6001600160a01b03969096168652931515602086015260408501929092526060840152608083015260a082015260c00190565b600181815b80851115620089d2578160001904821115620089b657620089b662008640565b80851615620089c457918102915b93841c939080029062008996565b509250929050565b600082620089eb575060016200549e565b81620089fa575060006200549e565b816001811462008a13576002811462008a1e5762008a3e565b60019150506200549e565b60ff84111562008a325762008a3262008640565b50506001821b6200549e565b5060208310610133831016604e8410600b841016171562008a63575081810a6200549e565b62008a6f838362008991565b806000190482111562008a865762008a8662008640565b029392505050565b60006200202a8383620089da565b600082601f83011262008aae57600080fd5b8151602062008ac16200817f836200831e565b82815260059290921b8401810191818101908684111562008ae157600080fd5b8286015b8481101562008afe578051835291830191830162008ae5565b509695505050505050565b6000806040838503121562008b1d57600080fd5b825167ffffffffffffffff8082111562008b3657600080fd5b62008b448683870162008a9c565b9350602085015191508082111562008b5b57600080fd5b506200824a8582860162008a9c565b6000825162008b7e81846020870162008792565b9190910192915050565b6001600160e01b031983168152815160009062008bad81600485016020870162008792565b919091016004019392505050565b600081600019048311821515161562008bd85762008bd862008640565b500290565b6000806040838503121562008bf157600080fd5b505080516020909101519092909150565b60408152600560408201526422b93937b960d91b60608201526080602082015260006200202a6080830184620087c1565b8054600090600181811c908083168062008c4e57607f831692505b6020808410820362008c7057634e487b7160e01b600052602260045260246000fd5b8388526020880182801562008c8e576001811462008ca05762008ccd565b60ff1987168252828201975062008ccd565b60008981526020902060005b8781101562008cc75781548482015290860190840162008cac565b83019850505b5050505050505092915050565b6001600160a01b038516815260806020820181905260009062008d009083018662008c33565b828103604084015262008d14818662008c33565b91505060ff8316606083015295945050505050565b60408152600062008d5460408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b60408152600062008d5460408301600a815269080808081058dd1d585b60b21b602082015260400190565b60408152600062008db860408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b60408152600062008db860408301600a815269080808081058dd1d585b60b21b602082015260400190565b825160009082906020808701845b8381101562008e295781518552938201939082019060010162008e0b565b5050948252509092019392505050565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe60a06040523480156200001157600080fd5b506040516200567e3803806200567e83398101604081905262000034916200048c565b8282826040518060400160405280601081526020016f496e7665727465644d616e67726f766560801b815250808484847f72201d073f249840099a96530e189c4291c1852040b1e96ff1f606db656be4ff60405160405180910390a16200009b836200016d565b620000a682620001cc565b620000b1816200027f565b620000bc836200032f565b5050815160208084019190912060408051808201825260018152603160f81b9084015280517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f938101939093528201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001905060408051601f19818403018152919052805160209091012060805250620004d19650505050505050565b62000177620003e0565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f30906020015b60405180910390a150565b620001d6620003e0565b61ffff811681146200022f5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f31366269747300000000000060448201526064015b60405180910390fd5b6200024b816001546200045160201b62001d4e1790919060201c565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001620001c1565b62000289620003e0565b808162ffffff1614620002df5760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f3234626974730000000000000000604482015260640162000226565b620002fb816001546200046f60201b62001d711790919060201c565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001620001c1565b62000339620003e0565b6001600160a01b038116620003915760405162461bcd60e51b815260206004820152601360248201527f6d67762f636f6e6669672f676f762f6e6f743000000000000000000000000000604482015260640162000226565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001620001c1565b6003546001600160a01b0316331480620003f957503330145b806200040e57506003546001600160a01b0316155b6200044f5760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b604482015260640162000226565b565b60401b69ffff00000000000000001661ffff60401b19919091161790565b60281b67ffffff00000000001662ffffff60281b19919091161790565b600080600060608486031215620004a257600080fd5b83516001600160a01b0381168114620004ba57600080fd5b602085015160409095015190969495509392505050565b60805161518a620004f46000396000818161036401526116aa015261518a6000f3fe60806040526004361061024a5760003560e01c80636d27de6711610139578063b60d4288116100b6578063dc7e98df1161007a578063dc7e98df146108a8578063def5ddaa146108c8578063fbb66910146108e8578063fbfa77cf14610908578063fbffe5fd14610928578063fcaa7e2e1461094857600080fd5b8063b60d4288146107e4578063c7bb25d0146107ec578063cbf75c9a14610833578063d0ee509914610868578063db20266f1461088857600080fd5b8063aa4dd282116100fd578063aa4dd28214610744578063ab033ea914610764578063ad97db1b14610784578063b09d2a16146107a4578063b2b12057146107c457600080fd5b80636d27de671461061457806370a08231146106545780637ecebe00146106815780638c66715c146106ae57806395999ee31461072457600080fd5b80635722647b116101c7578063644e67031161018b578063644e6703146104cc5780636804f613146105835780636817031b146105a357806368c13d6b146105c35780636a4f76911461060157600080fd5b80635722647b146103f657806359eba454146104345780635a611f4e146104545780635aa6e675146104745780635cd82390146104ac57600080fd5b806330adf81f1161020e57806330adf81f146103105780633644e5151461035257806341c0e1b51461038657806346e142fa1461039b57806349f6d2dc146103e357600080fd5b80630b73a18f1461025f578063230244081461027f578063275074581461029257806327d097c6146102d05780632e1a7d4d146102f057600080fd5b3661025a5761025833610968565b005b600080fd5b34801561026b57600080fd5b5061025861027a3660046149b8565b61098f565b61025861028d366004614a05565b610968565b34801561029e57600080fd5b506102bb6102ad366004614a20565b6001600160601b0316151590565b60405190151581526020015b60405180910390f35b3480156102dc57600080fd5b506102586102eb366004614a39565b610a2d565b3480156102fc57600080fd5b506102bb61030b366004614a20565b610b08565b34801561031c57600080fd5b506103447fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a281565b6040519081526020016102c7565b34801561035e57600080fd5b506103447f000000000000000000000000000000000000000000000000000000000000000081565b34801561039257600080fd5b50610258610b62565b3480156103a757600080fd5b506103bb6103b6366004614ac8565b610baa565b604080519586526020860194909452928401919091526060830152608082015260a0016102c7565b6103446103f1366004614b41565b610bd6565b34801561040257600080fd5b50610344610411366004614a39565b600560209081526000938452604080852082529284528284209052825290205481565b34801561044057600080fd5b506102bb61044f366004614b9f565b610d41565b34801561046057600080fd5b5061025861046f366004614bea565b610dca565b34801561048057600080fd5b50600354610494906001600160a01b031681565b6040516001600160a01b0390911681526020016102c7565b3480156104b857600080fd5b506102586104c7366004614a05565b610e24565b3480156104d857600080fd5b506104ec6104e7366004614c07565b610e84565b6040805183516001600160a01b0316815260208085015115158183015284830151151582840152606080860151818401526080808701518185015260a0968701511515878501528551151560c0808601919091529286015160e0850152938501516101008401528401516101208301529183015115156101408201529282015161016084015201516101808201526101a0016102c7565b34801561058f57600080fd5b5061025861059e366004614bea565b610f87565b3480156105af57600080fd5b506102586105be366004614a05565b610fd1565b3480156105cf57600080fd5b506103446105de366004614a39565b600460209081526000938452604080852082529284528284209052825290205481565b61025861060f366004614c3a565b611027565b34801561062057600080fd5b5061063461062f366004614ca1565b61113a565b6040805194855260208501939093529183015260608201526080016102c7565b34801561066057600080fd5b5061034461066f366004614a05565b60066020526000908152604090205481565b34801561068d57600080fd5b5061034461069c366004614a05565b60086020526000908152604090205481565b3480156106ba57600080fd5b506106ce6106c9366004614a39565b611171565b60408051835181526020808501518183015284830151828401526060948501518583015283516001600160a01b0316608083015283015160a08201529082015160c082015291015160e0820152610100016102c7565b34801561073057600080fd5b5061025861073f366004614a20565b61124d565b34801561075057600080fd5b5061034461075f366004614d09565b6112e9565b34801561077057600080fd5b5061025861077f366004614a05565b61134a565b34801561079057600080fd5b5061034461079f366004614d3c565b6113ec565b3480156107b057600080fd5b506102586107bf366004614d8b565b6115be565b3480156107d057600080fd5b506103bb6107df366004614e21565b6118b7565b6102586118f3565b3480156107f857600080fd5b50610344610807366004614e9b565b600760209081526000948552604080862082529385528385208152918452828420909152825290205481565b34801561083f57600080fd5b5061085361084e366004614c07565b6118fe565b604080519283526020830191909152016102c7565b34801561087457600080fd5b50610258610883366004614c07565b6119fb565b34801561089457600080fd5b506102bb6108a3366004614c07565b611a6c565b3480156108b457600080fd5b506102586108c3366004614a39565b611aa7565b3480156108d457600080fd5b506103446108e3366004614c07565b611b67565b3480156108f457600080fd5b50610258610903366004614a39565b611b9f565b34801561091457600080fd5b50600054610494906001600160a01b031681565b34801561093457600080fd5b50610634610943366004614eef565b611c8c565b34801561095457600080fd5b50610258610963366004614a20565b611cb3565b60006109756000806118fe565b50905061098181611d90565b61098b8234611dd3565b5050565b610997611e2f565b6001600160a01b0385811660008181526002602090815260408083209489168084529482529182902080546001600160f81b0316600160f81b17905581516001815291517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a3610a10858585611aa7565b610a1b858584611b9f565b610a26858583610a2d565b5050505050565b610a35611e2f565b808162ffffff1614610a8e5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f636f6e6669672f6f666665725f676173626173652f3234626974730060448201526064015b60405180910390fd5b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805462ffffff60601b191662ffffff60601b606088901b1617905590518481527fc5859916e5f3fc1ed4d2cfb8c7a6cf709580f228fa0c9d9e0fa468744c7e4a9191015b60405180910390a3505050565b6000610b143383611e9a565b60405133908390600081818185875af1925050503d8060008114610b54576040519150601f19603f3d011682016040523d82523d6000602084013e610b59565b606091505b50909392505050565b610b6a611e2f565b60015464ff000000001916640100000000176001556040517fbe26733c2bf6ff3ea5ba8cfe744422bd49052ff9ed5685c9e81e6f9321dbaddd90600090a1565b6000806000806000610bc08a8a8a8a8a33611f5f565b939e929d50909b50995090975095505050505050565b6000610be0614864565b610bea89896118fe565b6101208301819052610100830191909152610c04906120ac565b610c188161010001518261012001516120f8565b3415610c2857610c283334611dd3565b61012081015160181c63ffffffff166001016080820181905263ffffffff811614610c8b5760405162461bcd60e51b81526020600482015260136024820152726d67762f6f6666657249644f766572666c6f7760681b6044820152606401610a85565b6080810151610120820151610cb79160181b66ffffffff0000001666ffffffff00000019919091161790565b6101208201526001600160a01b03808a16825288166020820152604081018790526060810186905260a0810185905260c0810184905260e08101839052610cff816000612148565b61012081015181516001600160a01b03908116600090815260026020908152604080832082870151909416835292905220556080015198975050505050505050565b6001600160a01b038085166000818152600760209081526040808320888616808552908352818420338086529084528285209689168552959092528083208690555191939092917f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d91610db79188908890614f3c565b60405180910390a3506001949350505050565b610dd2611e2f565b60015460ff60501b191660ff60501b605083901b161760015560405181151581527f9b84fe4d9ffc14a6f7ec50c18884ee0d4bb8165aa718a28558df12ab4bd32b14906020015b60405180910390a150565b610e2c611e2f565b6001546001600160601b03166001600160601b0319606083901b16176001556040516001600160a01b03821681527ff592e42c32883b35bebfbf9d9b801570a25d5ccbba452310746ad2cfd20d548f90602001610e19565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152610efa6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b600080610f0786866118fe565b91509150610f71826040805160c081018252606083811c8252605884901c60ff9081161515602080850191909152605086901c82161515848601529385901c61ffff1691830191909152602884901c62ffffff1660808301529290911c909116151560a082015290565b9350610f7c816128c5565b925050509250929050565b610f8f611e2f565b600154610f9c9082612973565b60015560405181151581527fbf39fbfab835c119637f4dbc4fb0f428c559c210200405d1ec25ddb50a93f9d490602001610e19565b610fd9611e2f565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f3090602001610e19565b61102f614864565b61103989896118fe565b6101208301819052610100830191909152611053906120ac565b6110678161010001518261012001516120f8565b3415611077576110773334611dd3565b6001600160a01b03808a16808352908916602080840182905260408085018b9052606085018a90526080850186905260a0850189905260c0850188905260e0850187905260009384526004825280842092845291815281832085845290529020546101408201526101208101516110ef826001612148565b610120820151811461112e5761012082015182516001600160a01b03908116600090815260026020908152604080832082880151909416835292905220555b50505050505050505050565b60008060008061114e8a8a8a8a8a8a61298a565b929650909450925090506111648a8a8786612c72565b9650965096509692505050565b61119c6040518060800160405280600081526020016000815260200160008152602001600081525090565b6111d0604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b6001600160a01b03808616600090815260046020908152604080832093881683529281528282208683529052205461120781612d72565b6001600160a01b038088166000908152600560209081526040808320938a1683529281528282208883529052205490935061124181612dd4565b92505050935093915050565b611255611e2f565b808162ffffff16146112a95760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f32346269747300000000000000006044820152606401610a85565b6001546112b69082611d71565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001610e19565b600033301461133a5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f696e766572746564466c6173686c6f616e2f70726f746563746564006044820152606401610a85565b61134383612e43565b9392505050565b611352611e2f565b6001600160a01b03811661139e5760405162461bcd60e51b815260206004820152601360248201527206d67762f636f6e6669672f676f762f6e6f743606c1b6044820152606401610a85565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001610e19565b6000806113f986866118fe565b915050611405816120ac565b6001600160a01b038087166000818152600460209081526040808320948a16808452948252808320898452825280832054938352600582528083209483529381528382208883529052919091205461145d8160601c90565b6001600160a01b0316336001600160a01b0316146114bd5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f726574726163744f666665722f756e617574686f72697a65640000006044820152606401610a85565b6001600160601b0382161561152157826114ed89896114dc8660e01c90565b60c087901c63ffffffff1688612fc4565b935080841461151f576001600160a01b03808a166000908152600260209081526040808320938c168352929052208490555b505b61152f88888885858a6130a4565b841561156657603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020293506115663385611dd3565b866001600160a01b0316886001600160a01b03167fe2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b886040516115ab91815260200190565b60405180910390a3505050949350505050565b428410156116035760405162461bcd60e51b81526020600482015260126024820152711b59dd8bdc195c9b5a5d0bd95e1c1a5c995960721b6044820152606401610a85565b6001600160a01b03878116600081815260086020908152604080832080546001810190915581517fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a2818501528f8716818401528e871660608201526080810195909552948b1660a085015260c084018a905260e084018590526101008085018a9052815180860390910181526101208501909152805191012061190160f01b6101408401527f0000000000000000000000000000000000000000000000000000000000000000610142840152610162830152906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611745573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061177b5750896001600160a01b0316816001600160a01b0316145b6117c75760405162461bcd60e51b815260206004820152601b60248201527f6d67762f7065726d69742f696e76616c69645369676e617475726500000000006044820152606401610a85565b87600760008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020819055508a6001600160a01b03168c6001600160a01b03167f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d8c8c8c6040516118a193929190614f3c565b60405180910390a3505050505050505050505050565b60008060008060006118cd8b8b8b8b8b8b611f5f565b9398509196509450925090506118e58b8b8886612c72565b965096509650965096915050565b6118fc33610968565b565b6001546001600160a01b03838116600090815260026020908152604080832093861683529290522054605882901c60ff16156119f4576000806119418460601c90565b604051636968abd360e01b81526001600160a01b03888116600483015287811660248301529190911690636968abd3906044016040805180830381865afa158015611990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b49190614f60565b915091506119c58261ffff81161490565b156119d7576119d48483611d4e565b93505b6001600160701b03811681036119f157610f7c8382613119565b50505b9250929050565b611a03611e2f565b6001600160a01b03828116600081815260026020908152604080832094861680845294825280832080546001600160f81b031690558051928352517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a35050565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054605881901c60ff1615155b949350505050565b611aaf611e2f565b6101f4811115611af85760405162461bcd60e51b815260206004820152601460248201527306d67762f636f6e6669672f6665652f3c3d3530360641b6044820152606401610a85565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805461ffff60e81b191661ffff60e81b60e888901b1617905590518481527f44a6d70a601a6f8a85c075467e9d7245897140cbf6dd505c9d9d764459f5fb649101610afb565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054603881901c63ffffffff16611a9f565b611ba7611e2f565b6001600160701b0381168114611bff5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f64656e736974792f313132626974730000000000006044820152606401610a85565b6001600160a01b03808416600090815260026020908152604080832093861683529290522054611c2f9082613119565b6001600160a01b038481166000818152600260209081526040808320948816808452948252918290209490945551848152919290917f95f1a495c6d9d1a215995408f6ad898c2b33798d6eb3cf3220b4c6cc8b61b0649101610afb565b600080600080611ca089898989893361298a565b929c919b50995090975095505050505050565b611cbb611e2f565b61ffff81168114611d0e5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f3136626974730000000000006044820152606401610a85565b600154611d1b9082611d4e565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001610e19565b60401b69ffff00000000000000001669ffff000000000000000019919091161790565b60281b67ffffff00000000001667ffffff000000000019919091161790565b602081901c60ff1615611dd05760405162461bcd60e51b81526020600482015260086024820152671b59dd8bd919585960c21b6044820152606401610a85565b50565b6001600160a01b03821660008181526006602052604090819020805484019055517f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09490611e239084815260200190565b60405180910390a25050565b6003546001600160a01b0316331480611e4757503330145b80611e5b57506003546001600160a01b0316155b6118fc5760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b6044820152606401610a85565b6001600160a01b03821660009081526006602052604090205481811015611f035760405162461bcd60e51b815260206004820152601960248201527f6d67762f696e73756666696369656e7450726f766973696f6e000000000000006044820152606401610a85565b6001600160a01b038316600081815260066020526040908190208484039055517f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc604690611f529085815260200190565b60405180910390a2505050565b6000806000806000611f6f6148d0565b6001600160a01b03808d1682528b166020820152611f8d8c8c6118fe565b61010083015260e0820152611fa061492e565b6001600160a01b03881660a082015288151560c082015260e0820151610100830151611fcc91906120f8565b611fda8261010001516120ac565b6040517fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b990600090a161200f81838d8d61314a565b60808401519299509097509550612025906135d9565b602080830151835160808085015160e0860151604080518d81529687018c905286019190915260608501526001600160a01b03808d1694938116939216917ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47910160405180910390a4806080015193508060e0015192505050965096509650965096915050565b605881901c60ff1615611dd05760405162461bcd60e51b81526020600482015260146024820152731b59dd8bdc99595b9d1c985b98de531bd8dad95960621b6044820152606401610a85565b61210182611d90565b61210d8160f81c151590565b61098b5760405162461bcd60e51b815260206004820152600c60248201526b6d67762f696e61637469766560a01b6044820152606401610a85565b60c082015161ffff81161461219f5760405162461bcd60e51b815260206004820152601e60248201527f6d67762f77726974654f666665722f67617370726963652f31366269747300006044820152606401610a85565b61010082015160401c61ffff168260c0015110156121ca5761010082015160401c61ffff1660c08301525b61010082015160281c62ffffff168260a00151111561222b5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f6761737265712f746f6f486967680000006044820152606401610a85565b600082606001511161227f5760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f746f6f4c6f7700000000006044820152606401610a85565b61012082015160781c6001600160701b031661012083015160601c62ffffff168360a001510102826060015110156122f95760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f770000006044820152606401610a85565b60608201516001600160601b038116146123555760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f39366269747300000000006044820152606401610a85565b60408201516001600160601b038116146123b15760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f77616e74732f39366269747300000000006044820152606401610a85565b6000806123bd84613677565b9150915083602001516001600160a01b031684600001516001600160a01b03167f2b101f9ef8ca2761d91bea55ab50a4d051e9248088ff7314ddb8826839544c2a33876040015188606001518960c001518a60a001518b608001518a60405161246297969594939291906001600160a01b03979097168752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b60405180910390a383516001600160a01b03908116600090815260056020908152604080832082890151909416835292815282822060808801518352905290812054841561253c576124b48160601c90565b6001600160a01b0316336001600160a01b0316146125145760405162461bcd60e51b815260206004820152601c60248201527f6d67762f7570646174654f666665722f756e617574686f72697a6564000000006044820152606401610a85565b603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020291505b841580612556575060a0860151604882901c62ffffff1614155b8061256d575060c0860151602082901c61ffff1614155b8061258e575061012086015160601c62ffffff16603082901c62ffffff1614155b156126385761012086015160009060601c62ffffff1690506125fe338860a00151838a60c0015160201b65ffff000000001660309190911b68ffffff0000000000001660489290921b6bffffff0000000000000000001660609390931b6001600160601b03191692909217171790565b87516001600160a01b039081166000908152600560209081526040808320828d0151909416835292815282822060808c0151835290522055505b5060c08501516101208601516000919060601c62ffffff168760a001510102633b9aca00029050818111156126785761267333838303611e9a565b61268c565b8181101561268c5761268c33828403611dd3565b506101408501516001600160601b031615806126b0575061014085015160e01c8314155b1561283c57821561273657608085015185516001600160a01b039081166000908152600460209081526040808320828b01519094168352928152828220878352905220546126fd916138a3565b85516001600160a01b039081166000908152600460209081526040808320828b0151909416835292815282822087835290522055612769565b60808501516101208601516127629160381b63ffffffff60381b1663ffffffff60381b19919091161790565b6101208601525b81156127e057608085015185516001600160a01b039081166000908152600460208181526040808420828c018051871686529083528185208986528352818520548c518716865293835281852090519095168452938152838320878452905291902060e09290921b6001600160e01b039091161790555b8380156127fa57506101408501516001600160601b031615155b1561283c576128358560000151866020015161281b88610140015160e01c90565b61014089015160c01c63ffffffff16896101200151612fc4565b6101208601525b60408501516060808701516000926001600160601b03909116911b6bffffffffffffffffffffffff60601b1660c085901b63ffffffff60c01b1660e087901b17171786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282206080909a0151825298909852909620959095555050505050565b6129096040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b60f882901c1515815260e882901c61ffff166020820152607882901c6001600160701b03166040820152606082811c62ffffff1690820152605882901c60ff1615156080820152603882901c63ffffffff90811660a083015260189290921c90911660c082015290565b60581b60ff60581b1660ff60581b19919091161790565b60008060008087886001600160a01b0316146129e85760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657257616e74732f313630626974730000006044820152606401610a85565b86876001600160a01b031614612a405760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657247697665732f313630626974730000006044820152606401610a85565b612a486148d0565b6001600160a01b03808c1682528a166020820152612a668b8b6118fe565b610100830181905260e083019190915260381c63ffffffff1660408083019182526001600160a01b03808e16600090815260046020908152838220928f1682529182528281209351815292905290205460608201526080810189905260a08101889052612ad161492e565b898152602081018990526001600160a01b03871660a082015287151560c082015260e0820151610100830151612b0791906120f8565b612b158261010001516120ac565b610100820151612b26906001612973565b82610100018181525050816101000151600260008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020819055507fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b960405160405180910390a1612bba818360016138c0565b612bc781608001516135d9565b866001600160a01b03168b6001600160a01b03168d6001600160a01b03167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec478460400151856060015186608001518760e00151604051612c40949392919093845260208401929092526040830152606082015260800190565b60405180910390a460408101516060820151608083015160e090930151919e909d50919b509950975050505050505050565b6001600160a01b0380851660009081526007602090815260408083208785168452825280832093861683529281528282203383529052205481811015612ced5760405162461bcd60e51b815260206004820152601060248201526f6d67762f6c6f77416c6c6f77616e636560801b6044820152606401610a85565b6001600160a01b0380861660008181526007602090815260408083208986168085529083528184209589168452948252808320338085529252918290208686039081905591517f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d92612d63928992909190614f3c565b60405180910390a35050505050565b612d9d6040518060800160405280600081526020016000815260200160008152602001600081525090565b60e082901c815263ffffffff60c083901c1660208201526001600160601b03606083811c8216604084015292169181019190915290565b612e08604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b606082811c8252604883901c62ffffff908116602080850191909152603085901c90911660408401529290921c61ffff169181019190915290565b600080636c49c32c60e01b83604051602401612e5f9190614f84565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b0390931692909217909152905060c0830135604881901c62ffffff169060601c60005a9050826040820482031015612f0157604080516060810182527f6d67762f6e6f74456e6f756768476173466f724d616b65725472616465000000815260006020820181905291810191909152612f0190606081fd5b600080612f0f848688613b32565b915091505a8303965081612f5557612f5560405180606001604052806e1b59dd8bdb585ad95c94995d995c9d608a1b81526020018960001b815260200183815250606081fd5b6000612f73612f6760208b018b614a05565b86308c60800135613b60565b905080612fb857612fb86040518060600160405280741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b81526020018a60001b815260200184815250606081fd5b50505050505050919050565b60008315613037576001600160a01b03808716600090815260046020908152604080832093891683529281528282208783529052205461300490846138a3565b6001600160a01b038088166000908152600460209081526040808320938a16835292815282822088835290522055613054565b63ffffffff60381b19821663ffffffff60381b603885901b161791505b821561309b576001600160a01b038681166000908152600460209081526040808320938916835292815282822086835290522080546001600160e01b031660e086901b1790555b50949350505050565b6001600160601b03198316925080156130c45765ffff0000000019821691505b506001600160a01b039485166000818152600460209081526040808320979098168083529681528782208683528152878220949094559081526005835285812094815293825284842092845291905291902055565b60781b6dffffffffffffffffffffffffffff60781b166dffffffffffffffffffffffffffff60781b19919091161790565b60008080805b848110156135ce57600060408901819052606089015285858281811061317857613178615016565b90506080020160006004811061319057613190615016565b60209081029190910135604089810191825289516001600160a01b039081166000908152600485528281208c86018051841683529086528382208551835286528382205460608e019081528d518416835260058752848320915190931682528552828120935181529290935290205460c0890152516001600160601b0316158061325c575085858281811061322757613227615016565b90506080020160036004811061323f5761323f615016565b602002013561325a8860c0015162ffffff60489190911c1690565b115b6135c65785858281811061327257613272615016565b90506080020160016004811061328a5761328a615016565b60200201358686838181106132a1576132a1615016565b9050608002016001600481106132b9576132b9615016565b60200201356001600160601b0316146133145760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657257616e74732f393662697473000000006044820152606401610a85565b85858281811061332657613326615016565b90506080020160026004811061333e5761333e615016565b602002013586868381811061335557613355615016565b90506080020160026004811061336d5761336d615016565b60200201356001600160601b0316146133c85760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657247697665732f393662697473000000006044820152606401610a85565b8585828181106133da576133da615016565b9050608002016001600481106133f2576133f2615016565b6020020135608088015285858281811061340e5761340e615016565b90506080020160026004811061342657613426615016565b602002013560a0880152610100870151613441906001612973565b610100880181905287516001600160a01b039081166000908152600260209081526040808320828d015190941683529290529081209190915580806134868b8b613c48565b925092509250806f6d67762f74726164655375636365737360801b036134ad576001870196505b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b14613501576134fa8a600001518b602001516134e18d6060015160e01c90565b60608e015160c01c63ffffffff168e6101000151612fc4565b6101008b01525b6101008a0151613512906000612973565b8a610100018181525050896101000151600260008c600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008c602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055506135808b8b614248565b61358a8b8b61434a565b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b146135b0576135b08b8b858585614436565b8a60400151860195508a60600151850194505050505b600101613150565b509450945094915050565b8015611dd057604051600090339083908381818185875af1925050503d8060008114613621576040519150601f19603f3d011682016040523d82523d6000602084013e613626565b606091505b505090508061098b5760405162461bcd60e51b815260206004820152601760248201527f6d67762f73656e6450656e616c747952657665727465640000000000000000006044820152606401610a85565b60008060008060008560e0015190506000866080015182146136cc5786516001600160a01b039081166000908152600460209081526040808320828c01519094168352928152828220858352905220546136d3565b8661014001515b90506001600160601b03811661372c5761012087015160381c63ffffffff1687516001600160a01b039081166000908152600460209081526040808320828d015190941683529281528282208483529052205490925090505b6137378782846144bc565b156137d15760005b60c082901c63ffffffff16156137b9575086516001600160a01b039081166000908152600460209081526040808320828c0151909416835292815282822063ffffffff60c086901c168084529152919020549061379d8983836144bc565b156137ad578093508192506137b3565b506137b9565b5061373f565b8260c083901c63ffffffff16909550935061385a9050565b60005b6137de8260e01c90565b156138475760006137ef8360e01c90565b89516001600160a01b039081166000908152600460209081526040808320828f0151909416835292815282822084835290522054925090506138328983836144bc565b1561383d5750613847565b92509050806137d4565b6138518260e01c90565b94509192508291505b8660800151841461386b5783613875565b61014087015160e01c5b876080015184146138865783613896565b61014088015160c01c63ffffffff165b9550955050505050915091565b60c01b63ffffffff60c01b1663ffffffff60c01b19919091161790565b8080156138e757508260c001516138de5760008260a00151116138e7565b60008260800151115b80156138f7575060008260400151115b15613ab35781516001600160a01b03908116600090815260056020908152604080832082870151909416835292815282822083860151835290529081205460c084015280806139468686613c48565b608088015160a089015160408a015160608b015160c08c015196995094975092955090939092906e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613a3d5760408b01518b51116139995760006139a2565b60408b01518b51035b60808b015260608b81015160208d01510360a08c01528a015160c01c63ffffffff168a6040018181525050600460008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b602001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b604001518152602001908152602001600020548a60600181815250505b613a5d8b8b886e1b59dd8bdb9bdd115e1958dd5d1959608a1b14156138c0565b60408a0183905260808a0185905260a08a0184905260608a0182905260c08a018190526e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613aa657613aa68b8b8a8a8a614436565b5050505050505050505050565b613ad28260000151836020015160008560400151866101000151612fc4565b6101008301819052613ae5906000612973565b610100830181905282516001600160a01b0390811660009081526002602090815260408083208288015190941683529290522055613b238383614248565b613b2d838361434a565b505050565b600080613b3d61497e565b60648185516020870160008a8af192508060448415020151915050935093915050565b6000806323b872dd60e01b858585604051602401613b8093929190614f3c565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080876001600160a01b031683604051613bd0919061502c565b6000604051808303816000865af19150503d8060008114613c0d576040519150601f19603f3d011682016040523d82523d6000602084013e613c12565b606091505b5091509150818015613c3c575080511580613c3c575080806020019051810190613c3c9190615067565b98975050505050505050565b600080600080613c6885606001516001600160601b0360609190911c1690565b90506000613c8086606001516001600160601b031690565b608087015160a0880151919250908083028483021115613cc05750600095508594506e1b59dd8bdb9bdd115e1958dd5d1959608a1b935061424192505050565b8860c001518015613cd057508183105b80613ce757508860c00151158015613ce757508084105b15613cff576080880183905260a08801849052613d76565b8860c0015115613d4a57838202838181613d1b57613d1b615000565b0615613d28576001613d2b565b60005b60ff16848281613d3d57613d3d615000565b040160a08a015250613d76565b83600003613d5e5760808801839052613d76565b8381840281613d6f57613d6f615000565b0460808901525b50505050600080306001600160a01b031663aa4dd28260e01b878960a00151604051602401613da69291906150ea565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051613de4919061502c565b6000604051808303816000865af19150503d8060008114613e21576040519150601f19603f3d011682016040523d82523d6000602084013e613e26565b606091505b50915091508115613f805780806020019051810190613e459190615112565b94506f6d67762f74726164655375636365737360801b925085602001516001600160a01b031686600001516001600160a01b03167f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d88604001518a60a001518a608001518b60a00151604051613edd94939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405180910390a360e086015160501c60ff1615613f5b5760e086015160a088015160405163cac1827160e01b815260609290921c9163cac1827191613f28918a91906004016150ea565b600060405180830381600087803b158015613f4257600080fd5b505af1158015613f56573d6000803e3d6000fd5b505050505b6080860151604088018051909101905260a08601516060880180519091019052614206565b602081015160408201516060830151909650945092506e1b59dd8bdb585ad95c94995d995c9d608a1b831480613fcd575082741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b145b80613fee575082731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b145b156141005785602001516001600160a01b031686600001516001600160a01b03167f1d59c048edb5397821854bd12cbe02242b82101c677f949d076d14eb7bd8343688604001518a60a001518a608001518b60a001518960405161407d9594939291909485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b60405180910390a360e086015160501c60ff16156140fb5760e086015160a0880151604051631159507360e01b815260609290921c916311595073916140c8918a91906004016150ea565b600060405180830381600087803b1580156140e257600080fd5b505af11580156140f6573d6000803e3d6000fd5b505050505b614206565b827f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000000361416f5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000006044820152606401610a85565b82741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b036141ce5760405162461bcd60e51b81526020600482015260156024820152741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b6044820152606401610a85565b60405162461bcd60e51b815260206004820152600d60248201526c36b3bb17b9bbb0b822b93937b960991b6044820152606401610a85565b61423e86600001518760200151886040015189606001518a60c00151886f6d67762f74726164655375636365737360801b14156130a4565b50505b9250925092565b6101008101516000906127109060e81c61ffff168460400151028161426f5761426f615000565b04905080156142e557604083018051829003905260e0830181905281516000546142a391906001600160a01b031683614562565b6142e55760405162461bcd60e51b81526020600482015260136024820152721b59dd8bd99959551c985b9cd9995c91985a5b606a1b6044820152606401610a85565b604083015115613b2d5761430682600001518460a001518560400151614562565b613b2d5760405162461bcd60e51b815260206004820152601560248201527436b3bb17a6b3bb2330b4b62a37a830bcaa30b5b2b960591b6044820152606401610a85565b60a08201518151602083015160408086015160608701519151631154020b60e01b81526001600160a01b039485166004820152928416602484015260448301526064820152911690631154020b90608401600060405180830381600087803b1580156143b557600080fd5b505af11580156143c9573d6000803e3d6000fd5b5050505060006143e782602001518460a00151308660600151613b60565b905080613b2d5760405162461bcd60e51b815260206004820152601760248201527f6d67762f74616b65724661696c546f506179546f74616c0000000000000000006044820152606401610a85565b806f6d67762f74726164655375636365737360801b036144595761445984614637565b60c084015160481c62ffffff1680841115614472578093505b61448085858303858561467c565b84019350816f6d67762f74726164655375636365737360801b146144b4576144a885856147d2565b60808701805190910190525b505050505050565b6000816000036144ce57506001611343565b60408401516060858101516001600160601b039186901c82169291861691908084028284028082036145555789516001600160a01b039081166000908152600560209081526040808320828f015190941683529281528282208b835290529081205460481c62ffffff1660a08c015194029590930294909410159550611343945050505050565b1194506113439350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839182918816906145c090859061502c565b6000604051808303816000865af19150503d80600081146145fd576040519150601f19603f3d011682016040523d82523d6000602084013e614602565b606091505b509150915081801561462c57508051158061462c57508080602001905181019061462c9190615067565b979650505050505050565b614657816020015161464d8360c0015160601c90565b8360a00151614562565b611dd057602081015160005460a083015161098b92916001600160a01b031690614562565b600080633d3d130d60e01b866040518060400160405280878152602001868152506040516024016146ae92919061512b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319939093169290921790915260c087015190915060601c60005a90508660408204820310156147465760405162461bcd60e51b815260206004820181905260248201527f6d67762f6e6f74456e6f756768476173466f724d616b6572506f7374686f6f6b6044820152606401610a85565b600080614754848a87613b32565b915091505a83039550816147c55789602001516001600160a01b03168a600001516001600160a01b03167f51d5a3ecf332626d83c8207fe9bd22f38801f578c7eb222e2d811cd1b4c629a58c60400151846040516147bc929190918252602082015260400190565b60405180910390a35b5050505050949350505050565b60c082015160009062ffffff604882901c81169161ffff602082901c1660309190911c909116820102633b9aca00028184111561480d578193505b61010085015160009060601c62ffffff1660e08701519086019060401c61ffff16633b9aca0002029050818111156148425750805b61485b6148538760c0015160601c90565b828403611dd3565b95945050505050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610120016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600081525090565b60405180608001604052806004906020820280368337509192915050565b80356001600160a01b03811681146149b357600080fd5b919050565b600080600080600060a086880312156149d057600080fd5b6149d98661499c565b94506149e76020870161499c565b94979496505050506040830135926060810135926080909101359150565b600060208284031215614a1757600080fd5b6113438261499c565b600060208284031215614a3257600080fd5b5035919050565b600080600060608486031215614a4e57600080fd5b614a578461499c565b9250614a656020850161499c565b9150604084013590509250925092565b60008083601f840112614a8757600080fd5b50813567ffffffffffffffff811115614a9f57600080fd5b6020830191508360208260071b85010111156119f457600080fd5b8015158114611dd057600080fd5b600080600080600060808688031215614ae057600080fd5b614ae98661499c565b9450614af76020870161499c565b9350604086013567ffffffffffffffff811115614b1357600080fd5b614b1f88828901614a75565b9094509250506060860135614b3381614aba565b809150509295509295909350565b600080600080600080600060e0888a031215614b5c57600080fd5b614b658861499c565b9650614b736020890161499c565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b60008060008060808587031215614bb557600080fd5b614bbe8561499c565b9350614bcc6020860161499c565b9250614bda6040860161499c565b9396929550929360600135925050565b600060208284031215614bfc57600080fd5b813561134381614aba565b60008060408385031215614c1a57600080fd5b614c238361499c565b9150614c316020840161499c565b90509250929050565b600080600080600080600080610100898b031215614c5757600080fd5b614c608961499c565b9750614c6e60208a0161499c565b979a9799505050506040860135956060810135956080820135955060a0820135945060c0820135935060e0909101359150565b60008060008060008060c08789031215614cba57600080fd5b614cc38761499c565b9550614cd16020880161499c565b945060408701359350606087013592506080870135614cef81614aba565b9150614cfd60a0880161499c565b90509295509295509295565b600080828403610140811215614d1e57600080fd5b61012080821215614d2e57600080fd5b849350610f7c81860161499c565b60008060008060808587031215614d5257600080fd5b614d5b8561499c565b9350614d696020860161499c565b9250604085013591506060850135614d8081614aba565b939692955090935050565b60008060008060008060008060006101208a8c031215614daa57600080fd5b614db38a61499c565b9850614dc160208b0161499c565b9750614dcf60408b0161499c565b9650614ddd60608b0161499c565b955060808a0135945060a08a0135935060c08a013560ff81168114614e0157600080fd5b8093505060e08a013591506101008a013590509295985092959850929598565b60008060008060008060a08789031215614e3a57600080fd5b614e438761499c565b9550614e516020880161499c565b9450604087013567ffffffffffffffff811115614e6d57600080fd5b614e7989828a01614a75565b9095509350506060870135614e8d81614aba565b9150614cfd6080880161499c565b60008060008060808587031215614eb157600080fd5b614eba8561499c565b9350614ec86020860161499c565b9250614ed66040860161499c565b9150614ee46060860161499c565b905092959194509250565b600080600080600060a08688031215614f0757600080fd5b614f108661499c565b9450614f1e6020870161499c565b935060408601359250606086013591506080860135614b3381614aba565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60008060408385031215614f7357600080fd5b505080516020909101519092909150565b61012081016001600160a01b0380614f9b8561499c565b16835280614fab6020860161499c565b1660208401525060408301356040830152606083013560608301526080830135608083015260a083013560a083015260c083013560c083015260e083013560e083015261010080840135818401525092915050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000825160005b8181101561504d5760208186018101518583015201615033565b8181111561505c576000828501525b509190910192915050565b60006020828403121561507957600080fd5b815161134381614aba565b60018060a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b61014081016150f98285615084565b6001600160a01b03929092166101209190910152919050565b60006020828403121561512457600080fd5b5051919050565b610160810161513a8285615084565b82516101208301526020830151610140830152939250505056fea26469706673582212209a27c46efe9a049a0c8d78cb7362a0c516bbb9784d448b972f2886aca3b09ff464736f6c634300080e003360a06040523480156200001157600080fd5b50604051620055e4380380620055e4833981016040819052620000349162000484565b828282604051806040016040528060088152602001674d616e67726f766560c01b815250808484847f72201d073f249840099a96530e189c4291c1852040b1e96ff1f606db656be4ff60405160405180910390a1620000938362000165565b6200009e82620001c4565b620000a98162000277565b620000b48362000327565b5050815160208084019190912060408051808201825260018152603160f81b9084015280517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f938101939093528201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001905060408051601f19818403018152919052805160209091012060805250620004c99650505050505050565b6200016f620003d8565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f30906020015b60405180910390a150565b620001ce620003d8565b61ffff81168114620002275760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f31366269747300000000000060448201526064015b60405180910390fd5b62000243816001546200044960201b62001e221790919060201c565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001620001b9565b62000281620003d8565b808162ffffff1614620002d75760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f323462697473000000000000000060448201526064016200021e565b620002f3816001546200046760201b62001e451790919060201c565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001620001b9565b62000331620003d8565b6001600160a01b038116620003895760405162461bcd60e51b815260206004820152601360248201527f6d67762f636f6e6669672f676f762f6e6f74300000000000000000000000000060448201526064016200021e565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001620001b9565b6003546001600160a01b0316331480620003f157503330145b806200040657506003546001600160a01b0316155b620004475760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b60448201526064016200021e565b565b60401b69ffff00000000000000001661ffff60401b19919091161790565b60281b67ffffff00000000001662ffffff60281b19919091161790565b6000806000606084860312156200049a57600080fd5b83516001600160a01b0381168114620004b257600080fd5b602085015160409095015190969495509392505050565b6080516150f8620004ec60003960008181610364015261177e01526150f86000f3fe60806040526004361061024a5760003560e01c80636d27de6711610139578063b60d4288116100b6578063dc7e98df1161007a578063dc7e98df146108a8578063def5ddaa146108c8578063fbb66910146108e8578063fbfa77cf14610908578063fbffe5fd14610928578063fcaa7e2e1461094857600080fd5b8063b60d4288146107e4578063c7bb25d0146107ec578063cbf75c9a14610833578063d0ee509914610868578063db20266f1461088857600080fd5b8063aa4dd282116100fd578063aa4dd28214610744578063ab033ea914610764578063ad97db1b14610784578063b09d2a16146107a4578063b2b12057146107c457600080fd5b80636d27de671461061457806370a08231146106545780637ecebe00146106815780638c66715c146106ae57806395999ee31461072457600080fd5b80635722647b116101c7578063644e67031161018b578063644e6703146104cc5780636804f613146105835780636817031b146105a357806368c13d6b146105c35780636a4f76911461060157600080fd5b80635722647b146103f657806359eba454146104345780635a611f4e146104545780635aa6e675146104745780635cd82390146104ac57600080fd5b806330adf81f1161020e57806330adf81f146103105780633644e5151461035257806341c0e1b51461038657806346e142fa1461039b57806349f6d2dc146103e357600080fd5b80630b73a18f1461025f578063230244081461027f578063275074581461029257806327d097c6146102d05780632e1a7d4d146102f057600080fd5b3661025a5761025833610968565b005b600080fd5b34801561026b57600080fd5b5061025861027a366004614926565b61098f565b61025861028d366004614973565b610968565b34801561029e57600080fd5b506102bb6102ad36600461498e565b6001600160601b0316151590565b60405190151581526020015b60405180910390f35b3480156102dc57600080fd5b506102586102eb3660046149a7565b610a2d565b3480156102fc57600080fd5b506102bb61030b36600461498e565b610b08565b34801561031c57600080fd5b506103447fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a281565b6040519081526020016102c7565b34801561035e57600080fd5b506103447f000000000000000000000000000000000000000000000000000000000000000081565b34801561039257600080fd5b50610258610b62565b3480156103a757600080fd5b506103bb6103b6366004614a36565b610baa565b604080519586526020860194909452928401919091526060830152608082015260a0016102c7565b6103446103f1366004614aaf565b610bd6565b34801561040257600080fd5b506103446104113660046149a7565b600560209081526000938452604080852082529284528284209052825290205481565b34801561044057600080fd5b506102bb61044f366004614b0d565b610d41565b34801561046057600080fd5b5061025861046f366004614b58565b610dca565b34801561048057600080fd5b50600354610494906001600160a01b031681565b6040516001600160a01b0390911681526020016102c7565b3480156104b857600080fd5b506102586104c7366004614973565b610e24565b3480156104d857600080fd5b506104ec6104e7366004614b75565b610e84565b6040805183516001600160a01b0316815260208085015115158183015284830151151582840152606080860151818401526080808701518185015260a0968701511515878501528551151560c0808601919091529286015160e0850152938501516101008401528401516101208301529183015115156101408201529282015161016084015201516101808201526101a0016102c7565b34801561058f57600080fd5b5061025861059e366004614b58565b610f87565b3480156105af57600080fd5b506102586105be366004614973565b610fd1565b3480156105cf57600080fd5b506103446105de3660046149a7565b600460209081526000938452604080852082529284528284209052825290205481565b61025861060f366004614ba8565b611027565b34801561062057600080fd5b5061063461062f366004614c0f565b61113a565b6040805194855260208501939093529183015260608201526080016102c7565b34801561066057600080fd5b5061034461066f366004614973565b60066020526000908152604090205481565b34801561068d57600080fd5b5061034461069c366004614973565b60086020526000908152604090205481565b3480156106ba57600080fd5b506106ce6106c93660046149a7565b611171565b60408051835181526020808501518183015284830151828401526060948501518583015283516001600160a01b0316608083015283015160a08201529082015160c082015291015160e0820152610100016102c7565b34801561073057600080fd5b5061025861073f36600461498e565b61124d565b34801561075057600080fd5b5061034461075f366004614c77565b6112e9565b34801561077057600080fd5b5061025861077f366004614973565b61141e565b34801561079057600080fd5b5061034461079f366004614caa565b6114c0565b3480156107b057600080fd5b506102586107bf366004614cf9565b611692565b3480156107d057600080fd5b506103bb6107df366004614d8f565b61198b565b6102586119c7565b3480156107f857600080fd5b50610344610807366004614e09565b600760209081526000948552604080862082529385528385208152918452828420909152825290205481565b34801561083f57600080fd5b5061085361084e366004614b75565b6119d2565b604080519283526020830191909152016102c7565b34801561087457600080fd5b50610258610883366004614b75565b611acf565b34801561089457600080fd5b506102bb6108a3366004614b75565b611b40565b3480156108b457600080fd5b506102586108c33660046149a7565b611b7b565b3480156108d457600080fd5b506103446108e3366004614b75565b611c3b565b3480156108f457600080fd5b506102586109033660046149a7565b611c73565b34801561091457600080fd5b50600054610494906001600160a01b031681565b34801561093457600080fd5b50610634610943366004614e5d565b611d60565b34801561095457600080fd5b5061025861096336600461498e565b611d87565b60006109756000806119d2565b50905061098181611e64565b61098b8234611ea7565b5050565b610997611f03565b6001600160a01b0385811660008181526002602090815260408083209489168084529482529182902080546001600160f81b0316600160f81b17905581516001815291517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a3610a10858585611b7b565b610a1b858584611c73565b610a26858583610a2d565b5050505050565b610a35611f03565b808162ffffff1614610a8e5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f636f6e6669672f6f666665725f676173626173652f3234626974730060448201526064015b60405180910390fd5b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805462ffffff60601b191662ffffff60601b606088901b1617905590518481527fc5859916e5f3fc1ed4d2cfb8c7a6cf709580f228fa0c9d9e0fa468744c7e4a9191015b60405180910390a3505050565b6000610b143383611f6e565b60405133908390600081818185875af1925050503d8060008114610b54576040519150601f19603f3d011682016040523d82523d6000602084013e610b59565b606091505b50909392505050565b610b6a611f03565b60015464ff000000001916640100000000176001556040517fbe26733c2bf6ff3ea5ba8cfe744422bd49052ff9ed5685c9e81e6f9321dbaddd90600090a1565b6000806000806000610bc08a8a8a8a8a33612033565b939e929d50909b50995090975095505050505050565b6000610be06147d2565b610bea89896119d2565b6101208301819052610100830191909152610c0490612180565b610c188161010001518261012001516121cc565b3415610c2857610c283334611ea7565b61012081015160181c63ffffffff166001016080820181905263ffffffff811614610c8b5760405162461bcd60e51b81526020600482015260136024820152726d67762f6f6666657249644f766572666c6f7760681b6044820152606401610a85565b6080810151610120820151610cb79160181b66ffffffff0000001666ffffffff00000019919091161790565b6101208201526001600160a01b03808a16825288166020820152604081018790526060810186905260a0810185905260c0810184905260e08101839052610cff81600061221c565b61012081015181516001600160a01b03908116600090815260026020908152604080832082870151909416835292905220556080015198975050505050505050565b6001600160a01b038085166000818152600760209081526040808320888616808552908352818420338086529084528285209689168552959092528083208690555191939092917f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d91610db79188908890614eaa565b60405180910390a3506001949350505050565b610dd2611f03565b60015460ff60501b191660ff60501b605083901b161760015560405181151581527f9b84fe4d9ffc14a6f7ec50c18884ee0d4bb8165aa718a28558df12ab4bd32b14906020015b60405180910390a150565b610e2c611f03565b6001546001600160601b03166001600160601b0319606083901b16176001556040516001600160a01b03821681527ff592e42c32883b35bebfbf9d9b801570a25d5ccbba452310746ad2cfd20d548f90602001610e19565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152610efa6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b600080610f0786866119d2565b91509150610f71826040805160c081018252606083811c8252605884901c60ff9081161515602080850191909152605086901c82161515848601529385901c61ffff1691830191909152602884901c62ffffff1660808301529290911c909116151560a082015290565b9350610f7c81612999565b925050509250929050565b610f8f611f03565b600154610f9c9082612a47565b60015560405181151581527fbf39fbfab835c119637f4dbc4fb0f428c559c210200405d1ec25ddb50a93f9d490602001610e19565b610fd9611f03565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f3090602001610e19565b61102f6147d2565b61103989896119d2565b610120830181905261010083019190915261105390612180565b6110678161010001518261012001516121cc565b3415611077576110773334611ea7565b6001600160a01b03808a16808352908916602080840182905260408085018b9052606085018a90526080850186905260a0850189905260c0850188905260e0850187905260009384526004825280842092845291815281832085845290529020546101408201526101208101516110ef82600161221c565b610120820151811461112e5761012082015182516001600160a01b03908116600090815260026020908152604080832082880151909416835292905220555b50505050505050505050565b60008060008061114e8a8a8a8a8a8a612a5e565b929650909450925090506111648a8a8786612d46565b9650965096509692505050565b61119c6040518060800160405280600081526020016000815260200160008152602001600081525090565b6111d0604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b6001600160a01b03808616600090815260046020908152604080832093881683529281528282208683529052205461120781612e46565b6001600160a01b038088166000908152600560209081526040808320938a1683529281528282208883529052205490935061124181612ea8565b92505050935093915050565b611255611f03565b808162ffffff16146112a95760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f32346269747300000000000000006044820152606401610a85565b6001546112b69082611e45565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001610e19565b600033301461133a5760405162461bcd60e51b815260206004820152601760248201527f6d67762f666c6173686c6f616e2f70726f7465637465640000000000000000006044820152606401610a85565b61135961134d6040850160208601614973565b83308660a00135612f17565b156113da576113836113716040850160208601614973565b60c085013560601c8560a00135612fff565b1561139857611391836130d6565b9050611418565b60408051606081018252731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b8152600060208201819052918101919091526113d590606081fd5b611418565b60408051606081018252741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b81526000602082018190529181019190915261141890606081fd5b92915050565b611426611f03565b6001600160a01b0381166114725760405162461bcd60e51b815260206004820152601360248201527206d67762f636f6e6669672f676f762f6e6f743606c1b6044820152606401610a85565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001610e19565b6000806114cd86866119d2565b9150506114d981612180565b6001600160a01b038087166000818152600460209081526040808320948a1680845294825280832089845282528083205493835260058252808320948352938152838220888352905291909120546115318160601c90565b6001600160a01b0316336001600160a01b0316146115915760405162461bcd60e51b815260206004820152601d60248201527f6d67762f726574726163744f666665722f756e617574686f72697a65640000006044820152606401610a85565b6001600160601b038216156115f557826115c189896115b08660e01c90565b60c087901c63ffffffff1688613257565b93508084146115f3576001600160a01b03808a166000908152600260209081526040808320938c168352929052208490555b505b61160388888885858a613337565b841561163a57603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca000202935061163a3385611ea7565b866001600160a01b0316886001600160a01b03167fe2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b8860405161167f91815260200190565b60405180910390a3505050949350505050565b428410156116d75760405162461bcd60e51b81526020600482015260126024820152711b59dd8bdc195c9b5a5d0bd95e1c1a5c995960721b6044820152606401610a85565b6001600160a01b03878116600081815260086020908152604080832080546001810190915581517fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a2818501528f8716818401528e871660608201526080810195909552948b1660a085015260c084018a905260e084018590526101008085018a9052815180860390910181526101208501909152805191012061190160f01b6101408401527f0000000000000000000000000000000000000000000000000000000000000000610142840152610162830152906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611819573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061184f5750896001600160a01b0316816001600160a01b0316145b61189b5760405162461bcd60e51b815260206004820152601b60248201527f6d67762f7065726d69742f696e76616c69645369676e617475726500000000006044820152606401610a85565b87600760008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020819055508a6001600160a01b03168c6001600160a01b03167f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d8c8c8c60405161197593929190614eaa565b60405180910390a3505050505050505050505050565b60008060008060006119a18b8b8b8b8b8b612033565b9398509196509450925090506119b98b8b8886612d46565b965096509650965096915050565b6119d033610968565b565b6001546001600160a01b03838116600090815260026020908152604080832093861683529290522054605882901c60ff1615611ac857600080611a158460601c90565b604051636968abd360e01b81526001600160a01b03888116600483015287811660248301529190911690636968abd3906044016040805180830381865afa158015611a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a889190614ece565b91509150611a998261ffff81161490565b15611aab57611aa88483611e22565b93505b6001600160701b0381168103611ac557610f7c83826133ac565b50505b9250929050565b611ad7611f03565b6001600160a01b03828116600081815260026020908152604080832094861680845294825280832080546001600160f81b031690558051928352517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a35050565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054605881901c60ff1615155b949350505050565b611b83611f03565b6101f4811115611bcc5760405162461bcd60e51b815260206004820152601460248201527306d67762f636f6e6669672f6665652f3c3d3530360641b6044820152606401610a85565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805461ffff60e81b191661ffff60e81b60e888901b1617905590518481527f44a6d70a601a6f8a85c075467e9d7245897140cbf6dd505c9d9d764459f5fb649101610afb565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054603881901c63ffffffff16611b73565b611c7b611f03565b6001600160701b0381168114611cd35760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f64656e736974792f313132626974730000000000006044820152606401610a85565b6001600160a01b03808416600090815260026020908152604080832093861683529290522054611d0390826133ac565b6001600160a01b038481166000818152600260209081526040808320948816808452948252918290209490945551848152919290917f95f1a495c6d9d1a215995408f6ad898c2b33798d6eb3cf3220b4c6cc8b61b0649101610afb565b600080600080611d74898989898933612a5e565b929c919b50995090975095505050505050565b611d8f611f03565b61ffff81168114611de25760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f3136626974730000000000006044820152606401610a85565b600154611def9082611e22565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001610e19565b60401b69ffff00000000000000001669ffff000000000000000019919091161790565b60281b67ffffff00000000001667ffffff000000000019919091161790565b602081901c60ff1615611ea45760405162461bcd60e51b81526020600482015260086024820152671b59dd8bd919585960c21b6044820152606401610a85565b50565b6001600160a01b03821660008181526006602052604090819020805484019055517f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09490611ef79084815260200190565b60405180910390a25050565b6003546001600160a01b0316331480611f1b57503330145b80611f2f57506003546001600160a01b0316155b6119d05760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b6044820152606401610a85565b6001600160a01b03821660009081526006602052604090205481811015611fd75760405162461bcd60e51b815260206004820152601960248201527f6d67762f696e73756666696369656e7450726f766973696f6e000000000000006044820152606401610a85565b6001600160a01b038316600081815260066020526040908190208484039055517f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc6046906120269085815260200190565b60405180910390a2505050565b600080600080600061204361483e565b6001600160a01b03808d1682528b1660208201526120618c8c6119d2565b61010083015260e082015261207461489c565b6001600160a01b03881660a082015288151560c082015260e08201516101008301516120a091906121cc565b6120ae826101000151612180565b6040517fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b990600090a16120e381838d8d6133dd565b608084015192995090975095506120f990613862565b602080830151835160808085015160e0860151604080518d81529687018c905286019190915260608501526001600160a01b03808d1694938116939216917ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47910160405180910390a4806080015193508060e0015192505050965096509650965096915050565b605881901c60ff1615611ea45760405162461bcd60e51b81526020600482015260146024820152731b59dd8bdc99595b9d1c985b98de531bd8dad95960621b6044820152606401610a85565b6121d582611e64565b6121e18160f81c151590565b61098b5760405162461bcd60e51b815260206004820152600c60248201526b6d67762f696e61637469766560a01b6044820152606401610a85565b60c082015161ffff8116146122735760405162461bcd60e51b815260206004820152601e60248201527f6d67762f77726974654f666665722f67617370726963652f31366269747300006044820152606401610a85565b61010082015160401c61ffff168260c00151101561229e5761010082015160401c61ffff1660c08301525b61010082015160281c62ffffff168260a0015111156122ff5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f6761737265712f746f6f486967680000006044820152606401610a85565b60008260600151116123535760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f746f6f4c6f7700000000006044820152606401610a85565b61012082015160781c6001600160701b031661012083015160601c62ffffff168360a001510102826060015110156123cd5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f770000006044820152606401610a85565b60608201516001600160601b038116146124295760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f39366269747300000000006044820152606401610a85565b60408201516001600160601b038116146124855760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f77616e74732f39366269747300000000006044820152606401610a85565b60008061249184613900565b9150915083602001516001600160a01b031684600001516001600160a01b03167f2b101f9ef8ca2761d91bea55ab50a4d051e9248088ff7314ddb8826839544c2a33876040015188606001518960c001518a60a001518b608001518a60405161253697969594939291906001600160a01b03979097168752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b60405180910390a383516001600160a01b039081166000908152600560209081526040808320828901519094168352928152828220608088015183529052908120548415612610576125888160601c90565b6001600160a01b0316336001600160a01b0316146125e85760405162461bcd60e51b815260206004820152601c60248201527f6d67762f7570646174654f666665722f756e617574686f72697a6564000000006044820152606401610a85565b603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020291505b84158061262a575060a0860151604882901c62ffffff1614155b80612641575060c0860151602082901c61ffff1614155b80612662575061012086015160601c62ffffff16603082901c62ffffff1614155b1561270c5761012086015160009060601c62ffffff1690506126d2338860a00151838a60c0015160201b65ffff000000001660309190911b68ffffff0000000000001660489290921b6bffffff0000000000000000001660609390931b6001600160601b03191692909217171790565b87516001600160a01b039081166000908152600560209081526040808320828d0151909416835292815282822060808c0151835290522055505b5060c08501516101208601516000919060601c62ffffff168760a001510102633b9aca000290508181111561274c5761274733838303611f6e565b612760565b818110156127605761276033828403611ea7565b506101408501516001600160601b03161580612784575061014085015160e01c8314155b1561291057821561280a57608085015185516001600160a01b039081166000908152600460209081526040808320828b01519094168352928152828220878352905220546127d191613b2c565b85516001600160a01b039081166000908152600460209081526040808320828b015190941683529281528282208783529052205561283d565b60808501516101208601516128369160381b63ffffffff60381b1663ffffffff60381b19919091161790565b6101208601525b81156128b457608085015185516001600160a01b039081166000908152600460208181526040808420828c018051871686529083528185208986528352818520548c518716865293835281852090519095168452938152838320878452905291902060e09290921b6001600160e01b039091161790555b8380156128ce57506101408501516001600160601b031615155b1561291057612909856000015186602001516128ef88610140015160e01c90565b61014089015160c01c63ffffffff16896101200151613257565b6101208601525b60408501516060808701516000926001600160601b03909116911b6bffffffffffffffffffffffff60601b1660c085901b63ffffffff60c01b1660e087901b17171786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282206080909a0151825298909852909620959095555050505050565b6129dd6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b60f882901c1515815260e882901c61ffff166020820152607882901c6001600160701b03166040820152606082811c62ffffff1690820152605882901c60ff1615156080820152603882901c63ffffffff90811660a083015260189290921c90911660c082015290565b60581b60ff60581b1660ff60581b19919091161790565b60008060008087886001600160a01b031614612abc5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657257616e74732f313630626974730000006044820152606401610a85565b86876001600160a01b031614612b145760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657247697665732f313630626974730000006044820152606401610a85565b612b1c61483e565b6001600160a01b03808c1682528a166020820152612b3a8b8b6119d2565b610100830181905260e083019190915260381c63ffffffff1660408083019182526001600160a01b03808e16600090815260046020908152838220928f1682529182528281209351815292905290205460608201526080810189905260a08101889052612ba561489c565b898152602081018990526001600160a01b03871660a082015287151560c082015260e0820151610100830151612bdb91906121cc565b612be9826101000151612180565b610100820151612bfa906001612a47565b82610100018181525050816101000151600260008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020819055507fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b960405160405180910390a1612c8e81836001613b49565b612c9b8160800151613862565b866001600160a01b03168b6001600160a01b03168d6001600160a01b03167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec478460400151856060015186608001518760e00151604051612d14949392919093845260208401929092526040830152606082015260800190565b60405180910390a460408101516060820151608083015160e090930151919e909d50919b509950975050505050505050565b6001600160a01b0380851660009081526007602090815260408083208785168452825280832093861683529281528282203383529052205481811015612dc15760405162461bcd60e51b815260206004820152601060248201526f6d67762f6c6f77416c6c6f77616e636560801b6044820152606401610a85565b6001600160a01b0380861660008181526007602090815260408083208986168085529083528184209589168452948252808320338085529252918290208686039081905591517f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d92612e37928992909190614eaa565b60405180910390a35050505050565b612e716040518060800160405280600081526020016000815260200160008152602001600081525090565b60e082901c815263ffffffff60c083901c1660208201526001600160601b03606083811c8216604084015292169181019190915290565b612edc604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b606082811c8252604883901c62ffffff908116602080850191909152603085901c90911660408401529290921c61ffff169181019190915290565b6000806323b872dd60e01b858585604051602401612f3793929190614eaa565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080876001600160a01b031683604051612f879190614ef2565b6000604051808303816000865af19150503d8060008114612fc4576040519150601f19603f3d011682016040523d82523d6000602084013e612fc9565b606091505b5091509150818015612ff3575080511580612ff3575080806020019051810190612ff39190614f2d565b98975050505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928391829188169061305d908590614ef2565b6000604051808303816000865af19150503d806000811461309a576040519150601f19603f3d011682016040523d82523d6000602084013e61309f565b606091505b50915091508180156130c95750805115806130c95750808060200190518101906130c99190614f2d565b93505050505b9392505050565b600080636c49c32c60e01b836040516024016130f29190614f4a565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b0390931692909217909152905060c0830135604881901c62ffffff169060601c60005a905082604082048203101561319457604080516060810182527f6d67762f6e6f74456e6f756768476173466f724d616b6572547261646500000081526000602082018190529181019190915261319490606081fd5b6000806131a2848688613db1565b915091505a83039650816131e8576131e860405180606001604052806e1b59dd8bdb585ad95c94995d995c9d608a1b81526020018960001b815260200183815250606081fd5b60006132066131fa60208b018b614973565b86308c60800135612f17565b90508061324b5761324b6040518060600160405280741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b81526020018a60001b815260200184815250606081fd5b50505050505050919050565b600083156132ca576001600160a01b0380871660009081526004602090815260408083209389168352928152828220878352905220546132979084613b2c565b6001600160a01b038088166000908152600460209081526040808320938a168352928152828220888352905220556132e7565b63ffffffff60381b19821663ffffffff60381b603885901b161791505b821561332e576001600160a01b038681166000908152600460209081526040808320938916835292815282822086835290522080546001600160e01b031660e086901b1790555b50949350505050565b6001600160601b03198316925080156133575765ffff0000000019821691505b506001600160a01b039485166000818152600460209081526040808320979098168083529681528782208683528152878220949094559081526005835285812094815293825284842092845291905291902055565b60781b6dffffffffffffffffffffffffffff60781b166dffffffffffffffffffffffffffff60781b19919091161790565b60008080805b8481101561385757600060408901819052606089015285858281811061340b5761340b614fdc565b90506080020160006004811061342357613423614fdc565b60209081029190910135604089810191825289516001600160a01b039081166000908152600485528281208c86018051841683529086528382208551835286528382205460608e019081528d518416835260058752848320915190931682528552828120935181529290935290205460c0890152516001600160601b031615806134ef57508585828181106134ba576134ba614fdc565b9050608002016003600481106134d2576134d2614fdc565b60200201356134ed8860c0015162ffffff60489190911c1690565b115b61384f5785858281811061350557613505614fdc565b90506080020160016004811061351d5761351d614fdc565b602002013586868381811061353457613534614fdc565b90506080020160016004811061354c5761354c614fdc565b60200201356001600160601b0316146135a75760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657257616e74732f393662697473000000006044820152606401610a85565b8585828181106135b9576135b9614fdc565b9050608002016002600481106135d1576135d1614fdc565b60200201358686838181106135e8576135e8614fdc565b90506080020160026004811061360057613600614fdc565b60200201356001600160601b03161461365b5760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657247697665732f393662697473000000006044820152606401610a85565b85858281811061366d5761366d614fdc565b90506080020160016004811061368557613685614fdc565b602002013560808801528585828181106136a1576136a1614fdc565b9050608002016002600481106136b9576136b9614fdc565b602002013560a08801526101008701516136d4906001612a47565b610100880181905287516001600160a01b039081166000908152600260209081526040808320828d015190941683529290529081209190915580806137198b8b613ddf565b925092509250806f6d67762f74726164655375636365737360801b03613740576001870196505b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b146137945761378d8a600001518b602001516137748d6060015160e01c90565b60608e015160c01c63ffffffff168e6101000151613257565b6101008b01525b6101008a01516137a5906000612a47565b8a610100018181525050896101000151600260008c600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008c602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055506138138b8b6143df565b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b14613839576138398b8b8585856144e1565b8a60400151860195508a60600151850194505050505b6001016133e3565b509450945094915050565b8015611ea457604051600090339083908381818185875af1925050503d80600081146138aa576040519150601f19603f3d011682016040523d82523d6000602084013e6138af565b606091505b505090508061098b5760405162461bcd60e51b815260206004820152601760248201527f6d67762f73656e6450656e616c747952657665727465640000000000000000006044820152606401610a85565b60008060008060008560e0015190506000866080015182146139555786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282208583529052205461395c565b8661014001515b90506001600160601b0381166139b55761012087015160381c63ffffffff1687516001600160a01b039081166000908152600460209081526040808320828d015190941683529281528282208483529052205490925090505b6139c0878284614544565b15613a5a5760005b60c082901c63ffffffff1615613a42575086516001600160a01b039081166000908152600460209081526040808320828c0151909416835292815282822063ffffffff60c086901c1680845291529190205490613a26898383614544565b15613a3657809350819250613a3c565b50613a42565b506139c8565b8260c083901c63ffffffff169095509350613ae39050565b60005b613a678260e01c90565b15613ad0576000613a788360e01c90565b89516001600160a01b039081166000908152600460209081526040808320828f015190941683529281528282208483529052205492509050613abb898383614544565b15613ac65750613ad0565b9250905080613a5d565b613ada8260e01c90565b94509192508291505b86608001518414613af45783613afe565b61014087015160e01c5b87608001518414613b0f5783613b1f565b61014088015160c01c63ffffffff165b9550955050505050915091565b60c01b63ffffffff60c01b1663ffffffff60c01b19919091161790565b808015613b7057508260c00151613b675760008260a0015111613b70565b60008260800151115b8015613b80575060008260400151115b15613d3c5781516001600160a01b03908116600090815260056020908152604080832082870151909416835292815282822083860151835290529081205460c08401528080613bcf8686613ddf565b608088015160a089015160408a015160608b015160c08c015196995094975092955090939092906e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613cc65760408b01518b5111613c22576000613c2b565b60408b01518b51035b60808b015260608b81015160208d01510360a08c01528a015160c01c63ffffffff168a6040018181525050600460008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b602001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b604001518152602001908152602001600020548a60600181815250505b613ce68b8b886e1b59dd8bdb9bdd115e1958dd5d1959608a1b1415613b49565b60408a0183905260808a0185905260a08a0184905260608a0182905260c08a018190526e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613d2f57613d2f8b8b8a8a8a6144e1565b5050505050505050505050565b613d5b8260000151836020015160008560400151866101000151613257565b6101008301819052613d6e906000612a47565b610100830181905282516001600160a01b0390811660009081526002602090815260408083208288015190941683529290522055613dac83836143df565b505050565b600080613dbc6148ec565b60648185516020870160008a8af192508060448415020151915050935093915050565b600080600080613dff85606001516001600160601b0360609190911c1690565b90506000613e1786606001516001600160601b031690565b608087015160a0880151919250908083028483021115613e575750600095508594506e1b59dd8bdb9bdd115e1958dd5d1959608a1b93506143d892505050565b8860c001518015613e6757508183105b80613e7e57508860c00151158015613e7e57508084105b15613e96576080880183905260a08801849052613f0d565b8860c0015115613ee157838202838181613eb257613eb2614fc6565b0615613ebf576001613ec2565b60005b60ff16848281613ed457613ed4614fc6565b040160a08a015250613f0d565b83600003613ef55760808801839052613f0d565b8381840281613f0657613f06614fc6565b0460808901525b50505050600080306001600160a01b031663aa4dd28260e01b878960a00151604051602401613f3d929190615058565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051613f7b9190614ef2565b6000604051808303816000865af19150503d8060008114613fb8576040519150601f19603f3d011682016040523d82523d6000602084013e613fbd565b606091505b509150915081156141175780806020019051810190613fdc9190615080565b94506f6d67762f74726164655375636365737360801b925085602001516001600160a01b031686600001516001600160a01b03167f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d88604001518a60a001518a608001518b60a0015160405161407494939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405180910390a360e086015160501c60ff16156140f25760e086015160a088015160405163cac1827160e01b815260609290921c9163cac18271916140bf918a9190600401615058565b600060405180830381600087803b1580156140d957600080fd5b505af11580156140ed573d6000803e3d6000fd5b505050505b6080860151604088018051909101905260a0860151606088018051909101905261439d565b602081015160408201516060830151909650945092506e1b59dd8bdb585ad95c94995d995c9d608a1b831480614164575082741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b145b80614185575082731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b145b156142975785602001516001600160a01b031686600001516001600160a01b03167f1d59c048edb5397821854bd12cbe02242b82101c677f949d076d14eb7bd8343688604001518a60a001518a608001518b60a00151896040516142149594939291909485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b60405180910390a360e086015160501c60ff16156142925760e086015160a0880151604051631159507360e01b815260609290921c9163115950739161425f918a9190600401615058565b600060405180830381600087803b15801561427957600080fd5b505af115801561428d573d6000803e3d6000fd5b505050505b61439d565b827f6d67762f6e6f74456e6f756768476173466f724d616b65725472616465000000036143065760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000006044820152606401610a85565b82741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b036143655760405162461bcd60e51b81526020600482015260156024820152741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b6044820152606401610a85565b60405162461bcd60e51b815260206004820152600d60248201526c36b3bb17b9bbb0b822b93937b960991b6044820152606401610a85565b6143d586600001518760200151886040015189606001518a60c00151886f6d67762f74726164655375636365737360801b1415613337565b50505b9250925092565b6101008101516000906127109060e81c61ffff168460400151028161440657614406614fc6565b049050801561447c57604083018051829003905260e08301819052815160005461443a91906001600160a01b031683612fff565b61447c5760405162461bcd60e51b81526020600482015260136024820152721b59dd8bd99959551c985b9cd9995c91985a5b606a1b6044820152606401610a85565b604083015115613dac5761449d82600001518460a001518560400151612fff565b613dac5760405162461bcd60e51b815260206004820152601560248201527436b3bb17a6b3bb2330b4b62a37a830bcaa30b5b2b960591b6044820152606401610a85565b60c084015160481c62ffffff16808411156144fa578093505b6145088585830385856145ea565b84019350816f6d67762f74726164655375636365737360801b1461453c576145308585614740565b60808701805190910190525b505050505050565b600081600003614556575060016130cf565b60408401516060858101516001600160601b039186901c82169291861691908084028284028082036145dd5789516001600160a01b039081166000908152600560209081526040808320828f015190941683529281528282208b835290529081205460481c62ffffff1660a08c0151940295909302949094101595506130cf945050505050565b1194506130cf9350505050565b600080633d3d130d60e01b8660405180604001604052808781526020018681525060405160240161461c929190615099565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319939093169290921790915260c087015190915060601c60005a90508660408204820310156146b45760405162461bcd60e51b815260206004820181905260248201527f6d67762f6e6f74456e6f756768476173466f724d616b6572506f7374686f6f6b6044820152606401610a85565b6000806146c2848a87613db1565b915091505a83039550816147335789602001516001600160a01b03168a600001516001600160a01b03167f51d5a3ecf332626d83c8207fe9bd22f38801f578c7eb222e2d811cd1b4c629a58c604001518460405161472a929190918252602082015260400190565b60405180910390a35b5050505050949350505050565b60c082015160009062ffffff604882901c81169161ffff602082901c1660309190911c909116820102633b9aca00028184111561477b578193505b61010085015160009060601c62ffffff1660e08701519086019060401c61ffff16633b9aca0002029050818111156147b05750805b6147c96147c18760c0015160601c90565b828403611ea7565b95945050505050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610120016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600081525090565b60405180608001604052806004906020820280368337509192915050565b80356001600160a01b038116811461492157600080fd5b919050565b600080600080600060a0868803121561493e57600080fd5b6149478661490a565b94506149556020870161490a565b94979496505050506040830135926060810135926080909101359150565b60006020828403121561498557600080fd5b6130cf8261490a565b6000602082840312156149a057600080fd5b5035919050565b6000806000606084860312156149bc57600080fd5b6149c58461490a565b92506149d36020850161490a565b9150604084013590509250925092565b60008083601f8401126149f557600080fd5b50813567ffffffffffffffff811115614a0d57600080fd5b6020830191508360208260071b8501011115611ac857600080fd5b8015158114611ea457600080fd5b600080600080600060808688031215614a4e57600080fd5b614a578661490a565b9450614a656020870161490a565b9350604086013567ffffffffffffffff811115614a8157600080fd5b614a8d888289016149e3565b9094509250506060860135614aa181614a28565b809150509295509295909350565b600080600080600080600060e0888a031215614aca57600080fd5b614ad38861490a565b9650614ae16020890161490a565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b60008060008060808587031215614b2357600080fd5b614b2c8561490a565b9350614b3a6020860161490a565b9250614b486040860161490a565b9396929550929360600135925050565b600060208284031215614b6a57600080fd5b81356130cf81614a28565b60008060408385031215614b8857600080fd5b614b918361490a565b9150614b9f6020840161490a565b90509250929050565b600080600080600080600080610100898b031215614bc557600080fd5b614bce8961490a565b9750614bdc60208a0161490a565b979a9799505050506040860135956060810135956080820135955060a0820135945060c0820135935060e0909101359150565b60008060008060008060c08789031215614c2857600080fd5b614c318761490a565b9550614c3f6020880161490a565b945060408701359350606087013592506080870135614c5d81614a28565b9150614c6b60a0880161490a565b90509295509295509295565b600080828403610140811215614c8c57600080fd5b61012080821215614c9c57600080fd5b849350610f7c81860161490a565b60008060008060808587031215614cc057600080fd5b614cc98561490a565b9350614cd76020860161490a565b9250604085013591506060850135614cee81614a28565b939692955090935050565b60008060008060008060008060006101208a8c031215614d1857600080fd5b614d218a61490a565b9850614d2f60208b0161490a565b9750614d3d60408b0161490a565b9650614d4b60608b0161490a565b955060808a0135945060a08a0135935060c08a013560ff81168114614d6f57600080fd5b8093505060e08a013591506101008a013590509295985092959850929598565b60008060008060008060a08789031215614da857600080fd5b614db18761490a565b9550614dbf6020880161490a565b9450604087013567ffffffffffffffff811115614ddb57600080fd5b614de789828a016149e3565b9095509350506060870135614dfb81614a28565b9150614c6b6080880161490a565b60008060008060808587031215614e1f57600080fd5b614e288561490a565b9350614e366020860161490a565b9250614e446040860161490a565b9150614e526060860161490a565b905092959194509250565b600080600080600060a08688031215614e7557600080fd5b614e7e8661490a565b9450614e8c6020870161490a565b935060408601359250606086013591506080860135614aa181614a28565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60008060408385031215614ee157600080fd5b505080516020909101519092909150565b6000825160005b81811015614f135760208186018101518583015201614ef9565b81811115614f22576000828501525b509190910192915050565b600060208284031215614f3f57600080fd5b81516130cf81614a28565b61012081016001600160a01b0380614f618561490a565b16835280614f716020860161490a565b1660208401525060408301356040830152606083013560608301526080830135608083015260a083013560a083015260c083013560c083015260e083013560e083015261010080840135818401525092915050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60018060a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b61014081016150678285614ff2565b6001600160a01b03929092166101209190910152919050565b60006020828403121561509257600080fd5b5051919050565b61016081016150a88285614ff2565b82516101208301526020830151610140830152939250505056fea2646970667358221220499241dc243bdcb4e833b09a1b7eec4b8948311d5c1950899a510972d4b519f164736f6c634300080e003360a06040523480156200001157600080fd5b506040516200576a3803806200576a833981016040819052620000349162000612565b8181816040516200004590620005eb565b604051809103906000f08015801562000062573d6000803e3d6000fd5b5062015f9082828282813380620000c05760405162461bcd60e51b815260206004820152601860248201527f616363657373436f6e74726f6c6c65642f307841646d696e000000000000000060448201526064015b60405180910390fd5b80620000d66200026960201b620028d11760201c565b80546001600160a01b0319166001600160a01b03929092169190911790555062ffffff811681146200014b5760405162461bcd60e51b815260206004820152601b60248201527f4d616e67726f76654f666665722f676173726571546f6f4869676800000000006044820152606401620000b7565b6001600160a01b038216608052806200016f6200028d602090811b620028f517901c565b5550506001600160a01b038216620001bf5760405162461bcd60e51b815260206004820152601260248201527126bab63a34aab9b2b917983c2937baba32b960711b6044820152606401620000b7565b620001ca82620002b1565b505050505050336001600160a01b0316816001600160a01b0316146200025f57620001f5816200045b565b620001ff62000556565b604051633825b60160e11b81526001600160a01b038381166004830152919091169063704b6c0290602401600060405180830381600087803b1580156200024557600080fd5b505af11580156200025a573d6000803e3d6000fd5b505050505b5050505062000651565b7f7d382ebca3e46505071795e192d28166a3d4bd0685585591bc6c5b8df6769fd290565b7fae7e31c3220e851db9f204a28b279dfe52b973600b0a456991089c220ae7222490565b620002bb620005c5565b6001600160a01b0316336001600160a01b03161480620002ee57506080516001600160a01b0316336001600160a01b0316145b6200033c5760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f496e76616c696400000000000000006044820152606401620000b7565b6001600160a01b038116620003945760405162461bcd60e51b815260206004820152601c60248201527f6d67764f666665722f7365745f726f757465722f3078526f75746572000000006044820152606401620000b7565b80620003aa6200028d60201b620028f51760201c565b60010180546001600160a01b0319166001600160a01b039283161790556040516381bac14f60e01b8152306004820152908216906381bac14f90602401600060405180830381600087803b1580156200040257600080fd5b505af115801562000417573d6000803e3d6000fd5b50506040516001600160a01b03841681527f6de4326a8b9054d72d9dbab97d27bc4edffadee7d966f5af9cc4eafdaf8e54559250602001905060405180910390a150565b62000465620005c5565b6001600160a01b0316336001600160a01b031614620004c75760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f496e76616c696400000000000000006044820152606401620000b7565b6001600160a01b0381166200051f5760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e00000000000000006044820152606401620000b7565b80620005356200026960201b620028d11760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6000806200056e6200028d60201b620028f51760201c565b600101546001600160a01b0316905080620005c05760405162461bcd60e51b815260206004820152601160248201527036b3bb27b33332b917983c2937baba32b960791b6044820152606401620000b7565b919050565b6000620005dc6200026960201b620028d11760201c565b546001600160a01b0316919050565b610e25806200494583390190565b6001600160a01b03811681146200060f57600080fd5b50565b600080604083850312156200062657600080fd5b82516200063381620005f9565b60208401519092506200064681620005f9565b809150509250929050565b6080516141ff620007466000396000818161032e015281816106840152818161087d01528181610a2001528181610ade01528181610d110152818161108c0152818161152e015281816115b4015281816118020152818161185e015281816118f001528181611b7a01528181611c3501528181611cda01528181611e9d01528181611ef201528181612085015281816122910152818161232e0152818161248e015281816125d901528181612805015281816129af01528181612a3801528181612aca01528181612d6401528181612f36015281816130750152818161329e015281816133b70152613a9701526141ff6000f3fe60806040526004361061014f5760003560e01c8063ad97db1b116100b6578063eedc966a1161006f578063eedc966a1461042a578063f259cd271461044a578063f851a4401461046a578063f887ea401461047f578063f92495e514610494578063fc488a38146104b457600080fd5b8063ad97db1b14610368578063aefe840314610388578063d1baa1ef146103a8578063db11851e146103bd578063dec8c86b146103dd578063e4c34f841461040a57600080fd5b80636a1c7d05116101085780636a1c7d05146102525780636c49c32c146102a7578063704b6c02146102c75780637144df24146102e757806384b627f91461030757806399fa5e2d1461031c57600080fd5b806301e336671461015b57806310aded601461019057806337b966bf146101a55780633d3d130d146101d35780634e7effa8146101f35780635486c95f1461023f57600080fd5b3661015657005b600080fd5b34801561016757600080fd5b5061017b610176366004613b3e565b6104d4565b60405190151581526020015b60405180910390f35b6101a361019e366004613b7f565b6105d1565b005b3480156101b157600080fd5b506101c56101c0366004613b92565b610638565b604051610187929190613c18565b3480156101df57600080fd5b506101a36101ee366004613c59565b610a1e565b3480156101ff57600080fd5b5061023161020e366004613b3e565b600160209081526000938452604080852082529284528284209052825290205481565b604051908152602001610187565b61023161024d366004613b7f565b610b47565b610265610260366004613c9c565b610b68565b6040516101879190600060a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b3480156102b357600080fd5b506102316102c2366004613caf565b6115b0565b3480156102d357600080fd5b506101a36102e2366004613ccc565b61171d565b3480156102f357600080fd5b506101a3610302366004613ce9565b6117d5565b34801561031357600080fd5b5061017b611afc565b34801561032857600080fd5b506103507f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610187565b34801561037457600080fd5b50610231610383366004613d27565b611b1b565b34801561039457600080fd5b506101a36103a3366004613d7a565b611e70565b3480156103b457600080fd5b50610231611fba565b3480156103c957600080fd5b506101a36103d8366004613ccc565b612058565b3480156103e957600080fd5b506103fd6103f8366004613da6565b6121d2565b6040516101879190613e3b565b34801561041657600080fd5b50610231610425366004613e88565b612283565b34801561043657600080fd5b50610231610445366004613ccc565b612530565b34801561045657600080fd5b506101a3610465366004613ccc565b6125ac565b34801561047657600080fd5b506103506126ec565b34801561048b57600080fd5b50610350612705565b3480156104a057600080fd5b506103506104af366004613b3e565b612765565b3480156104c057600080fd5b506101a36104cf366004613ed9565b6127d8565b60006001600160a01b03831661053c5760405162461bcd60e51b815260206004820152602260248201527f4d756c7469557365722f7769746864726177546f6b656e2f307852656365697660448201526132b960f11b60648201526084015b60405180910390fd5b610544612705565b6040516310baa6cf60e11b81526001600160a01b03868116600483015233602483015285811660448301526064820185905291909116906321754d9e906084016020604051808303816000875af11580156105a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c79190613ef2565b90505b9392505050565b6105e96105e336839003830183613f25565b34612919565b6106355760405162461bcd60e51b815260206004820152601960248201527f4d756c7469557365722f7570646174654f666665724661696c000000000000006044820152606401610533565b50565b6001600160a01b0380831660009081526002602090815260408083208585168452825280832093871683529281528282208280529052908120546060918291908190805b82156107df577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166327507458816368c13d6b8b8b886040518463ffffffff1660e01b81526004016106d893929190613fd1565b602060405180830381865afa1580156106f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107199190613ff5565b6040518263ffffffff1660e01b815260040161073791815260200190565b602060405180830381865afa158015610754573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107789190613ef2565b1561078f578161078781614024565b92505061079d565b8061079981614024565b9150505b6001600160a01b0380891660009081526002602090815260408083208b851684528252808320938d16835292815282822095825294909452909220549161067c565b8167ffffffffffffffff8111156107f8576107f8613f0f565b604051908082528060200260200182016040528015610821578160200160208202803683370190505b5095508067ffffffffffffffff81111561083d5761083d613f0f565b604051908082528060200260200182016040528015610866578160200160208202803683370190505b50945083925060009150600090505b8215610a12577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166327507458816368c13d6b8b8b886040518463ffffffff1660e01b81526004016108d193929190613fd1565b602060405180830381865afa1580156108ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109129190613ff5565b6040518263ffffffff1660e01b815260040161093091815260200190565b602060405180830381865afa15801561094d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109719190613ef2565b156109a55782868361098281614024565b9450815181106109945761099461403d565b6020026020010181815250506109d0565b8285826109b181614024565b9350815181106109c3576109c361403d565b6020026020010181815250505b6001600160a01b0380891660009081526002602090815260408083208b851684528252808320938d168352928152828220958252949094529092205491610875565b50505050935093915050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0381161580610a5d5750336001600160a01b038216145b610a795760405162461bcd60e51b815260040161053390614053565b81602001356f6d67762f74726164655375636365737360801b03610aa657610aa083612e67565b50505050565b60408301803590610aba9060208601613ccc565b6001600160a01b0316610ad06020860186613ccc565b604080516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811682528735602083015292909216917f736a3993b9f8b1c5603896c76376792887f376b1fe7fc981e09a16530bf1e4e0910160405180910390a4610aa08383612ea5565b505050565b6000610b62610b5b36849003840184613f25565b3334613269565b92915050565b610b9a6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b600080610bad608085016060860161408a565b610bd357610bbe6020850185613ccc565b610bce6040860160208701613ccc565b610bf0565b610be36040850160208601613ccc565b610bf06020860186613ccc565b915091506000610bfe612705565b6001600160a01b031663333dbb0d83338860c0013560016040518563ffffffff1660e01b8152600401610c3494939291906140a7565b6020604051808303816000875af1158015610c53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c779190613ff5565b90508460c001358114610ccc5760405162461bcd60e51b815260206004820152601a60248201527f6d67764f726465722f6d6f2f7472616e73666572496e4661696c0000000000006044820152606401610533565b60005b610cdf61012087013560016140d0565b811015610e7d5761014086013515801590610cfe57508561014001355a105b610e7d5760008080806001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663fbffe5fd89898d608001358e60c001358f6060016020810190610d55919061408a565b610d60576001610d63565b60005b6040516001600160e01b031960e088901b1681526001600160a01b039586166004820152949093166024850152604484019190915260648301521515608482015260a4016080604051808303816000875af1158015610dc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dea91906140e8565b93509350935093508389600001818151610e0491906140d0565b905250602089018051849190610e1b9083906140d0565b905250604089018051839190610e329083906140d0565b905250606089018051829190610e499083906140d0565b90525083158015610e58575081155b15610e665750505050610e7d565b505050508080610e7590614024565b915050610ccf565b506000610e8a86866134d3565b9050610e9c606087016040880161408a565b1580610ea55750805b80610ebd5750610ebd6101208701610100880161408a565b610f055760405162461bcd60e51b81526020600482015260196024820152781b59dd93dc99195c8bdb5bcbdb9bd4185c9d1a585b119a5b1b603a1b6044820152606401610533565b845115610f7957610f14612705565b855160405163137476d160e11b81526001600160a01b0392909216916326e8eda291610f469188913391600401613fd1565b600060405180830381600087803b158015610f6057600080fd5b505af1158015610f74573d6000803e3d6000fd5b505050505b610f8b6101208701610100880161408a565b8015610f95575080155b1561137c5760408051610100810182526001600160a01b038086168252861660208201526060870151875161102393830191610fd0916140d0565b610fde9060a08b013561411e565b815260200187602001518960e00135610ff7919061411e565b8152602001611004611fba565b8152602001600081526020016000815260200160008152503334613269565b608086018190526110399033908590879061351c565b3361104a6040880160208901613ccc565b6001600160a01b03166110606020890189613ccc565b6001600160a01b03167f587734843819064f2153f96c808d1aeacaceccfa595ec4b9ed484c4bff687f7c7f00000000000000000000000000000000000000000000000000000000000000006110bb60808c0160608d0161408a565b8a5160208c01516040808e015160808f0151915161110b9695949392906001600160a01b03969096168652931515602086015260408501929092526060840152608083015260a082015260c00190565b60405180910390a484608001516000036112ab5761112f606087016040880161408a565b156111785760405162461bcd60e51b81526020600482015260196024820152781b59dd93dc99195c8bdb5bcbdb9bd4185c9d1a585b119a5b1b603a1b6044820152606401610533565b611196833387602001518960c00135611191919061411e565b6135a1565b6111e25760405162461bcd60e51b815260206004820152601a60248201527f6d67764f726465722f6d6f2f7472616e73666572496e4661696c0000000000006044820152606401610533565b60008560400151346111f491906140d0565b11156112a2576040850151600090339061120e90346140d0565b604051600081818185875af1925050503d806000811461124a576040519150601f19603f3d011682016040523d82523d6000602084013e61124f565b606091505b50509050806112a05760405162461bcd60e51b815260206004820152601f60248201527f6d67764f726465722f6d6f2f726566756e6450726f766973696f6e4661696c006044820152606401610533565b505b50505050919050565b6112b3612705565b6001600160a01b03166326e8eda2843388602001518a60c001356112d7919061411e565b6040518463ffffffff1660e01b81526004016112f593929190613fd1565b600060405180830381600087803b15801561130f57600080fd5b505af1158015611323573d6000803e3d6000fd5b50505050610160860135156112a257611341610160870135436140d0565b6001600160a01b038085166000908152600160209081526040808320938916835292815282822060808a015183529052205550505050919050565b611384612705565b6001600160a01b03166326e8eda2843388602001518a60c001356113a8919061411e565b6040518463ffffffff1660e01b81526004016113c693929190613fd1565b600060405180830381600087803b1580156113e057600080fd5b505af11580156113f4573d6000803e3d6000fd5b50505050600085604001513461140a91906140d0565b11156114db57611418612705565b6001600160a01b031663d7c153a886604001513461143691906140d0565b6040516001600160e01b031960e084901b16815233600482015260240160206040518083038185885af1158015611471573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906114969190613ef2565b6114db5760405162461bcd60e51b81526020600482015260166024820152751b59dd93dc99195c8bdb5bcbdc99599d5b9911985a5b60521b6044820152606401610533565b336114ec6040880160208901613ccc565b6001600160a01b03166115026020890189613ccc565b6001600160a01b03167f587734843819064f2153f96c808d1aeacaceccfa595ec4b9ed484c4bff687f7c7f000000000000000000000000000000000000000000000000000000000000000061155d60808c0160608d0161408a565b8a516020808d01516040808f015181516001600160a01b039097168752941515928601929092529084019190915260608301526080820152600060a082015260c00160405180910390a450505050919050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03811615806115f15750336001600160a01b038216145b61160d5760405162461bcd60e51b815260040161053390614053565b61161683613697565b61165b5760405162461bcd60e51b81526020600482015260166024820152751b59dd93d999995c8bd8589bdc9d0bdc995b9959d95960521b6044820152606401610533565b600061166b8460a001358561371c565b11156116b95760405162461bcd60e51b815260206004820152601860248201527f6d67764f666665722f61626f72742f7075744661696c656400000000000000006044820152606401610533565b60006116c98460800135856137ca565b11156117175760405162461bcd60e51b815260206004820152601860248201527f6d67764f666665722f61626f72742f6765744661696c656400000000000000006044820152606401610533565b50919050565b6117256126ec565b6001600160a01b0316336001600160a01b0316146117555760405162461bcd60e51b815260040161053390614053565b6001600160a01b0381166117ab5760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e00000000000000006044820152606401610533565b806117b46128d1565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6117dd6126ec565b6001600160a01b0316336001600160a01b031614806118245750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6118405760405162461bcd60e51b815260040161053390614053565b60001982036118da576040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156118ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d19190613ff5565b91508115611af8575b604051632e1a7d4d60e01b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d906024016020604051808303816000875af1158015611941573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119659190613ef2565b6119bf5760405162461bcd60e51b815260206004820152602560248201527f6d67764f666665722f776974686472617746726f6d4d67762f776974686472616044820152641dd1985a5b60da1b6064820152608401610533565b6119c7611afc565b15611a44576119d4612705565b604051631af82a7560e31b81526001600160a01b038381166004830152919091169063d7c153a890849060240160206040518083038185885af1158015611a1f573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610b429190613ef2565b6000816001600160a01b03168360405160006040518083038185875af1925050503d8060008114611a91576040519150601f19603f3d011682016040523d82523d6000602084013e611a96565b606091505b5050905080610b425760405162461bcd60e51b815260206004820152602860248201527f6d67764f666665722f776974686472617746726f6d4d67762f70617961626c6560448201526710d85b1b11985a5b60c21b6064820152608401610533565b5050565b600080611b076128f5565b600101546001600160a01b03161415919050565b6001600160a01b03848116600090815260208181526040808320878516845282528083208684528252808320815180830190925254938416808252600160a01b9094046001600160601b0316918101919091529091331480611ba557507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633145b611bf15760405162461bcd60e51b815260206004820152601f60248201527f4d756c74692f726574726163744f666665722f756e617574686f72697a6564006044820152606401610533565b60208101516001600160601b031615611c265782611c10576000611c16565b80602001515b6001600160601b03169150611cbe565b60405163ad97db1b60e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063ad97db1b90611c789089908990899089906004016140a7565b6020604051808303816000875af1158015611c97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cbb9190613ff5565b91505b8115611e6757604051632e1a7d4d60e01b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d906024016020604051808303816000875af1158015611d2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d4f9190613ef2565b611d945760405162461bcd60e51b8152602060048201526016602482015275135d5b1d1a555cd95c8bddda5d1a191c985dd1985a5b60521b6044820152606401610533565b60408051808201825282516001600160a01b039081168252600060208084018281528b841683528282528583208b8516845282528583208a8452909152939020915192516001600160601b0316600160a01b029216919091179055611df7612705565b604051631af82a7560e31b81523360048201526001600160a01b03919091169063d7c153a890849060240160206040518083038185885af1158015611e40573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611e659190613ef2565b505b50949350505050565b611e786126ec565b6001600160a01b0316336001600160a01b03161480611ebf5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b611edb5760405162461bcd60e51b815260040161053390614053565b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820183905283169063095ea7b3906044016020604051808303816000875af1158015611f4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f6e9190613ef2565b611af85760405162461bcd60e51b815260206004820152601d60248201527f6d67764f666665722f617070726f76654d616e67726f76652f4661696c0000006044820152606401610533565b6000611fc4611afc565b1561204a57611fd1612705565b6001600160a01b0316630417ffda6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561200e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120329190613ff5565b61203a6128f5565b5461204591906140d0565b905090565b6120526128f5565b54919050565b6120606126ec565b6001600160a01b0316336001600160a01b031614806120a75750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6120c35760405162461bcd60e51b815260040161053390614053565b6001600160a01b0381166121195760405162461bcd60e51b815260206004820152601c60248201527f6d67764f666665722f7365745f726f757465722f3078526f75746572000000006044820152606401610533565b806121226128f5565b60010180546001600160a01b0319166001600160a01b039283161790556040516381bac14f60e01b8152306004820152908216906381bac14f90602401600060405180830381600087803b15801561217957600080fd5b505af115801561218d573d6000803e3d6000fd5b50506040516001600160a01b03841681527f6de4326a8b9054d72d9dbab97d27bc4edffadee7d966f5af9cc4eafdaf8e5455925060200190505b60405180910390a150565b60608167ffffffffffffffff8111156121ed576121ed613f0f565b604051908082528060200260200182016040528015612216578160200160208202803683370190505b50905060005b82811015611e6757612247868686868581811061223b5761223b61403d565b90506020020135612765565b8282815181106122595761225961403d565b6001600160a01b03909216602092830291909101909101528061227b81614024565b91505061221c565b600080806001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663cbf75c9a89896040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016040805180830381865afa158015612302573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123269190614135565b9150915060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635722647b6123628b90565b8a886040518463ffffffff1660e01b815260040161238293929190613fd1565b602060405180830381865afa15801561239f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123c39190613ff5565b9050600086604085901c61ffff1611156123e6575061ffff604084901c166123e9565b50855b62ffffff88106123fe576123fb611fba565b97505b60008161241462ffffff606087901c168b6140d0565b61241e9190614159565b61242c90633b9aca00614159565b9050600061ffff602085901c1661245362ffffff603087901c811690604888901c166140d0565b61245d9190614159565b61246b90633b9aca00614159565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156124d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124f99190613ff5565b61250390836140d0565b90508281101561251c57612517818461411e565b61251f565b60005b9d9c50505050505050505050505050565b600061253a612705565b6040516302b427ef60e11b81526001600160a01b03848116600483015233602483015291909116906305684fde90604401602060405180830381865afa158015612588573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b629190613ff5565b6125b46126ec565b6001600160a01b0316336001600160a01b031614806125fb5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6126175760405162461bcd60e51b815260040161053390614053565b806001600160a01b031663095ea7b361262e612705565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260001960248201526044016020604051808303816000875af115801561267c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126a09190613ef2565b6106355760405162461bcd60e51b815260206004820152601b60248201527f6d67764f666665722f617070726f7665526f757465722f4661696c00000000006044820152606401610533565b60006126f66128d1565b546001600160a01b0316919050565b6000806127106128f5565b600101546001600160a01b03169050806127605760405162461bcd60e51b815260206004820152601160248201527036b3bb27b33332b917983c2937baba32b960791b6044820152606401610533565b919050565b6001600160a01b038084166000908152602081815260408083208685168452825280832085845290915290205416806105ca5760405162461bcd60e51b815260206004820152601560248201527436bab63a34aab9b2b917bab735b7bbb727b33332b960591b6044820152606401610533565b6127e06126ec565b6001600160a01b0316336001600160a01b031614806128275750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6128435760405162461bcd60e51b815260040161053390614053565b808162ffffff16146128975760405162461bcd60e51b815260206004820152601860248201527f6d67764f666665722f6761737265712f6f766572666c6f7700000000000000006044820152606401610533565b806128a06128f5565b556040518181527fafef3ad374c0b972e3c793be825735801fa05cc4c67157d98d9a111b4027988d906020016121c7565b7f7d382ebca3e46505071795e192d28166a3d4bd0685585591bc6c5b8df6769fd290565b7fae7e31c3220e851db9f204a28b279dfe52b973600b0a456991089c220ae7222490565b81516001600160a01b039081166000908152602081815260408083208287015185168452825280832060e0870151845282528083208151808301835290549485168152600160a01b9094046001600160601b031684830152805160808101825283815291820183905281018290526060810182905290919081516001600160a01b03163314806129d15750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b612a1d5760405162461bcd60e51b815260206004820152601e60248201527f4d756c74692f7570646174654f666665722f756e617574686f72697a656400006044820152606401610533565b8451602086015160e0870151604051635722647b60e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031693635722647b93612a78939192909190600401613fd1565b602060405180830381865afa158015612a95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ab99190613ff5565b604082015284516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063cbf75c9a9060208801516040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016040805180830381865afa158015612b40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b649190614135565b6020830152815260608101849052608085015162ffffff10612b8a578460800151612b92565b612b92611fba565b6080860152604081015160201c61ffff1660a08601819052600003612c745760208201516001600160601b031615612c4a5781602001516001600160601b031681606001818151612be391906140d0565b90525060408051808201825283516001600160a01b039081168252600060208084018281528a51841683528282528583208b83015185168452825285832060e08c01518452909152939020915192516001600160601b0316600160a01b0292169190911790555b60808501516060808301516020840151612c6a93921c62ffffff16613899565b60a0860152612cf5565b8315612cf557602081015160601c62ffffff16604082015160481c62ffffff16612c9e91906140d0565b60a0860151612cb190633b9aca00614159565b612cbb9190614159565b81606001818151612ccc91906140d0565b90525060808501516060808301516020840151612cef93921c62ffffff16613899565b60a08601525b805160401c61ffff168560a001511015612d625760405162461bcd60e51b815260206004820152602860248201527f4d756c7469557365722f7570646174654f666665722f4e6f74456e6f756768506044820152673937bb34b9b4b7b760c11b6064820152608401610533565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636a4f769185612d9d886000015190565b602089015189604001518a606001518b608001518c60a001518d60c001518e60e001516040518a63ffffffff1660e01b8152600401612e229897969594939291906001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b6000604051808303818588803b158015612e3b57600080fd5b505af193505050508015612e4d575060015b612e5c57600092505050610b62565b506001949350505050565b6000612e7282613934565b90508061276057611717612e896020840184613ccc565b612e996040850160208601613ccc565b84604001356001611b1b565b600080612eb56020850185613ccc565b90506000612ec96040860160208701613ccc565b6001600160a01b03838116600090815260208181526040808320858516845282528083208a82013584528252918290208251808401845290548085168252600160a01b90046001600160601b03169181019190915290516370a0823160e01b8152306004820152929350917f000000000000000000000000000000000000000000000000000000000000000090911690632e1a7d4d9082906370a0823190602401602060405180830381865afa158015612f87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fab9190613ff5565b6040518263ffffffff1660e01b8152600401612fc991815260200190565b6020604051808303816000875af1158015612fe8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061300c9190613ef2565b6130685760405162461bcd60e51b815260206004820152602760248201527f4d756c7469557365722f706f7374686f6f6b46616c6c6261636b2f77697468646044820152661c985dd1985a5b60ca1b6064820152608401610533565b6000806001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663cbf75c9a6130a760208b018b613ccc565b6130b760408c0160208d01613ccc565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016040805180830381865afa158015613101573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131259190614135565b9092509050600061314261ffff604085901c16633b9aca00614159565b9050600060c08a013560301c62ffffff1660c08b013560481c62ffffff1661316a91906140d0565b61318361ffff60c08d013560201c16633b9aca00614159565b61318d9190614159565b9050600082606085901c62ffffff165a60c08e013560481c62ffffff166131b4919061411e565b6131c090610bb86140d0565b6131ca91906140d0565b6131d49190614159565b90506000828210156131ef576131ea828461411e565b6131f2565b60005b60408051808201825298516001600160a01b039081168a526001600160601b039283166020808c019182529c82166000908152808e528381209c831681529b8d52828c209f8301358c529e909b5290982096519b51909716600160a01b029a90971699909917909355506001979650505050505050565b825160208401516040516365fbae4d60e11b81526001600160a01b0392831660048201529082166024820152600091829182917f0000000000000000000000000000000000000000000000000000000000000000169063cbf75c9a906044016040805180830381865afa1580156132e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133089190614135565b9150915062ffffff801686608001511161332657856080015161332e565b61332e611fba565b608087018190526133499085606084901c62ffffff16613899565b60a0870181905261ffff604084901c1611156133b55760405162461bcd60e51b815260206004820152602560248201527f4d756c7469557365722f6e65774f666665722f4e6f74456e6f75676850726f7660448201526434b9b4b7b760d91b6064820152608401610533565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166349f6d2dc856133f0896000015190565b60208a01518a604001518b606001518c608001518d60a001518e60c001516040518963ffffffff1660e01b815260040161346997969594939291906001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b60206040518083038185885af1158015613487573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906134ac9190613ff5565b60e08701819052865160208801516134c49288613a0b565b50505060e08301519392505050565b60006134e5608084016060850161408a565b156134fd578260c00135826020015110159050610b62565b60608201518251608085013591613513916140d0565b10159050610b62565b6001600160a01b038381166000908152600260209081526040808320868516845282528083209388168352928152828220828052905220805490829055801561359a576001600160a01b0380851660009081526002602090815260408083208785168452825280832093891683529281528282208583529052208190555b5050505050565b60008115806135b857506001600160a01b03831630145b156135c5575060016105ca565b604080516001600160a01b038581166024830152604480830186905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908816916136219190614178565b6000604051808303816000865af19150503d806000811461365e576040519150601f19603f3d011682016040523d82523d6000602084013e613663565b606091505b509150915081801561368d57508051158061368d57508080602001905181019061368d9190613ef2565b9695505050505050565b6000806001816136aa6020860186613ccc565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008460200160208101906136df9190613ccc565b6001600160a01b031681526020808201929092526040908101600090812086830135825290925290205490508015806105ca575043111592915050565b60008061372c6020840184613ccc565b905060006137406040850160208601613ccc565b9050600061375383838760400135612765565b905061375d612705565b6001600160a01b03166326e8eda28383896040518463ffffffff1660e01b815260040161378c93929190613fd1565b600060405180830381600087803b1580156137a657600080fd5b505af11580156137ba573d6000803e3d6000fd5b5060009998505050505050505050565b6000806137da6020840184613ccc565b905060006137ee6040850160208601613ccc565b9050600061380183838760400135612765565b9050600061380d612705565b6001600160a01b031663333dbb0d85848a60016040518563ffffffff1660e01b815260040161383f94939291906140a7565b6020604051808303816000875af115801561385e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138829190613ff5565b905061388e818861411e565b979650505050505050565b6000806138a685846140d0565b6138b490633b9aca00614159565b90508084101561391b5760405162461bcd60e51b815260206004820152602c60248201527f4d756c7469557365722f6465726976655f67617370726963652f4e6f74456e6f60448201526b3ab3b4283937bb34b9b4b7b760a11b6064820152608401610533565b80848161392a5761392a6141b3565b0495945050505050565b60008061394083613ae1565b9050600061394d84613b01565b905081600003613961575060019392505050565b604080516101008101909152613a03908061397f6020880188613ccc565b6001600160a01b031681526020018660200160208101906139a09190613ccc565b6001600160a01b03168152602081018490526040810185905260600160c087013560481c62ffffff16815260209081019060c0880135901c61ffff168152602001606087013560c01c63ffffffff16815260200186604001358152506000612919565b949350505050565b6040805180820182526001600160a01b038084168252600060208084018281528984168084528383528684208a86168086529084528785208a865290935292869020945190516001600160601b0316600160a01b029316929092179092559151849291907f460a431c86ecaea27134277388c72021356689d9eb62c3b25a5e4a97da7a8a1490613ad3907f00000000000000000000000000000000000000000000000000000000000000009087906001600160a01b0392831681529116602082015260400190565b60405180910390a450505050565b600060808201356001600160601b036060840135165b610b62919061411e565b600060a0820135606080840135901c6001600160601b0316613af7565b6001600160a01b038116811461063557600080fd5b803561276081613b1e565b600080600060608486031215613b5357600080fd5b8335613b5e81613b1e565b92506020840135613b6e81613b1e565b929592945050506040919091013590565b6000610100828403121561171757600080fd5b600080600060608486031215613ba757600080fd5b8335613bb281613b1e565b92506020840135613bc281613b1e565b91506040840135613bd281613b1e565b809150509250925092565b600081518084526020808501945080840160005b83811015613c0d57815187529582019590820190600101613bf1565b509495945050505050565b604081526000613c2b6040830185613bdd565b8281036020840152613c3d8185613bdd565b95945050505050565b6000610120828403121561171757600080fd5b600080828403610160811215613c6e57600080fd5b613c788585613c46565b9250604061011f1982011215613c8d57600080fd5b50610120830190509250929050565b6000610180828403121561171757600080fd5b60006101208284031215613cc257600080fd5b6105ca8383613c46565b600060208284031215613cde57600080fd5b81356105ca81613b1e565b60008060408385031215613cfc57600080fd5b823591506020830135613d0e81613b1e565b809150509250929050565b801515811461063557600080fd5b60008060008060808587031215613d3d57600080fd5b8435613d4881613b1e565b93506020850135613d5881613b1e565b9250604085013591506060850135613d6f81613d19565b939692955090935050565b60008060408385031215613d8d57600080fd5b8235613d9881613b1e565b946020939093013593505050565b60008060008060608587031215613dbc57600080fd5b8435613dc781613b1e565b93506020850135613dd781613b1e565b9250604085013567ffffffffffffffff80821115613df457600080fd5b818701915087601f830112613e0857600080fd5b813581811115613e1757600080fd5b8860208260051b8501011115613e2c57600080fd5b95989497505060200194505050565b6020808252825182820181905260009190848201906040850190845b81811015613e7c5783516001600160a01b031683529284019291840191600101613e57565b50909695505050505050565b600080600080600060a08688031215613ea057600080fd5b8535613eab81613b1e565b94506020860135613ebb81613b1e565b94979496505050506040830135926060810135926080909101359150565b600060208284031215613eeb57600080fd5b5035919050565b600060208284031215613f0457600080fd5b81516105ca81613d19565b634e487b7160e01b600052604160045260246000fd5b6000610100808385031215613f3957600080fd5b6040519081019067ffffffffffffffff82118183101715613f6a57634e487b7160e01b600052604160045260246000fd5b81604052613f7784613b33565b8152613f8560208501613b33565b602082015260408401356040820152606084013560608201526080840135608082015260a084013560a082015260c084013560c082015260e084013560e0820152809250505092915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121561400757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000600182016140365761403661400e565b5060010190565b634e487b7160e01b600052603260045260246000fd5b60208082526018908201527f416363657373436f6e74726f6c6c65642f496e76616c69640000000000000000604082015260600190565b60006020828403121561409c57600080fd5b81356105ca81613d19565b6001600160a01b0394851681529290931660208301526040820152901515606082015260800190565b600082198211156140e3576140e361400e565b500190565b600080600080608085870312156140fe57600080fd5b505082516020840151604085015160609095015191969095509092509050565b6000828210156141305761413061400e565b500390565b6000806040838503121561414857600080fd5b505080516020909101519092909150565b60008160001904831182151516156141735761417361400e565b500290565b6000825160005b81811015614199576020818601810151858301520161417f565b818111156141a8576000828501525b509190910192915050565b634e487b7160e01b600052601260045260246000fdfea26469706673582212200ba6ec1d2ab8f6246d7c12745da4a9650a0fc603f857d0c821c5386cb6e28ada64736f6c634300080e0033608060405234801561001057600080fd5b5061c35033806100675760405162461bcd60e51b815260206004820152601860248201527f616363657373436f6e74726f6c6c65642f307841646d696e000000000000000060448201526064015b60405180910390fd5b8061007a6100f560201b6107a71760201c565b80546001600160a01b0319166001600160a01b03929092169190911790555062ffffff811681146100ed5760405162461bcd60e51b815260206004820152601e60248201527f4162737472616374526f757465722f6f76657268656164546f6f486967680000604482015260640161005e565b600155610119565b7f7d382ebca3e46505071795e192d28166a3d4bd0685585591bc6c5b8df6769fd290565b610cfd806101286000396000f3fe6080604052600436106100c25760003560e01c8063362aecb11161007f578063cf5e7bd311610059578063cf5e7bd31461021a578063d7c153a81461023a578063f850a81c1461024d578063f851a4401461026d57600080fd5b8063362aecb1146101aa578063704b6c02146101da57806381bac14f146101fa57600080fd5b80630417ffda146100c757806305684fde146100f057806321754d9e1461011057806326e8eda21461014057806332563bc714610162578063333dbb0d1461018a575b600080fd5b3480156100d357600080fd5b506100dd60015481565b6040519081526020015b60405180910390f35b3480156100fc57600080fd5b506100dd61010b366004610a16565b61029a565b34801561011c57600080fd5b5061013061012b366004610a4f565b610311565b60405190151581526020016100e7565b34801561014c57600080fd5b5061016061015b366004610aa0565b610360565b005b34801561016e57600080fd5b506100dd61017d366004610ae1565b6001600160a01b03163190565b34801561019657600080fd5b506100dd6101a5366004610b13565b6103a0565b3480156101b657600080fd5b506101306101c5366004610ae1565b60006020819052908152604090205460ff1681565b3480156101e657600080fd5b506101606101f5366004610ae1565b610464565b34801561020657600080fd5b50610160610215366004610ae1565b61054c565b34801561022657600080fd5b50610160610235366004610ae1565b6105c2565b610130610248366004610ae1565b610635565b34801561025957600080fd5b50610160610268366004610b66565b61066e565b34801561027957600080fd5b5061028261078e565b6040516001600160a01b0390911681526020016100e7565b6040516370a0823160e01b81526001600160a01b038281166004830152600091908416906370a0823190602401602060405180830381865afa1580156102e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103089190610bec565b90505b92915050565b3360009081526020819052604081205460ff166103495760405162461bcd60e51b815260040161034090610c05565b60405180910390fd5b610355858585856107cb565b90505b949350505050565b3360009081526020819052604090205460ff1661038f5760405162461bcd60e51b815260040161034090610c05565b61039b838333846107d9565b505050565b3360009081526020819052604081205460ff166103cf5760405162461bcd60e51b815260040161034090610c05565b6040516370a0823160e01b81523360048201526000906001600160a01b038716906370a0823190602401602060405180830381865afa158015610416573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043a9190610bec565b905083811061044d576000915050610358565b61045a8686338787610831565b9695505050505050565b61046c61078e565b6001600160a01b0316336001600160a01b0316146104cc5760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f496e76616c696400000000000000006044820152606401610340565b6001600160a01b0381166105225760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e00000000000000006044820152606401610340565b8061052b6107a7565b80546001600160a01b0319166001600160a01b039290921691909117905550565b61055461078e565b6001600160a01b0316336001600160a01b0316148061058257503360009081526020819052604090205460ff165b61059e5760405162461bcd60e51b815260040161034090610c05565b6001600160a01b03166000908152602081905260409020805460ff19166001179055565b6105ca61078e565b6001600160a01b0316336001600160a01b031614806105f857503360009081526020819052604090205460ff165b6106145760405162461bcd60e51b815260040161034090610c05565b6001600160a01b03166000908152602081905260409020805460ff19169055565b3360009081526020819052604081205460ff166106645760405162461bcd60e51b815260040161034090610c05565b61030b8234610858565b3360009081526020819052604090205460ff1661069d5760405162461bcd60e51b815260040161034090610c05565b60005b828110156107885760008484838181106106bc576106bc610c32565b90506020020160208101906106d19190610ae1565b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610717573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073b9190610bec565b905080156107755761077585858481811061075857610758610c32565b905060200201602081019061076d9190610ae1565b8433846107d9565b508061078081610c48565b9150506106a0565b50505050565b60006107986107a7565b546001600160a01b0316919050565b7f7d382ebca3e46505071795e192d28166a3d4bd0685585591bc6c5b8df6769fd290565b6000610355858585856108f6565b6107e5848385846108f6565b6107885760405162461bcd60e51b815260206004820152601e60248201527f53696d706c65526f757465722f707573682f7472616e736665724661696c00006044820152606401610340565b600061083f868686866108f6565b1561084b57508161084f565b5060005b95945050505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146108a5576040519150601f19603f3d011682016040523d82523d6000602084013e6108aa565b606091505b5050809150508061030b5760405162461bcd60e51b81526020600482015260166024820152751b59dd93dc99195c8bdb5bcbdc99599d5b9911985a5b60521b6044820152606401610340565b60008115806109165750826001600160a01b0316846001600160a01b0316145b1561092357506001610358565b604080516001600160a01b0386811660248301528581166044830152606480830186905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908916916109879190610c6f565b6000604051808303816000865af19150503d80600081146109c4576040519150601f19603f3d011682016040523d82523d6000602084013e6109c9565b606091505b50915091508180156109f35750805115806109f35750808060200190518101906109f39190610caa565b979650505050505050565b6001600160a01b0381168114610a1357600080fd5b50565b60008060408385031215610a2957600080fd5b8235610a34816109fe565b91506020830135610a44816109fe565b809150509250929050565b60008060008060808587031215610a6557600080fd5b8435610a70816109fe565b93506020850135610a80816109fe565b92506040850135610a90816109fe565b9396929550929360600135925050565b600080600060608486031215610ab557600080fd5b8335610ac0816109fe565b92506020840135610ad0816109fe565b929592945050506040919091013590565b600060208284031215610af357600080fd5b8135610afe816109fe565b9392505050565b8015158114610a1357600080fd5b60008060008060808587031215610b2957600080fd5b8435610b34816109fe565b93506020850135610b44816109fe565b9250604085013591506060850135610b5b81610b05565b939692955090935050565b600080600060408486031215610b7b57600080fd5b833567ffffffffffffffff80821115610b9357600080fd5b818601915086601f830112610ba757600080fd5b813581811115610bb657600080fd5b8760208260051b8501011115610bcb57600080fd5b60209283019550935050840135610be1816109fe565b809150509250925092565b600060208284031215610bfe57600080fd5b5051919050565b602080825260139082015272149bdd5d195c8bdd5b985d5d1a1bdc9a5e9959606a1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060018201610c6857634e487b7160e01b600052601160045260246000fd5b5060010190565b6000825160005b81811015610c905760208186018101518583015201610c76565b81811115610c9f576000828501525b509190910192915050565b600060208284031215610cbc57600080fd5b8151610afe81610b0556fea264697066735822122032abe7da40276151732235ff38bf2bb6331c01855dd914247ffec73ec2807d6264736f6c634300080e0033608060405234801561001057600080fd5b50604051610baf380380610baf83398101604081905261002f91610089565b600080546001600160a01b039485166001600160a01b0319918216179091556001805493851693821693909317909255600280549190931691161790556100d6565b6001600160a01b038116811461008657600080fd5b50565b60008060006060848603121561009e57600080fd5b83516100a981610071565b60208501519093506100ba81610071565b60408501519092506100cb81610071565b809150509250925092565b610aca806100e56000396000f3fe6080604052600436106100955760003560e01c8063a3cfe14d11610059578063a3cfe14d14610198578063aa2cc08b146101b8578063b04220dd146100e4578063e1f21c67146101d8578063ff2e2d33146101f857600080fd5b8063080d7c4d146100a15780631154020b146100c35780632d24c42f146100e45780634d1d2b661461011e578063978b7c021461016857600080fd5b3661009c57005b600080fd5b3480156100ad57600080fd5b506100c16100bc366004610757565b610218565b005b3480156100cf57600080fd5b506100c16100de366004610783565b50505050565b3480156100f057600080fd5b506101046100ff3660046107c9565b6102aa565b604080519283526020830191909152015b60405180910390f35b34801561012a57600080fd5b5061013e6101393660046107c9565b61034d565b6040805195151586526020860194909452928401919091526060830152608082015260a001610115565b34801561017457600080fd5b506101886101833660046107c9565b610444565b6040519015158152602001610115565b3480156101a457600080fd5b506100c16101b3366004610757565b6104bc565b3480156101c457600080fd5b506101046101d33660046107eb565b6104f5565b3480156101e457600080fd5b506100c16101f3366004610846565b610593565b34801561020457600080fd5b50610188610213366004610887565b610606565b60005460015460025460405163167ae91560e21b81526001600160a01b03928316600482015290821660248201528482166044820152606481018490529116906359eba454906084015b6020604051808303816000875af1158015610281573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a5919061090a565b505050565b600080546001805460025460405163fbffe5fd60e01b81526001600160a01b0392831660048201529082166024820152604481018790526064810186905260848101929092528392169063fbffe5fd9060a4016080604051808303816000875af115801561031c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610340919061092c565b5091969095509350505050565b60008060008060008061039560405180608001604052808a81526020018981526020016bffffffffffffffffffffffff8016815260200165ffffffffffff80168152506106c4565b6000805460018054600254604051632370a17d60e11b8152959650939485948594859485946001600160a01b03928316946346e142fa946103e194928316939216918c91600401610962565b60a0604051808303816000875af1158015610400573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042491906109f7565b60019094149e50919c509a50985096505050505050509295509295909350565b60405163268e95b360e11b815260048101839052602481018290526000903090634d1d2b669060440160a0604051808303816000875af115801561048c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b09190610a37565b50929695505050505050565b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b390604401610262565b60405163fbffe5fd60e01b81526001600160a01b0385811660048301528481166024830152604482018490526064820183905260016084830152600091829188169063fbffe5fd9060a4016080604051808303816000875af115801561055f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610583919061092c565b5091999098509650505050505050565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b3906044016020604051808303816000875af11580156105e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100de919061090a565b6000806106326040518060800160405280888152602001878152602001868152602001858152506106c4565b90506000896001600160a01b03166346e142fa8a8a8560016040518563ffffffff1660e01b81526004016106699493929190610962565b60a0604051808303816000875af1158015610688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ac91906109f7565b50506001909214945050505050979650505050505050565b60408051600180825281830190925260609160009190816020015b6106e7610721565b8152602001906001900390816106df579050509050828160008151811061071057610710610a7e565b602090810291909101015292915050565b60405180608001604052806004906020820280368337509192915050565b6001600160a01b038116811461075457600080fd5b50565b6000806040838503121561076a57600080fd5b82356107758161073f565b946020939093013593505050565b6000806000806080858703121561079957600080fd5b84356107a48161073f565b935060208501356107b48161073f565b93969395505050506040820135916060013590565b600080604083850312156107dc57600080fd5b50508035926020909101359150565b600080600080600060a0868803121561080357600080fd5b853561080e8161073f565b9450602086013561081e8161073f565b9350604086013561082e8161073f565b94979396509394606081013594506080013592915050565b60008060006060848603121561085b57600080fd5b83356108668161073f565b925060208401356108768161073f565b929592945050506040919091013590565b600080600080600080600060e0888a0312156108a257600080fd5b87356108ad8161073f565b965060208801356108bd8161073f565b955060408801356108cd8161073f565b969995985095966060810135965060808101359560a0820135955060c0909101359350915050565b8051801515811461090557600080fd5b919050565b60006020828403121561091c57600080fd5b610925826108f5565b9392505050565b6000806000806080858703121561094257600080fd5b505082516020840151604085015160609095015191969095509092509050565b6001600160a01b038581168252841660208083019190915260806040830181905284518382018190526000928681019160a08601919085805b828110156109d857855185835b60048110156109c5578251825291860191908601906001016109a8565b505050948301949386019360010161099b565b50505050851515606086015292506109ee915050565b95945050505050565b600080600080600060a08688031215610a0f57600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b600080600080600060a08688031215610a4f57600080fd5b610a58866108f5565b602087015160408801516060890151608090990151929a91995097965090945092505050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220ee5af508a000963283870ccb1238e226334c277144ecdb6cbe941aa9b871504c64736f6c634300080e0033608060405234801561001057600080fd5b5060405161452138038061452183398101604081905261002f91610092565b600180546001600160a01b0394851661010002610100600160a81b0319909116179055600280549284166001600160a01b0319938416179055600380549190931691161790556100df565b6001600160a01b038116811461008f57600080fd5b50565b6000806000606084860312156100a757600080fd5b83516100b28161007a565b60208501519093506100c38161007a565b60408501519092506100d48161007a565b809150509250925092565b614433806100ee6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631f7b6d32146100515780635686153214610067578063a5e3875114610092578063e9c4a3ac146100a7575b600080fd5b6000546040519081526020015b60405180910390f35b61007a61007536600461047a565b6100af565b6040516001600160a01b03909116815260200161005e565b6100a56100a036600461047a565b6100de565b005b6100a5610320565b60008082815481106100c3576100c3610493565b6000918252602090912001546001600160a01b031692915050565b60015460ff16610311578067ffffffffffffffff811115610101576101016104a9565b60405190808252806020026020018201604052801561012a578160200160208202803683370190505b50805161013f916000916020909101906103f3565b5060005b8181101561030f576001546002546003546040516101009093046001600160a01b03908116939281169291169061017990610458565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f0801580156101b5573d6000803e3d6000fd5b50600082815481106101c9576101c9610493565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506000818154811061020a5761020a610493565b60009182526020909120015460025460405163a3cfe14d60e01b81526001600160a01b039182166004820152678ac7230489e80000602482015291169063a3cfe14d90604401600060405180830381600087803b15801561026a57600080fd5b505af115801561027e573d6000803e3d6000fd5b505050506000818154811061029557610295610493565b600091825260209091200154604051635239cafb60e11b8152821560048201526001600160a01b039091169063a47395f690602401600060405180830381600087803b1580156102e457600080fd5b505af11580156102f8573d6000803e3d6000fd5b505050508080610307906104bf565b915050610143565b505b506001805460ff191681179055565b600080549061032f82476104e6565b90506000811161037b5760405162461bcd60e51b8152602060048201526013602482015272181032ba3432b9103a37903a3930b739b332b960691b604482015260640160405180910390fd5b60005b828110156103ee57600080828154811061039a5761039a610493565b60009182526020822001546040516001600160a01b039091169250829085156108fc0290869084818181858888f193505050509050806103d957600080fd5b505080806103e6906104bf565b91505061037e565b505050565b828054828255906000526020600020908101928215610448579160200282015b8281111561044857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610413565b50610454929150610465565b5090565b613ef58061050983390190565b5b808211156104545760008155600101610466565b60006020828403121561048c57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6000600182016104df57634e487b7160e01b600052601160045260246000fd5b5060010190565b60008261050357634e487b7160e01b600052601260045260246000fd5b50049056fe60806040526000805462ff00ff1916620100011790553480156200002257600080fd5b5060405162003ef538038062003ef58339810160408190526200004591620000a1565b600880546001600160a01b039485166001600160a01b0319918216179091556009805493851693821693909317909255600a8054919093169116179055620000f5565b6001600160a01b03811681146200009e57600080fd5b50565b600080600060608486031215620000b757600080fd5b8351620000c48162000088565b6020850151909350620000d78162000088565b6040850151909250620000ea8162000088565b809150509250925092565b613df080620001056000396000f3fe60806040526004361061026b5760003560e01c8063a3cfe14d11610144578063d3845fea116100b6578063f5537ede1161007a578063f5537ede146107b9578063f8ccbf47146107d9578063fa7626d4146107f9578063fc3816c814610813578063fc8349f214610833578063ffae399e1461085357600080fd5b8063d3845fea14610719578063d82555f114610739578063e67ecda114610759578063e923c65114610779578063e9a79a7b1461079957600080fd5b8063c4c6c87d11610108578063c4c6c87d14610659578063c88a5e6d14610679578063cafffca814610699578063ccfbf94d146106b9578063cda30c3b146106d9578063d06d8229146106f957600080fd5b8063a3cfe14d1461059b578063a47395f6146105bb578063af9bbe5f146105f4578063b9c071b414610614578063ba414fa61461063457600080fd5b806353e575ac116101dd5780636f597075116101a15780636f597075146104cd5780637a943a37146104ed5780637ec95ff3146105265780638b0af9bb1461054657806397754ae91461055b5780639a8325a01461057b57600080fd5b806353e575ac146103f8578063557f49c3146104265780635a4924e81461045f5780636bce989b1461048d5780636c49c32c146104ad57600080fd5b806329ce9dde1161022f57806329ce9dde146103195780632d6c17a31461035657806333ac5efd146103765780633a768463146103965780633bf82db1146103b85780633d3d130d146103d857600080fd5b80630cc9d65614610277578063108554f214610299578063233240ee146102b95780632644c05c146102d957806329a9e300146102f957600080fd5b3661027257005b600080fd5b34801561028357600080fd5b5061029761029236600461333e565b61088c565b005b3480156102a557600080fd5b506102976102b43660046133a3565b6108d5565b3480156102c557600080fd5b506102976102d43660046133cf565b6109a6565b3480156102e557600080fd5b506102976102f43660046133f3565b610a7a565b34801561030557600080fd5b5061029761031436600461342e565b610afb565b34801561032557600080fd5b50610339610334366004613534565b610ba6565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561036257600080fd5b506102976103713660046135ac565b610ccd565b34801561038257600080fd5b506102976103913660046135c5565b610d09565b3480156103a257600080fd5b50610339600080516020613d7b83398151915281565b3480156103c457600080fd5b506102976103d3366004613608565b610d8c565b3480156103e457600080fd5b506102976103f336600461365c565b610e66565b34801561040457600080fd5b506104186104133660046133f3565b610fa2565b60405190815260200161034d565b34801561043257600080fd5b506102976104413660046136ad565b600a8054911515600160a81b0260ff60a81b19909216919091179055565b34801561046b57600080fd5b5061029761047a3660046136ad565b600c805460ff1916911515919091179055565b34801561049957600080fd5b506102976104a8366004613608565b61103a565b3480156104b957600080fd5b506104186104c83660046136ca565b61104c565b3480156104d957600080fd5b506102976104e83660046133cf565b6111b0565b3480156104f957600080fd5b506102976105083660046136ad565b600a8054911515600160b81b0260ff60b81b19909216919091179055565b34801561053257600080fd5b506104186105413660046135c5565b611253565b34801561055257600080fd5b506104186112ec565b34801561056757600080fd5b506102976105763660046136e7565b61135e565b34801561058757600080fd5b5061033961059636600461373a565b61157e565b3480156105a757600080fd5b506102976105b63660046133a3565b611678565b3480156105c757600080fd5b506102976105d63660046136ad565b600a8054911515600160a01b0260ff60a01b19909216919091179055565b34801561060057600080fd5b5061029761060f366004613608565b6116ef565b34801561062057600080fd5b5061029761062f3660046135ac565b611796565b34801561064057600080fd5b506106496117b4565b604051901515815260200161034d565b34801561066557600080fd5b506104186106743660046135ac565b6118d7565b34801561068557600080fd5b506102976106943660046133a3565b61196e565b3480156106a557600080fd5b506104186106b43660046135ac565b6119a1565b3480156106c557600080fd5b506104186106d4366004613777565b6119f3565b3480156106e557600080fd5b506104186106f43660046137d0565b611a73565b34801561070557600080fd5b5061029761071436600461342e565b611b06565b34801561072557600080fd5b506102976107343660046135ac565b611bb1565b34801561074557600080fd5b50610297610754366004613608565b611bf7565b34801561076557600080fd5b506102976107743660046135ac565b600b55565b34801561078557600080fd5b506104186107943660046133f3565b611ce8565b3480156107a557600080fd5b506102976107b43660046133a3565b611d72565b3480156107c557600080fd5b506102976107d4366004613608565b611e11565b3480156107e557600080fd5b506000546106499062010000900460ff1681565b34801561080557600080fd5b506000546106499060ff1681565b34801561081f57600080fd5b5061041861082e366004613802565b611e88565b34801561083f57600080fd5b5061064961084e3660046135ac565b611f16565b34801561085f57600080fd5b5061029761086e3660046136ad565b600a8054911515600160b01b0260ff60b01b19909216919091179055565b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c28686868686866040516108c596959493929190613864565b60405180910390a1505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610908908590859060040161389d565b600060405180830381600087803b15801561092257600080fd5b505af1158015610936573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0385166004820152600080516020613d7b83398151915292506306447d5691506024015b600060405180830381600087803b15801561098a57600080fd5b505af115801561099e573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d906109dd908490600160801b9060040161389d565b600060405180830381600087803b1580156109f757600080fd5b505af1158015610a0b573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0384166004820152600080516020613d7b833981519152925063ca669fa791506024015b600060405180830381600087803b158015610a5f57600080fd5b505af1158015610a73573d6000803e3d6000fd5b5050505050565b600854600954600a54604051636a4f769160e01b81526001600160a01b0393841693636a4f769193610ac293908216929116908a908a908a906000908b908b906004016138b6565b600060405180830381600087803b158015610adc57600080fd5b505af1158015610af0573d6000803e3d6000fd5b505050505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610b32908590600160801b9060040161389d565b600060405180830381600087803b158015610b4c57600080fd5b505af1158015610b60573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808616600483015284166024820152600080516020613d7b83398151915292506347e50cce9150604401610970565b604051638d1cc92560e01b81526000908190600080516020613d7b83398151915290638d1cc92590610bdc908790600401613952565b6000604051808303816000875af1158015610bfb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c239190810190613965565b83604051602001610c359291906139d3565b60405160208183030381529060405290508051602082016000f091506001600160a01b038216610cc65760405162461bcd60e51b815260206004820152603160248201527f54657374206465706c6f79436f646528737472696e672c6279746573293a204460448201527032b83637bcb6b2b73a103330b4b632b21760791b60648201526084015b60405180910390fd5b5092915050565b600080516020613d7b83398151915263e5d6bf02610ceb8342613a18565b6040518263ffffffff1660e01b8152600401610a4591815260200190565b600854600954600a54604051636a4f769160e01b81526001600160a01b0393841693636a4f7691938693610d52939183169216908c908c908c906000908d908d906004016138b6565b6000604051808303818588803b158015610d6b57600080fd5b505af1158015610d7f573d6000803e3d6000fd5b5050505050505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610dbf908690859060040161389d565b600060405180830381600087803b158015610dd957600080fd5b505af1158015610ded573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808716600483015285166024820152600080516020613d7b83398151915292506345b5607891506044015b600060405180830381600087803b158015610e4957600080fd5b505af1158015610e5d573d6000803e3d6000fd5b50505050505050565b600c5460ff1615610ea85760405162461bcd60e51b815260206004820152600c60248201526b1c1bdcdd1a1bdbdad1985a5b60a21b6044820152606401610cbd565b600b5415610ef657610ef68160200135600b546040518060400160405280601881526020017f496e636f727265637420737461747573206d6573736167650000000000000000815250611f86565b600a54600160b81b900460ff1615610f9e576008546001600160a01b0316636a4f7691610f2660208501856133cf565b610f3660408601602087016133cf565b606080870135901c6bffffffffffffffffffffffff166bffffffffffffffffffffffff60608801351660c088013560481c62ffffff16600060608a013560e01c8a604001356040518963ffffffff1660e01b81526004016109709897969594939291906138b6565b5050565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc938793610fed9392831692909116908c908c908c908a908d90600401613a2f565b60206040518083038185885af115801561100b573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906110309190613a6d565b9695505050505050565b611047838383600061135e565b505050565b600a54600090600160b01b900460ff1615611087576040805160208082019092526f1d195cdd13585ad95c8bdc995d995c9d60821b81529081fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c2336110b660208501856133cf565b6110c660408601602087016133cf565b856040013586608001358760a001356040516110e796959493929190613864565b60405180910390a1600a54600160a01b900460ff16156111875761110e60208301836133cf565b60085460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926111429291169060009060040161389d565b6020604051808303816000875af1158015611161573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111859190613a86565b505b600a54600160a81b900460ff16156111a857506418589bdc9d60da1b919050565b506000919050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d906111e7908490600160801b9060040161389d565b600060405180830381600087803b15801561120157600080fd5b505af1158015611215573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0384166004820152600080516020613d7b83398151915292506306447d569150602401610a45565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc93879361129e9392831692909116908d908d908d908d908d90600401613a2f565b60206040518083038185885af11580156112bc573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906112e19190613a6d565b979650505050505050565b6008546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611335573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113599190613a6d565b905090565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b17905291516000928716916113b291613aa3565b6000604051808303816000865af19150503d80600081146113ef576040519150601f19603f3d011682016040523d82523d6000602084013e6113f4565b606091505b5091505060008180602001905181019061140e9190613a6d565b905061147a846114748761144b6370a0823160e01b61142e60018d611fce565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b90611ff3565b821561099e5760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b038916916114c29190613aa3565b6000604051808303816000865af19150503d80600081146114ff576040519150601f19603f3d011682016040523d82523d6000602084013e611504565b606091505b5091505060008180602001905181019061151e9190613a6d565b905082861015611543576115328684613a18565b61153c9082613a18565b905061155a565b61154d8387613a18565b6115579082613abf565b90505b611574816114746318160ddd60e01b61142e60018d611fce565b5050505050505050565b604051638d1cc92560e01b81526000908190600080516020613d7b83398151915290638d1cc925906115b4908690600401613952565b6000604051808303816000875af11580156115d3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115fb9190810190613965565b90508051602082016000f091506001600160a01b0382166116725760405162461bcd60e51b815260206004820152602b60248201527f54657374206465706c6f79436f646528737472696e67293a204465706c6f796d60448201526a32b73a103330b4b632b21760a91b6064820152608401610cbd565b50919050565b60085460405163095ea7b360e01b81526001600160a01b038481169263095ea7b3926116ac9290911690859060040161389d565b6020604051808303816000875af11580156116cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110479190613a86565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90611722908690859060040161389d565b600060405180830381600087803b15801561173c57600080fd5b505af1158015611750573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808716600483015285166024820152600080516020613d7b83398151915292506347e50cce9150604401610e2f565b600080516020613d7b83398151915263e5d6bf02610ceb8342613abf565b60008054610100900460ff16156117d45750600054610100900460ff1690565b6000600080516020613d7b8339815191523b156118d257604051600090600080516020613d7b833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49061183c9083906519985a5b195960d21b9060200161389d565b60408051601f198184030181529082905261185a9291602001613ad7565b60408051601f198184030181529082905261187491613aa3565b6000604051808303816000865af19150503d80600081146118b1576040519150601f19603f3d011682016040523d82523d6000602084013e6118b6565b606091505b50915050808060200190518101906118ce9190613a86565b9150505b919050565b600854600954600a5460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810184905260006064820181905292919091169063ad97db1b906084015b6020604051808303816000875af1158015611944573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119689190613a6d565b92915050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610970908590859060040161389d565b600854600954600a5460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810184905260016064820152600092919091169063ad97db1b90608401611925565b60085460405163127db4b760e21b81526000916001600160a01b0316906349f6d2dc90611a30908a908a908a908a908a9089908b90600401613a2f565b6020604051808303816000875af1158015611a4f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e19190613a6d565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc93611aba939183169216908a908a908a9089908b90600401613a2f565b6020604051808303816000875af1158015611ad9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611afd9190613a6d565b95945050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90611b3d908590600160801b9060040161389d565b600060405180830381600087803b158015611b5757600080fd5b505af1158015611b6b573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808616600483015284166024820152600080516020613d7b83398151915292506345b560789150604401610970565b600854604051630460488160e31b81523060048201526001600160a01b039091169063230244089083906024016000604051808303818588803b15801561098a57600080fd5b7f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583604051611cc2906040808252600790820152665741524e494e4760c81b6060820152608060208201819052605e908201527f546573742074697028616464726573732c616464726573732c75696e7432353660a08201527f293a2054686520607469706020737464636865617420686173206265656e206460c08201527f6570726563617465642e2055736520606465616c6020696e73746561642e000060e08201526101000190565b60405180910390a1611047816114748461144b6370a0823160e01b61142e60018a611fce565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc93611d2f939183169216908b908b908b908b908b90600401613a2f565b6020604051808303816000875af1158015611d4e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110309190613a6d565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90611da5908590859060040161389d565b600060405180830381600087803b158015611dbf57600080fd5b505af1158015611dd3573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0385166004820152600080516020613d7b833981519152925063ca669fa79150602401610970565b60405163a9059cbb60e01b81526001600160a01b0384169063a9059cbb90611e3f908590859060040161389d565b6020604051808303816000875af1158015611e5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e829190613a86565b50505050565b60085460405163127db4b760e21b81526000916001600160a01b0316906349f6d2dc908490611ec7908c908c908c908c908c908a908d90600401613a2f565b60206040518083038185885af1158015611ee5573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611f0a9190613a6d565b98975050505050505050565b600854604051632e1a7d4d60e01b8152600481018390526000916001600160a01b031690632e1a7d4d906024016020604051808303816000875af1158015611f62573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119689190613a86565b818314611047577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051611fbc9190613b08565b60405180910390a16110478383611ffd565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b610f9e8282612127565b808214610f9e577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516120719060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a1610f9e61246b565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b946000939092909183018282801561219857602002820191906000526020600020905b815481526020019060010190808311612184575b505050505090506000836121ab83612564565b6040516020016121bc929190613ad7565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a16835281529281209194509092909161220e918691889101613b37565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166122465761224487612604565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905190918391612285918791899101613b37565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b0316846040516122ca9190613aa3565b600060405180830381855afa9150503d8060008114612305576040519150601f19603f3d011682016040523d82523d6000602084013e61230a565b606091505b50915061232390508161231e886020613b71565b613272565b604051630667f9d760e41b815290925060009150600080516020613d7b8339815191529063667f9d709061235d908b90879060040161389d565b6020604051808303816000875af115801561237c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123a09190613a6d565b90508082146123c15760405162461bcd60e51b8152600401610cbd90613b90565b6040516370ca10bb60e01b8152600080516020613d7b833981519152906370ca10bb906123f6908b9087908e90600401613c2b565b600060405180830381600087803b15801561241057600080fd5b505af1158015612424573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff1916905561245760028b0160006132ef565b896004016000905550505050505050505050565b600080516020613d7b8339815191523b1561255357604051600090600080516020613d7b833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc4906124d49083906519985a5b195960d21b90600190602001613c2b565b60408051601f19818403018152908290526124f29291602001613ad7565b60408051601f198184030181529082905261250c91613aa3565b6000604051808303816000865af19150503d8060008114612549576040519150601f19603f3d011682016040523d82523d6000602084013e61254e565b606091505b505050505b6000805461ff001916610100179055565b60606000825160206125769190613b71565b67ffffffffffffffff81111561258e5761258e613467565b6040519080825280601f01601f1916602001820160405280156125b8576020820181803683370190505b50905060005b8351811015610cc65760008482815181106125db576125db613c4c565b6020026020010151905080826020026020018401525080806125fc90613c62565b9150506125be565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b94938793919290919083018282801561267457602002820191906000526020600020905b815481526020019060010190808311612660575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051959650949193506126be92508591879101613b37565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161561275a576001600160a01b0384166000908152602087815260408083206001600160e01b0319871684528252808320905190929161272a918591879101613b37565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b60008361276683612564565b604051602001612777929190613ad7565b6040516020818303038152906040529050600080516020613d9b83398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156127d457600080fd5b505af11580156127e8573d6000803e3d6000fd5b50505050600080866001600160a01b0316836040516128079190613aa3565b600060405180830381855afa9150503d8060008114612842576040519150601f19603f3d011682016040523d82523d6000602084013e612847565b606091505b50915061285b90508161231e876020613b71565b6040516365bc948160e01b81526001600160a01b038916600482015290925060009150600080516020613d7b833981519152906365bc9481906024016000604051808303816000875af11580156128b6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526128de9190810190613cf0565b5090508051600103612b85576000600080516020613d9b83398151915260001c6001600160a01b031663667f9d70898460008151811061292057612920613c4c565b60200260200101516040518363ffffffff1660e01b815260040161294592919061389d565b6020604051808303816000875af1158015612964573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129889190613a6d565b9050806129e6577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a588836000815181106129c4576129c4613c4c565b602002602001015160001c6040516129dd92919061389d565b60405180910390a15b808314612a055760405162461bcd60e51b8152600401610cbd90613b90565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed88888789604051602001612a3b929190613b37565b6040516020818303038152906040528051906020012085600081518110612a6457612a64613c4c565b602002602001015160001c604051612a7f9493929190613d4a565b60405180910390a181600081518110612a9a57612a9a613c4c565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c1683528452808220905192939092612ae3918a918c9101613b37565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c16855282528284209251909391612b4b918a918c9101613b37565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff1916911515919091179055506130fd565b60018151111561308d5760005b8151811015613087576000600080516020613d9b83398151915260001c6001600160a01b031663667f9d708a858581518110612bd057612bd0613c4c565b60200260200101516040518363ffffffff1660e01b8152600401612bf592919061389d565b6020604051808303816000875af1158015612c14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c389190613a6d565b905080612c95577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a589848481518110612c7357612c73613c4c565b602002602001015160001c604051612c8c92919061389d565b60405180910390a15b600080516020613d9b83398151915260001c6001600160a01b03166370ca10bb8a858581518110612cc857612cc8613c4c565b602002602001015161133760f01b6040518463ffffffff1660e01b8152600401612cf493929190613c2b565b600060405180830381600087803b158015612d0e57600080fd5b505af1158015612d22573d6000803e3d6000fd5b50505050600060608a6001600160a01b031687604051612d429190613aa3565b600060405180830381855afa9150503d8060008114612d7d576040519150601f19603f3d011682016040523d82523d6000602084013e612d82565b606091505b509092509050612d978161231e8b6020613b71565b9550818015612daa575061133760f01b86145b15612fe5577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001612de5929190613b37565b60405160208183030381529060405280519060200120888881518110612e0d57612e0d613c4c565b602002602001015160001c604051612e289493929190613d4a565b60405180910390a1848481518110612e4257612e42613c4c565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f1683528452808220905192939092612e8b918d918f9101613b37565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c604051602001612f16929190613b37565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff021916908315150217905550600080516020613d9b83398151915260001c6001600160a01b03166370ca10bb8c878781518110612f8457612f84613c4c565b6020026020010151866040518463ffffffff1660e01b8152600401612fab93929190613c2b565b600060405180830381600087803b158015612fc557600080fd5b505af1158015612fd9573d6000803e3d6000fd5b50505050505050613087565b600080516020613d9b83398151915260001c6001600160a01b03166370ca10bb8c87878151811061301857613018613c4c565b6020026020010151866040518463ffffffff1660e01b815260040161303f93929190613c2b565b600060405180830381600087803b15801561305957600080fd5b505af115801561306d573d6000803e3d6000fd5b50505050505050808061307f90613c62565b915050612b92565b506130fd565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e6064820152608401610cbd565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905190929161313f9188918a9101613b37565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166131cc5760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b6064820152608401610cbd565b6005890180546001600160a01b031916905560038901805463ffffffff191690556131fb60028a0160006132ef565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a1684528252808320905190929161323f9188918a9101613b37565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b6000806000602085511161328757845161328a565b60205b905060005b818110156132e5576132a2816008613b71565b866132ad8388613abf565b815181106132bd576132bd613c4c565b01602001516001600160f81b031916901c9290921791806132dd81613c62565b91505061328f565b5090949350505050565b508054600082559060005260206000209081019061330d9190613310565b50565b5b808211156133255760008155600101613311565b5090565b6001600160a01b038116811461330d57600080fd5b60008060008060008060c0878903121561335757600080fd5b863561336281613329565b9550602087013561337281613329565b9450604087013561338281613329565b959894975094956060810135955060808101359460a0909101359350915050565b600080604083850312156133b657600080fd5b82356133c181613329565b946020939093013593505050565b6000602082840312156133e157600080fd5b81356133ec81613329565b9392505050565b600080600080600060a0868803121561340b57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b6000806040838503121561344157600080fd5b823561344c81613329565b9150602083013561345c81613329565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156134a6576134a6613467565b604052919050565b600067ffffffffffffffff8211156134c8576134c8613467565b50601f01601f191660200190565b60006134e96134e4846134ae565b61347d565b90508281528383830111156134fd57600080fd5b828260208301376000602084830101529392505050565b600082601f83011261352557600080fd5b6133ec838335602085016134d6565b6000806040838503121561354757600080fd5b823567ffffffffffffffff8082111561355f57600080fd5b61356b86838701613514565b9350602085013591508082111561358157600080fd5b508301601f8101851361359357600080fd5b6135a2858235602084016134d6565b9150509250929050565b6000602082840312156135be57600080fd5b5035919050565b60008060008060008060c087890312156135de57600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b60008060006060848603121561361d57600080fd5b833561362881613329565b9250602084013561363881613329565b929592945050506040919091013590565b6000610120828403121561167257600080fd5b60008082840361016081121561367157600080fd5b61367b8585613649565b9250604061011f198201121561369057600080fd5b50610120830190509250929050565b801515811461330d57600080fd5b6000602082840312156136bf57600080fd5b81356133ec8161369f565b600061012082840312156136dd57600080fd5b6133ec8383613649565b600080600080608085870312156136fd57600080fd5b843561370881613329565b9350602085013561371881613329565b925060408501359150606085013561372f8161369f565b939692955090935050565b60006020828403121561374c57600080fd5b813567ffffffffffffffff81111561376357600080fd5b61376f84828501613514565b949350505050565b60008060008060008060c0878903121561379057600080fd5b863561379b81613329565b955060208701356137ab81613329565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600080600080608085870312156137e657600080fd5b5050823594602084013594506040840135936060013592509050565b600080600080600080600060e0888a03121561381d57600080fd5b873561382881613329565b9650602088013561383881613329565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b60005b838110156139155781810151838201526020016138fd565b83811115611e825750506000910152565b6000815180845261393e8160208601602086016138fa565b601f01601f19169290920160200192915050565b6020815260006133ec6020830184613926565b60006020828403121561397757600080fd5b815167ffffffffffffffff81111561398e57600080fd5b8201601f8101841361399f57600080fd5b80516139ad6134e4826134ae565b8181528560208385010111156139c257600080fd5b611afd8260208301602086016138fa565b600083516139e58184602088016138fa565b8351908301906139f98183602088016138fa565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600082821015613a2a57613a2a613a02565b500390565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b600060208284031215613a7f57600080fd5b5051919050565b600060208284031215613a9857600080fd5b81516133ec8161369f565b60008251613ab58184602087016138fa565b9190910192915050565b60008219821115613ad257613ad2613a02565b500190565b6001600160e01b0319831681528151600090613afa8160048501602087016138fa565b919091016004019392505050565b60408152600560408201526422b93937b960d91b60608201526080602082015260006133ec6080830184613926565b825160009082906020808701845b83811015613b6157815185529382019390820190600101613b45565b5050948252509092019392505050565b6000816000190483118215151615613b8b57613b8b613a02565b500290565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b6001600160a01b039390931683526020830191909152604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060018201613c7457613c74613a02565b5060010190565b600082601f830112613c8c57600080fd5b8151602067ffffffffffffffff821115613ca857613ca8613467565b8160051b613cb782820161347d565b9283528481018201928281019087851115613cd157600080fd5b83870192505b848310156112e157825182529183019190830190613cd7565b60008060408385031215613d0357600080fd5b825167ffffffffffffffff80821115613d1b57600080fd5b613d2786838701613c7b565b93506020850151915080821115613d3d57600080fd5b506135a285828601613c7b565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe0000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220f9422ffe2dc0cea5614cee05acbced5148d638eb509e3a6adff8d2274a16877b64736f6c634300080e0033a264697066735822122015d66ca0797b173b00ee5f4ef88a00f3037e9384fb101d577dd391797849ef3964736f6c634300080e003360806040526000805462ff00ff1916620100011790553480156200002257600080fd5b5060405162003ef538038062003ef58339810160408190526200004591620000a1565b600880546001600160a01b039485166001600160a01b0319918216179091556009805493851693821693909317909255600a8054919093169116179055620000f5565b6001600160a01b03811681146200009e57600080fd5b50565b600080600060608486031215620000b757600080fd5b8351620000c48162000088565b6020850151909350620000d78162000088565b6040850151909250620000ea8162000088565b809150509250925092565b613df080620001056000396000f3fe60806040526004361061026b5760003560e01c8063a3cfe14d11610144578063d3845fea116100b6578063f5537ede1161007a578063f5537ede146107b9578063f8ccbf47146107d9578063fa7626d4146107f9578063fc3816c814610813578063fc8349f214610833578063ffae399e1461085357600080fd5b8063d3845fea14610719578063d82555f114610739578063e67ecda114610759578063e923c65114610779578063e9a79a7b1461079957600080fd5b8063c4c6c87d11610108578063c4c6c87d14610659578063c88a5e6d14610679578063cafffca814610699578063ccfbf94d146106b9578063cda30c3b146106d9578063d06d8229146106f957600080fd5b8063a3cfe14d1461059b578063a47395f6146105bb578063af9bbe5f146105f4578063b9c071b414610614578063ba414fa61461063457600080fd5b806353e575ac116101dd5780636f597075116101a15780636f597075146104cd5780637a943a37146104ed5780637ec95ff3146105265780638b0af9bb1461054657806397754ae91461055b5780639a8325a01461057b57600080fd5b806353e575ac146103f8578063557f49c3146104265780635a4924e81461045f5780636bce989b1461048d5780636c49c32c146104ad57600080fd5b806329ce9dde1161022f57806329ce9dde146103195780632d6c17a31461035657806333ac5efd146103765780633a768463146103965780633bf82db1146103b85780633d3d130d146103d857600080fd5b80630cc9d65614610277578063108554f214610299578063233240ee146102b95780632644c05c146102d957806329a9e300146102f957600080fd5b3661027257005b600080fd5b34801561028357600080fd5b5061029761029236600461333e565b61088c565b005b3480156102a557600080fd5b506102976102b43660046133a3565b6108d5565b3480156102c557600080fd5b506102976102d43660046133cf565b6109a6565b3480156102e557600080fd5b506102976102f43660046133f3565b610a7a565b34801561030557600080fd5b5061029761031436600461342e565b610afb565b34801561032557600080fd5b50610339610334366004613534565b610ba6565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561036257600080fd5b506102976103713660046135ac565b610ccd565b34801561038257600080fd5b506102976103913660046135c5565b610d09565b3480156103a257600080fd5b50610339600080516020613d7b83398151915281565b3480156103c457600080fd5b506102976103d3366004613608565b610d8c565b3480156103e457600080fd5b506102976103f336600461365c565b610e66565b34801561040457600080fd5b506104186104133660046133f3565b610fa2565b60405190815260200161034d565b34801561043257600080fd5b506102976104413660046136ad565b600a8054911515600160a81b0260ff60a81b19909216919091179055565b34801561046b57600080fd5b5061029761047a3660046136ad565b600c805460ff1916911515919091179055565b34801561049957600080fd5b506102976104a8366004613608565b61103a565b3480156104b957600080fd5b506104186104c83660046136ca565b61104c565b3480156104d957600080fd5b506102976104e83660046133cf565b6111b0565b3480156104f957600080fd5b506102976105083660046136ad565b600a8054911515600160b81b0260ff60b81b19909216919091179055565b34801561053257600080fd5b506104186105413660046135c5565b611253565b34801561055257600080fd5b506104186112ec565b34801561056757600080fd5b506102976105763660046136e7565b61135e565b34801561058757600080fd5b5061033961059636600461373a565b61157e565b3480156105a757600080fd5b506102976105b63660046133a3565b611678565b3480156105c757600080fd5b506102976105d63660046136ad565b600a8054911515600160a01b0260ff60a01b19909216919091179055565b34801561060057600080fd5b5061029761060f366004613608565b6116ef565b34801561062057600080fd5b5061029761062f3660046135ac565b611796565b34801561064057600080fd5b506106496117b4565b604051901515815260200161034d565b34801561066557600080fd5b506104186106743660046135ac565b6118d7565b34801561068557600080fd5b506102976106943660046133a3565b61196e565b3480156106a557600080fd5b506104186106b43660046135ac565b6119a1565b3480156106c557600080fd5b506104186106d4366004613777565b6119f3565b3480156106e557600080fd5b506104186106f43660046137d0565b611a73565b34801561070557600080fd5b5061029761071436600461342e565b611b06565b34801561072557600080fd5b506102976107343660046135ac565b611bb1565b34801561074557600080fd5b50610297610754366004613608565b611bf7565b34801561076557600080fd5b506102976107743660046135ac565b600b55565b34801561078557600080fd5b506104186107943660046133f3565b611ce8565b3480156107a557600080fd5b506102976107b43660046133a3565b611d72565b3480156107c557600080fd5b506102976107d4366004613608565b611e11565b3480156107e557600080fd5b506000546106499062010000900460ff1681565b34801561080557600080fd5b506000546106499060ff1681565b34801561081f57600080fd5b5061041861082e366004613802565b611e88565b34801561083f57600080fd5b5061064961084e3660046135ac565b611f16565b34801561085f57600080fd5b5061029761086e3660046136ad565b600a8054911515600160b01b0260ff60b01b19909216919091179055565b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c28686868686866040516108c596959493929190613864565b60405180910390a1505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610908908590859060040161389d565b600060405180830381600087803b15801561092257600080fd5b505af1158015610936573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0385166004820152600080516020613d7b83398151915292506306447d5691506024015b600060405180830381600087803b15801561098a57600080fd5b505af115801561099e573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d906109dd908490600160801b9060040161389d565b600060405180830381600087803b1580156109f757600080fd5b505af1158015610a0b573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0384166004820152600080516020613d7b833981519152925063ca669fa791506024015b600060405180830381600087803b158015610a5f57600080fd5b505af1158015610a73573d6000803e3d6000fd5b5050505050565b600854600954600a54604051636a4f769160e01b81526001600160a01b0393841693636a4f769193610ac293908216929116908a908a908a906000908b908b906004016138b6565b600060405180830381600087803b158015610adc57600080fd5b505af1158015610af0573d6000803e3d6000fd5b505050505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610b32908590600160801b9060040161389d565b600060405180830381600087803b158015610b4c57600080fd5b505af1158015610b60573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808616600483015284166024820152600080516020613d7b83398151915292506347e50cce9150604401610970565b604051638d1cc92560e01b81526000908190600080516020613d7b83398151915290638d1cc92590610bdc908790600401613952565b6000604051808303816000875af1158015610bfb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c239190810190613965565b83604051602001610c359291906139d3565b60405160208183030381529060405290508051602082016000f091506001600160a01b038216610cc65760405162461bcd60e51b815260206004820152603160248201527f54657374206465706c6f79436f646528737472696e672c6279746573293a204460448201527032b83637bcb6b2b73a103330b4b632b21760791b60648201526084015b60405180910390fd5b5092915050565b600080516020613d7b83398151915263e5d6bf02610ceb8342613a18565b6040518263ffffffff1660e01b8152600401610a4591815260200190565b600854600954600a54604051636a4f769160e01b81526001600160a01b0393841693636a4f7691938693610d52939183169216908c908c908c906000908d908d906004016138b6565b6000604051808303818588803b158015610d6b57600080fd5b505af1158015610d7f573d6000803e3d6000fd5b5050505050505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610dbf908690859060040161389d565b600060405180830381600087803b158015610dd957600080fd5b505af1158015610ded573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808716600483015285166024820152600080516020613d7b83398151915292506345b5607891506044015b600060405180830381600087803b158015610e4957600080fd5b505af1158015610e5d573d6000803e3d6000fd5b50505050505050565b600c5460ff1615610ea85760405162461bcd60e51b815260206004820152600c60248201526b1c1bdcdd1a1bdbdad1985a5b60a21b6044820152606401610cbd565b600b5415610ef657610ef68160200135600b546040518060400160405280601881526020017f496e636f727265637420737461747573206d6573736167650000000000000000815250611f86565b600a54600160b81b900460ff1615610f9e576008546001600160a01b0316636a4f7691610f2660208501856133cf565b610f3660408601602087016133cf565b606080870135901c6bffffffffffffffffffffffff166bffffffffffffffffffffffff60608801351660c088013560481c62ffffff16600060608a013560e01c8a604001356040518963ffffffff1660e01b81526004016109709897969594939291906138b6565b5050565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc938793610fed9392831692909116908c908c908c908a908d90600401613a2f565b60206040518083038185885af115801561100b573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906110309190613a6d565b9695505050505050565b611047838383600061135e565b505050565b600a54600090600160b01b900460ff1615611087576040805160208082019092526f1d195cdd13585ad95c8bdc995d995c9d60821b81529081fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c2336110b660208501856133cf565b6110c660408601602087016133cf565b856040013586608001358760a001356040516110e796959493929190613864565b60405180910390a1600a54600160a01b900460ff16156111875761110e60208301836133cf565b60085460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926111429291169060009060040161389d565b6020604051808303816000875af1158015611161573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111859190613a86565b505b600a54600160a81b900460ff16156111a857506418589bdc9d60da1b919050565b506000919050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d906111e7908490600160801b9060040161389d565b600060405180830381600087803b15801561120157600080fd5b505af1158015611215573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0384166004820152600080516020613d7b83398151915292506306447d569150602401610a45565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc93879361129e9392831692909116908d908d908d908d908d90600401613a2f565b60206040518083038185885af11580156112bc573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906112e19190613a6d565b979650505050505050565b6008546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611335573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113599190613a6d565b905090565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b17905291516000928716916113b291613aa3565b6000604051808303816000865af19150503d80600081146113ef576040519150601f19603f3d011682016040523d82523d6000602084013e6113f4565b606091505b5091505060008180602001905181019061140e9190613a6d565b905061147a846114748761144b6370a0823160e01b61142e60018d611fce565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b90611ff3565b821561099e5760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b038916916114c29190613aa3565b6000604051808303816000865af19150503d80600081146114ff576040519150601f19603f3d011682016040523d82523d6000602084013e611504565b606091505b5091505060008180602001905181019061151e9190613a6d565b905082861015611543576115328684613a18565b61153c9082613a18565b905061155a565b61154d8387613a18565b6115579082613abf565b90505b611574816114746318160ddd60e01b61142e60018d611fce565b5050505050505050565b604051638d1cc92560e01b81526000908190600080516020613d7b83398151915290638d1cc925906115b4908690600401613952565b6000604051808303816000875af11580156115d3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115fb9190810190613965565b90508051602082016000f091506001600160a01b0382166116725760405162461bcd60e51b815260206004820152602b60248201527f54657374206465706c6f79436f646528737472696e67293a204465706c6f796d60448201526a32b73a103330b4b632b21760a91b6064820152608401610cbd565b50919050565b60085460405163095ea7b360e01b81526001600160a01b038481169263095ea7b3926116ac9290911690859060040161389d565b6020604051808303816000875af11580156116cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110479190613a86565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90611722908690859060040161389d565b600060405180830381600087803b15801561173c57600080fd5b505af1158015611750573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808716600483015285166024820152600080516020613d7b83398151915292506347e50cce9150604401610e2f565b600080516020613d7b83398151915263e5d6bf02610ceb8342613abf565b60008054610100900460ff16156117d45750600054610100900460ff1690565b6000600080516020613d7b8339815191523b156118d257604051600090600080516020613d7b833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49061183c9083906519985a5b195960d21b9060200161389d565b60408051601f198184030181529082905261185a9291602001613ad7565b60408051601f198184030181529082905261187491613aa3565b6000604051808303816000865af19150503d80600081146118b1576040519150601f19603f3d011682016040523d82523d6000602084013e6118b6565b606091505b50915050808060200190518101906118ce9190613a86565b9150505b919050565b600854600954600a5460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810184905260006064820181905292919091169063ad97db1b906084015b6020604051808303816000875af1158015611944573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119689190613a6d565b92915050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610970908590859060040161389d565b600854600954600a5460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810184905260016064820152600092919091169063ad97db1b90608401611925565b60085460405163127db4b760e21b81526000916001600160a01b0316906349f6d2dc90611a30908a908a908a908a908a9089908b90600401613a2f565b6020604051808303816000875af1158015611a4f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e19190613a6d565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc93611aba939183169216908a908a908a9089908b90600401613a2f565b6020604051808303816000875af1158015611ad9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611afd9190613a6d565b95945050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90611b3d908590600160801b9060040161389d565b600060405180830381600087803b158015611b5757600080fd5b505af1158015611b6b573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808616600483015284166024820152600080516020613d7b83398151915292506345b560789150604401610970565b600854604051630460488160e31b81523060048201526001600160a01b039091169063230244089083906024016000604051808303818588803b15801561098a57600080fd5b7f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583604051611cc2906040808252600790820152665741524e494e4760c81b6060820152608060208201819052605e908201527f546573742074697028616464726573732c616464726573732c75696e7432353660a08201527f293a2054686520607469706020737464636865617420686173206265656e206460c08201527f6570726563617465642e2055736520606465616c6020696e73746561642e000060e08201526101000190565b60405180910390a1611047816114748461144b6370a0823160e01b61142e60018a611fce565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc93611d2f939183169216908b908b908b908b908b90600401613a2f565b6020604051808303816000875af1158015611d4e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110309190613a6d565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90611da5908590859060040161389d565b600060405180830381600087803b158015611dbf57600080fd5b505af1158015611dd3573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0385166004820152600080516020613d7b833981519152925063ca669fa79150602401610970565b60405163a9059cbb60e01b81526001600160a01b0384169063a9059cbb90611e3f908590859060040161389d565b6020604051808303816000875af1158015611e5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e829190613a86565b50505050565b60085460405163127db4b760e21b81526000916001600160a01b0316906349f6d2dc908490611ec7908c908c908c908c908c908a908d90600401613a2f565b60206040518083038185885af1158015611ee5573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611f0a9190613a6d565b98975050505050505050565b600854604051632e1a7d4d60e01b8152600481018390526000916001600160a01b031690632e1a7d4d906024016020604051808303816000875af1158015611f62573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119689190613a86565b818314611047577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051611fbc9190613b08565b60405180910390a16110478383611ffd565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b610f9e8282612127565b808214610f9e577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516120719060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a1610f9e61246b565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b946000939092909183018282801561219857602002820191906000526020600020905b815481526020019060010190808311612184575b505050505090506000836121ab83612564565b6040516020016121bc929190613ad7565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a16835281529281209194509092909161220e918691889101613b37565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166122465761224487612604565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905190918391612285918791899101613b37565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b0316846040516122ca9190613aa3565b600060405180830381855afa9150503d8060008114612305576040519150601f19603f3d011682016040523d82523d6000602084013e61230a565b606091505b50915061232390508161231e886020613b71565b613272565b604051630667f9d760e41b815290925060009150600080516020613d7b8339815191529063667f9d709061235d908b90879060040161389d565b6020604051808303816000875af115801561237c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123a09190613a6d565b90508082146123c15760405162461bcd60e51b8152600401610cbd90613b90565b6040516370ca10bb60e01b8152600080516020613d7b833981519152906370ca10bb906123f6908b9087908e90600401613c2b565b600060405180830381600087803b15801561241057600080fd5b505af1158015612424573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff1916905561245760028b0160006132ef565b896004016000905550505050505050505050565b600080516020613d7b8339815191523b1561255357604051600090600080516020613d7b833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc4906124d49083906519985a5b195960d21b90600190602001613c2b565b60408051601f19818403018152908290526124f29291602001613ad7565b60408051601f198184030181529082905261250c91613aa3565b6000604051808303816000865af19150503d8060008114612549576040519150601f19603f3d011682016040523d82523d6000602084013e61254e565b606091505b505050505b6000805461ff001916610100179055565b60606000825160206125769190613b71565b67ffffffffffffffff81111561258e5761258e613467565b6040519080825280601f01601f1916602001820160405280156125b8576020820181803683370190505b50905060005b8351811015610cc65760008482815181106125db576125db613c4c565b6020026020010151905080826020026020018401525080806125fc90613c62565b9150506125be565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b94938793919290919083018282801561267457602002820191906000526020600020905b815481526020019060010190808311612660575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051959650949193506126be92508591879101613b37565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161561275a576001600160a01b0384166000908152602087815260408083206001600160e01b0319871684528252808320905190929161272a918591879101613b37565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b60008361276683612564565b604051602001612777929190613ad7565b6040516020818303038152906040529050600080516020613d9b83398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156127d457600080fd5b505af11580156127e8573d6000803e3d6000fd5b50505050600080866001600160a01b0316836040516128079190613aa3565b600060405180830381855afa9150503d8060008114612842576040519150601f19603f3d011682016040523d82523d6000602084013e612847565b606091505b50915061285b90508161231e876020613b71565b6040516365bc948160e01b81526001600160a01b038916600482015290925060009150600080516020613d7b833981519152906365bc9481906024016000604051808303816000875af11580156128b6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526128de9190810190613cf0565b5090508051600103612b85576000600080516020613d9b83398151915260001c6001600160a01b031663667f9d70898460008151811061292057612920613c4c565b60200260200101516040518363ffffffff1660e01b815260040161294592919061389d565b6020604051808303816000875af1158015612964573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129889190613a6d565b9050806129e6577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a588836000815181106129c4576129c4613c4c565b602002602001015160001c6040516129dd92919061389d565b60405180910390a15b808314612a055760405162461bcd60e51b8152600401610cbd90613b90565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed88888789604051602001612a3b929190613b37565b6040516020818303038152906040528051906020012085600081518110612a6457612a64613c4c565b602002602001015160001c604051612a7f9493929190613d4a565b60405180910390a181600081518110612a9a57612a9a613c4c565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c1683528452808220905192939092612ae3918a918c9101613b37565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c16855282528284209251909391612b4b918a918c9101613b37565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff1916911515919091179055506130fd565b60018151111561308d5760005b8151811015613087576000600080516020613d9b83398151915260001c6001600160a01b031663667f9d708a858581518110612bd057612bd0613c4c565b60200260200101516040518363ffffffff1660e01b8152600401612bf592919061389d565b6020604051808303816000875af1158015612c14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c389190613a6d565b905080612c95577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a589848481518110612c7357612c73613c4c565b602002602001015160001c604051612c8c92919061389d565b60405180910390a15b600080516020613d9b83398151915260001c6001600160a01b03166370ca10bb8a858581518110612cc857612cc8613c4c565b602002602001015161133760f01b6040518463ffffffff1660e01b8152600401612cf493929190613c2b565b600060405180830381600087803b158015612d0e57600080fd5b505af1158015612d22573d6000803e3d6000fd5b50505050600060608a6001600160a01b031687604051612d429190613aa3565b600060405180830381855afa9150503d8060008114612d7d576040519150601f19603f3d011682016040523d82523d6000602084013e612d82565b606091505b509092509050612d978161231e8b6020613b71565b9550818015612daa575061133760f01b86145b15612fe5577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001612de5929190613b37565b60405160208183030381529060405280519060200120888881518110612e0d57612e0d613c4c565b602002602001015160001c604051612e289493929190613d4a565b60405180910390a1848481518110612e4257612e42613c4c565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f1683528452808220905192939092612e8b918d918f9101613b37565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c604051602001612f16929190613b37565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff021916908315150217905550600080516020613d9b83398151915260001c6001600160a01b03166370ca10bb8c878781518110612f8457612f84613c4c565b6020026020010151866040518463ffffffff1660e01b8152600401612fab93929190613c2b565b600060405180830381600087803b158015612fc557600080fd5b505af1158015612fd9573d6000803e3d6000fd5b50505050505050613087565b600080516020613d9b83398151915260001c6001600160a01b03166370ca10bb8c87878151811061301857613018613c4c565b6020026020010151866040518463ffffffff1660e01b815260040161303f93929190613c2b565b600060405180830381600087803b15801561305957600080fd5b505af115801561306d573d6000803e3d6000fd5b50505050505050808061307f90613c62565b915050612b92565b506130fd565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e6064820152608401610cbd565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905190929161313f9188918a9101613b37565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166131cc5760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b6064820152608401610cbd565b6005890180546001600160a01b031916905560038901805463ffffffff191690556131fb60028a0160006132ef565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a1684528252808320905190929161323f9188918a9101613b37565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b6000806000602085511161328757845161328a565b60205b905060005b818110156132e5576132a2816008613b71565b866132ad8388613abf565b815181106132bd576132bd613c4c565b01602001516001600160f81b031916901c9290921791806132dd81613c62565b91505061328f565b5090949350505050565b508054600082559060005260206000209081019061330d9190613310565b50565b5b808211156133255760008155600101613311565b5090565b6001600160a01b038116811461330d57600080fd5b60008060008060008060c0878903121561335757600080fd5b863561336281613329565b9550602087013561337281613329565b9450604087013561338281613329565b959894975094956060810135955060808101359460a0909101359350915050565b600080604083850312156133b657600080fd5b82356133c181613329565b946020939093013593505050565b6000602082840312156133e157600080fd5b81356133ec81613329565b9392505050565b600080600080600060a0868803121561340b57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b6000806040838503121561344157600080fd5b823561344c81613329565b9150602083013561345c81613329565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156134a6576134a6613467565b604052919050565b600067ffffffffffffffff8211156134c8576134c8613467565b50601f01601f191660200190565b60006134e96134e4846134ae565b61347d565b90508281528383830111156134fd57600080fd5b828260208301376000602084830101529392505050565b600082601f83011261352557600080fd5b6133ec838335602085016134d6565b6000806040838503121561354757600080fd5b823567ffffffffffffffff8082111561355f57600080fd5b61356b86838701613514565b9350602085013591508082111561358157600080fd5b508301601f8101851361359357600080fd5b6135a2858235602084016134d6565b9150509250929050565b6000602082840312156135be57600080fd5b5035919050565b60008060008060008060c087890312156135de57600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b60008060006060848603121561361d57600080fd5b833561362881613329565b9250602084013561363881613329565b929592945050506040919091013590565b6000610120828403121561167257600080fd5b60008082840361016081121561367157600080fd5b61367b8585613649565b9250604061011f198201121561369057600080fd5b50610120830190509250929050565b801515811461330d57600080fd5b6000602082840312156136bf57600080fd5b81356133ec8161369f565b600061012082840312156136dd57600080fd5b6133ec8383613649565b600080600080608085870312156136fd57600080fd5b843561370881613329565b9350602085013561371881613329565b925060408501359150606085013561372f8161369f565b939692955090935050565b60006020828403121561374c57600080fd5b813567ffffffffffffffff81111561376357600080fd5b61376f84828501613514565b949350505050565b60008060008060008060c0878903121561379057600080fd5b863561379b81613329565b955060208701356137ab81613329565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600080600080608085870312156137e657600080fd5b5050823594602084013594506040840135936060013592509050565b600080600080600080600060e0888a03121561381d57600080fd5b873561382881613329565b9650602088013561383881613329565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b60005b838110156139155781810151838201526020016138fd565b83811115611e825750506000910152565b6000815180845261393e8160208601602086016138fa565b601f01601f19169290920160200192915050565b6020815260006133ec6020830184613926565b60006020828403121561397757600080fd5b815167ffffffffffffffff81111561398e57600080fd5b8201601f8101841361399f57600080fd5b80516139ad6134e4826134ae565b8181528560208385010111156139c257600080fd5b611afd8260208301602086016138fa565b600083516139e58184602088016138fa565b8351908301906139f98183602088016138fa565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600082821015613a2a57613a2a613a02565b500390565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b600060208284031215613a7f57600080fd5b5051919050565b600060208284031215613a9857600080fd5b81516133ec8161369f565b60008251613ab58184602087016138fa565b9190910192915050565b60008219821115613ad257613ad2613a02565b500190565b6001600160e01b0319831681528151600090613afa8160048501602087016138fa565b919091016004019392505050565b60408152600560408201526422b93937b960d91b60608201526080602082015260006133ec6080830184613926565b825160009082906020808701845b83811015613b6157815185529382019390820190600101613b45565b5050948252509092019392505050565b6000816000190483118215151615613b8b57613b8b613a02565b500290565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b6001600160a01b039390931683526020830191909152604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060018201613c7457613c74613a02565b5060010190565b600082601f830112613c8c57600080fd5b8151602067ffffffffffffffff821115613ca857613ca8613467565b8160051b613cb782820161347d565b9283528481018201928281019087851115613cd157600080fd5b83870192505b848310156112e157825182529183019190830190613cd7565b60008060408385031215613d0357600080fd5b825167ffffffffffffffff80821115613d1b57600080fd5b613d2786838701613c7b565b93506020850151915080821115613d3d57600080fd5b506135a285828601613c7b565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe0000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220f9422ffe2dc0cea5614cee05acbced5148d638eb509e3a6adff8d2274a16877b64736f6c634300080e00336101406040523480156200001257600080fd5b5060405162001bb838038062001bb88339810160408190526200003591620002c1565b82828180604051806040016040528060018152602001603160f81b815250848481600390805190602001906200006d9291906200014e565b508051620000839060049060208401906200014e565b5050825160208085019190912083518483012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c0019052805194019390932091935091906080523060c05261012052505050506001600160a01b03969096166000908152600860205260409020805460ff19166001179055505060ff1660095550620003a1915050565b8280546200015c9062000365565b90600052602060002090601f016020900481019282620001805760008555620001cb565b82601f106200019b57805160ff1916838001178555620001cb565b82800160010185558215620001cb579182015b82811115620001cb578251825591602001919060010190620001ae565b50620001d9929150620001dd565b5090565b5b80821115620001d95760008155600101620001de565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200021c57600080fd5b81516001600160401b0380821115620002395762000239620001f4565b604051601f8301601f19908116603f01168101908282118183101715620002645762000264620001f4565b816040528381526020925086838588010111156200028157600080fd5b600091505b83821015620002a5578582018301518183018401529082019062000286565b83821115620002b75760008385830101525b9695505050505050565b60008060008060808587031215620002d857600080fd5b84516001600160a01b0381168114620002f057600080fd5b60208601519094506001600160401b03808211156200030e57600080fd5b6200031c888389016200020a565b945060408701519150808211156200033357600080fd5b5062000342878288016200020a565b925050606085015160ff811681146200035a57600080fd5b939692955090935050565b600181811c908216806200037a57607f821691505b6020821081036200039b57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516117c7620003f160003960006109290152600061097801526000610953015260006108ac015260006108d60152600061090001526117c76000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806340c10f19116100c357806395d89b411161007c57806395d89b41146102c45780639dc29fac146102cc578063a457c2d7146102df578063a9059cbb146102f2578063d505accf14610305578063dd62ed3e1461031857600080fd5b806340c10f1914610236578063704802751461024957806370a082311461025c5780637a6d69b4146102855780637ecebe00146102a85780638ea2da7d146102bb57600080fd5b80631e7be210116101155780631e7be210146101cd57806323b872dd146101e057806325db769e146101f3578063313ce567146102065780633644e5151461021b578063395093511461022357600080fd5b806306fdde0314610152578063095ea7b31461017057806316c02129146101935780631785f53c146101a857806318160ddd146101bb575b600080fd5b61015a61032b565b604051610167919061140b565b60405180910390f35b61018361017e36600461147c565b6103bd565b6040519015158152602001610167565b6101a66101a13660046114a6565b610444565b005b6101a66101b63660046114a6565b610477565b6002545b604051908152602001610167565b6101a66101db3660046114a6565b6104a0565b6101836101ee3660046114c8565b6104cd565b6101bf610201366004611504565b610589565b60095460405160ff9091168152602001610167565b6101bf6105af565b61018361023136600461147c565b6105be565b6101a661024436600461147c565b6105ea565b6101a66102573660046114a6565b610600565b6101bf61026a3660046114a6565b6001600160a01b031660009081526020819052604090205490565b6101836102933660046114a6565b60076020526000908152604090205460ff1681565b6101bf6102b63660046114a6565b61062c565b6101bf60095481565b61015a61064a565b6101a66102da36600461147c565b610659565b6101836102ed36600461147c565b61066b565b61018361030036600461147c565b6106f1565b6101a661031336600461151d565b610766565b6101bf610326366004611590565b6107f6565b60606003805461033a906115c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610366906115c3565b80156103b35780601f10610388576101008083540402835291602001916103b3565b820191906000526020600020905b81548152906001019060200180831161039657829003601f168201915b5050505050905090565b6001600160a01b038216600090815260076020526040812054839060ff16156104015760405162461bcd60e51b81526004016103f8906115f7565b60405180910390fd5b3360008181526007602052604090205460ff16156104315760405162461bcd60e51b81526004016103f8906115f7565b61043b8585610821565b95945050505050565b61044c61082f565b610474816001600160a01b03166000908152600760205260409020805460ff19166001179055565b50565b61047f61082f565b6001600160a01b03166000908152600860205260409020805460ff19169055565b6104a861082f565b610474816001600160a01b03166000908152600760205260409020805460ff19169055565b6001600160a01b038316600090815260076020526040812054849060ff16156105085760405162461bcd60e51b81526004016103f8906115f7565b6001600160a01b038416600090815260076020526040902054849060ff16156105435760405162461bcd60e51b81526004016103f8906115f7565b3360008181526007602052604090205460ff16156105735760405162461bcd60e51b81526004016103f8906115f7565b61057e878787610886565b979650505050505050565b600061059460095490565b61059f90600a61171e565b6105a9908361172d565b92915050565b60006105b961089f565b905090565b6000336105e08185856105d183836107f6565b6105db919061174c565b6109c6565b5060019392505050565b6105f261082f565b6105fc8282610aeb565b5050565b61060861082f565b6001600160a01b03166000908152600860205260409020805460ff19166001179055565b6001600160a01b0381166000908152600560205260408120546105a9565b60606004805461033a906115c3565b61066161082f565b6105fc8282610bca565b6000338161067982866107f6565b9050838110156106d95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103f8565b6106e682868684036109c6565b506001949350505050565b6001600160a01b038216600090815260076020526040812054839060ff161561072c5760405162461bcd60e51b81526004016103f8906115f7565b3360008181526007602052604090205460ff161561075c5760405162461bcd60e51b81526004016103f8906115f7565b61043b8585610d10565b6001600160a01b038716600090815260076020526040902054879060ff16156107a15760405162461bcd60e51b81526004016103f8906115f7565b6001600160a01b038716600090815260076020526040902054879060ff16156107dc5760405162461bcd60e51b81526004016103f8906115f7565b6107eb89898989898989610d1e565b505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000336105e08185856109c6565b3360009081526008602052604090205460ff166108845760405162461bcd60e51b815260206004820152601360248201527254657374546f6b656e2f61646d696e4f6e6c7960681b60448201526064016103f8565b565b600033610894858285610e82565b6106e6858585610efc565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156108f857507f000000000000000000000000000000000000000000000000000000000000000046145b1561092257507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6001600160a01b038316610a285760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103f8565b6001600160a01b038216610a895760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103f8565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038216610b415760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103f8565b8060026000828254610b53919061174c565b90915550506001600160a01b03821660009081526020819052604081208054839290610b8090849061174c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610c2a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103f8565b6001600160a01b03821660009081526020819052604090205481811015610c9e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103f8565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610ccd908490611764565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610ade565b6000336105e0818585610efc565b83421115610d6e5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016103f8565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610d9d8c6110ca565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610df8826110f2565b90506000610e0882878787611140565b9050896001600160a01b0316816001600160a01b031614610e6b5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016103f8565b610e768a8a8a6109c6565b50505050505050505050565b6000610e8e84846107f6565b90506000198114610ef65781811015610ee95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103f8565b610ef684848484036109c6565b50505050565b6001600160a01b038316610f605760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103f8565b6001600160a01b038216610fc25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103f8565b6001600160a01b0383166000908152602081905260409020548181101561103a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103f8565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061107190849061174c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110bd91815260200190565b60405180910390a3610ef6565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b60006105a96110ff61089f565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061115187878787611168565b9150915061115e81611255565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561119f575060009050600361124c565b8460ff16601b141580156111b757508460ff16601c14155b156111c8575060009050600461124c565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561121c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166112455760006001925092505061124c565b9150600090505b94509492505050565b60008160048111156112695761126961177b565b036112715750565b60018160048111156112855761128561177b565b036112d25760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016103f8565b60028160048111156112e6576112e661177b565b036113335760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103f8565b60038160048111156113475761134761177b565b0361139f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016103f8565b60048160048111156113b3576113b361177b565b036104745760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016103f8565b600060208083528351808285015260005b818110156114385785810183015185820160400152820161141c565b8181111561144a576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461147757600080fd5b919050565b6000806040838503121561148f57600080fd5b61149883611460565b946020939093013593505050565b6000602082840312156114b857600080fd5b6114c182611460565b9392505050565b6000806000606084860312156114dd57600080fd5b6114e684611460565b92506114f460208501611460565b9150604084013590509250925092565b60006020828403121561151657600080fd5b5035919050565b600080600080600080600060e0888a03121561153857600080fd5b61154188611460565b965061154f60208901611460565b95506040880135945060608801359350608088013560ff8116811461157357600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156115a357600080fd5b6115ac83611460565b91506115ba60208401611460565b90509250929050565b600181811c908216806115d757607f821691505b6020821081036110ec57634e487b7160e01b600052602260045260246000fd5b602080825260139082015272115490cc8c10930bd09b1858dadb1a5cdd1959606a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561167557816000190482111561165b5761165b611624565b8085161561166857918102915b93841c939080029061163f565b509250929050565b60008261168c575060016105a9565b81611699575060006105a9565b81600181146116af57600281146116b9576116d5565b60019150506105a9565b60ff8411156116ca576116ca611624565b50506001821b6105a9565b5060208310610133831016604e8410600b84101617156116f8575081810a6105a9565b611702838361163a565b806000190482111561171657611716611624565b029392505050565b60006114c160ff84168361167d565b600081600019048311821515161561174757611747611624565b500290565b6000821982111561175f5761175f611624565b500190565b60008282101561177657611776611624565b500390565b634e487b7160e01b600052602160045260246000fdfea26469706673582212209bdbfaec88bd6f48fcba6d4557d696967a35e239ba335fd932eea09261da1b0864736f6c634300080e003341304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50496e636f727265637420666f7277617264656420616d6f756e7420746f20696e697469616c2074616b65720000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d587734843819064f2153f96c808d1aeacaceccfa595ec4b9ed484c4bff687f7c280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583497465726174697665206d61726b6574206f7264657220776173206e6f7420636f6d706c65746554616b652066756e6374696f6e20646964206e6f742072657475726e2066756e647354616b652066756e6374696f6e20646964206e6f742072657475726e20626f756e7479496e636f72726563742077616e747320666f72206269642072657374696e67206f7264657252657374696e67206f66666572206661696c656420746f206265207075626c6973686564206f6e206d616e67726f7665696e76616c696420616d6f756e74206f662072656c65617365642070726f766973696f6e496e636f727265637420726563656976656420616d6f756e7420666f722073656c6c65722074616b6572885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d496e636f727265637420676976657320666f72206269642072657374696e67206f72646572496e636f7272656374206f66666572206c6973742061667465722072657472616374496e636f7272656374207061727469616c2066696c6c206f662074616b6572206f72646572a2646970667358221220d873b275398b65dd12eb03628fff211d5bddc9581b9e402b8bf8636f9f67e13a64736f6c634300080e0033",
    "sourceMap": "589:19528:88:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4138:1107;;;;;;;;;;;;;:::i;:::-;;14851:859;;;;;;;;;;;;;:::i;7393:411:76:-;;;;;;;;;;-1:-1:-1;7393:411:76;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;705:32:107;;;687:51;;675:2;660:18;7393:411:76;;;;;;;;1279:2747:88;;;;;;;;;;;;;:::i;8068:243:76:-;;;;;;;;;;-1:-1:-1;8068:243:76;;;;;:::i;:::-;;:::i;2069:116:103:-;;;;;;;;;;-1:-1:-1;2069:116:103;;;;;:::i;:::-;;:::i;15714:1599:88:-;;;;;;;;;;;;;:::i;1416:96:103:-;;;;;;;;;;-1:-1:-1;1416:96:103;;;;;:::i;:::-;;:::i;1630:120::-;;;;;;;;;;-1:-1:-1;1630:120:103;;;;;:::i;:::-;;:::i;5141:455::-;;;;;;;;;;-1:-1:-1;5141:455:103;;;;;:::i;:::-;;:::i;1268:85::-;;;;;;;;;;-1:-1:-1;1268:85:103;;;;;:::i;:::-;;:::i;9298:268:76:-;;;;;;;;;;-1:-1:-1;9298:268:76;;;;;:::i;:::-;;:::i;322:38:102:-;;;;;;;;;;-1:-1:-1;322:38:102;-1:-1:-1;;;;;;;;;;;322:38:102;;2440:140:103;;;;;;;;;;-1:-1:-1;2440:140:103;;;;;:::i;:::-;;:::i;8122:934:88:-;;;;;;;;;;;;;:::i;3051:280:77:-;;;;;;;;;;-1:-1:-1;3051:280:77;;;;;:::i;:::-;;:::i;4030:104:88:-;;;;;;;;;;;;;:::i;17317:1382::-;;;;;;;;;;;;;:::i;9746:2036::-;;;;;;;;;;;;;:::i;6676:834::-;;;;;;;;;;;;;:::i;3369:107:103:-;;;;;;;;;;-1:-1:-1;3369:107:103;;;;;:::i;:::-;;:::i;9947:135:76:-;;;;;;;;;;-1:-1:-1;9947:135:76;;;;;:::i;:::-;;:::i;:::-;;;7900:25:107;;;7888:2;7873:18;9947:135:76;7754:177:107;1957:106:103;;;;;;;;;;-1:-1:-1;1957:106:103;;;;;:::i;:::-;;:::i;18703:1412:88:-;;;;;;;;;;;;;:::i;9060:682::-;;;;;;;;;;;;;:::i;7514:604::-;;;;;;;;;;;;;:::i;5249:603::-;;;;;;;;;;;;;:::i;7254:97:76:-;;;;;;;;;;;;;:::i;3482:915:103:-;;;;;;;;;;-1:-1:-1;3482:915:103;;;;;:::i;:::-;;:::i;13652:1195:88:-;;;;;;;;;;;;;:::i;5602:406:103:-;;;;;;;;;;-1:-1:-1;5602:406:103;;;;;:::i;:::-;;:::i;1756:130::-;;;;;;;;;;-1:-1:-1;1756:130:103;;;;;:::i;:::-;;:::i;2768:279:77:-;;;;;;;;;;-1:-1:-1;2768:279:77;;;;;:::i;:::-;;:::i;1179:83:103:-;;;;;;;;;;-1:-1:-1;1179:83:103;;;;;:::i;:::-;;:::i;1819:584:101:-;;;;;;;;;;;;;:::i;:::-;;;10032:14:107;;10025:22;10007:41;;9995:2;9980:18;1819:584:101;9867:187:107;9126:168:76;;;;;;;;;;-1:-1:-1;9126:168:76;;;;;:::i;:::-;;:::i;8854:268::-;;;;;;;;;;-1:-1:-1;8854:268:76;;;;;:::i;:::-;;:::i;3164:81:103:-;;;;;;;;;;-1:-1:-1;3164:81:103;;;;;:::i;:::-;;:::i;11786:1862:88:-;;;;;;;;;;;;;:::i;2304:130:103:-;;;;;;;;;;-1:-1:-1;2304:130:103;;;;;:::i;:::-;;:::i;9665:224:76:-;;;;;;;;;;-1:-1:-1;9665:224:76;;;;;:::i;:::-;;:::i;2732:341:103:-;;;;;;;;;;-1:-1:-1;2732:341:103;;;;;:::i;:::-;;:::i;1518:106::-;;;;;;;;;;-1:-1:-1;1518:106:103;;;;;:::i;:::-;;:::i;7841:173:76:-;;;;;;;;;;-1:-1:-1;7841:173:76;;;;;:::i;:::-;;:::i;5856:816:88:-;;;;;;;;;;;;;:::i;171:28:102:-;;;;;;;;;;-1:-1:-1;171:28:102;;;;;;;;;;;1572:26:101;;;;;;;;;;-1:-1:-1;1572:26:101;;;;;;;;4138:1107:88;4250:371;;;;;;;;4287:4;;-1:-1:-1;;;;;4287:4:88;;;4250:371;;4306:5;;;4250:371;;;;;;4209:38;4250:371;;;;;;;;;;;;4397:7;4250:371;;;;;;;;;;4446:10;4250:371;;;;;;;;;;4287:4;4250:371;;;;;;;;;;;4562:9;4250:371;;;;;;;;;;;;4627:20;;:10;:20::i;:::-;4747:3;;4727:37;;4753:10;7900:25:107;;-1:-1:-1;;;;;4747:3:88;;;;4738:4;;4727:37;;7888:2:107;7873:18;4727:37:88;;;;;;;4783:5;;4770:20;;-1:-1:-1;;;;;4783:5:88;4627:10;:20::i;4770:::-;4881:3;;4870:37;;4896:10;7900:25:107;;4889:4:88;;-1:-1:-1;;;;;4881:3:88;;4870:37;;7888:2:107;7873:18;4870:37:88;;;;;;;4955:3;;:48;;-1:-1:-1;;;4955:48:88;;4913:39;;-1:-1:-1;;;;;4955:3:88;;:8;;4971:9;;4955:48;;4989:8;;4955:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5025:12;;5056:4;;5025:12;;-1:-1:-1;5009:125:88;;5045:36;;-1:-1:-1;;;;;5056:4:88;5054:7;5065:5;;-1:-1:-1;;;;;5065:5:88;5073:7;5045:8;:36::i;:::-;5009:125;;;;;;;;;;;;;;;;;:8;:125::i;:::-;5140:100;5156:3;:13;;;5177:10;5140:100;;;;;;;;;;;;;;;;;:8;:100::i;:::-;4203:1042;;4138:1107::o;14851:859::-;14952:370;;;;;;;;14989:4;;-1:-1:-1;;;;;14989:4:88;;;14952:370;;15008:5;;;;14952:370;;;;14911:38;14952:370;;;;;;;;;;;;15099:7;14952:370;;;;;;;;;;15121:10;14952:370;;;;;;;;;;14989:4;;14952:370;;;;;;;;;15263:9;14952:370;;;;;;;;;;15370:3;;:48;;-1:-1:-1;;;15370:48:88;;14952:370;;14911:38;;15370:3;;;:8;;15386:9;;15370:48;;14952:370;;15370:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15328:90;;15424:22;15449:3;;;;;;;;;-1:-1:-1;;;;;15449:3:88;-1:-1:-1;;;;;15449:10:88;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;15449:33:88;;15485:4;15449:42;;-1:-1:-1;;;;;;15449:42:88;;;;;;;-1:-1:-1;;;;;705:32:107;;;15449:42:88;;;687:51:107;660:18;;15449:42:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15513:3;;15530:5;;15537:4;;15543:11;;;;15513:48;;-1:-1:-1;;;15513:48:88;;15424:67;;-1:-1:-1;15497:13:88;;-1:-1:-1;;;;;15513:3:88;;;;:16;;:48;;15530:5;;;;15537:4;;;15513:3;;:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15497:64;;15567:138;15583:3;;;;;;;;;-1:-1:-1;;;;;15583:3:88;-1:-1:-1;;;;;15583:10:88;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;15583:33:88;;15619:4;15583:42;;-1:-1:-1;;;;;;15583:42:88;;;;;;;-1:-1:-1;;;;;705:32:107;;;15583:42:88;;;687:51:107;660:18;;15583:42:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15633:28;15653:8;15633:17;:28;:::i;:::-;15567:138;;;;;;;;;;;;;;;;;:8;:138::i;:::-;14905:805;;;;14851:859::o;7393:411:76:-;7447:21;7480:8;7476:272;;;7550:4;7575:2;7595:9;7505:108;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;7498:115;;7476:272;;;7678:4;7703:2;7723:9;7641:100;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;7634:107;;7476:272;-1:-1:-1;;;;;;;;;;;7753:8:76;7764:4;7753:29;;;-1:-1:-1;;;;;;7753:29:76;;;;;;;-1:-1:-1;;;;;15942:32:107;;;7753:29:76;;;15924:51:107;15991:18;;;15984:30;16050:1;16030:18;;;16023:29;-1:-1:-1;;;16068:18:107;;;16061:38;16116:19;;7753:29:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7393:411;;;:::o;1279:2747:88:-;1318:13;:11;:13::i;:::-;1337:3;;1350:4;;1359:5;;1337:33;;-1:-1:-1;;;1337:33:88;;-1:-1:-1;;;;;1337:3:88;;;;:10;;:33;;1350:4;;;;1359:5;;;1367:2;;1337:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1376:3:88;;1389:5;;-1:-1:-1;;;;;1376:3:88;;;;-1:-1:-1;1376:10:88;;-1:-1:-1;1389:5:88;1399:4;;-1:-1:-1;;;;;1399:4:88;1406:2;1376:33;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1474:3:88;;-1:-1:-1;;;;;1474:3:88;;-1:-1:-1;1474:12:88;;-1:-1:-1;1474:3:88;:20;;-1:-1:-1;;;;;;1474:20:88;;;;;;;-1:-1:-1;;;;;705:32:107;;;1474:20:88;;;687:51:107;660:18;;1474:20:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1595:3:88;;-1:-1:-1;;;;;1595:3:88;;-1:-1:-1;1604:4:88;;-1:-1:-1;1564:46:88;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1558:3:88;:52;;-1:-1:-1;;;;;;1558:52:88;-1:-1:-1;;;;;1558:52:88;;;;;;;;;1783:4;;1763:41;;-1:-1:-1;;;1763:41:88;;1558:52;;1763:19;;:41;;1783:4;;;;-1:-1:-1;;1789:14:88;1763:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1810:3:88;;1830:5;;1810:42;;-1:-1:-1;;;1810:42:88;;-1:-1:-1;;;;;1810:3:88;;;;-1:-1:-1;1810:19:88;;-1:-1:-1;1810:42:88;;1830:5;;;;-1:-1:-1;;1837:14:88;1810:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1970:3:88;;1988:4;;1970:23;;-1:-1:-1;;;1970:23:88;;-1:-1:-1;;;;;1988:4:88;;;1970:23;;;687:51:107;1970:3:88;;;-1:-1:-1;1970:17:88;;-1:-1:-1;660:18:107;;1970:23:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1999:3:88;;2017:5;;1999:24;;-1:-1:-1;;;1999:24:88;;-1:-1:-1;;;;;2017:5:88;;;1999:24;;;687:51:107;1999:3:88;;;-1:-1:-1;1999:17:88;;-1:-1:-1;660:18:107;;1999:24:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2088:4:88;;2081:32;;-1:-1:-1;;;;;;2088:4:88;;-1:-1:-1;2086:7:88;2097:4;2095:7;2104:8;2081:4;:32::i;:::-;2126:5;;2119:33;;-1:-1:-1;;;;;2126:5:88;2124:8;10557:98:76;2119:33:88;2309:5;;2325:3;;:12;;;-1:-1:-1;;;2325:12:88;;;;-1:-1:-1;;;;;2309:5:88;;;;:13;;2323:15;;2325:3;;;:10;;:12;;;;;;;;;;;;;;;:3;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10647:1:76;10557:98;2323:15:88;2340:8;2309:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2355:4:88;;2370:3;;:12;;;-1:-1:-1;;;2370:12:88;;;;-1:-1:-1;;;;;2355:4:88;;;;:12;;2368:15;;2370:3;;;:10;;:12;;;;;;;;;;;;;;;:3;:12;;;;;;;;;;;;;;2368:15;2385:8;2355:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2471:5:88;;2458:43;;-1:-1:-1;;;;;2471:5:88;2481:4;;-1:-1:-1;;;;;2481:4:88;2458:43;;;;;;;;;;;;;-1:-1:-1;;;2458:43:88;;;:10;:43::i;:::-;2445:10;:56;;-1:-1:-1;;;;;;2445:56:88;-1:-1:-1;;;;;2445:56:88;;;;;;2514:4;;2507:38;;2514:4;2523:10;;-1:-1:-1;;;;;2523:10:88;2521:13;10557:98:76;2507:38:88;2657:10;;-1:-1:-1;;;;;;;;;;;251:64:102;2646:8:88;;-1:-1:-1;;;;;2657:10:88;2646:23;;-1:-1:-1;;;;;;2646:23:88;;;;;;;-1:-1:-1;;;;;705:32:107;;;2646:23:88;;;687:51:107;660:18;;2646:23:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2675:4:88;;2690:3;;2675:30;;-1:-1:-1;;;2675:30:88;;-1:-1:-1;;;;;2675:4:88;;;;-1:-1:-1;2675:12:88;;-1:-1:-1;2675:30:88;;2690:3;;;;2696:8;;2675:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2861:10:88;;-1:-1:-1;;;;;;;;;;;251:64:102;2850:8:88;;-1:-1:-1;;;;;2861:10:88;2850:23;;-1:-1:-1;;;;;;2850:23:88;;;;;;;-1:-1:-1;;;;;705:32:107;;;2850:23:88;;;687:51:107;660:18;;2850:23:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2879:5:88;;2895:3;;2879:31;;-1:-1:-1;;;2879:31:88;;-1:-1:-1;;;;;2879:5:88;;;;-1:-1:-1;2879:13:88;;-1:-1:-1;2879:31:88;;2895:3;;;;2901:8;;2879:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2983:5:88;;2970:42;;-1:-1:-1;;;;;2983:5:88;2993:4;;-1:-1:-1;;;;;2993:4:88;2970:42;;;;;;;;;;;;;-1:-1:-1;;;2970:42:88;;;:10;:42::i;:::-;2958:9;:54;;-1:-1:-1;;;;;;2958:54:88;-1:-1:-1;;;;;2958:54:88;;;;;;;;;3018:31;;-1:-1:-1;;;3018:31:88;;-1:-1:-1;;;;;;;;;;;251:64:102;3018:7:88;;:31;;2958:54;3040:8;;3018:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3080:4:88;;3067:42;;-1:-1:-1;;;;;;3080:4:88;;-1:-1:-1;3089:5:88;;-1:-1:-1;;;;;3089:5:88;3067:42;;;;;;;;;;;;;-1:-1:-1;;;3067:42:88;;;:10;:42::i;:::-;3055:9;:54;;-1:-1:-1;;;;;;3055:54:88;-1:-1:-1;;;;;3055:54:88;;;;;;;;;3115:31;;-1:-1:-1;;;3115:31:88;;-1:-1:-1;;;;;;;;;;;251:64:102;3115:7:88;;:31;;3055:54;3137:8;;3115:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3164:9:88;;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;3153:8:88;;-1:-1:-1;;;;;;3164:9:88;3153:22;;-1:-1:-1;;;;;;3153:22:88;;;;;;;-1:-1:-1;;;;;705:32:107;;;3153:22:88;;;687:51:107;660:18;;3153:22:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3181:5:88;;3197:3;;3181:31;;-1:-1:-1;;;3181:31:88;;-1:-1:-1;;;;;3181:5:88;;;;-1:-1:-1;3181:13:88;;-1:-1:-1;3181:31:88;;3197:3;;;;3203:8;;3181:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3269:5:88;;3262:38;;-1:-1:-1;;;;;3269:5:88;3279:9;;-1:-1:-1;;;;;3279:9:88;3277:12;10557:98:76;3262:38:88;3355:4;;3348:37;;-1:-1:-1;;;;;3355:4:88;3364:9;;-1:-1:-1;;;;;3364:9:88;3362:12;10557:98:76;3348:37:88;3443:9;;-1:-1:-1;;;;;;;;;;;251:64:102;3432:8:88;;-1:-1:-1;;;;;3443:9:88;3432:22;;-1:-1:-1;;;;;;3432:22:88;;;;;;;-1:-1:-1;;;;;705:32:107;;;3432:22:88;;;687:51:107;660:18;;3432:22:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3460:4:88;;3475:3;;3460:30;;-1:-1:-1;;;3460:30:88;;-1:-1:-1;;;;;3460:4:88;;;;-1:-1:-1;3460:12:88;;-1:-1:-1;3460:30:88;;3475:3;;;;3481:8;;3460:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3541:9:88;;:74;;-1:-1:-1;;;3541:74:88;;3571:7;3541:74;;;18373:25:107;3580:9:88;18414:18:107;;;18407:34;;;3591:6:88;18457:18:107;;;18450:34;3541:9:88;18500:18:107;;;18493:34;;;18543:19;;;18536:35;18587:19;;;18580:35;-1:-1:-1;;;;;3541:9:88;;;;:29;;18345:19:107;;3541:74:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3621:9:88;;:75;;-1:-1:-1;;;3621:75:88;;3651:7;3621:75;;;18373:25:107;3660:10:88;18414:18:107;;;18407:34;3672:6:88;18457:18:107;;;18450:34;3621:9:88;18500:18:107;;;18493:34;;;18543:19;;;18536:35;3686:9:88;18587:19:107;;;18580:35;-1:-1:-1;;;;;3621:9:88;;;;:29;;18345:19:107;;3621:75:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3702:9:88;;:75;;-1:-1:-1;;;3702:75:88;;3732:7;3702:75;;;18373:25:107;3741:10:88;18414:18:107;;;18407:34;3753:6:88;18457:18:107;;;18450:34;3702:9:88;18500:18:107;;;18493:34;;;18543:19;;;18536:35;3767:9:88;18587:19:107;;;18580:35;-1:-1:-1;;;;;3702:9:88;;;;:29;;18345:19:107;;3702:75:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3784:9:88;;:75;;-1:-1:-1;;;3784:75:88;;3814:10;3784:75;;;18373:25:107;3826:7:88;18414:18:107;;;18407:34;3835:6:88;18457:18:107;;;18450:34;3784:9:88;18500:18:107;;;18493:34;;;18543:19;;;18536:35;3849:9:88;18587:19:107;;;18580:35;-1:-1:-1;;;;;3784:9:88;;;;:29;;18345:19:107;;3784:75:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3865:9:88;;:75;;-1:-1:-1;;;3865:75:88;;3895:10;3865:75;;;18373:25:107;3907:7:88;18414:18:107;;;18407:34;3916:6:88;18457:18:107;;;18450:34;3865:9:88;18500:18:107;;;18493:34;;;18543:19;;;18536:35;3930:9:88;18587:19:107;;;18580:35;-1:-1:-1;;;;;3865:9:88;;;;:29;;18345:19:107;;3865:75:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3946:9:88;;:75;;-1:-1:-1;;;3946:75:88;;3976:10;3946:75;;;18373:25:107;3988:7:88;18414:18:107;;;18407:34;3997:6:88;18457:18:107;;;18450:34;3946:9:88;18500:18:107;;;18493:34;;;18543:19;;;18536:35;4011:9:88;18587:19:107;;;18580:35;-1:-1:-1;;;;;3946:9:88;;;;:29;;18345:19:107;;3946:75:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1279:2747::o;8068:243:76:-;8179:21;8215:23;8229:8;8215:13;:23::i;:::-;8208:30;;8244:62;8264:12;8287:11;8301:4;8244:11;:62::i;:::-;8068:243;;;;;:::o;2069:116:103:-;2132:18;;-1:-1:-1;;;2132:18:103;;-1:-1:-1;;;;;;;;;;;251:64:102;2132:7:103;;:18;;2140:3;;2145:4;;2132:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2160:18:103;;-1:-1:-1;;;2160:18:103;;-1:-1:-1;;;;;705:32:107;;2160:18:103;;;687:51:107;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;2160:13:103;;-1:-1:-1;660:18:107;;2160::103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2069:116;;:::o;15714:1599:88:-;15837:370;;;;;;;;15874:4;;-1:-1:-1;;;;;15874:4:88;;;15837:370;;15893:5;;;;15837:370;;;;15796:38;15837:370;;;;;;;;;;;;15984:7;15837:370;;;;;;;;;;16006:10;15837:370;;;;;;;;;;15874:4;;15837:370;;;;;;;;;16148:9;15837:370;;;;;;;;;;16286:3;;:48;;-1:-1:-1;;;16286:48:88;;15837:370;;16231:7;;15796:38;;16286:3;;:8;;16231:7;;16286:48;;15837:370;;16286:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16244:90;;16377:26;16406:3;;;;;;;;;-1:-1:-1;;;;;16406:3:88;-1:-1:-1;;;;;16406:10:88;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;16406:33:88;;16442:4;16406:42;;-1:-1:-1;;;;;;16406:42:88;;;;;;;-1:-1:-1;;;;;705:32:107;;;16406:42:88;;;687:51:107;660:18;;16406:42:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16531:5;;16547:3;;:12;;;-1:-1:-1;;;16547:12:88;;;;16377:71;;-1:-1:-1;;;;;;16531:5:88;;;;:13;;16545:15;;16547:3;;:10;;:12;;;;;;;;;;;;;;:3;:12;;;;;;;;;;;;;;16545:15;16562:1;16531:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;16570:4:88;;16585:3;;:12;;;-1:-1:-1;;;16585:12:88;;;;-1:-1:-1;;;;;16570:4:88;;;;:12;;16583:15;;16585:3;;;:10;;:12;;;;;;;;;;;;;;;:3;:12;;;;;;;;;;;;;;16583:15;16600:1;16570:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;16633:10:88;;16674:11;;;;16633:80;;-1:-1:-1;;;16633:80:88;;;;;22602:25:107;;;;16633:10:88;22643:18:107;;;22636:34;16616:11:88;;-1:-1:-1;;;;;16633:10:88;;:23;;22575:18:107;;16633:80:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16609:104;;;;;;16719:50;16739:1;16730:6;:10;16719:50;;;;;;;;;;;;;;;;;:10;:50::i;:::-;16812:3;;16829:5;;16836:4;;16842:11;;;;16812:48;;-1:-1:-1;;;16812:48:88;;-1:-1:-1;;;;;16812:3:88;;;;:16;;:48;;16829:5;;;;16836:4;;;16812:3;;:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;16894:3:88;;:12;;;-1:-1:-1;;;16894:12:88;;;;16866:25;;-1:-1:-1;;;;;16894:3:88;;:10;;:12;;;;;;;;;;;;;;:3;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;16894:33:88;;16930:4;16894:42;;-1:-1:-1;;;;;;16894:42:88;;;;;;;-1:-1:-1;;;;;705:32:107;;;16894:42:88;;;687:51:107;660:18;;16894:42:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16866:70;-1:-1:-1;16942:26:88;16971:44;16994:21;16866:70;16971:44;:::i;:::-;16942:73;;17021:62;17056:1;17032:21;:25;17021:62;;;;;;;;;;;;;-1:-1:-1;;;17021:62:88;;;:10;:62::i;:::-;17183:125;17226:21;17212:3;:10;;;17200:9;:22;;;;:::i;:::-;17199:48;;;;:::i;:::-;17255:1;17183:125;;;;;;;;;;;;;;;;;:8;:125::i;:::-;15790:1523;;;;;;;15714:1599::o;1416:96:103:-;1460:22;;-1:-1:-1;;;1460:22:103;;-1:-1:-1;;;;;;;;;;;251:64:102;1460:7:103;;:22;;1468:3;;-1:-1:-1;;;1473:8:103;1460:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1492:13:103;;-1:-1:-1;;;1492:13:103;;-1:-1:-1;;;;;705:32:107;;1492:13:103;;;687:51:107;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;1492:8:103;;-1:-1:-1;660:18:107;;1492:13:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1416:96;:::o;1630:120::-;1690:22;;-1:-1:-1;;;1690:22:103;;-1:-1:-1;;;;;;;;;;;251:64:102;1690:7:103;;:22;;1698:3;;-1:-1:-1;;;1703:8:103;1690:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1722:21:103;;-1:-1:-1;;;1722:21:103;;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;1722:8:103;;-1:-1:-1;1722:21:103;;1731:3;;1736:6;;1722:21;;;:::i;5141:455::-;5301:16;;-1:-1:-1;;;5301:16:103;;5232:12;;;;-1:-1:-1;;;;;;;;;;;251:64:102;5301:10:103;;:16;;5312:4;;5301:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5301:16:103;;;;;;;;;;;;:::i;:::-;5319:4;5284:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5260:64;;5445:8;5439:15;5432:4;5422:8;5418:19;5415:1;5408:47;5400:55;-1:-1:-1;;;;;;5496:18:103;;5475:114;;;;-1:-1:-1;;;5475:114:103;;26494:2:107;5475:114:103;;;26476:21:107;26533:2;26513:18;;;26506:30;26572:34;26552:18;;;26545:62;-1:-1:-1;;;26623:18:107;;;26616:47;26680:19;;5475:114:103;;;;;;;;;5250:346;5141:455;;;;:::o;1268:85::-;-1:-1:-1;;;;;;;;;;;1315:7:103;1323:22;1341:4;1323:15;:22;:::i;:::-;1315:31;;;;;;;;;;;;;7900:25:107;;7888:2;7873:18;;7754:177;9298:268:76;9398:9;9415:12;9444:3;;;;;;;;;-1:-1:-1;;;;;9444:3:76;9456:4;9470:3;9430:45;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9481:31:76;;-1:-1:-1;;;9481:31:76;;9415:60;;-1:-1:-1;;;;;;;;;;;;251:64:102;9481:7:76;;:31;;9415:60;;9502:9;;9481:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9518:28:76;;-1:-1:-1;;;9518:28:76;;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;9518:8:76;;-1:-1:-1;9518:28:76;;9535:2;;9540:5;;9518:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9559:2:76;;9298:268;-1:-1:-1;;;;;;;9298:268:76:o;2440:140:103:-;2519:18;;-1:-1:-1;;;2519:18:103;;-1:-1:-1;;;;;;;;;;;251:64:102;2519:7:103;;:18;;2527:3;;2532:4;;2519:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2547:26:103;;-1:-1:-1;;;2547:26:103;;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;2547:13:103;;-1:-1:-1;2547:26:103;;2561:3;;2566:6;;2547:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8122:934:88;8221:5;;8199:19;;-1:-1:-1;;;;;8221:5:88;:15;8239:4;8221:24;;-1:-1:-1;;;;;;8221:24:88;;;;;;;-1:-1:-1;;;;;705:32:107;;;8221:24:88;;;687:51:107;660:18;;8221:24:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8272:4;;8199:46;;-1:-1:-1;8251:18:88;;-1:-1:-1;;;;;8272:4:88;:14;8289:4;8272:23;;-1:-1:-1;;;;;;8272:23:88;;;;;;;-1:-1:-1;;;;;705:32:107;;;8272:23:88;;;687:51:107;660:18;;8272:23:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8343:370;;;;;;;;8380:4;;-1:-1:-1;;;;;8380:4:88;;;8343:370;;8399:5;;;;8343:370;;;;8302:38;8343:370;;;;;;;;;;;;8490:7;8343:370;;;;;;;;;;8512:10;8343:370;;;;;;;;;;8380:4;;8343:370;;;;;;;;;8654:9;8343:370;;;;;;;;;;8761:3;;:48;;-1:-1:-1;;;8761:48:88;;8251:44;;-1:-1:-1;8343:370:88;;8302:38;;8761:3;;:8;;8777:9;;8761:48;;8343:370;;8761:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8831:5;;8719:90;;-1:-1:-1;8815:117:88;;-1:-1:-1;;;;;8831:5:88;:15;8849:4;8831:24;;-1:-1:-1;;;;;;8831:24:88;;;;;;;-1:-1:-1;;;;;705:32:107;;;8831:24:88;;;687:51:107;660:18;;8831:24:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8880:13;;;;8863:30;;:14;:30;:::i;:::-;8815:117;;;;;;;;;;;;;;;;;:8;:117::i;:::-;8954:4;;8938:113;;-1:-1:-1;;;;;8954:4:88;:14;8971:4;8954:23;;-1:-1:-1;;;;;;8954:23:88;;;;;;;-1:-1:-1;;;;;705:32:107;;;8954:23:88;;;687:51:107;660:18;;8954:23:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9001:12;;8985:28;;:13;:28;:::i;:::-;8938:113;;;;;;;;;;;;;-1:-1:-1;;;8938:113:88;;;:8;:113::i;3051:280:77:-;3104:20;;;;;;;;;:15;:20;;;3130:176;3151:4;:11;3147:1;:15;3130:176;;;3195:1;3198:23;3212:4;3217:1;3212:7;;;;;;;;:::i;:::-;;;;;;;3198:8;:23::i;:::-;3181:41;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3177:45;;3252:1;3238:4;:11;:15;;;;:::i;:::-;3234:1;:19;3230:70;;;3283:1;3269:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;3265:26;;3230:70;3164:3;;;;:::i;:::-;;;;3130:176;;;;3311:15;3324:1;3311:12;:15::i;4030:104:88:-;4074:3;;:16;;;-1:-1:-1;;;4074:16:88;;;;4065:64;;-1:-1:-1;;;;;4074:3:88;;:14;;:16;;;;;;;;;;;;;;:3;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4092:3;;;;;;;;;-1:-1:-1;;;;;4092:3:88;-1:-1:-1;;;;;4092:9:88;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4065:64;;;;;;;;;;;;;-1:-1:-1;;;4065:64:88;;;:8;:64::i;:::-;4030:104::o;17317:1382::-;17379:9;;:28;;-1:-1:-1;;;17379:28:88;;:9;:28;;;10007:41:107;-1:-1:-1;;;;;17379:9:88;;;;:22;;9980:18:107;;17379:28:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17426:3:88;;17413:18;;-1:-1:-1;;;;;;17426:3:88;;-1:-1:-1;4627:10:88;:20::i;17413:18::-;17496:3;;17480:5;;17465:4;;-1:-1:-1;;;;;17496:3:88;;;;17480:5;;;;17465:4;17442:177;17508:36;17465:4;17517:7;10557:98:76;17508:36:88;17588:4;;17552:10;;17570:1;;17579:34;;-1:-1:-1;;;;;17588:4:88;17586:7;17597:5;;-1:-1:-1;;;;;17597:5:88;17605:7;17579:6;:34::i;:::-;17442:177;;;29498:25:107;;;29554:2;29539:18;;29532:34;;;;29582:18;;;29575:34;29640:2;29625:18;;29618:34;29485:3;29470:19;17442:177:88;;;;;;;17638:3;;17625:18;;-1:-1:-1;;;;;17638:3:88;4627:10;:20::i;17625:18::-;17708:3;;17692:5;;17677:4;;-1:-1:-1;;;;;17708:3:88;;;;17692:5;;;;17677:4;17654:177;17720:36;17677:4;17729:7;10557:98:76;17720:36:88;17800:4;;17764:10;;17782:1;;17791:34;;-1:-1:-1;;;;;17800:4:88;17798:7;10557:98:76;17791:34:88;17654:177;;;29498:25:107;;;29554:2;29539:18;;29532:34;;;;29582:18;;;29575:34;29640:2;29625:18;;29618:34;29485:3;29470:19;17654:177:88;;;;;;;17850:3;;17837:18;;-1:-1:-1;;;;;17850:3:88;4627:10;:20::i;17837:18::-;17929:5;;17917:4;;17904:3;;17944:4;;-1:-1:-1;;;;;17929:5:88;;;;17917:4;;;-1:-1:-1;;;;;;;;;;;17866:182:88;17904:3;17929:5;17970:36;17917:4;17979:7;17990:5;;-1:-1:-1;;;;;17990:5:88;17998:7;17970:8;:36::i;:::-;18014:10;18032:1;18041;17866:182;;;;;;;;;;;:::i;:::-;;;;;;;;18095:370;;;;;;;;18132:4;;-1:-1:-1;;;;;18132:4:88;;;18095:370;;18151:5;;;;18095:370;;;;18054:38;18095:370;;;;;;;;;;;;18242:7;18095:370;;;;;;;;;;18264:10;18095:370;;;;;;;;;;18132:4;;18095:370;;;;;;;;;18406:9;18095:370;;;;;;;;;;18513:3;;:48;;-1:-1:-1;;;18513:48:88;;18095:370;;18054:38;;18513:3;;;:8;;18529:9;;18513:48;;18095:370;;18513:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18583:12;;18614:4;;18583:12;;-1:-1:-1;18567:127:88;;18603:36;;-1:-1:-1;;;;;18614:4:88;18612:7;10557:98:76;18603:36:88;18567:127;;;;;;;;;;;;;;;;;:8;:127::i;9746:2036::-;9857:414;;;;;;;;9894:4;;-1:-1:-1;;;;;9894:4:88;;;9857:414;;9913:5;;;;9857:414;;;;;;;;9816:38;9857:414;;;;;;;;;;;;10004:7;9857:414;;;;;;;;;;10026:10;9857:414;;;;10103:12;9857:414;;;;9894:4;;9857:414;;;;;;;;;10212:9;9857:414;;;;;;;;;;10301:3;;:12;;-1:-1:-1;;;10301:12:88;;;;9857:414;;9816:38;;10301:3;;;:10;;:12;;;;;9857:414;;10301:12;;;;;;:3;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10329:5;;10301:43;;-1:-1:-1;;;10301:43:88;;-1:-1:-1;;;;;10301:27:88;;;;;;:43;;10329:5;;;10338:4;;10301:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10277:67;;10350:20;10373:3;;;;;;;;;-1:-1:-1;;;;;10373:3:88;-1:-1:-1;;;;;10373:10:88;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10401:5;;10373:43;;-1:-1:-1;;;10373:43:88;;-1:-1:-1;;;;;10373:27:88;;;;;;:43;;10401:5;;;10410:4;;10373:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10431:3;;10447;;10350:66;;-1:-1:-1;10422:65:88;;-1:-1:-1;;;;;10431:3:88;;;;:13;;10447:3;10431:21;;-1:-1:-1;;;;;;10431:21:88;;;;;;;-1:-1:-1;;;;;705:32:107;;;10431:21:88;;;687:51:107;660:18;;10431:21:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10454:1;10422:65;;;;;;;;;;;;;;;;;:8;:65::i;:::-;10507:3;;10494:18;;-1:-1:-1;;;;;10507:3:88;4627:10;:20::i;10494:18::-;10586:5;;10574:4;;10561:3;;10601:4;;-1:-1:-1;;;;;10586:5:88;;;;10574:4;;;-1:-1:-1;;;;;;;;;;;10523:252:88;10561:3;10586:5;10636:36;10574:4;10645:7;10557:98:76;10636:36:88;10680:10;10698:1;10707;10523:252;;;;;;;;;;;:::i;:::-;;;;;;;;10823:3;;:48;;-1:-1:-1;;;10823:48:88;;10781:39;;-1:-1:-1;;;;;10823:3:88;;:8;;10839:9;;10823:48;;10857:8;;10823:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10781:90;;10877:97;10909:1;10895:3;:11;;;:15;10877:97;;;;;;;;;;;;;;;;;:10;:97::i;:::-;11040:3;;11053:5;;11063:4;;11070:11;;;;11040:42;;-1:-1:-1;;;11040:42:88;;11022:15;;-1:-1:-1;;;;;11040:3:88;;;;:10;;:42;;11053:5;;;;11063:4;;;11040:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11022:60;-1:-1:-1;11088:136:88;1737:2:18;4074:56;;;-1:-1:-1;;;;;4074:56:18;11163:7:88;;;;11148:12;;:22;;11163:7;11148:22;:::i;:::-;11125:8;:19;;;:46;;;;:::i;:::-;11088:136;;;;;;;;;;;;;;;;;:8;:136::i;:::-;11230:125;-1:-1:-1;;;;;4419:56:18;;11289:3:88;:13;;;11267:8;:19;;;:35;;;;:::i;:::-;11230:125;;;;;;;;;;;;;;;;;:8;:125::i;:::-;11409:3;;11421:5;;11428:4;;11434:11;;;;11409:37;;-1:-1:-1;;;11409:37:88;;11393:103;;-1:-1:-1;;;;;11409:3:88;;;;:11;;:37;;11421:5;;;;11428:4;;;11409:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11456:4;11393:103;;;;;;;;;;;;;-1:-1:-1;;;11393:103:88;;;:8;:103::i;:::-;11518:3;;:12;;;-1:-1:-1;;;11518:12:88;;;;11502:136;;-1:-1:-1;;;;;11518:3:88;;:10;;:12;;;;;;;;;;;;;;:3;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11546:5;;11518:43;;-1:-1:-1;;;11518:43:88;;-1:-1:-1;;;;;11518:27:88;;;;;;:43;;11546:5;;;11555:4;;11518:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11588:13;;;;11569:32;;:16;:32;:::i;:::-;11502:136;;;;;;;;;;;;;-1:-1:-1;;;11502:136:88;;;:8;:136::i;:::-;11660:3;;:12;;;-1:-1:-1;;;11660:12:88;;;;11644:133;;-1:-1:-1;;;;;11660:3:88;;:10;;:12;;;;;;;;;;;;;;:3;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11688:4;;11660:42;;-1:-1:-1;;;11660:42:88;;-1:-1:-1;;;;;11660:27:88;;;;;;:42;;11688:4;;;11696;;11660:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11728:12;;11710:30;;:15;:30;:::i;6676:834::-;6745:14;6764:4;6783:9;;:28;;-1:-1:-1;;;;;;6783:28:88;;:9;:28;;;10007:41:107;-1:-1:-1;;;;;6762:15:88;;;;;-1:-1:-1;6783:9:88;;;:22;;9980:18:107;;6783:28:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6859:371:88;;;;;;;;6896:4;;-1:-1:-1;;;;;6896:4:88;;;6859:371;;6915:5;;;;6859:371;;;;6818:38;6859:371;;;;;;;;;;;;7006:7;6859:371;;;;;;;;;;7028:10;6859:371;;;;;;;;;;6896:4;6859:371;;;;;;;;;;;7171:9;6859:371;;;;;;;;;;7278:3;;:48;;-1:-1:-1;;;7278:48:88;;6859:371;;-1:-1:-1;6818:38:88;-1:-1:-1;7278:3:88;;;;;:8;;7294:9;;7278:48;;6859:371;;7278:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7236:90;;7332:55;7356:1;7343:3;:10;;;:14;7332:55;;;;;;;;;;;;;;;;;:10;:55::i;:::-;7393:112;7421:3;:10;;;7409:9;:22;;;;:::i;:::-;7441:4;-1:-1:-1;;;;;7439:15:88;;7393:112;;;;;;;;;;;;;;;;;:8;:112::i;:::-;6739:771;;;6676:834::o;3369:107:103:-;3441:28;3446:5;3453:2;3457:4;3463:5;3441:4;:28::i;9947:135:76:-;10031:4;10068:9;10072:5;10068:2;:9;:::i;:::-;10050:15;10055:1;10058:6;10050:4;:15::i;:::-;:27;;;;:::i;:::-;10043:34;9947:135;-1:-1:-1;;;;9947:135:76:o;1957:106:103:-;2006:22;;-1:-1:-1;;;2006:22:103;;-1:-1:-1;;;;;;;;;;;251:64:102;2006:7:103;;:22;;2014:3;;-1:-1:-1;;;2019:8:103;2006:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2038:18:103;;-1:-1:-1;;;2038:18:103;;-1:-1:-1;;;;;705:32:107;;2038:18:103;;;687:51:107;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;2038:13:103;;-1:-1:-1;660:18:107;;2038::103;510:234:107;18703:1412:88;18792:355;;;;;;;;18829:4;;-1:-1:-1;;;;;18829:4:88;;;18792:355;;18848:5;;;;18792:355;;;;-1:-1:-1;18792:355:88;;;;;;;;;;;;18926:7;18792:355;;;;;;;;;;18948:9;18792:355;;;;;;;;;;18829:4;;18792:355;;;;;;;;;19088:9;18792:355;;;;;;;;;;;19166:3;;18792:355;;19153:18;;19166:3;4627:10;:20::i;19153:18::-;19245:5;;19233:4;;19220:3;;19182:199;;19260:4;;-1:-1:-1;;;;;19245:5:88;;;;19233:4;;;-1:-1:-1;;;;;;;;;;;19182:199:88;;;19220:3;;;;19245:5;;;;;;;;19313:1;;19182:199;:::i;:::-;;;;;;;;19387:3;;:36;;-1:-1:-1;;;19387:36:88;;-1:-1:-1;;;;;19387:3:88;;;;:8;;19403:9;;19387:36;;19414:8;;19387:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;19442:3:88;;19429:18;;-1:-1:-1;;;;;19442:3:88;4627:10;:20::i;19429:18::-;19521:5;;19509:4;;19496:3;;19458:199;;19536:4;;-1:-1:-1;;;;;19521:5:88;;;;19509:4;;;-1:-1:-1;;;;;;;;;;;19458:199:88;;;19496:3;;;;19521:5;;;;;;;;19589:1;;19458:199;:::i;:::-;;;;;;;;19663:3;;:36;;-1:-1:-1;;;19663:36:88;;-1:-1:-1;;;;;19663:3:88;;;;:8;;19679:9;;19663:36;;19690:8;;19663:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;19748:3:88;;19788:5;;19801:4;;19748:63;;-1:-1:-1;;;19748:63:88;;19706:18;;;;-1:-1:-1;;;;;19748:3:88;;;;:17;;:63;;19775:4;;19788:5;;;19801:4;;19748:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19748:63:88;;;;;;;;;;;;:::i;:::-;19705:106;;;;19817:72;19828:4;:11;19843:1;19828:16;:36;;;;-1:-1:-1;19848:11:88;;:16;19828:36;19817:72;;;;;;;;;;;;;-1:-1:-1;;;19817:72:88;;;:10;:72::i;:::-;19895:3;;19912:5;;19919:4;;19925:7;;-1:-1:-1;;;;;19895:3:88;;;;:16;;19912:5;;;19919:4;;19925;;19895:3;;19925:7;;;;:::i;:::-;;;;;;;19934:5;19895:45;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;19961:3:88;;19988:5;;19995:4;;19961:39;;-1:-1:-1;;;19961:39:88;;-1:-1:-1;;;;;19961:3:88;;;;:17;;:39;;19981:4;;19988:5;;;;19995:4;;19961:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19961:39:88;;;;;;;;;;;;:::i;:::-;20024:11;;19946:54;;-1:-1:-1;19946:54:88;-1:-1:-1;20006:104:88;;20039:1;20024:16;:36;;;;;20044:4;:11;20059:1;20044:16;20024:36;20006:104;;;;;;;;;;;;;;;;;:10;:104::i;9060:682::-;9215:370;;;;;;;;9252:4;;-1:-1:-1;;;;;9252:4:88;;;9215:370;;9271:5;;;;9215:370;;;;9132:17;9215:370;;;;;;;;;;;;9362:7;9215:370;;;;;;;;;;9384:10;9215:370;;;;;;;;;;9252:4;;9215:370;;;;;;;;;9526:9;9215:370;;;;;;;;;;9633:3;;:18;;-1:-1:-1;;;9633:18:88;;9154:4;9152:15;;9132:17;;9633:3;;;;;:8;;:18;;9215:370;;9633:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9591:60;-1:-1:-1;9673:64:88;9684:4;-1:-1:-1;;;;;9682:15:88;;9699:12;9673:64;;;;;;;;;;;;;-1:-1:-1;;;9673:64:88;;;:8;:64::i;7514:604::-;7629:370;;;;;;;;7666:4;;-1:-1:-1;;;;;7666:4:88;;;7629:370;;7685:5;;;7629:370;;;;7588:38;7629:370;;;;;;;;;;;;7776:7;7629:370;;;;;;;;;;7798:10;7629:370;;;;;;;;;;7666:4;;7629:370;;;;;;;;;7940:9;7629:370;;;;;;;;8005:63;;-1:-1:-1;;;8005:63:88;;-1:-1:-1;;;;;;;;;;;251:64:102;8005:15:88;;:63;;;;36866:2:107;36848:21;;;36905:2;36885:18;;;36878:30;36944:34;36939:2;36924:18;;36917:62;-1:-1:-1;;;37010:2:107;36995:18;;36988:42;37062:3;37047:19;;36665:407;8005:63:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8074:3:88;;:39;;-1:-1:-1;;;8074:39:88;;-1:-1:-1;;;;;8074:3:88;;;;-1:-1:-1;8074:8:88;;-1:-1:-1;8090:12:88;;8074:39;;8104:8;;8074:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5249:603::-;5385:370;;;;;;;;5422:4;;-1:-1:-1;;;;;5422:4:88;;;5385:370;;5441:5;;;5385:370;;;;5422:4;5385:370;;;;5344:38;5385:370;;;;;;5531:7;5385:370;;;;;;;;;;5580:10;5385:370;;;;;;;;;;5422:4;5385:370;;;;;;;;;;;5696:9;5385:370;;;;;;;;5761:44;;-1:-1:-1;;;5761:44:88;;-1:-1:-1;;;;;;;;;;;251:64:102;5761:15:88;;:44;;;;37278:2:107;37260:21;;;37317:2;37297:18;;;37290:30;37356:27;37351:2;37336:18;;37329:55;37416:2;37401:18;;37077:348;5761:44:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5811:3:88;;:36;;-1:-1:-1;;;5811:36:88;;-1:-1:-1;;;;;5811:3:88;;;;-1:-1:-1;5811:8:88;;-1:-1:-1;5827:9:88;;5811:36;;5838:8;;5811:36;;;:::i;7254:97:76:-;7295:16;7326:20;7340:5;7326:13;:20::i;:::-;7319:27;;7254:97;:::o;3482:915:103:-;3636:38;;;-1:-1:-1;;;;;705:32:107;;;3636:38:103;;;;687:51:107;;;;3636:38:103;;;;;;;;;;660:18:107;;;;3636:38:103;;;;;;;-1:-1:-1;;;;;3636:38:103;-1:-1:-1;;;3636:38:103;;;3625:50;;3601:20;;3625:10;;;:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3598:77;;;3685:15;3714:7;3703:30;;;;;;;;;;;;:::i;:::-;3685:48;-1:-1:-1;3770:123:103;3888:4;3770:90;3857:2;3770:64;-1:-1:-1;;;3770:35:103;:8;3799:5;3770:28;:35::i;:::-;:52;19602:9;;;:16;;-1:-1:-1;;19602:16:103;;;;;;;;;;;;:9;19503:143;3770:64;:86;19918:10;;;:47;;;;;;;-1:-1:-1;19918:47:103;;;;;;;-1:-1:-1;;;;;19942:21:103;;;;19918:47;;;:10;19814:179;3770:90;:117;;:123::i;:::-;3938:6;3935:456;;;4000:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4000:34:103;-1:-1:-1;;;4000:34:103;;;3989:46;;3962:23;;-1:-1:-1;;;;;3989:10:103;;;:46;;4000:34;3989:46;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3959:76;;;4049:14;4077:10;4066:33;;;;;;;;;;;;:::i;:::-;4049:50;;4123:7;4116:4;:14;4113:143;;;4161:14;4171:4;4161:7;:14;:::i;:::-;4150:26;;;;:::i;:::-;;;4113:143;;;4226:14;4233:7;4226:4;:14;:::i;:::-;4215:26;;;;:::i;:::-;;;4113:143;4269:111;4373:6;4269:72;-1:-1:-1;;;4269:39:103;:8;4302:5;4269:32;:39::i;:111::-;3945:446;;3557:840;;3482:915;;;;:::o;13652:1195:88:-;13767:370;;;;;;;;13804:4;;-1:-1:-1;;;;;13804:4:88;;;13767:370;;13823:5;;;;13767:370;;;;13726:38;13767:370;;;;;;;;;;;;13914:7;13767:370;;;;;;;;;;13936:10;13767:370;;;;;;;;;;13804:4;;13767:370;;;;;;;;;14078:9;13767:370;;;;;;;;;;14185:3;;:48;;-1:-1:-1;;;14185:48:88;;13767:370;;13726:38;;14185:3;;;:8;;14201:9;;14185:48;;13767:370;;14185:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14143:90;;14287:18;14308:3;;;;;;;;;-1:-1:-1;;;;;14308:3:88;-1:-1:-1;;;;;14308:10:88;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;14308:33:88;;14344:4;14308:42;;-1:-1:-1;;;;;;14308:42:88;;;;;;;-1:-1:-1;;;;;705:32:107;;;14308:42:88;;;687:51:107;660:18;;14308:42:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14438:3;;14455:5;;14465:4;;14438:42;;-1:-1:-1;;;14438:42:88;;14287:63;;-1:-1:-1;;;;;;14438:3:88;;;;:14;;:42;;14455:5;;;14465:4;;14472:7;;14438:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14499:3:88;;14486:18;;-1:-1:-1;;;;;;14499:3:88;;-1:-1:-1;4627:10:88;:20::i;14486:18::-;14540:4;;-1:-1:-1;;;;;14540:4:88;14530:5;;-1:-1:-1;;;;;14515:44:88;;;;14530:5;-1:-1:-1;;;;;14515:44:88;;14547:3;:11;;;14515:44;;;;7900:25:107;;7888:2;7873:18;;7754:177;14515:44:88;;;;;;;;14590:10;;14631:11;;;;14590:80;;-1:-1:-1;;;14590:80:88;;;;;22602:25:107;;;;14566:12:88;22643:18:107;;;22636:34;;;14566:12:88;-1:-1:-1;;;;;14590:10:88;;:23;;22575:18:107;;14590:80:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14565:105;;;;;;14676:35;14687:7;14676:35;;;;;;;;;;;;;-1:-1:-1;;;14676:35:88;;;:10;:35::i;:::-;14733:3;;:12;;;-1:-1:-1;;;14733:12:88;;;;14717:125;;-1:-1:-1;;;;;14733:3:88;;:10;;:12;;;;;;;;;;;;;;:3;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;14733:33:88;;14769:4;14733:42;;-1:-1:-1;;;;;;14733:42:88;;;;;;;-1:-1:-1;;;;;705:32:107;;;14733:42:88;;;687:51:107;660:18;;14733:42:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14783:13;14717:125;;;;;;;;;;;;;;;;;:8;:125::i;5602:406:103:-;5726:16;;-1:-1:-1;;;5726:16:103;;5674:12;;;;-1:-1:-1;;;;;;;;;;;251:64:102;5726:10:103;;:16;;5737:4;;5726:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5726:16:103;;;;;;;;;;;;:::i;:::-;5702:40;;5863:8;5857:15;5850:4;5840:8;5836:19;5833:1;5826:47;5818:55;-1:-1:-1;;;;;;5914:18:103;;5893:108;;;;-1:-1:-1;;;5893:108:103;;38594:2:107;5893:108:103;;;38576:21:107;38633:2;38613:18;;;38606:30;38672:34;38652:18;;;38645:62;-1:-1:-1;;;38723:18:107;;;38716:41;38774:19;;5893:108:103;38392:407:107;5893:108:103;5692:316;5602:406;;;:::o;1756:130::-;1830:18;;-1:-1:-1;;;1830:18:103;;-1:-1:-1;;;;;;;;;;;251:64:102;1830:7:103;;:18;;1838:3;;1843:4;;1830:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1858:21:103;;-1:-1:-1;;;1858:21:103;;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;1858:8:103;;-1:-1:-1;1858:21:103;;1867:3;;1872:6;;1858:21;;;:::i;2768:279:77:-;2823:20;;;;;;;;;:15;:20;;;2849:173;2870:5;:12;2866:1;:16;2849:173;;;2915:1;2918:18;2927:5;2933:1;2927:8;;;;;;;;:::i;2918:18::-;2901:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2897:40;;2968:1;2953:5;:12;:16;;;;:::i;:::-;2949:1;:20;2945:71;;;2999:1;2985:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;2981:26;;2945:71;2884:3;;;;:::i;:::-;;;;2849:173;;1179:83:103;-1:-1:-1;;;;;;;;;;;1224:7:103;1232:22;1250:4;1232:15;:22;:::i;1819:584:101:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:101;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2978:55:101;3059:16;1980:374;;2196:43;;2023:20;;-1:-1:-1;;;;;;;;;;;1671:64:101;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:101;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:101;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:101;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:101:o;9126:168:76:-;9236:3;;9205:13;;9228;;-1:-1:-1;;;;;9236:3:76;9228:5;:13::i;:::-;-1:-1:-1;9273:3:76;;9255:33;;-1:-1:-1;;;;;9273:3:76;;;;9278:4;;9284:3;;9255:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;9247:42;;9126:168;;;;;:::o;8854:268::-;8954:9;8971:12;9000:3;;;;;;;;;-1:-1:-1;;;;;9000:3:76;9012:4;9026:3;8986:45;;;;;:::i;3164:81:103:-;3221:17;;-1:-1:-1;;;3221:17:103;;-1:-1:-1;;;;;;;;;;;251:64:102;3221:7:103;;:17;;3229:2;;3233:4;;3221:17;;;:::i;11786:1862:88:-;11938:370;;;;;;;;11975:4;;-1:-1:-1;;;;;11975:4:88;;;11938:370;;11994:5;;;;11938:370;;;;11897:38;11938:370;;;;;;;;;;;;12085:7;11938:370;;;;;;;;;;12107:10;11938:370;;;;;;;;;;11975:4;;11938:370;;;;;;;;;12249:9;11938:370;;;;;;;;;;12356:3;;:48;;-1:-1:-1;;;12356:48:88;;11938:370;;11897:38;;12356:3;;;:8;;12372:9;;12356:48;;11938:370;;12356:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12433:4;;12314:90;;-1:-1:-1;12410:20:88;;-1:-1:-1;;;;;12433:4:88;:14;12450:4;12433:23;;-1:-1:-1;;;;;;12433:23:88;;;;;;;-1:-1:-1;;;;;705:32:107;;;12433:23:88;;;687:51:107;660:18;;12433:23:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12410:46;;12462:22;12487:3;;;;;;;;;-1:-1:-1;;;;;12487:3:88;-1:-1:-1;;;;;12487:10:88;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12515:5;;12487:43;;-1:-1:-1;;;12487:43:88;;-1:-1:-1;;;;;12487:27:88;;;;;;:43;;12515:5;;;12524:4;;12487:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12766:10;;12800:11;;;;12766:70;;-1:-1:-1;;;12766:70:88;;;;;22602:25:107;;;;12825:9:88;22643:18:107;;;22636:34;12462:68:88;;-1:-1:-1;12668:12:88;;;;;;;;-1:-1:-1;;;;;12766:10:88;;:23;;22575:18:107;;12766:70:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12660:176;;;;;;;;;12843:43;12854:7;12843:43;;;;;;;;;;;;;-1:-1:-1;;;12843:43:88;;;:10;:43::i;:::-;12962:5;;12914:133;;12930:13;;12951:38;;-1:-1:-1;;;;;12962:5:88;12972:4;;-1:-1:-1;;;;;12972:4:88;12979:9;12951:8;:38::i;:::-;12914:133;;;;;;;;;;;;;;;;;:8;:133::i;:::-;13115:4;;13099:138;;-1:-1:-1;;;;;13115:4:88;:14;13132:4;13115:23;;-1:-1:-1;;;;;;13115:23:88;;;;;;;-1:-1:-1;;;;;705:32:107;;;13115:23:88;;;687:51:107;660:18;;13115:23:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13146:32;13164:14;13146:15;:32;:::i;:::-;13099:138;;;;;;;;;;;;;;;;;:8;:138::i;:::-;13260:3;;:12;;;-1:-1:-1;;;13260:12:88;;;;13244:154;;-1:-1:-1;;;;;13260:3:88;;:10;;:12;;;;;;;;;;;;;;:3;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13288:5;;13260:43;;-1:-1:-1;;;13260:43:88;;-1:-1:-1;;;;;13260:27:88;;;;;;:43;;13288:5;;;13297:4;;13260:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13332:19;13348:3;13332:13;:19;:::i;:::-;13311:41;;:17;:41;:::i;:::-;13244:154;;;;;;;;;;;;;;;;;:8;:154::i;:::-;13462:3;;13475:5;;13485:4;;13492:11;;;;13462:42;;-1:-1:-1;;;13462:42:88;;13444:15;;-1:-1:-1;;;;;13462:3:88;;;;:10;;:42;;13475:5;;;;13485:4;;;13462:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13444:60;-1:-1:-1;13511:132:88;-1:-1:-1;;;;;4419:56:18;;13581:9:88;13565:3;:13;;;13548:8;:14;;;:30;;;;:::i;:::-;:42;;;;:::i;13511:132::-;11851:1797;;;;;;;;;11786:1862::o;2304:130:103:-;2369:22;;-1:-1:-1;;;2369:22:103;;-1:-1:-1;;;;;;;;;;;251:64:102;2369:7:103;;:22;;2377:3;;-1:-1:-1;;;2382:8:103;2369:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2401:26:103;;-1:-1:-1;;;2401:26:103;;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;2401:13:103;;-1:-1:-1;2401:26:103;;2415:3;;2420:6;;2401:26;;;:::i;9665:224:76:-;9721:4;9775:13;9791:59;:47;;;;;;;;;;;;;;-1:-1:-1;;;9791:47:76;;;:27;9815:1;9791:8;:15;;:27;;;;:::i;:::-;:31;15575:24:103;;;;;;;19758:9;;;:22;;;;;;;-1:-1:-1;;19758:22:103;;;;;;;;;:9;19652:156;9791:47:76;:57;:59::i;:::-;9775:75;-1:-1:-1;9872:12:76;9775:75;9872:2;:12;:::i;:::-;9863:21;;:6;:21;:::i;2732:341:103:-;-1:-1:-1;;;;;;;;;;;2808:125:103;;;;40633:2:107;40615:21;;;40672:1;40652:18;;;40645:29;-1:-1:-1;;;40705:2:107;40690:18;;40683:37;40758:3;40751:4;40736:20;;40729:33;;;40799:2;40778:19;;;40771:31;40839:34;40833:3;40818:19;;40811:63;40911:34;40905:3;40890:19;;40883:63;40983:32;40977:3;40962:19;;40955:61;41048:3;41033:19;;40330:728;2808:125:103;;;;;;;;2943:123;3061:4;2943:90;3030:2;2943:64;-1:-1:-1;;;2943:35:103;:8;2972:5;2943:28;:35::i;1518:106::-;1576:18;;-1:-1:-1;;;1576:18:103;;-1:-1:-1;;;;;;;;;;;251:64:102;1576:7:103;;:18;;1584:3;;1589:4;;1576:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1604:13:103;;-1:-1:-1;;;1604:13:103;;-1:-1:-1;;;;;705:32:107;;1604:13:103;;;687:51:107;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;1604:8:103;;-1:-1:-1;660:18:107;;1604:13:103;510:234:107;7841:173:76;7929:16;7962:47;7976:12;7990:11;8003:5;7962:13;:47::i;5856:816:88:-;6007:371;;;;;;;;6044:4;;-1:-1:-1;;;;;6044:4:88;;;6007:371;;6063:5;;;;6007:371;;;;5928:14;6007:371;;;;;;;;;;;;6154:7;6007:371;;;;;;;;;;6203:10;6007:371;;;;;;;;;;6044:4;6007:371;;;;;;;;;;;6319:9;6007:371;;;;;;;;;;6426:3;;:48;;-1:-1:-1;;;6426:48:88;;5947:4;5945:15;;5928:14;;6426:3;;;;;:8;;6442:9;;6426:48;;6007:371;;6426:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6496:12;;6527:4;;6496:12;;-1:-1:-1;6480:107:88;;6516:36;;-1:-1:-1;;;;;6527:4:88;6525:7;10557:98:76;6516:36:88;6480:107;;;;;;;;;;;;;-1:-1:-1;;;6480:107:88;;;:8;:107::i;:::-;6593:74;6602:9;6615:4;-1:-1:-1;;;;;6613:15:88;;6593:74;;;;;;;;;;;;;;;;;:8;:74::i;1530:97:77:-;1579:43;;-1:-1:-1;;;1579:43:77;;1593:4;1579:43;;;41298:41:107;;;41355:18;;;41348:50;;;41414:18;;;41407:50;;;41473:18;;;41466:50;-1:-1:-1;;;;;41553:32:107;;41532:19;;;41525:61;-1:-1:-1;;;;;;;;;;;251:64:102;1579:13:77;;41270:19:107;;1579:43:77;41063:529:107;6338:209:76;6468:3;;:21;;-1:-1:-1;;;6468:21:76;;6434:4;;;;-1:-1:-1;;;;;6468:3:76;;;;:10;;:21;;6479:4;;6485:3;;6468:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6446:43;-1:-1:-1;6537:5:76;;-1:-1:-1;6512:20:76;5147:52:17;;;;;;6537:5:76;6512:20;:::i;:::-;6503:30;;:5;:30;:::i;:::-;6502:40;;;;:::i;:::-;6495:47;6338:209;-1:-1:-1;;;;;6338:209:76:o;5469:178:101:-;5550:1;5545;:6;5541:100;;-1:-1:-1;;;;;;;;;;;5598:3:101;5572:30;;;;;;:::i;:::-;;;;;;;;5616:14;5625:1;5628;5616:8;:14::i;2279:576:76:-;2426:21;;2338:115;;2361:4;;2374:12;;2399:19;;2426:21;;;2338:115;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2331:4:76;:122;;-1:-1:-1;;;;;;2331:122:76;-1:-1:-1;;;;;2331:122:76;;;;;;;;;;2490:4;2557:22;;2467:118;;2503:13;;2529:20;;2557:22;;;;;2467:118;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2459:5:76;:126;;-1:-1:-1;;;;;;2459:126:76;-1:-1:-1;;;;;2459:126:76;;;;;;;;;2634:4;;2647:7;:24;2620:52;;2634:4;;;;;2459:126;2647:24;;2620:13;:52::i;:::-;2614:3;:58;;-1:-1:-1;;;;;;2614:58:76;-1:-1:-1;;;;;2614:58:76;;;;;;;;;2719:27;;;-1:-1:-1;;;2719:27:76;;;;:8;;2735;;2719:27;;;;;-1:-1:-1;;2719:27:76;;;;;;;2735:8;2614:58;2719:27;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2771:4:76;;2786:3;;2771:36;;-1:-1:-1;;;2771:36:76;;-1:-1:-1;;;;;2771:4:76;;;;-1:-1:-1;2771:12:76;;-1:-1:-1;2771:36:76;;-1:-1:-1;2786:3:76;;;-1:-1:-1;;2792:14:76;2771:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2813:5:76;;2829:3;;2813:37;;-1:-1:-1;;;2813:37:76;;-1:-1:-1;;;;;2813:5:76;;;;:13;;:37;;2829:3;;;-1:-1:-1;;2835:14:76;2813:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8315:337::-;8414:9;8420:2;8414:5;:9::i;:::-;;8429;8435:2;8429:5;:9::i;:::-;-1:-1:-1;8466:18:76;;8444:52;;-1:-1:-1;;;8444:52:76;;-1:-1:-1;;;;;44720:15:107;;;8444:52:76;;;44702:34:107;44772:15;;;44752:18;;;44745:43;44804:18;;;44797:34;;;;8486:1:76;44847:18:107;;;44840:34;8489:6:76;44890:19:107;;;44883:35;8444:13:76;;;;;;44636:19:107;;8444:52:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8524:18:76;;8502:52;;-1:-1:-1;;;8502:52:76;;-1:-1:-1;;;;;44720:15:107;;;8502:52:76;;;44702:34:107;44772:15;;;44752:18;;;44745:43;44804:18;;;44797:34;;;;8544:1:76;44847:18:107;;;44840:34;8547:6:76;44890:19:107;;;44883:35;8502:13:76;;;;-1:-1:-1;8502:13:76;;-1:-1:-1;44636:19:107;;8502:52:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;275:37:102;;259:55;;251:64;;-1:-1:-1;;;;;8575:8:76;;8584:2;8595;-1:-1:-1;;;;;8588:17:76;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8588:19:76;;;;;;;;;;;;:::i;:::-;8575:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;275:37:102;;259:55;;251:64;;-1:-1:-1;;;;;8614:8:76;;8623:2;8634;-1:-1:-1;;;;;8627:17:76;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8627:19:76;;;;;;;;;;;;:::i;:::-;8614:33;;;;;;;;;;;;;;;;:::i;3418:191:101:-;3497:9;3492:111;;-1:-1:-1;;;;;;;;;;;3553:3:101;3527:30;;;;;;:::i;:::-;;;;;;;;3571:21;3582:9;3571:10;:21::i;319:461:78:-;381:27;440:2;446:1;440:7;436:42;;-1:-1:-1;;459:10:78;;;;;;;;;;;;-1:-1:-1;;;459:10:78;;;;;319:461::o;436:42::-;494:2;485:6;520:56;527:6;;520:56;;545:5;;565:2;560:7;;;;520:56;;;583:17;613:3;603:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;603:14:78;-1:-1:-1;583:34:78;-1:-1:-1;;;634:7:78;;649:94;656:7;;649:94;;711:2;706;:7;700:2;:14;687:29;;675:4;680:3;;;;;;;675:9;;;;;;;;:::i;:::-;;;;:41;-1:-1:-1;;;;;675:41:78;;;;;;;;-1:-1:-1;732:2:78;726:8;;;;649:94;;;-1:-1:-1;764:4:78;319:461;-1:-1:-1;;;;319:461:78:o;6055:121:106:-;6110:59;6165:2;6126:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6126:42:106;;;;;;;;;;;;;;-1:-1:-1;;;;;6126:42:106;-1:-1:-1;;;6126:42:106;;;6110:15;:59::i;3897:185:101:-;3984:1;-1:-1:-1;;;;;3979:6:101;:1;-1:-1:-1;;;;;3979:6:101;;3975:101;;-1:-1:-1;;;;;;;;;;;4033:3:101;4006:31;;;;;;:::i;:::-;;;;;;;;4051:14;4060:1;4063;4051:8;:14::i;6136:198:76:-;6264:3;;:21;;-1:-1:-1;;;6264:21:76;;6230:4;;;;-1:-1:-1;;;;;6264:3:76;;;;:10;;:21;;6275:4;;6281:3;;6264:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6242:43;-1:-1:-1;6323:5:76;;-1:-1:-1;5147:52:17;;;;;;6308:11:76;5069:136:17;19341:156:103;19447:12;;;:22;;-1:-1:-1;;;;;;19447:22:103;-1:-1:-1;;;;;19447:22:103;;;;;;;;;;:12;19341:156::o;20625:120::-;20705:33;20719:4;20733:3;20705:13;:33::i;1901:226:77:-;1945:4;-1:-1:-1;;;;;1961:15:77;;1957:136;;-1:-1:-1;;;;;;;;;;;1991:37:77;;;;45594:2:107;45576:21;;;45633:2;45613:18;;;45606:30;45672:32;45667:2;45652:18;;45645:60;45737:2;45722:18;;45392:354;1991:37:77;;;;;;;;2041:31;;;45963:21:107;;;46020:1;46000:18;;;45993:29;-1:-1:-1;;;46053:2:107;46038:18;;46031:37;-1:-1:-1;;;;;46142:32:107;;46135:4;46120:20;;46113:62;2041:31:77;;;;;;;46100:3:107;2041:31:77;;;2080:6;:4;:6::i;:::-;-1:-1:-1;;;;;;2106:15:77;;;;1901:226::o;22844:128:103:-;22906:7;22943:10;22948:4;22943;:10::i;:::-;22932:33;;;;;;;;;;;;:::i;5202:262:101:-;5264:1;5259;:6;5255:203;;-1:-1:-1;;;;;;;;;;;5286:41:101;;;;46388:2:107;46370:21;;;46427:2;46407:18;;;46400:30;46466:34;46461:2;46446:18;;46439:62;-1:-1:-1;;;46532:2:107;46517:18;;46510:32;46574:3;46559:19;;46186:398;5286:41:101;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;:::-;;;;;;;;5441:6;:4;:6::i;3255:157::-;3315:9;3310:96;;-1:-1:-1;;;;;;;;;;;3345:30:101;;;;47825:2:107;47807:21;;;47864:2;47844:18;;;47837:30;47903:25;47898:2;47883:18;;47876:53;47961:2;47946:18;;47623:347;3345:30:101;;;;;;;;3389:6;:4;:6::i;631:333:106:-;725:14;;581:42;855:2;842:16;;701:21;;725:14;842:16;581:42;891:5;880:68;871:77;;808:150;;631:333;:::o;3615:277:101:-;3683:1;-1:-1:-1;;;;;3678:6:101;:1;-1:-1:-1;;;;;3678:6:101;;3674:212;;-1:-1:-1;;;;;;;;;;;3705:44:101;;;;48177:2:107;48159:21;;;48216:2;48196:18;;;48189:30;48255:34;48250:2;48235:18;;48228:62;-1:-1:-1;;;48321:2:107;48306:18;;48299:35;48366:3;48351:19;;47975:401;3705:44:101;;;;;;;;3768:34;3800:1;3768:34;;;;;;:::i;:::-;;;;;;;;3821;3853:1;3821:34;;;;;;:::i;20979:1089:103:-;21095:12;;;;21131:9;;;;21172:11;;;;21216:10;;;21193:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21095:12:103;;;;21131:9;;;;;;21081:11;;21193:33;;21216:10;;21193:33;;21216:10;21193:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21237:17;21274:4;21280:12;21288:3;21280:7;:12::i;:::-;21257:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;21257:36:103;;;;;;;;;-1:-1:-1;;;;;21308:15:103;;;;;;:10;;;21257:36;21308:15;;;;;;-1:-1:-1;;;;;;21308:21:103;;;;;;;;;21257:36;;-1:-1:-1;21308:21:103;;:15;;21340:34;;21357:3;;21362:11;;21340:34;;:::i;:::-;;;;-1:-1:-1;;21340:34:103;;;;;;;;;21330:45;;21340:34;21330:45;;;;21308:68;;;;;;;;;;-1:-1:-1;21308:68:103;;;;21303:110;;21392:10;21397:4;21392;:10::i;:::-;;21303:110;-1:-1:-1;;;;;21445:15:103;;21422:12;21445:15;;;;;;;;;;;-1:-1:-1;;;;;;21445:21:103;;;;;;;;;21477:34;;21445:21;;21422:12;;21477:34;;21494:3;;21499:11;;21477:34;;:::i;:::-;;;;;;;;;;;;;21467:45;;;;;;21445:68;;;;;;;;;;;;21437:77;;21422:92;;21525:12;21564:17;21585:3;-1:-1:-1;;;;;21585:14:103;21600:4;21585:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21561:44:103;-1:-1:-1;21626:36:103;;-1:-1:-1;21561:44:103;21647:14;21650:11;21647:2;:14;:::i;:::-;21626;:36::i;:::-;21697:28;;-1:-1:-1;;;21697:28:103;;21619:43;;-1:-1:-1;21682:12:103;;-1:-1:-1;;;;;;;;;;;;21697:17:103;;;:28;;21715:3;;21720:4;;21697:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21682:43;;21748:4;21740;:12;21736:172;;21768:129;;-1:-1:-1;;;21768:129:103;;;;;;;:::i;:::-;21917:34;;-1:-1:-1;;;21917:34:103;;-1:-1:-1;;;;;;;;;;;21917:18:103;;;:34;;21936:3;;21941:4;;21947:3;;21917:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21968:12:103;;;21961:19;;-1:-1:-1;;;;;;21961:19:103;;;-1:-1:-1;21997:9:103;;;21990:16;;-1:-1:-1;;21990:16:103;;;22016:17;-1:-1:-1;22023:10:103;;21968:12;22016:17;:::i;:::-;22050:4;:11;;22043:18;;;21071:997;;;;;;;;20979:1089;;:::o;2410:424:101:-;-1:-1:-1;;;;;;;;;;;2978:55:101;3059:16;2445:359;;2645:67;;2482:11;;-1:-1:-1;;;;;;;;;;;1671:64:101;2579:43;;2645:67;;1671:64;;-1:-1:-1;;;2670:17:101;2705:4;;2645:67;;;:::i;:::-;;;;-1:-1:-1;;2645:67:101;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:101;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:101;2813:7;:14;;-1:-1:-1;;2813:14:101;;;;;2410:424::o;22074:204:103:-;22166:12;;;;22130;;-1:-1:-1;;;;;22166:12:103;22154:9;22200:10;22166:4;22200;:10::i;:::-;22238:32;;-1:-1:-1;;;22238:32:103;;22188:22;;-1:-1:-1;;;;;;;;;;;;22238:17:103;;;:32;;22256:1;;22188:22;;22238:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22227:44;;;;;;7900:25:107;;7888:2;7873:18;;7754:177;22227:44:103;;;;;;;;;;;;;22220:51;;;;22074:204;;;:::o;23412:397::-;23471:12;23499:19;23531:1;:8;23542:2;23531:13;;;;:::i;:::-;23521:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23521:24:103;;23499:46;;23560:9;23555:224;23579:1;:8;23575:1;:12;23555:224;;;23608:9;23620:1;23622;23620:4;;;;;;;;:::i;:::-;;;;;;;23608:16;;23753:1;23747;23743:2;23739:10;23735:2;23731:19;23723:6;23719:32;23712:43;23694:75;23589:3;;;;;:::i;:::-;;;;23555:224;;16121:3214;16245:12;;;;16281:9;;;;16322:11;;;;16366:10;;;16343:33;;;;;;;;;;;;;;;;;;;16208:7;;-1:-1:-1;;;;;16245:12:103;;16281:9;;;16322:11;16208:7;;16343:33;;16366:10;;16343:33;;;16366:10;16343:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;16427:15:103;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;16427:21:103;;;;;;;;;16459:34;;16343:33;;-1:-1:-1;16427:21:103;:15;;-1:-1:-1;16459:34:103;;-1:-1:-1;16343:33:103;;16481:11;;16459:34;;:::i;:::-;;;;-1:-1:-1;;16459:34:103;;;;;;;;;16449:45;;16459:34;16449:45;;;;16427:68;;;;;;;;;;-1:-1:-1;16427:68:103;;;;16423:174;;;-1:-1:-1;;;;;16518:15:103;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;16518:21:103;;;;;;;;;16550:34;;16518:21;;:10;16550:34;;16567:3;;16572:11;;16550:34;;:::i;:::-;;;;;;;;;;;;;16540:45;;;;;;16518:68;;;;;;;;;;;;16511:75;;;;;;16121:3214;;;:::o;16423:174::-;16606:17;16643:4;16649:12;16657:3;16649:7;:12::i;:::-;16626:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16606:56;;-1:-1:-1;;;;;;;;;;;15395:37:103;;-1:-1:-1;;;;;16672:19:103;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16703:12;16742:17;16763:3;-1:-1:-1;;;;;16763:14:103;16778:4;16763:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16739:44:103;-1:-1:-1;16804:36:103;;-1:-1:-1;16739:44:103;16825:14;16828:11;16825:2;:14;:::i;16804:36::-;16890:35;;-1:-1:-1;;;16890:35:103;;-1:-1:-1;;;;;705:32:107;;16890:35:103;;;687:51:107;16797:43:103;;-1:-1:-1;16862:22:103;;-1:-1:-1;;;;;;;;;;;;16890:21:103;;;660:18:107;;16890:35:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16890:35:103;;;;;;;;;;;;:::i;:::-;16861:64;;;16939:5;:12;16955:1;16939:17;16935:2058;;16972:12;-1:-1:-1;;;;;;;;;;;15395:37:103;;-1:-1:-1;;;;;16987:17:103;;17005:3;17010:5;17016:1;17010:8;;;;;;;;:::i;:::-;;;;;;;16987:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16972:47;-1:-1:-1;16972:47:103;17033:106;;17080:44;17101:3;17114:5;17120:1;17114:8;;;;;;;;:::i;:::-;;;;;;;17106:17;;17080:44;;;;;;;:::i;:::-;;;;;;;;17033:106;17164:4;17156;:12;17152:180;;17188:129;;-1:-1:-1;;;17188:129:103;;;;;;;:::i;:::-;17350:86;17360:3;17365:4;17398:3;17403:11;17381:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17371:45;;;;;;17426:5;17432:1;17426:8;;;;;;;;:::i;:::-;;;;;;;17418:17;;17350:86;;;;;;;;;:::i;:::-;;;;;;;;17529:5;17535:1;17529:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;17450:15:103;;17521:17;17450:15;;;;;;;;;;-1:-1:-1;;;;;;17450:21:103;;;;;;;;;17482:34;;17529:8;;17450:21;;17482:34;;17499:3;;17504:11;;17482:34;;:::i;:::-;;;;-1:-1:-1;;17482:34:103;;;;;;;;;17472:45;;17482:34;17472:45;;;;17450:68;;;;;;;;;;;;-1:-1:-1;17450:68:103;;;:88;;;;-1:-1:-1;;;;;17552:15:103;;;;17623:4;17552:10;;;:15;;;;;-1:-1:-1;;;;;;17552:21:103;;;;;;;;;17584:34;;17623:4;;-1:-1:-1;17584:34:103;;17601:3;;17606:11;;17584:34;;:::i;:::-;;;;;;;-1:-1:-1;;17584:34:103;;;;;;17574:45;;17584:34;17574:45;;;;17552:68;;;;;;;;;;-1:-1:-1;17552:68:103;:75;;-1:-1:-1;;17552:75:103;;;;;;;;;;-1:-1:-1;16935:2058:103;;;17663:1;17648:5;:12;:16;17644:1349;;;17685:9;17680:1190;17704:5;:12;17700:1;:16;17680:1190;;;17741:12;-1:-1:-1;;;;;;;;;;;15395:37:103;;-1:-1:-1;;;;;17756:17:103;;17774:3;17779:5;17785:1;17779:8;;;;;;;;:::i;:::-;;;;;;;17756:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17741:47;-1:-1:-1;17741:47:103;17806:114;;17857:44;17878:3;17891:5;17897:1;17891:8;;;;;;;;:::i;:::-;;;;;;;17883:17;;17857:44;;;;;;;:::i;:::-;;;;;;;;17806:114;-1:-1:-1;;;;;;;;;;;15395:37:103;;-1:-1:-1;;;;;17962:18:103;;17981:3;17986:5;17992:1;17986:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;17962:53:103;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18033:12;18063:17;18138:3;-1:-1:-1;;;;;18138:14:103;18153:4;18138:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18120:38:103;;-1:-1:-1;18120:38:103;-1:-1:-1;18187:36:103;18120:38;18208:14;18211:11;18208:2;:14;:::i;18187:36::-;18180:43;;18264:7;:37;;;;;-1:-1:-1;;;18275:4:103;:26;18264:37;18260:539;;;18399:86;18409:3;18414:4;18447:3;18452:11;18430:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18420:45;;;;;;18475:5;18481:1;18475:8;;;;;;;;:::i;:::-;;;;;;;18467:17;;18399:86;;;;;;;;;:::i;:::-;;;;;;;;18586:5;18592:1;18586:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;18507:15:103;;18578:17;18507:15;;;;;;;;;;-1:-1:-1;;;;;;18507:21:103;;;;;;;;;18539:34;;18586:8;;18507:21;;18539:34;;18556:3;;18561:11;;18539:34;;:::i;:::-;;;;;;;;;;;;;18529:45;;;;;;18507:68;;;;;;;;;;;:88;;;;18688:4;18617;:10;;:15;18628:3;-1:-1:-1;;;;;18617:15:103;-1:-1:-1;;;;;18617:15:103;;;;;;;;;;;;:21;18633:4;-1:-1:-1;;;;;18617:21:103;;-1:-1:-1;;;;;18617:21:103;;;;;;;;;;;;;:68;18666:3;18671:11;18649:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18639:45;;;;;;18617:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;15395:37:103;;-1:-1:-1;;;;;18714:18:103;;18733:3;18738:5;18744:1;18738:8;;;;;;;;:::i;:::-;;;;;;;18748:4;18714:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18775:5;;;;;18260:539;-1:-1:-1;;;;;;;;;;;15395:37:103;;-1:-1:-1;;;;;18816:18:103;;18835:3;18840:5;18846:1;18840:8;;;;;;;;:::i;:::-;;;;;;;18850:4;18816:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17723:1147;;;17718:3;;;;;:::i;:::-;;;;17680:1190;;;;17644:1349;;;18900:82;;;-1:-1:-1;;;18900:82:103;;52967:2:107;18900:82:103;;;52949:21:107;52986:18;;;52979:30;;;;53045:34;53025:18;;;53018:62;53116:34;53096:18;;;53089:62;53168:19;;18900:82:103;52765:428:107;18900:82:103;-1:-1:-1;;;;;19011:15:103;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;19011:21:103;;;;;;;;;19043:34;;19011:21;;:15;19043:34;;19060:3;;19065:11;;19043:34;;:::i;:::-;;;;-1:-1:-1;;19043:34:103;;;;;;;;;19033:45;;19043:34;19033:45;;;;19011:68;;;;;;;;;;-1:-1:-1;19011:68:103;;;;19003:128;;;;-1:-1:-1;;;19003:128:103;;53400:2:107;19003:128:103;;;53382:21:107;53439:2;53419:18;;;53412:30;53478:34;53458:18;;;53451:62;-1:-1:-1;;;53529:18:107;;;53522:45;53584:19;;19003:128:103;53198:411:107;19003:128:103;19149:12;;;19142:19;;-1:-1:-1;;;;;;19142:19:103;;;19178:9;;;19171:16;;-1:-1:-1;;19171:16:103;;;19197:17;-1:-1:-1;19204:10:103;;19149:12;19197:17;:::i;:::-;19224:18;19231:11;;;19224:18;;;-1:-1:-1;;;;;19260:15:103;;;;;;;;;;;;-1:-1:-1;;;;;;19260:21:103;;;;;;;;;19292:34;;19260:21;;19224:18;19292:34;;19309:3;;19314:11;;19292:34;;:::i;:::-;;;;;;;;;;;;;19282:45;;;;;;19260:68;;;;;;;;;;;;19253:75;;;;;;;;;16121:3214;;;:::o;23109:297::-;23183:7;23202:11;23224;23249:2;23238:1;:8;:13;:29;;23259:1;:8;23238:29;;;23254:2;23238:29;23224:43;;23282:6;23277:103;23298:3;23294:1;:7;23277:103;;;23363:5;:1;23367;23363:5;:::i;:::-;23337:1;23339:10;23348:1;23339:6;:10;:::i;:::-;23337:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;23337:13:103;23329:40;;23322:47;;;;;23303:3;;;;:::i;:::-;;;;23277:103;;;-1:-1:-1;23396:3:103;;23109:297;-1:-1:-1;;;;23109:297:103:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:118:107:-;100:5;93:13;86:21;79:5;76:32;66:60;;122:1;119;112:12;137:241;193:6;246:2;234:9;225:7;221:23;217:32;214:52;;;262:1;259;252:12;214:52;301:9;288:23;320:28;342:5;320:28;:::i;749:139::-;-1:-1:-1;;;;;832:31:107;;822:42;;812:70;;878:1;875;868:12;893:569;997:6;1005;1013;1066:2;1054:9;1045:7;1041:23;1037:32;1034:52;;;1082:1;1079;1072:12;1034:52;1121:9;1108:23;1140:39;1173:5;1140:39;:::i;:::-;1198:5;-1:-1:-1;1255:2:107;1240:18;;1227:32;1268:41;1227:32;1268:41;:::i;:::-;1328:7;-1:-1:-1;1387:2:107;1372:18;;1359:32;1400:30;1359:32;1400:30;:::i;:::-;1449:7;1439:17;;;893:569;;;;;:::o;1467:323::-;1535:6;1543;1596:2;1584:9;1575:7;1571:23;1567:32;1564:52;;;1612:1;1609;1602:12;1564:52;1651:9;1638:23;1670:39;1703:5;1670:39;:::i;:::-;1728:5;1780:2;1765:18;;;;1752:32;;-1:-1:-1;;;1467:323:107:o;1795:255::-;1854:6;1907:2;1895:9;1886:7;1882:23;1878:32;1875:52;;;1923:1;1920;1913:12;1875:52;1962:9;1949:23;1981:39;2014:5;1981:39;:::i;2055:404::-;2123:6;2131;2184:2;2172:9;2163:7;2159:23;2155:32;2152:52;;;2200:1;2197;2190:12;2152:52;2239:9;2226:23;2258:39;2291:5;2258:39;:::i;:::-;2316:5;-1:-1:-1;2373:2:107;2358:18;;2345:32;2386:41;2345:32;2386:41;:::i;:::-;2446:7;2436:17;;;2055:404;;;;;:::o;2464:127::-;2525:10;2520:3;2516:20;2513:1;2506:31;2556:4;2553:1;2546:15;2580:4;2577:1;2570:15;2596:275;2667:2;2661:9;2732:2;2713:13;;-1:-1:-1;;2709:27:107;2697:40;;2767:18;2752:34;;2788:22;;;2749:62;2746:88;;;2814:18;;:::i;:::-;2850:2;2843:22;2596:275;;-1:-1:-1;2596:275:107:o;2876:187::-;2925:4;2958:18;2950:6;2947:30;2944:56;;;2980:18;;:::i;:::-;-1:-1:-1;3046:2:107;3025:15;-1:-1:-1;;3021:29:107;3052:4;3017:40;;2876:187::o;3068:338::-;3133:5;3162:53;3178:36;3207:6;3178:36;:::i;:::-;3162:53;:::i;:::-;3153:62;;3238:6;3231:5;3224:21;3278:3;3269:6;3264:3;3260:16;3257:25;3254:45;;;3295:1;3292;3285:12;3254:45;3344:6;3339:3;3332:4;3325:5;3321:16;3308:43;3398:1;3391:4;3382:6;3375:5;3371:18;3367:29;3360:40;3068:338;;;;;:::o;3411:222::-;3454:5;3507:3;3500:4;3492:6;3488:17;3484:27;3474:55;;3525:1;3522;3515:12;3474:55;3547:80;3623:3;3614:6;3601:20;3594:4;3586:6;3582:17;3547:80;:::i;3638:671::-;3725:6;3733;3786:2;3774:9;3765:7;3761:23;3757:32;3754:52;;;3802:1;3799;3792:12;3754:52;3842:9;3829:23;3871:18;3912:2;3904:6;3901:14;3898:34;;;3928:1;3925;3918:12;3898:34;3951:50;3993:7;3984:6;3973:9;3969:22;3951:50;:::i;:::-;3941:60;;4054:2;4043:9;4039:18;4026:32;4010:48;;4083:2;4073:8;4070:16;4067:36;;;4099:1;4096;4089:12;4067:36;-1:-1:-1;4122:24:107;;4177:4;4169:13;;4165:27;-1:-1:-1;4155:55:107;;4206:1;4203;4196:12;4155:55;4229:74;4295:7;4290:2;4277:16;4272:2;4268;4264:11;4229:74;:::i;:::-;4219:84;;;3638:671;;;;;:::o;4522:180::-;4581:6;4634:2;4622:9;4613:7;4609:23;4605:32;4602:52;;;4650:1;4647;4640:12;4602:52;-1:-1:-1;4673:23:107;;4522:180;-1:-1:-1;4522:180:107:o;4707:614::-;4794:6;4802;4810;4863:2;4851:9;4842:7;4838:23;4834:32;4831:52;;;4879:1;4876;4869:12;4831:52;4918:9;4905:23;4937:39;4970:5;4937:39;:::i;:::-;4995:5;-1:-1:-1;5052:2:107;5037:18;;5024:32;5065:41;5024:32;5065:41;:::i;:::-;5125:7;-1:-1:-1;5183:2:107;5168:18;;5155:32;5210:18;5199:30;;5196:50;;;5242:1;5239;5232:12;5196:50;5265;5307:7;5298:6;5287:9;5283:22;5265:50;:::i;:::-;5255:60;;;4707:614;;;;;:::o;5781:472::-;5858:6;5866;5874;5927:2;5915:9;5906:7;5902:23;5898:32;5895:52;;;5943:1;5940;5933:12;5895:52;5982:9;5969:23;6001:39;6034:5;6001:39;:::i;:::-;6059:5;-1:-1:-1;6116:2:107;6101:18;;6088:32;6129:41;6088:32;6129:41;:::i;:::-;5781:472;;6189:7;;-1:-1:-1;;;6243:2:107;6228:18;;;;6215:32;;5781:472::o;6258:182::-;6317:4;6350:18;6342:6;6339:30;6336:56;;;6372:18;;:::i;:::-;-1:-1:-1;6417:1:107;6413:14;6429:4;6409:25;;6258:182::o;6445:889::-;6528:6;6559:2;6602;6590:9;6581:7;6577:23;6573:32;6570:52;;;6618:1;6615;6608:12;6570:52;6658:9;6645:23;6691:18;6683:6;6680:30;6677:50;;;6723:1;6720;6713:12;6677:50;6746:22;;6799:4;6791:13;;6787:27;-1:-1:-1;6777:55:107;;6828:1;6825;6818:12;6777:55;6864:2;6851:16;6887:59;6903:42;6942:2;6903:42;:::i;6887:59::-;6980:15;;;7062:1;7058:10;;;;7050:19;;7046:28;;;7011:12;;;;7086:19;;;7083:39;;;7118:1;7115;7108:12;7083:39;7142:11;;;;7162:142;7178:6;7173:3;7170:15;7162:142;;;7244:17;;7232:30;;7195:12;;;;7282;;;;7162:142;;;7323:5;6445:889;-1:-1:-1;;;;;;;6445:889:107:o;7339:410::-;7435:6;7443;7451;7504:2;7492:9;7483:7;7479:23;7475:32;7472:52;;;7520:1;7517;7510:12;7472:52;7559:9;7546:23;7578:39;7611:5;7578:39;:::i;:::-;7636:5;7688:2;7673:18;;7660:32;;-1:-1:-1;7739:2:107;7724:18;;;7711:32;;7339:410;-1:-1:-1;;;7339:410:107:o;7936:608::-;8019:6;8027;8035;8043;8096:3;8084:9;8075:7;8071:23;8067:33;8064:53;;;8113:1;8110;8103:12;8064:53;8152:9;8139:23;8171:39;8204:5;8171:39;:::i;:::-;8229:5;-1:-1:-1;8286:2:107;8271:18;;8258:32;8299:41;8258:32;8299:41;:::i;:::-;8359:7;-1:-1:-1;8413:2:107;8398:18;;8385:32;;-1:-1:-1;8469:2:107;8454:18;;8441:32;8482:30;8441:32;8482:30;:::i;:::-;7936:608;;;;-1:-1:-1;7936:608:107;;-1:-1:-1;;7936:608:107:o;8549:322::-;8618:6;8671:2;8659:9;8650:7;8646:23;8642:32;8639:52;;;8687:1;8684;8677:12;8639:52;8727:9;8714:23;8760:18;8752:6;8749:30;8746:50;;;8792:1;8789;8782:12;8746:50;8815;8857:7;8848:6;8837:9;8833:22;8815:50;:::i;11725:1283::-;11967:13;;-1:-1:-1;;;;;467:31:107;455:44;;11917:3;11902:19;;12039:4;12031:6;12027:17;12021:24;12054:72;12120:4;12109:9;12105:20;12091:12;-1:-1:-1;;;;;467:31:107;455:44;;383:122;12054:72;;12175:4;12167:6;12163:17;12157:24;12190:53;12237:4;12226:9;12222:20;12206:14;9841:13;9834:21;9822:34;;9771:91;12190:53;;12292:4;12284:6;12280:17;12274:24;12307:53;12354:4;12343:9;12339:20;12323:14;9841:13;9834:21;9822:34;;9771:91;12307:53;;12416:4;12408:6;12404:17;12398:24;12391:4;12380:9;12376:20;12369:54;12479:4;12471:6;12467:17;12461:24;12454:4;12443:9;12439:20;12432:54;12542:4;12534:6;12530:17;12524:24;12517:4;12506:9;12502:20;12495:54;12605:4;12597:6;12593:17;12587:24;12580:4;12569:9;12565:20;12558:54;12631:6;12686:2;12678:6;12674:15;12668:22;12699:51;12746:2;12735:9;12731:18;12715:14;9841:13;9834:21;9822:34;;9771:91;12699:51;-1:-1:-1;;12769:6:107;12817:15;;;12811:22;12791:18;;;12784:50;12853:6;12901:15;;;12895:22;12875:18;;;12868:50;12937:6;12985:15;;;12979:22;12959:18;;;;12952:50;;;;11725:1283;:::o;13013:692::-;13118:6;13171:3;13159:9;13150:7;13146:23;13142:33;13139:53;;;13188:1;13185;13178:12;13139:53;13221:2;13215:9;13263:3;13255:6;13251:16;13333:6;13321:10;13318:22;13297:18;13285:10;13282:34;13279:62;13276:88;;;13344:18;;:::i;:::-;13384:10;13380:2;13373:22;;13425:9;13419:16;13411:6;13404:32;13490:2;13479:9;13475:18;13469:25;13464:2;13456:6;13452:15;13445:50;13549:2;13538:9;13534:18;13528:25;13523:2;13515:6;13511:15;13504:50;13608:2;13597:9;13593:18;13587:25;13582:2;13574:6;13570:15;13563:50;13668:3;13657:9;13653:19;13647:26;13641:3;13633:6;13629:16;13622:52;13693:6;13683:16;;;13013:692;;;;:::o;13710:283::-;13804:6;13857:2;13845:9;13836:7;13832:23;13828:32;13825:52;;;13873:1;13870;13863:12;13825:52;13905:9;13899:16;13924:39;13957:5;13924:39;:::i;14214:184::-;14284:6;14337:2;14325:9;14316:7;14312:23;14308:32;14305:52;;;14353:1;14350;14343:12;14305:52;-1:-1:-1;14376:16:107;;14214:184;-1:-1:-1;14214:184:107:o;14403:495::-;-1:-1:-1;;;;;14722:15:107;;;14704:34;;14774:15;;;;14769:2;14754:18;;14747:43;14821:2;14806:18;;14799:34;14876:14;;14869:22;14864:2;14849:18;;14842:50;14653:3;14638:19;;14403:495::o;14903:127::-;14964:10;14959:3;14955:20;14952:1;14945:31;14995:4;14992:1;14985:15;15019:4;15016:1;15009:15;15035:128;15075:3;15106:1;15102:6;15099:1;15096:13;15093:39;;;15112:18;;:::i;:::-;-1:-1:-1;15148:9:107;;15035:128::o;15168:376::-;-1:-1:-1;;;;;15419:32:107;;;;15401:51;;15483:2;15468:18;;15461:34;;;;15526:2;15511:18;;15504:34;15389:2;15374:18;;15168:376::o;16146:400::-;-1:-1:-1;;;;;16429:15:107;;;16411:34;;16481:15;;;;16476:2;16461:18;;16454:43;16528:2;16513:18;;16506:34;;;;16361:2;16346:18;;16146:400::o;16551:337::-;-1:-1:-1;;;;;16814:15:107;;;16796:34;;16866:15;;16861:2;16846:18;;16839:43;16746:2;16731:18;;16551:337::o;16893:293::-;-1:-1:-1;;;;;17104:32:107;;;;17086:51;;17168:2;17153:18;;17146:34;17074:2;17059:18;;16893:293::o;17732:245::-;17799:6;17852:2;17840:9;17831:7;17827:23;17823:32;17820:52;;;17868:1;17865;17858:12;17820:52;17900:9;17894:16;17919:28;17941:5;17919:28;:::i;22681:491::-;22784:6;22792;22800;22808;22816;22869:3;22857:9;22848:7;22844:23;22840:33;22837:53;;;22886:1;22883;22876:12;22837:53;22918:9;22912:16;22937:28;22959:5;22937:28;:::i;:::-;23029:2;23014:18;;23008:25;23073:2;23058:18;;23052:25;23117:2;23102:18;;23096:25;23161:3;23146:19;;;23140:26;22984:5;;23008:25;;-1:-1:-1;23052:25:107;23096;-1:-1:-1;23140:26:107;;-1:-1:-1;22681:491:107;-1:-1:-1;;;22681:491:107:o;23177:125::-;23217:4;23245:1;23242;23239:8;23236:34;;;23250:18;;:::i;:::-;-1:-1:-1;23287:9:107;;23177:125::o;23439:217::-;23479:1;23505;23495:132;;23549:10;23544:3;23540:20;23537:1;23530:31;23584:4;23581:1;23574:15;23612:4;23609:1;23602:15;23495:132;-1:-1:-1;23641:9:107;;23439:217::o;24295:258::-;24367:1;24377:113;24391:6;24388:1;24385:13;24377:113;;;24467:11;;;24461:18;24448:11;;;24441:39;24413:2;24406:10;24377:113;;;24508:6;24505:1;24502:13;24499:48;;;-1:-1:-1;;24543:1:107;24525:16;;24518:27;24295:258::o;24558:::-;24600:3;24638:5;24632:12;24665:6;24660:3;24653:19;24681:63;24737:6;24730:4;24725:3;24721:14;24714:4;24707:5;24703:16;24681:63;:::i;:::-;24798:2;24777:15;-1:-1:-1;;24773:29:107;24764:39;;;;24805:4;24760:50;;24558:258;-1:-1:-1;;24558:258:107:o;24821:220::-;24970:2;24959:9;24952:21;24933:4;24990:45;25031:2;25020:9;25016:18;25008:6;24990:45;:::i;25046:308::-;25121:5;25150:53;25166:36;25195:6;25166:36;:::i;25150:53::-;25141:62;;25226:6;25219:5;25212:21;25266:3;25257:6;25252:3;25248:16;25245:25;25242:45;;;25283:1;25280;25273:12;25242:45;25296:52;25341:6;25334:4;25327:5;25323:16;25318:3;25296:52;:::i;25359:457::-;25438:6;25491:2;25479:9;25470:7;25466:23;25462:32;25459:52;;;25507:1;25504;25497:12;25459:52;25540:9;25534:16;25573:18;25565:6;25562:30;25559:50;;;25605:1;25602;25595:12;25559:50;25628:22;;25681:4;25673:13;;25669:27;-1:-1:-1;25659:55:107;;25710:1;25707;25700:12;25659:55;25733:77;25802:7;25797:2;25791:9;25786:2;25782;25778:11;25733:77;:::i;25821:466::-;25996:3;26034:6;26028:13;26050:53;26096:6;26091:3;26084:4;26076:6;26072:17;26050:53;:::i;:::-;26166:13;;26125:16;;;;26188:57;26166:13;26125:16;26222:4;26210:17;;26188:57;:::i;:::-;26261:20;;25821:466;-1:-1:-1;;;;25821:466:107:o;26710:445::-;-1:-1:-1;;;;;27029:15:107;;;27011:34;;27081:15;;;27076:2;27061:18;;27054:43;27133:15;;;27128:2;27113:18;;27106:43;26961:2;26946:18;;26710:445::o;27467:317::-;-1:-1:-1;;;;;27644:32:107;;27626:51;;27713:2;27708;27693:18;;27686:30;;;-1:-1:-1;;27733:45:107;;27759:18;;27751:6;27733:45;:::i;27789:127::-;27850:10;27845:3;27841:20;27838:1;27831:31;27881:4;27878:1;27871:15;27905:4;27902:1;27895:15;28396:429;28617:3;28655:6;28649:13;28671:53;28717:6;28712:3;28705:4;28697:6;28693:17;28671:53;:::i;:::-;-1:-1:-1;;;28746:16:107;;28771:19;;;-1:-1:-1;28817:1:107;28806:13;;28396:429;-1:-1:-1;28396:429:107:o;28830:135::-;28869:3;28890:17;;;28887:43;;28910:18;;:::i;:::-;-1:-1:-1;28957:1:107;28946:13;;28830:135::o;29663:637::-;-1:-1:-1;;;;;30028:32:107;;;;30010:51;;30104:14;;30097:22;30092:2;30077:18;;30070:50;30151:2;30136:18;;30129:34;;;;30194:2;30179:18;;30172:34;30237:3;30222:19;;30215:35;30048:3;30266:19;;30259:35;29997:3;29982:19;;29663:637::o;32308:422::-;32397:1;32440:5;32397:1;32454:270;32475:7;32465:8;32462:21;32454:270;;;32534:4;32530:1;32526:6;32522:17;32516:4;32513:27;32510:53;;;32543:18;;:::i;:::-;32593:7;32583:8;32579:22;32576:55;;;32613:16;;;;32576:55;32692:22;;;;32652:15;;;;32454:270;;;32458:3;32308:422;;;;;:::o;32735:806::-;32784:5;32814:8;32804:80;;-1:-1:-1;32855:1:107;32869:5;;32804:80;32903:4;32893:76;;-1:-1:-1;32940:1:107;32954:5;;32893:76;32985:4;33003:1;32998:59;;;;33071:1;33066:130;;;;32978:218;;32998:59;33028:1;33019:10;;33042:5;;;33066:130;33103:3;33093:8;33090:17;33087:43;;;33110:18;;:::i;:::-;-1:-1:-1;;33166:1:107;33152:16;;33181:5;;32978:218;;33280:2;33270:8;33267:16;33261:3;33255:4;33252:13;33248:36;33242:2;33232:8;33229:16;33224:2;33218:4;33215:12;33211:35;33208:77;33205:159;;;-1:-1:-1;33317:19:107;;;33349:5;;33205:159;33396:34;33421:8;33415:4;33396:34;:::i;:::-;33466:6;33462:1;33458:6;33454:19;33445:7;33442:32;33439:58;;;33477:18;;:::i;:::-;33515:20;;32735:806;-1:-1:-1;;;32735:806:107:o;33546:131::-;33606:5;33635:36;33662:8;33656:4;33635:36;:::i;35383:658::-;35448:5;35501:3;35494:4;35486:6;35482:17;35478:27;35468:55;;35519:1;35516;35509:12;35468:55;35548:6;35542:13;35574:4;35598:59;35614:42;35653:2;35614:42;:::i;35598:59::-;35691:15;;;35777:1;35773:10;;;;35761:23;;35757:32;;;35722:12;;;;35801:15;;;35798:35;;;35829:1;35826;35819:12;35798:35;35865:2;35857:6;35853:15;35877:135;35893:6;35888:3;35885:15;35877:135;;;35959:10;;35947:23;;35990:12;;;;35910;;35877:135;;;-1:-1:-1;36030:5:107;35383:658;-1:-1:-1;;;;;;35383:658:107:o;36046:614::-;36175:6;36183;36236:2;36224:9;36215:7;36211:23;36207:32;36204:52;;;36252:1;36249;36242:12;36204:52;36285:9;36279:16;36314:18;36355:2;36347:6;36344:14;36341:34;;;36371:1;36368;36361:12;36341:34;36394:72;36458:7;36449:6;36438:9;36434:22;36394:72;:::i;:::-;36384:82;;36512:2;36501:9;36497:18;36491:25;36475:41;;36541:2;36531:8;36528:16;36525:36;;;36557:1;36554;36547:12;36525:36;;36580:74;36646:7;36635:8;36624:9;36620:24;36580:74;:::i;37430:274::-;37559:3;37597:6;37591:13;37613:53;37659:6;37654:3;37647:4;37639:6;37635:17;37613:53;:::i;:::-;37682:16;;;;;37430:274;-1:-1:-1;;37430:274:107:o;39083:371::-;-1:-1:-1;;;;;;39268:33:107;;39256:46;;39325:13;;39238:3;;39347:61;39325:13;39397:1;39388:11;;39381:4;39369:17;;39347:61;:::i;:::-;39428:16;;;;39446:1;39424:24;;39083:371;-1:-1:-1;;;39083:371:107:o;40157:168::-;40197:7;40263:1;40259;40255:6;40251:14;40248:1;40245:21;40240:1;40233:9;40226:17;40222:45;40219:71;;;40270:18;;:::i;:::-;-1:-1:-1;40310:9:107;;40157:168::o;41597:289::-;41720:6;41728;41781:2;41769:9;41760:7;41756:23;41752:32;41749:52;;;41797:1;41794;41787:12;41749:52;-1:-1:-1;;41820:16:107;;41876:2;41861:18;;;41855:25;41820:16;;41855:25;;-1:-1:-1;41597:289:107:o;41891:446::-;42141:2;42130:9;42123:21;42180:1;42175:2;42164:9;42160:18;42153:29;-1:-1:-1;;;42213:2:107;42202:9;42198:18;42191:35;42264:3;42257:4;42246:9;42242:20;42235:33;42104:4;42285:46;42326:3;42315:9;42311:19;42303:6;42285:46;:::i;42468:1042::-;42553:12;;42518:3;;42608:1;42628:18;;;;42681;;;;42708:61;;42762:4;42754:6;42750:17;42740:27;;42708:61;42788:2;42836;42828:6;42825:14;42805:18;42802:38;42799:161;;42882:10;42877:3;42873:20;42870:1;42863:31;42917:4;42914:1;42907:15;42945:4;42942:1;42935:15;42799:161;15636:19;;;15688:4;15679:14;;43046:18;43073:104;;;;43191:1;43186:318;;;;43039:465;;43073:104;-1:-1:-1;;43108:24:107;;43094:39;;43153:14;;;;-1:-1:-1;43073:104:107;;43186:318;42415:1;42408:14;;;42452:4;42439:18;;43280:1;43294:167;43308:6;43305:1;43302:13;43294:167;;;43388:14;;43373:13;;;43366:37;43431:16;;;;43323:10;;43294:167;;;43481:13;;;-1:-1:-1;;43039:465:107;;;;;;;;42468:1042;;;;:::o;43515:578::-;-1:-1:-1;;;;;43766:32:107;;43748:51;;43835:3;43830:2;43815:18;;43808:31;;;-1:-1:-1;;43862:54:107;;43896:19;;43888:6;43862:54;:::i;:::-;43964:9;43956:6;43952:22;43947:2;43936:9;43932:18;43925:50;43992:41;44026:6;44018;43992:41;:::i;:::-;43984:49;;;44081:4;44073:6;44069:17;44064:2;44053:9;44049:18;44042:45;43515:578;;;;;;;:::o;46753:348::-;46983:2;46972:9;46965:21;46946:4;47003:49;47048:2;47037:9;47033:18;46666:2;46654:15;;-1:-1:-1;;;46694:4:107;46685:14;;46678:36;46739:2;46730:12;;46589:159;47003:49;46995:57;;47088:6;47083:2;47072:9;47068:18;47061:34;46753:348;;;;:::o;47270:::-;47500:2;47489:9;47482:21;47463:4;47520:49;47565:2;47554:9;47550:18;47183:2;47171:15;;-1:-1:-1;;;47211:4:107;47202:14;;47195:36;47256:2;47247:12;;47106:159;48381:374;48611:2;48600:9;48593:21;48574:4;48631:49;48676:2;48665:9;48661:18;46666:2;46654:15;;-1:-1:-1;;;46694:4:107;46685:14;;46678:36;46739:2;46730:12;;46589:159;48631:49;-1:-1:-1;;;;;48716:32:107;;;;48711:2;48696:18;;;;48689:60;;;;-1:-1:-1;48623:57:107;48381:374::o;48760:::-;48990:2;48979:9;48972:21;48953:4;49010:49;49055:2;49044:9;49040:18;47183:2;47171:15;;-1:-1:-1;;;47211:4:107;47202:14;;47195:36;47256:2;47247:12;;47106:159;49139:610;49385:13;;49328:3;;49359;;49438:4;49465:15;;;49328:3;49508:175;49522:6;49519:1;49516:13;49508:175;;;49585:13;;49571:28;;49621:14;;;;49658:15;;;;49544:1;49537:9;49508:175;;;-1:-1:-1;;49692:21:107;;;-1:-1:-1;49729:14:107;;;;;-1:-1:-1;;;49139:610:107:o;49943:556::-;50145:2;50127:21;;;50184:3;50164:18;;;50157:31;50224:34;50219:2;50204:18;;50197:62;50295:34;50290:2;50275:18;;50268:62;50367:34;50361:3;50346:19;;50339:63;-1:-1:-1;;;50433:3:107;50418:19;;50411:46;50489:3;50474:19;;49943:556::o;52318:442::-;-1:-1:-1;;;;;52565:32:107;;;;52547:51;;-1:-1:-1;;;;;;52634:33:107;;;;52629:2;52614:18;;52607:61;52699:2;52684:18;;52677:34;52742:2;52727:18;;52720:34;52534:3;52519:19;;52318:442::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "cash(address,uint256)": "d56a22f0",
    "cash(address,uint256,uint256)": "6cc12a24",
    "deal(address,address,uint256)": "6bce989b",
    "deal(address,address,uint256,bool)": "97754ae9",
    "deal(address,uint256)": "c88a5e6d",
    "deployCode(string)": "9a8325a0",
    "deployCode(string,bytes)": "29ce9dde",
    "failed()": "ba414fa6",
    "hoax(address)": "233240ee",
    "hoax(address,address)": "29a9e300",
    "hoax(address,address,uint256)": "af9bbe5f",
    "hoax(address,uint256)": "e9a79a7b",
    "logary(int256[])": "521606d2",
    "logary(uint256[])": "b84e3eda",
    "rewind(uint256)": "2d6c17a3",
    "setUp()": "0a9254e4",
    "setupMaker(address,address,string)": "bfdc3588",
    "setupMakerDeployer(address,address)": "bbab0fac",
    "setupMangrove()": "8c004832",
    "setupMangrove(address,address)": "ea14b5c3",
    "setupMangrove(address,address,bool)": "0b3d8c42",
    "setupMangrove(bool)": "0645f2be",
    "setupTaker(address,address,string)": "3336a63f",
    "skip(uint256)": "b9c071b4",
    "startHoax(address)": "6f597075",
    "startHoax(address,address)": "d06d8229",
    "startHoax(address,address,uint256)": "3bf82db1",
    "startHoax(address,uint256)": "108554f2",
    "test_admin()": "54668b9d",
    "test_failing_resting_offer_releases_uncollected_provision()": "11d70a7d",
    "test_filled_resting_buy_order_ignores_resting_option()": "400efb29",
    "test_filled_resting_buy_order_returns_provision()": "75089822",
    "test_iterative_market_order_completes()": "5c36d7f6",
    "test_ownership_relation()": "70aa3a5d",
    "test_partial_filled_buy_order_returns_bounty()": "63dee520",
    "test_partial_filled_buy_order_returns_provision()": "f87c8c0f",
    "test_partial_filled_buy_order_returns_residual()": "003a6685",
    "test_partial_filled_buy_order_reverts_when_noPartialFill_enabled()": "875f8597",
    "test_resting_buy_order_can_be_partially_filled()": "cc273483",
    "test_resting_buy_order_is_successfully_posted()": "5d35978d",
    "test_resting_buy_order_reverts_when_unprovisioned()": "830ca968",
    "test_resting_offer_retracts_when_unable_to_repost()": "98ec3a97",
    "test_user_can_retract_resting_offer()": "026f7423",
    "tip(address,address,uint256)": "d82555f1",
    "vm()": "3a768463"
  },
  "ast": {
    "absolutePath": "packages/mangrove-solidity/contracts/test/periphery/MgvOrder.t.sol",
    "id": 54339,
    "exportedSymbols": {
      "AbstractMangrove": [37],
      "AccessControlled": [20247],
      "DSTest": [60744],
      "HasMgvEvents": [1914],
      "IERC20": [2050],
      "IMaker": [1932],
      "IMangrove": [645],
      "IMgvMonitor": [1972],
      "IOrderLogic": [14320],
      "ITaker": [1944],
      "InvertedMangrove": [780],
      "ML": [1739],
      "MakerDeployer": [48825],
      "Mangrove": [906],
      "MangroveOrder_Test": [54338],
      "MangroveTest": [47059],
      "MgvLib": [1739],
      "MgvOrder": [6746],
      "P": [1710],
      "Script": [60776],
      "StdStorage": [62193],
      "Test": [62095],
      "Test2": [47434],
      "TestMaker": [49499],
      "TestMoriartyMaker": [49748],
      "TestTaker": [50091],
      "TestToken": [52050],
      "TrivialTestMaker": [48862],
      "Utilities": [48626],
      "Vm": [63864],
      "console": [71928],
      "console2": [79992],
      "csl": [79992],
      "stdError": [62165],
      "stdMath": [63442],
      "stdStorage": [63295]
    },
    "nodeType": "SourceUnit",
    "src": "37:20081:88",
    "nodes": [
      {
        "id": 52450,
        "nodeType": "PragmaDirective",
        "src": "37:24:88",
        "literals": ["solidity", "^", "0.8", ".10"]
      },
      {
        "id": 52451,
        "nodeType": "ImportDirective",
        "src": "62:39:88",
        "absolutePath": "packages/mangrove-solidity/contracts/test/lib/MangroveTest.sol",
        "file": "mgv_test/lib/MangroveTest.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54339,
        "sourceUnit": 47060,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 52452,
        "nodeType": "PragmaDirective",
        "src": "103:24:88",
        "literals": ["solidity", "^", "0.8", ".10"]
      },
      {
        "id": 52453,
        "nodeType": "PragmaDirective",
        "src": "128:19:88",
        "literals": ["abicoder", "v2"]
      },
      {
        "id": 52457,
        "nodeType": "ImportDirective",
        "src": "189:59:88",
        "absolutePath": "packages/mangrove-solidity/contracts/MgvLib.sol",
        "file": "mgv_src/MgvLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54339,
        "sourceUnit": 2051,
        "symbolAliases": [
          {
            "foreign": {
              "id": 52454,
              "name": "MgvLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1739,
              "src": "197:6:88",
              "typeDescriptions": {}
            },
            "local": "ML",
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 52455,
              "name": "P",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1710,
              "src": "211:1:88",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 52456,
              "name": "IMaker",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1932,
              "src": "214:6:88",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 52459,
        "nodeType": "ImportDirective",
        "src": "249:48:88",
        "absolutePath": "packages/mangrove-solidity/contracts/IMangrove.sol",
        "file": "mgv_src/IMangrove.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54339,
        "sourceUnit": 646,
        "symbolAliases": [
          {
            "foreign": {
              "id": 52458,
              "name": "IMangrove",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 645,
              "src": "257:9:88",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 52461,
        "nodeType": "ImportDirective",
        "src": "437:94:88",
        "absolutePath": "packages/mangrove-solidity/contracts/periphery/MangroveOrderEnriched.sol",
        "file": "mgv_src/periphery/MangroveOrderEnriched.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54339,
        "sourceUnit": 6747,
        "symbolAliases": [
          {
            "foreign": {
              "id": 52460,
              "name": "MangroveOrderEnriched",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6746,
              "src": "445:21:88",
              "typeDescriptions": {}
            },
            "local": "MgvOrder",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 52462,
        "nodeType": "ImportDirective",
        "src": "532:55:88",
        "absolutePath": "packages/mangrove-solidity/contracts/strategies/interfaces/IOrderLogic.sol",
        "file": "mgv_src/strategies/interfaces/IOrderLogic.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54339,
        "sourceUnit": 14321,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54338,
        "nodeType": "ContractDefinition",
        "src": "589:19528:88",
        "nodes": [
          {
            "id": 52472,
            "nodeType": "EventDefinition",
            "src": "665:69:88",
            "anonymous": false,
            "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "name": "Transfer",
            "nameLocation": "671:8:88",
            "parameters": {
              "id": 52471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52466,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "696:4:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 52472,
                  "src": "680:20:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "680:7:88",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52468,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "718:2:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 52472,
                  "src": "702:18:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52467,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "702:7:88",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52470,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "727:5:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 52472,
                  "src": "722:10:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52469,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "722:4:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "679:54:88"
            }
          },
          {
            "id": 52487,
            "nodeType": "EventDefinition",
            "src": "769:157:88",
            "anonymous": false,
            "eventSelector": "736a3993b9f8b1c5603896c76376792887f376b1fe7fc981e09a16530bf1e4e0",
            "name": "LogIncident",
            "nameLocation": "775:11:88",
            "parameters": {
              "id": 52486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52475,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "mangrove",
                  "nameLocation": "802:8:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 52487,
                  "src": "792:18:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMangrove_$645",
                    "typeString": "contract IMangrove"
                  },
                  "typeName": {
                    "id": 52474,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 52473,
                      "name": "IMangrove",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 645,
                      "src": "792:9:88"
                    },
                    "referencedDeclaration": 645,
                    "src": "792:9:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMangrove_$645",
                      "typeString": "contract IMangrove"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52478,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "outbound_tkn",
                  "nameLocation": "831:12:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 52487,
                  "src": "816:27:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2050",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 52477,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 52476,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2050,
                      "src": "816:6:88"
                    },
                    "referencedDeclaration": 2050,
                    "src": "816:6:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2050",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52481,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "inbound_tkn",
                  "nameLocation": "864:11:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 52487,
                  "src": "849:26:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2050",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 52480,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 52479,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2050,
                      "src": "849:6:88"
                    },
                    "referencedDeclaration": 2050,
                    "src": "849:6:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2050",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52483,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "894:7:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 52487,
                  "src": "881:20:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52482,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "881:4:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52485,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "reason",
                  "nameLocation": "915:6:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 52487,
                  "src": "907:14:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 52484,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "907:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "786:139:88"
            }
          },
          {
            "id": 52510,
            "nodeType": "EventDefinition",
            "src": "930:225:88",
            "anonymous": false,
            "eventSelector": "587734843819064f2153f96c808d1aeacaceccfa595ec4b9ed484c4bff687f7c",
            "name": "OrderSummary",
            "nameLocation": "936:12:88",
            "parameters": {
              "id": 52509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52490,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "mangrove",
                  "nameLocation": "964:8:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 52510,
                  "src": "954:18:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMangrove_$645",
                    "typeString": "contract IMangrove"
                  },
                  "typeName": {
                    "id": 52489,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 52488,
                      "name": "IMangrove",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 645,
                      "src": "954:9:88"
                    },
                    "referencedDeclaration": 645,
                    "src": "954:9:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMangrove_$645",
                      "typeString": "contract IMangrove"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52493,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "base",
                  "nameLocation": "993:4:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 52510,
                  "src": "978:19:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2050",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 52492,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 52491,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2050,
                      "src": "978:6:88"
                    },
                    "referencedDeclaration": 2050,
                    "src": "978:6:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2050",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52496,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "quote",
                  "nameLocation": "1018:5:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 52510,
                  "src": "1003:20:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2050",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 52495,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 52494,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2050,
                      "src": "1003:6:88"
                    },
                    "referencedDeclaration": 2050,
                    "src": "1003:6:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2050",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52498,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "taker",
                  "nameLocation": "1045:5:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 52510,
                  "src": "1029:21:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52497,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1029:7:88",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52500,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "selling",
                  "nameLocation": "1061:7:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 52510,
                  "src": "1056:12:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 52499,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1056:4:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52502,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "takerGot",
                  "nameLocation": "1079:8:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 52510,
                  "src": "1074:13:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52501,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1074:4:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52504,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "takerGave",
                  "nameLocation": "1098:9:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 52510,
                  "src": "1093:14:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52503,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1093:4:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52506,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "penalty",
                  "nameLocation": "1118:7:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 52510,
                  "src": "1113:12:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52505,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1113:4:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52508,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "restingOrderId",
                  "nameLocation": "1136:14:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 52510,
                  "src": "1131:19:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52507,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1131:4:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "948:206:88"
            }
          },
          {
            "id": 52513,
            "nodeType": "VariableDeclaration",
            "src": "1159:12:88",
            "constant": false,
            "mutability": "mutable",
            "name": "mgo",
            "nameLocation": "1168:3:88",
            "scope": 54338,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
              "typeString": "contract MangroveOrderEnriched"
            },
            "typeName": {
              "id": 52512,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 52511,
                "name": "MgvOrder",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6746,
                "src": "1159:8:88"
              },
              "referencedDeclaration": 6746,
              "src": "1159:8:88",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                "typeString": "contract MangroveOrderEnriched"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 52516,
            "nodeType": "VariableDeclaration",
            "src": "1175:19:88",
            "constant": false,
            "mutability": "mutable",
            "name": "bid_maker",
            "nameLocation": "1185:9:88",
            "scope": 54338,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestMaker_$49499",
              "typeString": "contract TestMaker"
            },
            "typeName": {
              "id": 52515,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 52514,
                "name": "TestMaker",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49499,
                "src": "1175:9:88"
              },
              "referencedDeclaration": 49499,
              "src": "1175:9:88",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestMaker_$49499",
                "typeString": "contract TestMaker"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 52519,
            "nodeType": "VariableDeclaration",
            "src": "1198:19:88",
            "constant": false,
            "mutability": "mutable",
            "name": "ask_maker",
            "nameLocation": "1208:9:88",
            "scope": 54338,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestMaker_$49499",
              "typeString": "contract TestMaker"
            },
            "typeName": {
              "id": 52518,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 52517,
                "name": "TestMaker",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49499,
                "src": "1198:9:88"
              },
              "referencedDeclaration": 49499,
              "src": "1198:9:88",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestMaker_$49499",
                "typeString": "contract TestMaker"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 52522,
            "nodeType": "VariableDeclaration",
            "src": "1221:20:88",
            "constant": false,
            "mutability": "mutable",
            "name": "sell_taker",
            "nameLocation": "1231:10:88",
            "scope": 54338,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestTaker_$50091",
              "typeString": "contract TestTaker"
            },
            "typeName": {
              "id": 52521,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 52520,
                "name": "TestTaker",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 50091,
                "src": "1221:9:88"
              },
              "referencedDeclaration": 50091,
              "src": "1221:9:88",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestTaker_$50091",
                "typeString": "contract TestTaker"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 52526,
            "nodeType": "FunctionDefinition",
            "src": "1246:29:88",
            "body": {
              "id": 52525,
              "nodeType": "Block",
              "src": "1273:2:88",
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 52523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1253:2:88"
            },
            "returnParameters": {
              "id": 52524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1273:0:88"
            },
            "scope": 54338,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 52878,
            "nodeType": "FunctionDefinition",
            "src": "1279:2747:88",
            "body": {
              "id": 52877,
              "nodeType": "Block",
              "src": "1312:2714:88",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 52530,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1318:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MangroveOrder_Test_$54338_$",
                          "typeString": "type(contract super MangroveOrder_Test)"
                        }
                      },
                      "id": 52532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46003,
                      "src": "1318:11:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 52533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1318:13:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52534,
                  "nodeType": "ExpressionStatement",
                  "src": "1318:13:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52539,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "1350:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52538,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "1348:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1348:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52542,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "1359:5:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52541,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "1357:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1357:8:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3330",
                        "id": 52544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1367:2:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        }
                      ],
                      "expression": {
                        "id": 52535,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "1337:3:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 52537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1109,
                      "src": "1337:10:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 52545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1337:33:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52546,
                  "nodeType": "ExpressionStatement",
                  "src": "1337:33:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52551,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "1389:5:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52550,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "1387:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1387:8:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52554,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "1399:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52553,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "1397:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1397:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3330",
                        "id": 52556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1406:2:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        }
                      ],
                      "expression": {
                        "id": 52547,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "1376:3:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 52549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1109,
                      "src": "1376:10:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 52557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1376:33:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52558,
                  "nodeType": "ExpressionStatement",
                  "src": "1376:33:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52563,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "1489:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 52562,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "1487:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 52564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1487:6:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 52559,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "1474:3:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 52561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setVault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1319,
                      "src": "1474:12:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 52565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1474:20:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52566,
                  "nodeType": "ExpressionStatement",
                  "src": "1474:20:88"
                },
                {
                  "expression": {
                    "id": 52581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52567,
                      "name": "mgo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52513,
                      "src": "1558:3:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                        "typeString": "contract MangroveOrderEnriched"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 52574,
                                  "name": "mgv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45875,
                                  "src": "1595:3:88",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                    "typeString": "contract AbstractMangrove"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                    "typeString": "contract AbstractMangrove"
                                  }
                                ],
                                "id": 52573,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1587:8:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 52572,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1587:8:88",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 52575,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1587:12:88",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 52571,
                            "name": "IMangrove",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 645,
                            "src": "1577:9:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IMangrove_$645_$",
                              "typeString": "type(contract IMangrove)"
                            }
                          },
                          "id": 52576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1577:23:88",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IMangrove_$645",
                            "typeString": "contract IMangrove"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 52578,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1604:4:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                                "typeString": "contract MangroveOrder_Test"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                                "typeString": "contract MangroveOrder_Test"
                              }
                            ],
                            "id": 52577,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47041,
                            "src": "1602:1:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                              "typeString": "function (contract Test) pure returns (address payable)"
                            }
                          },
                          "id": 52579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1602:7:88",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IMangrove_$645",
                            "typeString": "contract IMangrove"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 52570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1564:12:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IMangrove_$645_$_t_address_$returns$_t_contract$_MangroveOrderEnriched_$6746_$",
                          "typeString": "function (contract IMangrove,address) returns (contract MangroveOrderEnriched)"
                        },
                        "typeName": {
                          "id": 52569,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 52568,
                            "name": "MgvOrder",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 6746,
                            "src": "1568:8:88"
                          },
                          "referencedDeclaration": 6746,
                          "src": "1568:8:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        }
                      },
                      "id": 52580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1564:46:88",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                        "typeString": "contract MangroveOrderEnriched"
                      }
                    },
                    "src": "1558:52:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                      "typeString": "contract MangroveOrderEnriched"
                    }
                  },
                  "id": 52582,
                  "nodeType": "ExpressionStatement",
                  "src": "1558:52:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52586,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "1783:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 52589,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1794:4:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 52588,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "1794:4:88",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 52587,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1789:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 52590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1789:10:88",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 52591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1789:14:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 52583,
                        "name": "mgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52513,
                        "src": "1763:3:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                          "typeString": "contract MangroveOrderEnriched"
                        }
                      },
                      "id": 52585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveMangrove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10938,
                      "src": "1763:19:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$2050_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 52592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1763:41:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52593,
                  "nodeType": "ExpressionStatement",
                  "src": "1763:41:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52597,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "1830:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 52600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1842:4:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 52599,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "1842:4:88",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 52598,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1837:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 52601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1837:10:88",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 52602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "1837:14:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 52594,
                        "name": "mgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52513,
                        "src": "1810:3:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                          "typeString": "contract MangroveOrderEnriched"
                        }
                      },
                      "id": 52596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveMangrove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10938,
                      "src": "1810:19:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$2050_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 52603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1810:42:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52604,
                  "nodeType": "ExpressionStatement",
                  "src": "1810:42:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52608,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "1988:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      ],
                      "expression": {
                        "id": 52605,
                        "name": "mgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52513,
                        "src": "1970:3:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                          "typeString": "contract MangroveOrderEnriched"
                        }
                      },
                      "id": 52607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveRouter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10865,
                      "src": "1970:17:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$2050_$returns$__$",
                        "typeString": "function (contract IERC20) external"
                      }
                    },
                    "id": 52609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1970:23:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52610,
                  "nodeType": "ExpressionStatement",
                  "src": "1970:23:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52614,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "2017:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      ],
                      "expression": {
                        "id": 52611,
                        "name": "mgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52513,
                        "src": "1999:3:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                          "typeString": "contract MangroveOrderEnriched"
                        }
                      },
                      "id": 52613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveRouter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10865,
                      "src": "1999:17:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$2050_$returns$__$",
                        "typeString": "function (contract IERC20) external"
                      }
                    },
                    "id": 52615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1999:24:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52616,
                  "nodeType": "ExpressionStatement",
                  "src": "1999:24:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52619,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "2088:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52618,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "2086:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2086:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52622,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2097:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 52621,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "2095:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 52623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2095:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 52624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2104:8:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "id": 52617,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [61102, 61119, 61222],
                      "referencedDeclaration": 61119,
                      "src": "2081:4:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 52625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2081:32:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52626,
                  "nodeType": "ExpressionStatement",
                  "src": "2081:32:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52629,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "2126:5:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52628,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "2124:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2124:8:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52632,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2136:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 52631,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "2134:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 52633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2134:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 52634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2143:8:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "id": 52627,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [61102, 61119, 61222],
                      "referencedDeclaration": 61119,
                      "src": "2119:4:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 52635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2119:33:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52636,
                  "nodeType": "ExpressionStatement",
                  "src": "2119:33:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 52641,
                                "name": "mgo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52513,
                                "src": "2325:3:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                                  "typeString": "contract MangroveOrderEnriched"
                                }
                              },
                              "id": 52642,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "router",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10914,
                              "src": "2325:10:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AbstractRouter_$16287_$",
                                "typeString": "function () view external returns (contract AbstractRouter)"
                              }
                            },
                            "id": 52643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2325:12:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractRouter_$16287",
                              "typeString": "contract AbstractRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractRouter_$16287",
                              "typeString": "contract AbstractRouter"
                            }
                          ],
                          "id": 52640,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47007,
                          "src": "2323:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AccessControlled_$20247_$returns$_t_address_payable_$",
                            "typeString": "function (contract AccessControlled) pure returns (address payable)"
                          }
                        },
                        "id": 52644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2323:15:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 52645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2340:8:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 52637,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "2309:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 52639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "2309:13:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 52646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2309:40:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 52647,
                  "nodeType": "ExpressionStatement",
                  "src": "2309:40:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 52652,
                                "name": "mgo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52513,
                                "src": "2370:3:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                                  "typeString": "contract MangroveOrderEnriched"
                                }
                              },
                              "id": 52653,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "router",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10914,
                              "src": "2370:10:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AbstractRouter_$16287_$",
                                "typeString": "function () view external returns (contract AbstractRouter)"
                              }
                            },
                            "id": 52654,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2370:12:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractRouter_$16287",
                              "typeString": "contract AbstractRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractRouter_$16287",
                              "typeString": "contract AbstractRouter"
                            }
                          ],
                          "id": 52651,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47007,
                          "src": "2368:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AccessControlled_$20247_$returns$_t_address_payable_$",
                            "typeString": "function (contract AccessControlled) pure returns (address payable)"
                          }
                        },
                        "id": 52655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2368:15:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 52656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2385:8:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 52648,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "2355:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 52650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "2355:12:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 52657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2355:39:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 52658,
                  "nodeType": "ExpressionStatement",
                  "src": "2355:39:88"
                },
                {
                  "expression": {
                    "id": 52669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52659,
                      "name": "sell_taker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52522,
                      "src": "2445:10:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestTaker_$50091",
                        "typeString": "contract TestTaker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 52662,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45881,
                              "src": "2471:5:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 52661,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "2469:1:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 52663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2469:8:88",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 52665,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45878,
                              "src": "2481:4:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 52664,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "2479:1:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 52666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2479:7:88",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "73656c6c2d74616b6572",
                          "id": 52667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2488:12:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d870d13c61937f8c7103d90beb881883835c345c0e15cacc68cf64083843da59",
                            "typeString": "literal_string \"sell-taker\""
                          },
                          "value": "sell-taker"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_d870d13c61937f8c7103d90beb881883835c345c0e15cacc68cf64083843da59",
                            "typeString": "literal_string \"sell-taker\""
                          }
                        ],
                        "id": 52660,
                        "name": "setupTaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46919,
                        "src": "2458:10:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_TestTaker_$50091_$",
                          "typeString": "function (address,address,string memory) returns (contract TestTaker)"
                        }
                      },
                      "id": 52668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2458:43:88",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestTaker_$50091",
                        "typeString": "contract TestTaker"
                      }
                    },
                    "src": "2445:56:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestTaker_$50091",
                      "typeString": "contract TestTaker"
                    }
                  },
                  "id": 52670,
                  "nodeType": "ExpressionStatement",
                  "src": "2445:56:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52673,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "2514:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52672,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "2512:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2512:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52676,
                            "name": "sell_taker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52522,
                            "src": "2523:10:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          ],
                          "id": 52675,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47024,
                          "src": "2521:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_TestTaker_$50091_$returns$_t_address_payable_$",
                            "typeString": "function (contract TestTaker) pure returns (address payable)"
                          }
                        },
                        "id": 52677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2521:13:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 52678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2536:8:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "id": 52671,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [61102, 61119, 61222],
                      "referencedDeclaration": 61119,
                      "src": "2507:4:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 52679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2507:38:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52680,
                  "nodeType": "ExpressionStatement",
                  "src": "2507:38:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52685,
                            "name": "sell_taker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52522,
                            "src": "2657:10:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          ],
                          "id": 52684,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47024,
                          "src": "2655:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_TestTaker_$50091_$returns$_t_address_payable_$",
                            "typeString": "function (contract TestTaker) pure returns (address payable)"
                          }
                        },
                        "id": 52686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2655:13:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 52681,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "2646:2:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 52683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63656,
                      "src": "2646:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 52687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2646:23:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52688,
                  "nodeType": "ExpressionStatement",
                  "src": "2646:23:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52693,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "2690:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 52692,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "2688:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 52694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2688:6:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 52695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2696:8:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 52689,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "2675:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 52691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "2675:12:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 52696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2675:30:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 52697,
                  "nodeType": "ExpressionStatement",
                  "src": "2675:30:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52702,
                            "name": "sell_taker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52522,
                            "src": "2861:10:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          ],
                          "id": 52701,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47024,
                          "src": "2859:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_TestTaker_$50091_$returns$_t_address_payable_$",
                            "typeString": "function (contract TestTaker) pure returns (address payable)"
                          }
                        },
                        "id": 52703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2859:13:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 52698,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "2850:2:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 52700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63656,
                      "src": "2850:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 52704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2850:23:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52705,
                  "nodeType": "ExpressionStatement",
                  "src": "2850:23:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52710,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "2895:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 52709,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "2893:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 52711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2893:6:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 52712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2901:8:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 52706,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "2879:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 52708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "2879:13:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 52713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2879:31:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 52714,
                  "nodeType": "ExpressionStatement",
                  "src": "2879:31:88"
                },
                {
                  "expression": {
                    "id": 52725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52715,
                      "name": "bid_maker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52516,
                      "src": "2958:9:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$49499",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 52718,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45881,
                              "src": "2983:5:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 52717,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "2981:1:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 52719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2981:8:88",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 52721,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45878,
                              "src": "2993:4:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 52720,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "2991:1:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 52722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2991:7:88",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "6269642d6d616b6572",
                          "id": 52723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3000:11:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_2058152c66feb1e2b8e32940e9095cdbd745376d5fd28ad7b016d2621667dee6",
                            "typeString": "literal_string \"bid-maker\""
                          },
                          "value": "bid-maker"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_2058152c66feb1e2b8e32940e9095cdbd745376d5fd28ad7b016d2621667dee6",
                            "typeString": "literal_string \"bid-maker\""
                          }
                        ],
                        "id": 52716,
                        "name": "setupMaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46843,
                        "src": "2970:10:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_TestMaker_$49499_$",
                          "typeString": "function (address,address,string memory) returns (contract TestMaker)"
                        }
                      },
                      "id": 52724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2970:42:88",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$49499",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "src": "2958:54:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestMaker_$49499",
                      "typeString": "contract TestMaker"
                    }
                  },
                  "id": 52726,
                  "nodeType": "ExpressionStatement",
                  "src": "2958:54:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52731,
                            "name": "bid_maker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52516,
                            "src": "3028:9:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 52730,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "3026:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 52732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3026:12:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 52733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3040:8:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 52727,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "3018:2:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 52729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63685,
                      "src": "3018:7:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 52734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3018:31:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52735,
                  "nodeType": "ExpressionStatement",
                  "src": "3018:31:88"
                },
                {
                  "expression": {
                    "id": 52746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52736,
                      "name": "ask_maker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52519,
                      "src": "3055:9:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$49499",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 52739,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45878,
                              "src": "3080:4:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 52738,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "3078:1:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 52740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3078:7:88",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 52742,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45881,
                              "src": "3089:5:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 52741,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "3087:1:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 52743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3087:8:88",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "61736b2d6d616b6572",
                          "id": 52744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3097:11:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b508e64683ac478bc4858853c40c453956cdb90be96e28722c6744142dd54052",
                            "typeString": "literal_string \"ask-maker\""
                          },
                          "value": "ask-maker"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_b508e64683ac478bc4858853c40c453956cdb90be96e28722c6744142dd54052",
                            "typeString": "literal_string \"ask-maker\""
                          }
                        ],
                        "id": 52737,
                        "name": "setupMaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46843,
                        "src": "3067:10:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_TestMaker_$49499_$",
                          "typeString": "function (address,address,string memory) returns (contract TestMaker)"
                        }
                      },
                      "id": 52745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3067:42:88",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$49499",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "src": "3055:54:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestMaker_$49499",
                      "typeString": "contract TestMaker"
                    }
                  },
                  "id": 52747,
                  "nodeType": "ExpressionStatement",
                  "src": "3055:54:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52752,
                            "name": "ask_maker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52519,
                            "src": "3125:9:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 52751,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "3123:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 52753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3123:12:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 52754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3137:8:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 52748,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "3115:2:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 52750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63685,
                      "src": "3115:7:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 52755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3115:31:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52756,
                  "nodeType": "ExpressionStatement",
                  "src": "3115:31:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52761,
                            "name": "bid_maker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52516,
                            "src": "3164:9:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 52760,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "3162:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 52762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3162:12:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 52757,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "3153:2:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 52759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63656,
                      "src": "3153:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 52763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3153:22:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52764,
                  "nodeType": "ExpressionStatement",
                  "src": "3153:22:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52769,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "3197:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 52768,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "3195:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 52770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3195:6:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 52771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3203:8:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 52765,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "3181:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 52767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "3181:13:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 52772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3181:31:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 52773,
                  "nodeType": "ExpressionStatement",
                  "src": "3181:31:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52776,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "3269:5:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52775,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "3267:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3267:8:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52779,
                            "name": "bid_maker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52516,
                            "src": "3279:9:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 52778,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "3277:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 52780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3277:12:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 52781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3291:8:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "id": 52774,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [61102, 61119, 61222],
                      "referencedDeclaration": 61119,
                      "src": "3262:4:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 52782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3262:38:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52783,
                  "nodeType": "ExpressionStatement",
                  "src": "3262:38:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52786,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "3355:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52785,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "3353:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3353:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52789,
                            "name": "ask_maker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52519,
                            "src": "3364:9:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 52788,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "3362:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 52790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3362:12:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 52791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3376:8:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "id": 52784,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [61102, 61119, 61222],
                      "referencedDeclaration": 61119,
                      "src": "3348:4:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 52792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3348:37:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52793,
                  "nodeType": "ExpressionStatement",
                  "src": "3348:37:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52798,
                            "name": "ask_maker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52519,
                            "src": "3443:9:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 52797,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "3441:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 52799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3441:12:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 52794,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "3432:2:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 52796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63656,
                      "src": "3432:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 52800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3432:22:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52801,
                  "nodeType": "ExpressionStatement",
                  "src": "3432:22:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52806,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "3475:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 52805,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "3473:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 52807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3473:6:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 52808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3481:8:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 52802,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "3460:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 52804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "3460:12:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 52809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3460:30:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 52810,
                  "nodeType": "ExpressionStatement",
                  "src": "3460:30:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 52814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3571:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "302e31",
                        "id": 52815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3580:9:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 52816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3591:6:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 52817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3599:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 52818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3602:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "302e31",
                        "id": 52819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3605:9:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 52811,
                        "name": "bid_maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52516,
                        "src": "3541:9:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 52813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOfferWithFunding",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49364,
                      "src": "3541:29:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 52820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3541:74:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 52821,
                  "nodeType": "ExpressionStatement",
                  "src": "3541:74:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 52825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3651:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "302e3131",
                        "id": 52826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3660:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_110000000000000000_by_1",
                          "typeString": "int_const 110000000000000000"
                        },
                        "value": "0.11"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 52827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3672:6:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 52828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3680:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 52829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3683:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "302e31",
                        "id": 52830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3686:9:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_110000000000000000_by_1",
                          "typeString": "int_const 110000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 52822,
                        "name": "bid_maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52516,
                        "src": "3621:9:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 52824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOfferWithFunding",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49364,
                      "src": "3621:29:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 52831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3621:75:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 52832,
                  "nodeType": "ExpressionStatement",
                  "src": "3621:75:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 52836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3732:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "302e3132",
                        "id": 52837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3741:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_120000000000000000_by_1",
                          "typeString": "int_const 120000000000000000"
                        },
                        "value": "0.12"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 52838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3753:6:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 52839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3761:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 52840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3764:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "302e31",
                        "id": 52841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3767:9:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_120000000000000000_by_1",
                          "typeString": "int_const 120000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 52833,
                        "name": "bid_maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52516,
                        "src": "3702:9:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 52835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOfferWithFunding",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49364,
                      "src": "3702:29:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 52842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3702:75:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 52843,
                  "nodeType": "ExpressionStatement",
                  "src": "3702:75:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "302e3133",
                        "id": 52847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3814:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        "value": "0.13"
                      },
                      {
                        "hexValue": "31",
                        "id": 52848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3826:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 52849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3835:6:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 52850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3843:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 52851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3846:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "302e31",
                        "id": 52852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3849:9:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 52844,
                        "name": "ask_maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52519,
                        "src": "3784:9:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 52846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOfferWithFunding",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49364,
                      "src": "3784:29:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 52853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3784:75:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 52854,
                  "nodeType": "ExpressionStatement",
                  "src": "3784:75:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "302e3134",
                        "id": 52858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3895:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_140000000000000000_by_1",
                          "typeString": "int_const 140000000000000000"
                        },
                        "value": "0.14"
                      },
                      {
                        "hexValue": "31",
                        "id": 52859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3907:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 52860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3916:6:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 52861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3924:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 52862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3927:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "302e31",
                        "id": 52863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3930:9:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_140000000000000000_by_1",
                          "typeString": "int_const 140000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 52855,
                        "name": "ask_maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52519,
                        "src": "3865:9:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 52857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOfferWithFunding",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49364,
                      "src": "3865:29:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 52864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3865:75:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 52865,
                  "nodeType": "ExpressionStatement",
                  "src": "3865:75:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "302e3135",
                        "id": 52869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3976:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_150000000000000000_by_1",
                          "typeString": "int_const 150000000000000000"
                        },
                        "value": "0.15"
                      },
                      {
                        "hexValue": "31",
                        "id": 52870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3988:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 52871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3997:6:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 52872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4005:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 52873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4008:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "302e31",
                        "id": 52874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4011:9:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_150000000000000000_by_1",
                          "typeString": "int_const 150000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 52866,
                        "name": "ask_maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52519,
                        "src": "3946:9:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 52868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOfferWithFunding",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49364,
                      "src": "3946:29:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 52875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3946:75:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 52876,
                  "nodeType": "ExpressionStatement",
                  "src": "3946:75:88"
                }
              ]
            },
            "baseFunctions": [46003],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1288:5:88",
            "overrides": {
              "id": 52528,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1303:8:88"
            },
            "parameters": {
              "id": 52527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1293:2:88"
            },
            "returnParameters": {
              "id": 52529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1312:0:88"
            },
            "scope": 54338,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 52892,
            "nodeType": "FunctionDefinition",
            "src": "4030:104:88",
            "body": {
              "id": 52891,
              "nodeType": "Block",
              "src": "4059:75:88",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 52882,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "4074:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 52883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "governance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 918,
                          "src": "4074:14:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 52884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4074:16:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 52885,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52513,
                            "src": "4092:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          },
                          "id": 52886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "admin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20207,
                          "src": "4092:9:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 52887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4092:11:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642061646d696e2061646472657373",
                        "id": 52888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4105:23:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653",
                          "typeString": "literal_string \"Invalid admin address\""
                        },
                        "value": "Invalid admin address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653",
                          "typeString": "literal_string \"Invalid admin address\""
                        }
                      ],
                      "id": 52881,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59303,
                      "src": "4065:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 52889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4065:64:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52890,
                  "nodeType": "ExpressionStatement",
                  "src": "4065:64:88"
                }
              ]
            },
            "functionSelector": "54668b9d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_admin",
            "nameLocation": "4039:10:88",
            "parameters": {
              "id": 52879,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4049:2:88"
            },
            "returnParameters": {
              "id": 52880,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4059:0:88"
            },
            "scope": 54338,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 52983,
            "nodeType": "FunctionDefinition",
            "src": "4138:1107:88",
            "body": {
              "id": 52982,
              "nodeType": "Block",
              "src": "4203:1042:88",
              "statements": [
                {
                  "assignments": [52899],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52899,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "4239:8:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 52982,
                      "src": "4209:38:88",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder"
                      },
                      "typeName": {
                        "id": 52898,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 52897,
                          "name": "IOrderLogic.TakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14263,
                          "src": "4209:22:88"
                        },
                        "referencedDeclaration": 14263,
                        "src": "4209:22:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52915,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 52902,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "4287:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 52903,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "4306:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 52904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4342:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 52905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4364:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "32",
                        "id": 52906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4397:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "32",
                        "id": 52907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4424:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 52908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4446:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 52909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4476:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 52910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4508:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "30",
                        "id": 52911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4534:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "365f3530305f303030",
                        "id": 52912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4562:9:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        "value": "6_500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 52913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4608:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 52900,
                        "name": "IOrderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14320,
                        "src": "4250:11:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOrderLogic_$14320_$",
                          "typeString": "type(contract IOrderLogic)"
                        }
                      },
                      "id": 52901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TakerOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14263,
                      "src": "4250:22:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TakerOrder_$14263_storage_ptr_$",
                        "typeString": "type(struct IOrderLogic.TakerOrder storage pointer)"
                      }
                    },
                    "id": 52914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "base",
                      "quote",
                      "partialFillNotAllowed",
                      "selling",
                      "wants",
                      "makerWants",
                      "gives",
                      "makerGives",
                      "restingOrder",
                      "retryNumber",
                      "gasForMarketOrder",
                      "blocksToLiveForRestingOrder"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4250:371:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4209:412:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52918,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "4640:5:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52917,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "4638:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4638:8:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 52916,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "4627:10:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 52920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4627:20:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52921,
                  "nodeType": "ExpressionStatement",
                  "src": "4627:20:88"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52924,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4738:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 52923,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "4736:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 52925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4736:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52927,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52513,
                            "src": "4747:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          ],
                          "id": 52926,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47007,
                          "src": "4745:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AccessControlled_$20247_$returns$_t_address_payable_$",
                            "typeString": "function (contract AccessControlled) pure returns (address payable)"
                          }
                        },
                        "id": 52928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4745:6:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 52929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4753:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        }
                      ],
                      "id": 52922,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52472,
                      "src": "4727:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 52930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4727:37:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52931,
                  "nodeType": "EmitStatement",
                  "src": "4722:42:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52934,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "4783:5:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 52933,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "4781:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 52935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4781:8:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 52932,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "4770:10:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 52936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4770:20:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52937,
                  "nodeType": "ExpressionStatement",
                  "src": "4770:20:88"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52940,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52513,
                            "src": "4881:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          ],
                          "id": 52939,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47007,
                          "src": "4879:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AccessControlled_$20247_$returns$_t_address_payable_$",
                            "typeString": "function (contract AccessControlled) pure returns (address payable)"
                          }
                        },
                        "id": 52941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4879:6:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52943,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4889:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 52942,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "4887:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 52944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4887:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "302e3133",
                        "id": 52945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4896:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        "value": "0.13"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        }
                      ],
                      "id": 52938,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52472,
                      "src": "4870:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 52946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4870:37:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52947,
                  "nodeType": "EmitStatement",
                  "src": "4865:42:88"
                },
                {
                  "assignments": [52952],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52952,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "4949:3:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 52982,
                      "src": "4913:39:88",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrderResult"
                      },
                      "typeName": {
                        "id": 52951,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 52950,
                          "name": "IOrderLogic.TakerOrderResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14274,
                          "src": "4913:28:88"
                        },
                        "referencedDeclaration": 14274,
                        "src": "4913:28:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrderResult_$14274_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrderResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52959,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 52957,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52899,
                        "src": "4989:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        ],
                        "expression": {
                          "id": 52953,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52513,
                          "src": "4955:3:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 52954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6440,
                        "src": "4955:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$14263_memory_ptr_$returns$_t_struct$_TakerOrderResult_$14274_memory_ptr_$",
                          "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                        }
                      },
                      "id": 52956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 52955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4971:9:88",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "4955:26:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$14263_memory_ptr_$returns$_t_struct$_TakerOrderResult_$14274_memory_ptr_$value",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 52958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4955:48:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4913:90:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 52961,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52952,
                          "src": "5025:3:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrderResult memory"
                          }
                        },
                        "id": 52962,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "takerGot",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14265,
                        "src": "5025:12:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 52965,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45878,
                                "src": "5056:4:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 52964,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "5054:1:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 52966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5054:7:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 52968,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45881,
                                "src": "5065:5:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 52967,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "5063:1:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 52969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5063:8:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 52970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5073:7:88",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "id": 52963,
                          "name": "minusFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46470,
                          "src": "5045:8:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256) view returns (uint256)"
                          }
                        },
                        "id": 52971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5045:36:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374207061727469616c2066696c6c206f662074616b6572206f72646572",
                        "id": 52972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5089:39:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc4767ab7a1fb61bb9d9e8445469a4ee9984e7c0f8b13a37bfa244dcde022a49",
                          "typeString": "literal_string \"Incorrect partial fill of taker order\""
                        },
                        "value": "Incorrect partial fill of taker order"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc4767ab7a1fb61bb9d9e8445469a4ee9984e7c0f8b13a37bfa244dcde022a49",
                          "typeString": "literal_string \"Incorrect partial fill of taker order\""
                        }
                      ],
                      "id": 52960,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "5009:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 52973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5009:125:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52974,
                  "nodeType": "ExpressionStatement",
                  "src": "5009:125:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 52976,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52952,
                          "src": "5156:3:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrderResult memory"
                          }
                        },
                        "id": 52977,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "takerGave",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14267,
                        "src": "5156:13:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e3133",
                        "id": 52978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5177:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        "value": "0.13"
                      },
                      {
                        "hexValue": "496e636f7272656374207061727469616c2066696c6c206f662074616b6572206f72646572",
                        "id": 52979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5195:39:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc4767ab7a1fb61bb9d9e8445469a4ee9984e7c0f8b13a37bfa244dcde022a49",
                          "typeString": "literal_string \"Incorrect partial fill of taker order\""
                        },
                        "value": "Incorrect partial fill of taker order"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc4767ab7a1fb61bb9d9e8445469a4ee9984e7c0f8b13a37bfa244dcde022a49",
                          "typeString": "literal_string \"Incorrect partial fill of taker order\""
                        }
                      ],
                      "id": 52975,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "5140:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 52980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5140:100:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52981,
                  "nodeType": "ExpressionStatement",
                  "src": "5140:100:88"
                }
              ]
            },
            "functionSelector": "003a6685",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_partial_filled_buy_order_returns_residual",
            "nameLocation": "4147:46:88",
            "parameters": {
              "id": 52893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4193:2:88"
            },
            "returnParameters": {
              "id": 52894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4203:0:88"
            },
            "scope": 54338,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53022,
            "nodeType": "FunctionDefinition",
            "src": "5249:603:88",
            "body": {
              "id": 53021,
              "nodeType": "Block",
              "src": "5338:514:88",
              "statements": [
                {
                  "assignments": [52990],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52990,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "5374:8:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53021,
                      "src": "5344:38:88",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder"
                      },
                      "typeName": {
                        "id": 52989,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 52988,
                          "name": "IOrderLogic.TakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14263,
                          "src": "5344:22:88"
                        },
                        "referencedDeclaration": 14263,
                        "src": "5344:22:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53006,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 52993,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "5422:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 52994,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "5441:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 52995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5477:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 52996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5498:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "32",
                        "id": 52997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5531:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "32",
                        "id": 52998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5558:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 52999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5580:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 53000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5610:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 53001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5642:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "30",
                        "id": 53002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5668:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "365f3530305f303030",
                        "id": 53003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5696:9:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        "value": "6_500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 53004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5742:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 52991,
                        "name": "IOrderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14320,
                        "src": "5385:11:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOrderLogic_$14320_$",
                          "typeString": "type(contract IOrderLogic)"
                        }
                      },
                      "id": 52992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TakerOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14263,
                      "src": "5385:22:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TakerOrder_$14263_storage_ptr_$",
                        "typeString": "type(struct IOrderLogic.TakerOrder storage pointer)"
                      }
                    },
                    "id": 53005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "base",
                      "quote",
                      "partialFillNotAllowed",
                      "selling",
                      "wants",
                      "makerWants",
                      "gives",
                      "makerGives",
                      "restingOrder",
                      "retryNumber",
                      "gasForMarketOrder",
                      "blocksToLiveForRestingOrder"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "5385:370:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5344:411:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67764f726465722f6d6f2f6e6f5061727469616c46696c6c",
                        "id": 53010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5777:27:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3cf745283bb7d0f8554a7b72f3fd7d98ebe31c57a3b2141000da1322ed5c4a4e",
                          "typeString": "literal_string \"mgvOrder/mo/noPartialFill\""
                        },
                        "value": "mgvOrder/mo/noPartialFill"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3cf745283bb7d0f8554a7b72f3fd7d98ebe31c57a3b2141000da1322ed5c4a4e",
                          "typeString": "literal_string \"mgvOrder/mo/noPartialFill\""
                        }
                      ],
                      "expression": {
                        "id": 53007,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "5761:2:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "5761:15:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 53011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5761:44:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53012,
                  "nodeType": "ExpressionStatement",
                  "src": "5761:44:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53018,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52990,
                        "src": "5838:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        ],
                        "expression": {
                          "id": 53013,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52513,
                          "src": "5811:3:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 53015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6440,
                        "src": "5811:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$14263_memory_ptr_$returns$_t_struct$_TakerOrderResult_$14274_memory_ptr_$",
                          "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                        }
                      },
                      "id": 53017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 53016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5827:9:88",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "5811:26:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$14263_memory_ptr_$returns$_t_struct$_TakerOrderResult_$14274_memory_ptr_$value",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 53019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5811:36:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "id": 53020,
                  "nodeType": "ExpressionStatement",
                  "src": "5811:36:88"
                }
              ]
            },
            "functionSelector": "875f8597",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_partial_filled_buy_order_reverts_when_noPartialFill_enabled",
            "nameLocation": "5258:64:88",
            "parameters": {
              "id": 52984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5322:2:88"
            },
            "returnParameters": {
              "id": 52985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5338:0:88"
            },
            "scope": 54338,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53090,
            "nodeType": "FunctionDefinition",
            "src": "5856:816:88",
            "body": {
              "id": 53089,
              "nodeType": "Block",
              "src": "5922:750:88",
              "statements": [
                {
                  "assignments": [53026],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53026,
                      "mutability": "mutable",
                      "name": "balBefore",
                      "nameLocation": "5933:9:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53089,
                      "src": "5928:14:88",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53025,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5928:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53031,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 53028,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "5947:4:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                            "typeString": "contract MangroveOrder_Test"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                            "typeString": "contract MangroveOrder_Test"
                          }
                        ],
                        "id": 53027,
                        "name": "$",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          46990, 47007, 47024, 47041, 47058
                        ],
                        "referencedDeclaration": 47041,
                        "src": "5945:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                          "typeString": "function (contract Test) pure returns (address payable)"
                        }
                      },
                      "id": 53029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5945:7:88",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 53030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "5945:15:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5928:32:88"
                },
                {
                  "assignments": [53036],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53036,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "5996:8:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53089,
                      "src": "5966:38:88",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder"
                      },
                      "typeName": {
                        "id": 53035,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53034,
                          "name": "IOrderLogic.TakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14263,
                          "src": "5966:22:88"
                        },
                        "referencedDeclaration": 14263,
                        "src": "5966:22:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53052,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53039,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "6044:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 53040,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "6063:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 53041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6099:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 53042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6121:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "32",
                        "id": 53043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6154:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "32",
                        "id": 53044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6181:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 53045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6203:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 53046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6233:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 53047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6265:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "30",
                        "id": 53048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6291:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "365f3530305f303030",
                        "id": 53049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6319:9:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        "value": "6_500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 53050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6365:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 53037,
                        "name": "IOrderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14320,
                        "src": "6007:11:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOrderLogic_$14320_$",
                          "typeString": "type(contract IOrderLogic)"
                        }
                      },
                      "id": 53038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TakerOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14263,
                      "src": "6007:22:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TakerOrder_$14263_storage_ptr_$",
                        "typeString": "type(struct IOrderLogic.TakerOrder storage pointer)"
                      }
                    },
                    "id": 53051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "base",
                      "quote",
                      "partialFillNotAllowed",
                      "selling",
                      "wants",
                      "makerWants",
                      "gives",
                      "makerGives",
                      "restingOrder",
                      "retryNumber",
                      "gasForMarketOrder",
                      "blocksToLiveForRestingOrder"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "6007:371:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5966:412:88"
                },
                {
                  "assignments": [53057],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53057,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "6420:3:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53089,
                      "src": "6384:39:88",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrderResult"
                      },
                      "typeName": {
                        "id": 53056,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53055,
                          "name": "IOrderLogic.TakerOrderResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14274,
                          "src": "6384:28:88"
                        },
                        "referencedDeclaration": 14274,
                        "src": "6384:28:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrderResult_$14274_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrderResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53064,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53062,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53036,
                        "src": "6460:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        ],
                        "expression": {
                          "id": 53058,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52513,
                          "src": "6426:3:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 53059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6440,
                        "src": "6426:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$14263_memory_ptr_$returns$_t_struct$_TakerOrderResult_$14274_memory_ptr_$",
                          "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                        }
                      },
                      "id": 53061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 53060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6442:9:88",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "6426:26:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$14263_memory_ptr_$returns$_t_struct$_TakerOrderResult_$14274_memory_ptr_$value",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 53063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6426:48:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6384:90:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 53066,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53057,
                          "src": "6496:3:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrderResult memory"
                          }
                        },
                        "id": 53067,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "takerGot",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14265,
                        "src": "6496:12:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53070,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45878,
                                "src": "6527:4:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 53069,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "6525:1:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 53071,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6525:7:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 53073,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45881,
                                "src": "6536:5:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 53072,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "6534:1:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 53074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6534:8:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 53075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6544:7:88",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "id": 53068,
                          "name": "minusFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46470,
                          "src": "6516:8:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256) view returns (uint256)"
                          }
                        },
                        "id": 53076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6516:36:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f72726563742074616b657220676f74",
                        "id": 53077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6560:21:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a31e2b966929bfc84066e0f39e380b57c3afdd43875498e56caeffac35190ec5",
                          "typeString": "literal_string \"Incorrect taker got\""
                        },
                        "value": "Incorrect taker got"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a31e2b966929bfc84066e0f39e380b57c3afdd43875498e56caeffac35190ec5",
                          "typeString": "literal_string \"Incorrect taker got\""
                        }
                      ],
                      "id": 53065,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "6480:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 53078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6480:107:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53079,
                  "nodeType": "ExpressionStatement",
                  "src": "6480:107:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53081,
                        "name": "balBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53026,
                        "src": "6602:9:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 53083,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "6615:4:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                                "typeString": "contract MangroveOrder_Test"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                                "typeString": "contract MangroveOrder_Test"
                              }
                            ],
                            "id": 53082,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47041,
                            "src": "6613:1:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                              "typeString": "function (contract Test) pure returns (address payable)"
                            }
                          },
                          "id": 53084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6613:7:88",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 53085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "6613:15:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "54616b652066756e6374696f6e20646964206e6f742072657475726e2066756e6473",
                        "id": 53086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6630:36:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f48c5bc7698d2086ac42c25c7e3592dc706fc33b23e098c5ba48b5c2d91f9bd",
                          "typeString": "literal_string \"Take function did not return funds\""
                        },
                        "value": "Take function did not return funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f48c5bc7698d2086ac42c25c7e3592dc706fc33b23e098c5ba48b5c2d91f9bd",
                          "typeString": "literal_string \"Take function did not return funds\""
                        }
                      ],
                      "id": 53080,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "6593:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 53087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6593:74:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53088,
                  "nodeType": "ExpressionStatement",
                  "src": "6593:74:88"
                }
              ]
            },
            "functionSelector": "f87c8c0f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_partial_filled_buy_order_returns_provision",
            "nameLocation": "5865:47:88",
            "parameters": {
              "id": 53023,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5912:2:88"
            },
            "returnParameters": {
              "id": 53024,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5922:0:88"
            },
            "scope": 54338,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53160,
            "nodeType": "FunctionDefinition",
            "src": "6676:834:88",
            "body": {
              "id": 53159,
              "nodeType": "Block",
              "src": "6739:771:88",
              "statements": [
                {
                  "assignments": [53094],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53094,
                      "mutability": "mutable",
                      "name": "balBefore",
                      "nameLocation": "6750:9:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53159,
                      "src": "6745:14:88",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53093,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6745:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53099,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 53096,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "6764:4:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                            "typeString": "contract MangroveOrder_Test"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                            "typeString": "contract MangroveOrder_Test"
                          }
                        ],
                        "id": 53095,
                        "name": "$",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          46990, 47007, 47024, 47041, 47058
                        ],
                        "referencedDeclaration": 47041,
                        "src": "6762:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                          "typeString": "function (contract Test) pure returns (address payable)"
                        }
                      },
                      "id": 53097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6762:7:88",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 53098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "6762:15:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6745:32:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 53103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6806:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 53100,
                        "name": "ask_maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52519,
                        "src": "6783:9:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 53102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shouldRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48965,
                      "src": "6783:22:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 53104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6783:28:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53105,
                  "nodeType": "ExpressionStatement",
                  "src": "6783:28:88"
                },
                {
                  "assignments": [53110],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53110,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "6848:8:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53159,
                      "src": "6818:38:88",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder"
                      },
                      "typeName": {
                        "id": 53109,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53108,
                          "name": "IOrderLogic.TakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14263,
                          "src": "6818:22:88"
                        },
                        "referencedDeclaration": 14263,
                        "src": "6818:22:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53126,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53113,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "6896:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 53114,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "6915:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 53115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6951:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 53116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6973:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "32",
                        "id": 53117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7006:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 53118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7028:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "32",
                        "id": 53119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7058:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 53120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7085:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 53121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7117:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "30",
                        "id": 53122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7143:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "365f3530305f303030",
                        "id": 53123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7171:9:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        "value": "6_500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 53124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7217:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 53111,
                        "name": "IOrderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14320,
                        "src": "6859:11:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOrderLogic_$14320_$",
                          "typeString": "type(contract IOrderLogic)"
                        }
                      },
                      "id": 53112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TakerOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14263,
                      "src": "6859:22:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TakerOrder_$14263_storage_ptr_$",
                        "typeString": "type(struct IOrderLogic.TakerOrder storage pointer)"
                      }
                    },
                    "id": 53125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "base",
                      "quote",
                      "partialFillNotAllowed",
                      "selling",
                      "wants",
                      "gives",
                      "makerWants",
                      "makerGives",
                      "restingOrder",
                      "retryNumber",
                      "gasForMarketOrder",
                      "blocksToLiveForRestingOrder"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "6859:371:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6818:412:88"
                },
                {
                  "assignments": [53131],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53131,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "7272:3:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53159,
                      "src": "7236:39:88",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrderResult"
                      },
                      "typeName": {
                        "id": 53130,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53129,
                          "name": "IOrderLogic.TakerOrderResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14274,
                          "src": "7236:28:88"
                        },
                        "referencedDeclaration": 14274,
                        "src": "7236:28:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrderResult_$14274_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrderResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53138,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53136,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53110,
                        "src": "7312:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        ],
                        "expression": {
                          "id": 53132,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52513,
                          "src": "7278:3:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 53133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6440,
                        "src": "7278:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$14263_memory_ptr_$returns$_t_struct$_TakerOrderResult_$14274_memory_ptr_$",
                          "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                        }
                      },
                      "id": 53135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 53134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7294:9:88",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "7278:26:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$14263_memory_ptr_$returns$_t_struct$_TakerOrderResult_$14274_memory_ptr_$value",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 53137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7278:48:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7236:90:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 53140,
                            "name": "res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53131,
                            "src": "7343:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                              "typeString": "struct IOrderLogic.TakerOrderResult memory"
                            }
                          },
                          "id": 53141,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bounty",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14269,
                          "src": "7343:10:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 53142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7356:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7343:14:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "426f756e74792073686f756c64206e6f74206265207a65726f",
                        "id": 53144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7359:27:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_faf428574734727c523f58ca4e1d3f6454850e8fe552642ca0f4aff2bafb1a9d",
                          "typeString": "literal_string \"Bounty should not be zero\""
                        },
                        "value": "Bounty should not be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_faf428574734727c523f58ca4e1d3f6454850e8fe552642ca0f4aff2bafb1a9d",
                          "typeString": "literal_string \"Bounty should not be zero\""
                        }
                      ],
                      "id": 53139,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "7332:10:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 53145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7332:55:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53146,
                  "nodeType": "ExpressionStatement",
                  "src": "7332:55:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 53148,
                          "name": "balBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53094,
                          "src": "7409:9:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "expression": {
                            "id": 53149,
                            "name": "res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53131,
                            "src": "7421:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                              "typeString": "struct IOrderLogic.TakerOrderResult memory"
                            }
                          },
                          "id": 53150,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bounty",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14269,
                          "src": "7421:10:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7409:22:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 53153,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "7441:4:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                                "typeString": "contract MangroveOrder_Test"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                                "typeString": "contract MangroveOrder_Test"
                              }
                            ],
                            "id": 53152,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47041,
                            "src": "7439:1:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                              "typeString": "function (contract Test) pure returns (address payable)"
                            }
                          },
                          "id": 53154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7439:7:88",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 53155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "7439:15:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "54616b652066756e6374696f6e20646964206e6f742072657475726e20626f756e7479",
                        "id": 53156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7462:37:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_90c1fe0a75c138c63203a2328c2b4a0b899afa2ec391a38fff2b8e8f3d1bf654",
                          "typeString": "literal_string \"Take function did not return bounty\""
                        },
                        "value": "Take function did not return bounty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_90c1fe0a75c138c63203a2328c2b4a0b899afa2ec391a38fff2b8e8f3d1bf654",
                          "typeString": "literal_string \"Take function did not return bounty\""
                        }
                      ],
                      "id": 53147,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "7393:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 53157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7393:112:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53158,
                  "nodeType": "ExpressionStatement",
                  "src": "7393:112:88"
                }
              ]
            },
            "functionSelector": "63dee520",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_partial_filled_buy_order_returns_bounty",
            "nameLocation": "6685:44:88",
            "parameters": {
              "id": 53091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6729:2:88"
            },
            "returnParameters": {
              "id": 53092,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6739:0:88"
            },
            "scope": 54338,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53199,
            "nodeType": "FunctionDefinition",
            "src": "7514:604:88",
            "body": {
              "id": 53198,
              "nodeType": "Block",
              "src": "7582:536:88",
              "statements": [
                {
                  "assignments": [53167],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53167,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "7618:8:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53198,
                      "src": "7588:38:88",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder"
                      },
                      "typeName": {
                        "id": 53166,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53165,
                          "name": "IOrderLogic.TakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14263,
                          "src": "7588:22:88"
                        },
                        "referencedDeclaration": 14263,
                        "src": "7588:22:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53183,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53170,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "7666:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 53171,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "7685:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 53172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7721:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 53173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7743:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "32",
                        "id": 53174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7776:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 53175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7798:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "32",
                        "id": 53176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7828:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 53177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7855:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 53178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7887:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "30",
                        "id": 53179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7912:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "365f3530305f303030",
                        "id": 53180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7940:9:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        "value": "6_500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 53181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7986:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 53168,
                        "name": "IOrderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14320,
                        "src": "7629:11:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOrderLogic_$14320_$",
                          "typeString": "type(contract IOrderLogic)"
                        }
                      },
                      "id": 53169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TakerOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14263,
                      "src": "7629:22:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TakerOrder_$14263_storage_ptr_$",
                        "typeString": "type(struct IOrderLogic.TakerOrder storage pointer)"
                      }
                    },
                    "id": 53182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "base",
                      "quote",
                      "partialFillNotAllowed",
                      "selling",
                      "wants",
                      "gives",
                      "makerWants",
                      "makerGives",
                      "restingOrder",
                      "retryNumber",
                      "gasForMarketOrder",
                      "blocksToLiveForRestingOrder"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "7629:370:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7588:411:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4d756c7469557365722f6465726976655f67617370726963652f4e6f74456e6f75676850726f766973696f6e",
                        "id": 53187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8021:46:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc838b84ecd4fdea99242bf42919782c2cd9dbfdea1148147b48bd7f4a940748",
                          "typeString": "literal_string \"MultiUser/derive_gasprice/NotEnoughProvision\""
                        },
                        "value": "MultiUser/derive_gasprice/NotEnoughProvision"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_cc838b84ecd4fdea99242bf42919782c2cd9dbfdea1148147b48bd7f4a940748",
                          "typeString": "literal_string \"MultiUser/derive_gasprice/NotEnoughProvision\""
                        }
                      ],
                      "expression": {
                        "id": 53184,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "8005:2:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "8005:15:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 53188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8005:63:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53189,
                  "nodeType": "ExpressionStatement",
                  "src": "8005:63:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53195,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53167,
                        "src": "8104:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        ],
                        "expression": {
                          "id": 53190,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52513,
                          "src": "8074:3:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 53192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6440,
                        "src": "8074:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$14263_memory_ptr_$returns$_t_struct$_TakerOrderResult_$14274_memory_ptr_$",
                          "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                        }
                      },
                      "id": 53194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e30303031",
                          "id": 53193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8090:12:88",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000_by_1",
                            "typeString": "int_const 100000000000000"
                          },
                          "value": "0.0001"
                        }
                      ],
                      "src": "8074:29:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$14263_memory_ptr_$returns$_t_struct$_TakerOrderResult_$14274_memory_ptr_$value",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 53196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8074:39:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "id": 53197,
                  "nodeType": "ExpressionStatement",
                  "src": "8074:39:88"
                }
              ]
            },
            "functionSelector": "830ca968",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_resting_buy_order_reverts_when_unprovisioned",
            "nameLocation": "7523:49:88",
            "parameters": {
              "id": 53161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7572:2:88"
            },
            "returnParameters": {
              "id": 53162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7582:0:88"
            },
            "scope": 54338,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53282,
            "nodeType": "FunctionDefinition",
            "src": "8122:934:88",
            "body": {
              "id": 53281,
              "nodeType": "Block",
              "src": "8193:863:88",
              "statements": [
                {
                  "assignments": [53203],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53203,
                      "mutability": "mutable",
                      "name": "balQuoteBefore",
                      "nameLocation": "8204:14:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53281,
                      "src": "8199:19:88",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53202,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8199:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53210,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53207,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8239:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 53206,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "8237:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 53208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8237:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 53204,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "8221:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 53205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50187,
                      "src": "8221:15:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 53209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8221:24:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8199:46:88"
                },
                {
                  "assignments": [53212],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53212,
                      "mutability": "mutable",
                      "name": "balBaseBefore",
                      "nameLocation": "8256:13:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53281,
                      "src": "8251:18:88",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53211,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8251:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53219,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53216,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8289:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 53215,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "8287:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 53217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8287:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 53213,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "8272:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 53214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50187,
                      "src": "8272:14:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 53218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8272:23:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8251:44:88"
                },
                {
                  "assignments": [53224],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53224,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "8332:8:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53281,
                      "src": "8302:38:88",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder"
                      },
                      "typeName": {
                        "id": 53223,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53222,
                          "name": "IOrderLogic.TakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14263,
                          "src": "8302:22:88"
                        },
                        "referencedDeclaration": 14263,
                        "src": "8302:22:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53240,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53227,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "8380:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 53228,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "8399:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 53229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8435:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 53230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8457:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "31",
                        "id": 53231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8490:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "302e3133",
                        "id": 53232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8512:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        "value": "0.13"
                      },
                      {
                        "hexValue": "31",
                        "id": 53233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8542:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "302e3133",
                        "id": 53234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8569:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        "value": "0.13"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 53235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8601:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "30",
                        "id": 53236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8626:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "365f3530305f303030",
                        "id": 53237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8654:9:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        "value": "6_500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 53238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8700:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 53225,
                        "name": "IOrderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14320,
                        "src": "8343:11:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOrderLogic_$14320_$",
                          "typeString": "type(contract IOrderLogic)"
                        }
                      },
                      "id": 53226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TakerOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14263,
                      "src": "8343:22:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TakerOrder_$14263_storage_ptr_$",
                        "typeString": "type(struct IOrderLogic.TakerOrder storage pointer)"
                      }
                    },
                    "id": 53239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "base",
                      "quote",
                      "partialFillNotAllowed",
                      "selling",
                      "wants",
                      "gives",
                      "makerWants",
                      "makerGives",
                      "restingOrder",
                      "retryNumber",
                      "gasForMarketOrder",
                      "blocksToLiveForRestingOrder"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "8343:370:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8302:411:88"
                },
                {
                  "assignments": [53245],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53245,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "8755:3:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53281,
                      "src": "8719:39:88",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrderResult"
                      },
                      "typeName": {
                        "id": 53244,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53243,
                          "name": "IOrderLogic.TakerOrderResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14274,
                          "src": "8719:28:88"
                        },
                        "referencedDeclaration": 14274,
                        "src": "8719:28:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrderResult_$14274_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrderResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53252,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53250,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53224,
                        "src": "8795:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        ],
                        "expression": {
                          "id": 53246,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52513,
                          "src": "8761:3:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 53247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6440,
                        "src": "8761:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$14263_memory_ptr_$returns$_t_struct$_TakerOrderResult_$14274_memory_ptr_$",
                          "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                        }
                      },
                      "id": 53249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 53248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8777:9:88",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "8761:26:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$14263_memory_ptr_$returns$_t_struct$_TakerOrderResult_$14274_memory_ptr_$value",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 53251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8761:48:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8719:90:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53257,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8849:4:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                                  "typeString": "contract MangroveOrder_Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                                  "typeString": "contract MangroveOrder_Test"
                                }
                              ],
                              "id": 53256,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47041,
                              "src": "8847:1:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 53258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8847:7:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 53254,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "8831:5:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 53255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50187,
                          "src": "8831:15:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8831:24:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 53260,
                          "name": "balQuoteBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53203,
                          "src": "8863:14:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "id": 53261,
                            "name": "res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53245,
                            "src": "8880:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                              "typeString": "struct IOrderLogic.TakerOrderResult memory"
                            }
                          },
                          "id": 53262,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "takerGave",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14267,
                          "src": "8880:13:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8863:30:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "696e636f72726563742071756f74652062616c616e6365",
                        "id": 53264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8901:25:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da0c6774acf475fe8f69c1ae5540554f3479f52667e147370b156bea49ebebc5",
                          "typeString": "literal_string \"incorrect quote balance\""
                        },
                        "value": "incorrect quote balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da0c6774acf475fe8f69c1ae5540554f3479f52667e147370b156bea49ebebc5",
                          "typeString": "literal_string \"incorrect quote balance\""
                        }
                      ],
                      "id": 53253,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "8815:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 53265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8815:117:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53266,
                  "nodeType": "ExpressionStatement",
                  "src": "8815:117:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53271,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8971:4:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                                  "typeString": "contract MangroveOrder_Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                                  "typeString": "contract MangroveOrder_Test"
                                }
                              ],
                              "id": 53270,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47041,
                              "src": "8969:1:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 53272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8969:7:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 53268,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "8954:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 53269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50187,
                          "src": "8954:14:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8954:23:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 53274,
                          "name": "balBaseBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53212,
                          "src": "8985:13:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "expression": {
                            "id": 53275,
                            "name": "res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53245,
                            "src": "9001:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                              "typeString": "struct IOrderLogic.TakerOrderResult memory"
                            }
                          },
                          "id": 53276,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "takerGot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14265,
                          "src": "9001:12:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8985:28:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "696e636f727265637420626173652062616c616e6365",
                        "id": 53278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9021:24:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51e291a1468642b5a1f8bc61856618ddab050dd7d34c3e2a758dff57ab59680d",
                          "typeString": "literal_string \"incorrect base balance\""
                        },
                        "value": "incorrect base balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51e291a1468642b5a1f8bc61856618ddab050dd7d34c3e2a758dff57ab59680d",
                          "typeString": "literal_string \"incorrect base balance\""
                        }
                      ],
                      "id": 53267,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "8938:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 53279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8938:113:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53280,
                  "nodeType": "ExpressionStatement",
                  "src": "8938:113:88"
                }
              ]
            },
            "functionSelector": "400efb29",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_filled_resting_buy_order_ignores_resting_option",
            "nameLocation": "8131:52:88",
            "parameters": {
              "id": 53200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8183:2:88"
            },
            "returnParameters": {
              "id": 53201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8193:0:88"
            },
            "scope": 54338,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53335,
            "nodeType": "FunctionDefinition",
            "src": "9060:682:88",
            "body": {
              "id": 53334,
              "nodeType": "Block",
              "src": "9126:616:88",
              "statements": [
                {
                  "assignments": [53286],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53286,
                      "mutability": "mutable",
                      "name": "balWeiBefore",
                      "nameLocation": "9137:12:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53334,
                      "src": "9132:17:88",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53285,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9132:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53291,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 53288,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "9154:4:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                            "typeString": "contract MangroveOrder_Test"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                            "typeString": "contract MangroveOrder_Test"
                          }
                        ],
                        "id": 53287,
                        "name": "$",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          46990, 47007, 47024, 47041, 47058
                        ],
                        "referencedDeclaration": 47041,
                        "src": "9152:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                          "typeString": "function (contract Test) pure returns (address payable)"
                        }
                      },
                      "id": 53289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9152:7:88",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 53290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "9152:15:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9132:35:88"
                },
                {
                  "assignments": [53296],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53296,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "9204:8:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53334,
                      "src": "9174:38:88",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder"
                      },
                      "typeName": {
                        "id": 53295,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53294,
                          "name": "IOrderLogic.TakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14263,
                          "src": "9174:22:88"
                        },
                        "referencedDeclaration": 14263,
                        "src": "9174:22:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53312,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53299,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "9252:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 53300,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "9271:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 53301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9307:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 53302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9329:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "31",
                        "id": 53303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9362:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "302e3133",
                        "id": 53304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9384:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        "value": "0.13"
                      },
                      {
                        "hexValue": "31",
                        "id": 53305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9414:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "302e3133",
                        "id": 53306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9441:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        "value": "0.13"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 53307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9473:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "30",
                        "id": 53308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9498:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "365f3530305f303030",
                        "id": 53309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9526:9:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        "value": "6_500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 53310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9572:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 53297,
                        "name": "IOrderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14320,
                        "src": "9215:11:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOrderLogic_$14320_$",
                          "typeString": "type(contract IOrderLogic)"
                        }
                      },
                      "id": 53298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TakerOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14263,
                      "src": "9215:22:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TakerOrder_$14263_storage_ptr_$",
                        "typeString": "type(struct IOrderLogic.TakerOrder storage pointer)"
                      }
                    },
                    "id": 53311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "base",
                      "quote",
                      "partialFillNotAllowed",
                      "selling",
                      "wants",
                      "gives",
                      "makerWants",
                      "makerGives",
                      "restingOrder",
                      "retryNumber",
                      "gasForMarketOrder",
                      "blocksToLiveForRestingOrder"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "9215:370:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9174:411:88"
                },
                {
                  "assignments": [53317],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53317,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "9627:3:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53334,
                      "src": "9591:39:88",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrderResult"
                      },
                      "typeName": {
                        "id": 53316,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53315,
                          "name": "IOrderLogic.TakerOrderResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14274,
                          "src": "9591:28:88"
                        },
                        "referencedDeclaration": 14274,
                        "src": "9591:28:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrderResult_$14274_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrderResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53322,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53320,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53296,
                        "src": "9642:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "id": 53318,
                        "name": "mgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52513,
                        "src": "9633:3:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                          "typeString": "contract MangroveOrderEnriched"
                        }
                      },
                      "id": 53319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "take",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6440,
                      "src": "9633:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$14263_memory_ptr_$returns$_t_struct$_TakerOrderResult_$14274_memory_ptr_$",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 53321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9633:18:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9591:60:88"
                },
                {
                  "expression": {
                    "id": 53323,
                    "name": "res",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53317,
                    "src": "9657:3:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "id": 53324,
                  "nodeType": "ExpressionStatement",
                  "src": "9657:3:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 53327,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "9684:4:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                                "typeString": "contract MangroveOrder_Test"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                                "typeString": "contract MangroveOrder_Test"
                              }
                            ],
                            "id": 53326,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47041,
                            "src": "9682:1:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                              "typeString": "function (contract Test) pure returns (address payable)"
                            }
                          },
                          "id": 53328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9682:7:88",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 53329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "9682:15:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53330,
                        "name": "balWeiBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53286,
                        "src": "9699:12:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "696e636f7272656374207765692062616c616e6365",
                        "id": 53331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9713:23:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98ec38f56a5e7ea6139662e3bba8a84b1c9d63c62b662fb6c540971d97332646",
                          "typeString": "literal_string \"incorrect wei balance\""
                        },
                        "value": "incorrect wei balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98ec38f56a5e7ea6139662e3bba8a84b1c9d63c62b662fb6c540971d97332646",
                          "typeString": "literal_string \"incorrect wei balance\""
                        }
                      ],
                      "id": 53325,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "9673:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 53332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9673:64:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53333,
                  "nodeType": "ExpressionStatement",
                  "src": "9673:64:88"
                }
              ]
            },
            "functionSelector": "75089822",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_filled_resting_buy_order_returns_provision",
            "nameLocation": "9069:47:88",
            "parameters": {
              "id": 53283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9116:2:88"
            },
            "returnParameters": {
              "id": 53284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9126:0:88"
            },
            "scope": 54338,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53542,
            "nodeType": "FunctionDefinition",
            "src": "9746:2036:88",
            "body": {
              "id": 53541,
              "nodeType": "Block",
              "src": "9810:1972:88",
              "statements": [
                {
                  "assignments": [53342],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53342,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "9846:8:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53541,
                      "src": "9816:38:88",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder"
                      },
                      "typeName": {
                        "id": 53341,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53340,
                          "name": "IOrderLogic.TakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14263,
                          "src": "9816:22:88"
                        },
                        "referencedDeclaration": 14263,
                        "src": "9816:22:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53358,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53345,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "9894:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 53346,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "9913:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 53347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9949:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 53348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9971:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "32",
                        "id": 53349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10004:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 53350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10026:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "32",
                        "id": 53351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10076:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e32353438",
                        "id": 53352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10103:12:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_254800000000000000_by_1",
                          "typeString": "int_const 254800000000000000"
                        },
                        "value": "0.2548"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 53353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10159:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "30",
                        "id": 53354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10184:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "365f3530305f303030",
                        "id": 53355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10212:9:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        "value": "6_500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 53356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10258:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_254800000000000000_by_1",
                          "typeString": "int_const 254800000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 53343,
                        "name": "IOrderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14320,
                        "src": "9857:11:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOrderLogic_$14320_$",
                          "typeString": "type(contract IOrderLogic)"
                        }
                      },
                      "id": 53344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TakerOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14263,
                      "src": "9857:22:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TakerOrder_$14263_storage_ptr_$",
                        "typeString": "type(struct IOrderLogic.TakerOrder storage pointer)"
                      }
                    },
                    "id": 53357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "base",
                      "quote",
                      "partialFillNotAllowed",
                      "selling",
                      "wants",
                      "gives",
                      "makerWants",
                      "makerGives",
                      "restingOrder",
                      "retryNumber",
                      "gasForMarketOrder",
                      "blocksToLiveForRestingOrder"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "9857:414:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9816:455:88"
                },
                {
                  "assignments": [53360],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53360,
                      "mutability": "mutable",
                      "name": "bal_quote_before",
                      "nameLocation": "10282:16:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53541,
                      "src": "10277:21:88",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53359,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10277:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53370,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53365,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "10329:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53367,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10338:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 53366,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "10336:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 53368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10336:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 53361,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52513,
                            "src": "10301:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          },
                          "id": 53362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "router",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10914,
                          "src": "10301:10:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AbstractRouter_$16287_$",
                            "typeString": "function () view external returns (contract AbstractRouter)"
                          }
                        },
                        "id": 53363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10301:12:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractRouter_$16287",
                          "typeString": "contract AbstractRouter"
                        }
                      },
                      "id": 53364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "reserveBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16213,
                      "src": "10301:27:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$2050_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,address) view external returns (uint256)"
                      }
                    },
                    "id": 53369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10301:43:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10277:67:88"
                },
                {
                  "assignments": [53372],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53372,
                      "mutability": "mutable",
                      "name": "bal_base_before",
                      "nameLocation": "10355:15:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53541,
                      "src": "10350:20:88",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53371,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10350:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53382,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53377,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "10401:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53379,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10410:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 53378,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "10408:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 53380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10408:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 53373,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52513,
                            "src": "10373:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          },
                          "id": 53374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "router",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10914,
                          "src": "10373:10:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AbstractRouter_$16287_$",
                            "typeString": "function () view external returns (contract AbstractRouter)"
                          }
                        },
                        "id": 53375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10373:12:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractRouter_$16287",
                          "typeString": "contract AbstractRouter"
                        }
                      },
                      "id": 53376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "reserveBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16213,
                      "src": "10373:27:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$2050_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,address) view external returns (uint256)"
                      }
                    },
                    "id": 53381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10373:43:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10350:66:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53387,
                                "name": "mgo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52513,
                                "src": "10447:3:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                                  "typeString": "contract MangroveOrderEnriched"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                                  "typeString": "contract MangroveOrderEnriched"
                                }
                              ],
                              "id": 53386,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47007,
                              "src": "10445:1:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_AccessControlled_$20247_$returns$_t_address_payable_$",
                                "typeString": "function (contract AccessControlled) pure returns (address payable)"
                              }
                            },
                            "id": 53388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10445:6:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 53384,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "10431:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 53385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1417,
                          "src": "10431:13:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10431:21:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 53390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10454:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "496e76616c69642062616c616e6365206f6e204d616e67726f7665",
                        "id": 53391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10457:29:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa4c937e76fa7784fd373339bad39bae59bd47b1d5622586c7172bfe9d6f5d05",
                          "typeString": "literal_string \"Invalid balance on Mangrove\""
                        },
                        "value": "Invalid balance on Mangrove"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa4c937e76fa7784fd373339bad39bae59bd47b1d5622586c7172bfe9d6f5d05",
                          "typeString": "literal_string \"Invalid balance on Mangrove\""
                        }
                      ],
                      "id": 53383,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "10422:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 53392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10422:65:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53393,
                  "nodeType": "ExpressionStatement",
                  "src": "10422:65:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53396,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52513,
                            "src": "10507:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          ],
                          "id": 53395,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47007,
                          "src": "10505:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AccessControlled_$20247_$returns$_t_address_payable_$",
                            "typeString": "function (contract AccessControlled) pure returns (address payable)"
                          }
                        },
                        "id": 53397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10505:6:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 53394,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "10494:10:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 53398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10494:18:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53399,
                  "nodeType": "ExpressionStatement",
                  "src": "10494:18:88"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53404,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45875,
                                "src": "10561:3:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                  "typeString": "contract AbstractMangrove"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                  "typeString": "contract AbstractMangrove"
                                }
                              ],
                              "id": 53403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10553:8:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 53402,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10553:8:88",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10553:12:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 53401,
                          "name": "IMangrove",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 645,
                          "src": "10543:9:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMangrove_$645_$",
                            "typeString": "type(contract IMangrove)"
                          }
                        },
                        "id": 53406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10543:23:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMangrove_$645",
                          "typeString": "contract IMangrove"
                        }
                      },
                      {
                        "id": 53407,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "10574:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 53408,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "10586:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53410,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10601:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 53409,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "10599:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 53411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10599:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 53412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10614:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53415,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45878,
                                "src": "10647:4:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 53414,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "10645:1:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 53416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10645:7:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 53418,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45881,
                                "src": "10656:5:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 53417,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "10654:1:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 53419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10654:8:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 53420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10664:7:88",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "id": 53413,
                          "name": "minusFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46470,
                          "src": "10636:8:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256) view returns (uint256)"
                          }
                        },
                        "id": 53421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10636:36:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e3133",
                        "id": 53422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10680:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        "value": "0.13"
                      },
                      {
                        "hexValue": "30",
                        "id": 53423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10698:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "34",
                        "id": 53424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10707:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IMangrove_$645",
                          "typeString": "contract IMangrove"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "id": 53400,
                      "name": "OrderSummary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52510,
                      "src": "10523:12:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IMangrove_$645_$_t_contract$_IERC20_$2050_$_t_contract$_IERC20_$2050_$_t_address_$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IMangrove,contract IERC20,contract IERC20,address,bool,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 53425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10523:252:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53426,
                  "nodeType": "EmitStatement",
                  "src": "10518:257:88"
                },
                {
                  "assignments": [53431],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53431,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "10817:3:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53541,
                      "src": "10781:39:88",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrderResult"
                      },
                      "typeName": {
                        "id": 53430,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53429,
                          "name": "IOrderLogic.TakerOrderResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14274,
                          "src": "10781:28:88"
                        },
                        "referencedDeclaration": 14274,
                        "src": "10781:28:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrderResult_$14274_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrderResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53438,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53436,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53342,
                        "src": "10857:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        ],
                        "expression": {
                          "id": 53432,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52513,
                          "src": "10823:3:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 53433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6440,
                        "src": "10823:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$14263_memory_ptr_$returns$_t_struct$_TakerOrderResult_$14274_memory_ptr_$",
                          "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                        }
                      },
                      "id": 53435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 53434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10839:9:88",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "10823:26:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$14263_memory_ptr_$returns$_t_struct$_TakerOrderResult_$14274_memory_ptr_$value",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 53437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10823:48:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10781:90:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 53440,
                            "name": "res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53431,
                            "src": "10895:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                              "typeString": "struct IOrderLogic.TakerOrderResult memory"
                            }
                          },
                          "id": 53441,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "offerId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14273,
                          "src": "10895:11:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 53442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10909:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10895:15:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52657374696e67206f66666572206661696c656420746f206265207075626c6973686564206f6e206d616e67726f7665",
                        "id": 53444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10918:50:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a28ebb0a1ee22746d988d4f8942733b3ae5a2fa619c395cc38a0fd57b72c98a0",
                          "typeString": "literal_string \"Resting offer failed to be published on mangrove\""
                        },
                        "value": "Resting offer failed to be published on mangrove"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a28ebb0a1ee22746d988d4f8942733b3ae5a2fa619c395cc38a0fd57b72c98a0",
                          "typeString": "literal_string \"Resting offer failed to be published on mangrove\""
                        }
                      ],
                      "id": 53439,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "10877:10:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 53445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10877:97:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53446,
                  "nodeType": "ExpressionStatement",
                  "src": "10877:97:88"
                },
                {
                  "assignments": [53452],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53452,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "11032:5:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53541,
                      "src": "11022:15:88",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                        "typeString": "t"
                      },
                      "typeName": {
                        "id": 53451,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53450,
                          "name": "P.Offer.t",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9363,
                          "src": "11022:9:88"
                        },
                        "referencedDeclaration": 9363,
                        "src": "11022:9:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                          "typeString": "t"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53464,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53456,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "11053:5:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53455,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "11051:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11051:8:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53459,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "11063:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53458,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "11061:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11061:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 53461,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53431,
                          "src": "11070:3:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrderResult memory"
                          }
                        },
                        "id": 53462,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14273,
                        "src": "11070:11:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53453,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "11040:3:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 53454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1404,
                      "src": "11040:10:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$9363_$",
                        "typeString": "function (address,address,uint256) view external returns (t)"
                      }
                    },
                    "id": 53463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11040:42:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                      "typeString": "t"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11022:60:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 53466,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53452,
                            "src": "11104:5:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                              "typeString": "t"
                            }
                          },
                          "id": 53467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wants",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9726,
                          "src": "11104:11:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$9363_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$9363_$",
                            "typeString": "function (t) pure returns (uint256)"
                          }
                        },
                        "id": 53468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11104:13:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 53469,
                            "name": "buyOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53342,
                            "src": "11125:8:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                              "typeString": "struct IOrderLogic.TakerOrder memory"
                            }
                          },
                          "id": 53470,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "makerWants",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14250,
                          "src": "11125:19:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 53475,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 53471,
                                  "name": "res",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53431,
                                  "src": "11148:3:88",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                                    "typeString": "struct IOrderLogic.TakerOrderResult memory"
                                  }
                                },
                                "id": 53472,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "takerGot",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14265,
                                "src": "11148:12:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "expression": {
                                  "id": 53473,
                                  "name": "res",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53431,
                                  "src": "11163:3:88",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                                    "typeString": "struct IOrderLogic.TakerOrderResult memory"
                                  }
                                },
                                "id": 53474,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "fee",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14271,
                                "src": "11163:7:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11148:22:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 53476,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "11147:24:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11125:46:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f72726563742077616e747320666f72206269642072657374696e67206f72646572",
                        "id": 53478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11179:39:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9af25f723f84f57e72481e6d80d0229f66278bea974bfa11bed258f095731b5c",
                          "typeString": "literal_string \"Incorrect wants for bid resting order\""
                        },
                        "value": "Incorrect wants for bid resting order"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9af25f723f84f57e72481e6d80d0229f66278bea974bfa11bed258f095731b5c",
                          "typeString": "literal_string \"Incorrect wants for bid resting order\""
                        }
                      ],
                      "id": 53465,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "11088:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 53479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11088:136:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53480,
                  "nodeType": "ExpressionStatement",
                  "src": "11088:136:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 53482,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53452,
                            "src": "11246:5:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                              "typeString": "t"
                            }
                          },
                          "id": 53483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "gives",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9784,
                          "src": "11246:11:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$9363_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$9363_$",
                            "typeString": "function (t) pure returns (uint256)"
                          }
                        },
                        "id": 53484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11246:13:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 53485,
                            "name": "buyOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53342,
                            "src": "11267:8:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                              "typeString": "struct IOrderLogic.TakerOrder memory"
                            }
                          },
                          "id": 53486,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "makerGives",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14254,
                          "src": "11267:19:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "id": 53487,
                            "name": "res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53431,
                            "src": "11289:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                              "typeString": "struct IOrderLogic.TakerOrderResult memory"
                            }
                          },
                          "id": 53488,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "takerGave",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14267,
                          "src": "11289:13:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11267:35:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f727265637420676976657320666f72206269642072657374696e67206f72646572",
                        "id": 53490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11310:39:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c357a2212e576c5bafd04f6c90164a56b66e9cc87f2acbf5f244f9b33d17e791",
                          "typeString": "literal_string \"Incorrect gives for bid resting order\""
                        },
                        "value": "Incorrect gives for bid resting order"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c357a2212e576c5bafd04f6c90164a56b66e9cc87f2acbf5f244f9b33d17e791",
                          "typeString": "literal_string \"Incorrect gives for bid resting order\""
                        }
                      ],
                      "id": 53481,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "11230:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 53491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11230:125:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53492,
                  "nodeType": "ExpressionStatement",
                  "src": "11230:125:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53496,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "11421:5:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "id": 53497,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "11428:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "expression": {
                              "id": 53498,
                              "name": "res",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53431,
                              "src": "11434:3:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                                "typeString": "struct IOrderLogic.TakerOrderResult memory"
                              }
                            },
                            "id": 53499,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "offerId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14273,
                            "src": "11434:11:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 53494,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52513,
                            "src": "11409:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          },
                          "id": 53495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14586,
                          "src": "11409:11:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$2050_$_t_contract$_IERC20_$2050_$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (contract IERC20,contract IERC20,uint256) view external returns (address)"
                          }
                        },
                        "id": 53500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11409:37:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53502,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11456:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 53501,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "11454:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 53503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11454:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206f66666572206f776e6572",
                        "id": 53504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11469:21:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_09925069ac5619f22606be970b8c67ebec257de6d793722e8cd258a9a2ac4775",
                          "typeString": "literal_string \"Invalid offer owner\""
                        },
                        "value": "Invalid offer owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_09925069ac5619f22606be970b8c67ebec257de6d793722e8cd258a9a2ac4775",
                          "typeString": "literal_string \"Invalid offer owner\""
                        }
                      ],
                      "id": 53493,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59303,
                      "src": "11393:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 53505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11393:103:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53506,
                  "nodeType": "ExpressionStatement",
                  "src": "11393:103:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53512,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "11546:5:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 53514,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11555:4:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                                  "typeString": "contract MangroveOrder_Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                                  "typeString": "contract MangroveOrder_Test"
                                }
                              ],
                              "id": 53513,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47041,
                              "src": "11553:1:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 53515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11553:7:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 53508,
                                "name": "mgo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52513,
                                "src": "11518:3:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                                  "typeString": "contract MangroveOrderEnriched"
                                }
                              },
                              "id": 53509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "router",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10914,
                              "src": "11518:10:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AbstractRouter_$16287_$",
                                "typeString": "function () view external returns (contract AbstractRouter)"
                              }
                            },
                            "id": 53510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11518:12:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractRouter_$16287",
                              "typeString": "contract AbstractRouter"
                            }
                          },
                          "id": 53511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16213,
                          "src": "11518:27:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$2050_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 53516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11518:43:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 53517,
                          "name": "bal_quote_before",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53360,
                          "src": "11569:16:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "id": 53518,
                            "name": "res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53431,
                            "src": "11588:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                              "typeString": "struct IOrderLogic.TakerOrderResult memory"
                            }
                          },
                          "id": 53519,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "takerGave",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14267,
                          "src": "11588:13:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11569:32:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642071756f74652062616c616e6365",
                        "id": 53521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11609:23:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f4ed139e4160668d9d53c05a511c8669f7a5c84db23e08831e17b2494b59dfc8",
                          "typeString": "literal_string \"Invalid quote balance\""
                        },
                        "value": "Invalid quote balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f4ed139e4160668d9d53c05a511c8669f7a5c84db23e08831e17b2494b59dfc8",
                          "typeString": "literal_string \"Invalid quote balance\""
                        }
                      ],
                      "id": 53507,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "11502:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 53522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11502:136:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53523,
                  "nodeType": "ExpressionStatement",
                  "src": "11502:136:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53529,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "11688:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 53531,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11696:4:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                                  "typeString": "contract MangroveOrder_Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                                  "typeString": "contract MangroveOrder_Test"
                                }
                              ],
                              "id": 53530,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47041,
                              "src": "11694:1:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 53532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11694:7:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 53525,
                                "name": "mgo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52513,
                                "src": "11660:3:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                                  "typeString": "contract MangroveOrderEnriched"
                                }
                              },
                              "id": 53526,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "router",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10914,
                              "src": "11660:10:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AbstractRouter_$16287_$",
                                "typeString": "function () view external returns (contract AbstractRouter)"
                              }
                            },
                            "id": 53527,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11660:12:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractRouter_$16287",
                              "typeString": "contract AbstractRouter"
                            }
                          },
                          "id": 53528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16213,
                          "src": "11660:27:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$2050_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 53533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11660:42:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 53534,
                          "name": "bal_base_before",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53372,
                          "src": "11710:15:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "expression": {
                            "id": 53535,
                            "name": "res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53431,
                            "src": "11728:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                              "typeString": "struct IOrderLogic.TakerOrderResult memory"
                            }
                          },
                          "id": 53536,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "takerGot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14265,
                          "src": "11728:12:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11710:30:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642071756f74652062616c616e6365",
                        "id": 53538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11748:23:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f4ed139e4160668d9d53c05a511c8669f7a5c84db23e08831e17b2494b59dfc8",
                          "typeString": "literal_string \"Invalid quote balance\""
                        },
                        "value": "Invalid quote balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f4ed139e4160668d9d53c05a511c8669f7a5c84db23e08831e17b2494b59dfc8",
                          "typeString": "literal_string \"Invalid quote balance\""
                        }
                      ],
                      "id": 53524,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "11644:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 53539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11644:133:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53540,
                  "nodeType": "ExpressionStatement",
                  "src": "11644:133:88"
                }
              ]
            },
            "functionSelector": "5d35978d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_resting_buy_order_is_successfully_posted",
            "nameLocation": "9755:45:88",
            "parameters": {
              "id": 53336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9800:2:88"
            },
            "returnParameters": {
              "id": 53337,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9810:0:88"
            },
            "scope": 54338,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53698,
            "nodeType": "FunctionDefinition",
            "src": "11786:1862:88",
            "body": {
              "id": 53697,
              "nodeType": "Block",
              "src": "11851:1797:88",
              "statements": [
                {
                  "assignments": [53549],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53549,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "11927:8:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53697,
                      "src": "11897:38:88",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder"
                      },
                      "typeName": {
                        "id": 53548,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53547,
                          "name": "IOrderLogic.TakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14263,
                          "src": "11897:22:88"
                        },
                        "referencedDeclaration": 14263,
                        "src": "11897:22:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53565,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53552,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "11975:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 53553,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "11994:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 53554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12030:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 53555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12052:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "32",
                        "id": 53556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12085:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 53557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12107:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "32",
                        "id": 53558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12137:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 53559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12164:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 53560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12196:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "30",
                        "id": 53561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12221:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "365f3530305f303030",
                        "id": 53562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12249:9:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        "value": "6_500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 53563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12295:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 53550,
                        "name": "IOrderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14320,
                        "src": "11938:11:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOrderLogic_$14320_$",
                          "typeString": "type(contract IOrderLogic)"
                        }
                      },
                      "id": 53551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TakerOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14263,
                      "src": "11938:22:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TakerOrder_$14263_storage_ptr_$",
                        "typeString": "type(struct IOrderLogic.TakerOrder storage pointer)"
                      }
                    },
                    "id": 53564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "base",
                      "quote",
                      "partialFillNotAllowed",
                      "selling",
                      "wants",
                      "gives",
                      "makerWants",
                      "makerGives",
                      "restingOrder",
                      "retryNumber",
                      "gasForMarketOrder",
                      "blocksToLiveForRestingOrder"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "11938:370:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11897:411:88"
                },
                {
                  "assignments": [53570],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53570,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "12350:3:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53697,
                      "src": "12314:39:88",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrderResult"
                      },
                      "typeName": {
                        "id": 53569,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53568,
                          "name": "IOrderLogic.TakerOrderResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14274,
                          "src": "12314:28:88"
                        },
                        "referencedDeclaration": 14274,
                        "src": "12314:28:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrderResult_$14274_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrderResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53577,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53575,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53549,
                        "src": "12390:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        ],
                        "expression": {
                          "id": 53571,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52513,
                          "src": "12356:3:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 53572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6440,
                        "src": "12356:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$14263_memory_ptr_$returns$_t_struct$_TakerOrderResult_$14274_memory_ptr_$",
                          "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                        }
                      },
                      "id": 53574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 53573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12372:9:88",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "12356:26:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$14263_memory_ptr_$returns$_t_struct$_TakerOrderResult_$14274_memory_ptr_$value",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 53576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12356:48:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12314:90:88"
                },
                {
                  "assignments": [53579],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53579,
                      "mutability": "mutable",
                      "name": "oldLocalBaseBal",
                      "nameLocation": "12415:15:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53697,
                      "src": "12410:20:88",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53578,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12410:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53586,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53583,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12450:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 53582,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "12448:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 53584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12448:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 53580,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "12433:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 53581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50187,
                      "src": "12433:14:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 53585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12433:23:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12410:46:88"
                },
                {
                  "assignments": [53588],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53588,
                      "mutability": "mutable",
                      "name": "oldRemoteQuoteBal",
                      "nameLocation": "12467:17:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53697,
                      "src": "12462:22:88",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53587,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12462:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53598,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53593,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "12515:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53595,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12524:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 53594,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "12522:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 53596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12522:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 53589,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52513,
                            "src": "12487:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          },
                          "id": 53590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "router",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10914,
                          "src": "12487:10:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AbstractRouter_$16287_$",
                            "typeString": "function () view external returns (contract AbstractRouter)"
                          }
                        },
                        "id": 53591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12487:12:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractRouter_$16287",
                          "typeString": "contract AbstractRouter"
                        }
                      },
                      "id": 53592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "reserveBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16213,
                      "src": "12487:27:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$2050_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,address) view external returns (uint256)"
                      }
                    },
                    "id": 53597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12487:43:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12462:68:88"
                },
                {
                  "assignments": [53600, 53602, 53604, null, 53606],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53600,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "12673:7:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53697,
                      "src": "12668:12:88",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 53599,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12668:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 53602,
                      "mutability": "mutable",
                      "name": "sell_takerGot",
                      "nameLocation": "12693:13:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53697,
                      "src": "12688:18:88",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53601,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12688:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 53604,
                      "mutability": "mutable",
                      "name": "sell_takerGave",
                      "nameLocation": "12719:14:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53697,
                      "src": "12714:19:88",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53603,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12714:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    {
                      "constant": false,
                      "id": 53606,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "12754:3:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53697,
                      "src": "12749:8:88",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53605,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12749:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53613,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 53609,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53570,
                          "src": "12800:3:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrderResult memory"
                          }
                        },
                        "id": 53610,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14273,
                        "src": "12800:11:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e31",
                        "id": 53611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12825:9:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 53607,
                        "name": "sell_taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52522,
                        "src": "12766:10:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$50091",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 53608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "takeWithInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49945,
                      "src": "12766:23:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (bool,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 53612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": ["offerId", "takerWants"],
                    "nodeType": "FunctionCall",
                    "src": "12766:70:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12660:176:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53615,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53600,
                        "src": "12854:7:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52657374696e67206f72646572206661696c6564",
                        "id": 53616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12863:22:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c74dddc76fca47b32193aecbf4f92ee60b2ae508e3c7a412bd7defdd1b8f427",
                          "typeString": "literal_string \"Resting order failed\""
                        },
                        "value": "Resting order failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c74dddc76fca47b32193aecbf4f92ee60b2ae508e3c7a412bd7defdd1b8f427",
                          "typeString": "literal_string \"Resting order failed\""
                        }
                      ],
                      "id": 53614,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "12843:10:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 53617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12843:43:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53618,
                  "nodeType": "ExpressionStatement",
                  "src": "12843:43:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53620,
                        "name": "sell_takerGot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53602,
                        "src": "12930:13:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53623,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45881,
                                "src": "12962:5:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 53622,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "12960:1:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 53624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12960:8:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 53626,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45878,
                                "src": "12972:4:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 53625,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "12970:1:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 53627,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12970:7:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "hexValue": "302e31",
                            "id": 53628,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12979:9:88",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            },
                            "value": "0.1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            }
                          ],
                          "id": 53621,
                          "name": "minusFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46470,
                          "src": "12951:8:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256) view returns (uint256)"
                          }
                        },
                        "id": 53629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12951:38:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f727265637420726563656976656420616d6f756e7420666f722073656c6c65722074616b6572",
                        "id": 53630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12997:44:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3f58ddc9171694ac65d2f3907d9c5a6239a32621fcf66ce9bdb04994d3aadf7",
                          "typeString": "literal_string \"Incorrect received amount for seller taker\""
                        },
                        "value": "Incorrect received amount for seller taker"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3f58ddc9171694ac65d2f3907d9c5a6239a32621fcf66ce9bdb04994d3aadf7",
                          "typeString": "literal_string \"Incorrect received amount for seller taker\""
                        }
                      ],
                      "id": 53619,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "12914:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 53631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12914:133:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53632,
                  "nodeType": "ExpressionStatement",
                  "src": "12914:133:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53637,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "13132:4:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                                  "typeString": "contract MangroveOrder_Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                                  "typeString": "contract MangroveOrder_Test"
                                }
                              ],
                              "id": 53636,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47041,
                              "src": "13130:1:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 53638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13130:7:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 53634,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "13115:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 53635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50187,
                          "src": "13115:14:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13115:23:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 53640,
                          "name": "oldLocalBaseBal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53579,
                          "src": "13146:15:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 53641,
                          "name": "sell_takerGave",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53604,
                          "src": "13164:14:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13146:32:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f727265637420666f7277617264656420616d6f756e7420746f20696e697469616c2074616b6572",
                        "id": 53643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13186:45:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_14a7024dd4f4bb58e39447d6897db1ff970fa0b4afd0080b26583abb92dbe7eb",
                          "typeString": "literal_string \"Incorrect forwarded amount to initial taker\""
                        },
                        "value": "Incorrect forwarded amount to initial taker"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_14a7024dd4f4bb58e39447d6897db1ff970fa0b4afd0080b26583abb92dbe7eb",
                          "typeString": "literal_string \"Incorrect forwarded amount to initial taker\""
                        }
                      ],
                      "id": 53633,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "13099:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 53644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13099:138:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53645,
                  "nodeType": "ExpressionStatement",
                  "src": "13099:138:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53651,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "13288:5:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 53653,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "13297:4:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                                  "typeString": "contract MangroveOrder_Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                                  "typeString": "contract MangroveOrder_Test"
                                }
                              ],
                              "id": 53652,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47041,
                              "src": "13295:1:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 53654,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13295:7:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 53647,
                                "name": "mgo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52513,
                                "src": "13260:3:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                                  "typeString": "contract MangroveOrderEnriched"
                                }
                              },
                              "id": 53648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "router",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10914,
                              "src": "13260:10:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AbstractRouter_$16287_$",
                                "typeString": "function () view external returns (contract AbstractRouter)"
                              }
                            },
                            "id": 53649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13260:12:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractRouter_$16287",
                              "typeString": "contract AbstractRouter"
                            }
                          },
                          "id": 53650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16213,
                          "src": "13260:27:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$2050_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,address) view external returns (uint256)"
                          }
                        },
                        "id": 53655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13260:43:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 53656,
                          "name": "oldRemoteQuoteBal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53588,
                          "src": "13311:17:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 53659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 53657,
                                "name": "sell_takerGot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53602,
                                "src": "13332:13:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 53658,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53606,
                                "src": "13348:3:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13332:19:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 53660,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "13331:21:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13311:41:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f727265637420746f6b656e2062616c616e6365206f6e206d676f",
                        "id": 53662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13360:32:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_34f4c12610b3817679a9a0721589167deaa1bf36e5ce8895dbf882b2d436b44e",
                          "typeString": "literal_string \"Incorrect token balance on mgo\""
                        },
                        "value": "Incorrect token balance on mgo"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_34f4c12610b3817679a9a0721589167deaa1bf36e5ce8895dbf882b2d436b44e",
                          "typeString": "literal_string \"Incorrect token balance on mgo\""
                        }
                      ],
                      "id": 53646,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "13244:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 53663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13244:154:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53664,
                  "nodeType": "ExpressionStatement",
                  "src": "13244:154:88"
                },
                {
                  "assignments": [53670],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53670,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "13454:5:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53697,
                      "src": "13444:15:88",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                        "typeString": "t"
                      },
                      "typeName": {
                        "id": 53669,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53668,
                          "name": "P.Offer.t",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9363,
                          "src": "13444:9:88"
                        },
                        "referencedDeclaration": 9363,
                        "src": "13444:9:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                          "typeString": "t"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53682,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53674,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "13475:5:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53673,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "13473:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13473:8:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53677,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "13485:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53676,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "13483:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13483:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 53679,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53570,
                          "src": "13492:3:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrderResult memory"
                          }
                        },
                        "id": 53680,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14273,
                        "src": "13492:11:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53671,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "13462:3:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 53672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1404,
                      "src": "13462:10:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$9363_$",
                        "typeString": "function (address,address,uint256) view external returns (t)"
                      }
                    },
                    "id": 53681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13462:42:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                      "typeString": "t"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13444:60:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 53684,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53670,
                            "src": "13527:5:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                              "typeString": "t"
                            }
                          },
                          "id": 53685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "gives",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9784,
                          "src": "13527:11:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$9363_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$9363_$",
                            "typeString": "function (t) pure returns (uint256)"
                          }
                        },
                        "id": 53686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13527:13:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 53691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 53687,
                              "name": "buyOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53549,
                              "src": "13548:8:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                                "typeString": "struct IOrderLogic.TakerOrder memory"
                              }
                            },
                            "id": 53688,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "gives",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14252,
                            "src": "13548:14:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "id": 53689,
                              "name": "res",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53570,
                              "src": "13565:3:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                                "typeString": "struct IOrderLogic.TakerOrderResult memory"
                              }
                            },
                            "id": 53690,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "takerGave",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14267,
                            "src": "13565:13:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13548:30:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "302e31",
                          "id": 53692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13581:9:88",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        },
                        "src": "13548:42:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f727265637420676976657320666f72206269642072657374696e67206f72646572",
                        "id": 53694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13598:39:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c357a2212e576c5bafd04f6c90164a56b66e9cc87f2acbf5f244f9b33d17e791",
                          "typeString": "literal_string \"Incorrect gives for bid resting order\""
                        },
                        "value": "Incorrect gives for bid resting order"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c357a2212e576c5bafd04f6c90164a56b66e9cc87f2acbf5f244f9b33d17e791",
                          "typeString": "literal_string \"Incorrect gives for bid resting order\""
                        }
                      ],
                      "id": 53683,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "13511:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 53695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13511:132:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53696,
                  "nodeType": "ExpressionStatement",
                  "src": "13511:132:88"
                }
              ]
            },
            "functionSelector": "cc273483",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_resting_buy_order_can_be_partially_filled",
            "nameLocation": "11795:46:88",
            "parameters": {
              "id": 53543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11841:2:88"
            },
            "returnParameters": {
              "id": 53544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11851:0:88"
            },
            "scope": 54338,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53802,
            "nodeType": "FunctionDefinition",
            "src": "13652:1195:88",
            "body": {
              "id": 53801,
              "nodeType": "Block",
              "src": "13720:1127:88",
              "statements": [
                {
                  "assignments": [53705],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53705,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "13756:8:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53801,
                      "src": "13726:38:88",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder"
                      },
                      "typeName": {
                        "id": 53704,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53703,
                          "name": "IOrderLogic.TakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14263,
                          "src": "13726:22:88"
                        },
                        "referencedDeclaration": 14263,
                        "src": "13726:22:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53721,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53708,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "13804:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 53709,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "13823:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 53710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13859:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 53711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13881:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "32",
                        "id": 53712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13914:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 53713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13936:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "32",
                        "id": 53714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13966:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 53715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13993:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 53716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14025:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "30",
                        "id": 53717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14050:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "365f3530305f303030",
                        "id": 53718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14078:9:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        "value": "6_500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 53719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14124:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 53706,
                        "name": "IOrderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14320,
                        "src": "13767:11:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOrderLogic_$14320_$",
                          "typeString": "type(contract IOrderLogic)"
                        }
                      },
                      "id": 53707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TakerOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14263,
                      "src": "13767:22:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TakerOrder_$14263_storage_ptr_$",
                        "typeString": "type(struct IOrderLogic.TakerOrder storage pointer)"
                      }
                    },
                    "id": 53720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "base",
                      "quote",
                      "partialFillNotAllowed",
                      "selling",
                      "wants",
                      "gives",
                      "makerWants",
                      "makerGives",
                      "restingOrder",
                      "retryNumber",
                      "gasForMarketOrder",
                      "blocksToLiveForRestingOrder"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "13767:370:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13726:411:88"
                },
                {
                  "assignments": [53726],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53726,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "14179:3:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53801,
                      "src": "14143:39:88",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrderResult"
                      },
                      "typeName": {
                        "id": 53725,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53724,
                          "name": "IOrderLogic.TakerOrderResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14274,
                          "src": "14143:28:88"
                        },
                        "referencedDeclaration": 14274,
                        "src": "14143:28:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrderResult_$14274_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrderResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53733,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53731,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53705,
                        "src": "14219:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        ],
                        "expression": {
                          "id": 53727,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52513,
                          "src": "14185:3:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 53728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6440,
                        "src": "14185:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$14263_memory_ptr_$returns$_t_struct$_TakerOrderResult_$14274_memory_ptr_$",
                          "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                        }
                      },
                      "id": 53730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 53729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14201:9:88",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "14185:26:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$14263_memory_ptr_$returns$_t_struct$_TakerOrderResult_$14274_memory_ptr_$value",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 53732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14185:48:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14143:90:88"
                },
                {
                  "assignments": [53735],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53735,
                      "mutability": "mutable",
                      "name": "oldWeiBalance",
                      "nameLocation": "14292:13:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53801,
                      "src": "14287:18:88",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53734,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14287:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53744,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53741,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14344:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 53740,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "14342:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 53742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14342:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 53736,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52513,
                            "src": "14308:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          },
                          "id": 53737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "router",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10914,
                          "src": "14308:10:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AbstractRouter_$16287_$",
                            "typeString": "function () view external returns (contract AbstractRouter)"
                          }
                        },
                        "id": 53738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14308:12:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractRouter_$16287",
                          "typeString": "contract AbstractRouter"
                        }
                      },
                      "id": 53739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "reserveNativeBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16220,
                      "src": "14308:33:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 53743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14308:42:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14287:63:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53749,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "14455:5:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53748,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "14453:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14453:8:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53752,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "14465:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53751,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "14463:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14463:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 53754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14472:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 53745,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "14438:3:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 53747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDensity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1151,
                      "src": "14438:14:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 53755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14438:42:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53756,
                  "nodeType": "ExpressionStatement",
                  "src": "14438:42:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53759,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "14499:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 53758,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "14497:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 53760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14497:6:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 53757,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "14486:10:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 53761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14486:18:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53762,
                  "nodeType": "ExpressionStatement",
                  "src": "14486:18:88"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53765,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "14530:5:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53764,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "14528:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14528:8:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53768,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "14540:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 53767,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "14538:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 53769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14538:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 53770,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53726,
                          "src": "14547:3:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrderResult memory"
                          }
                        },
                        "id": 53771,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14273,
                        "src": "14547:11:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53763,
                      "name": "OfferRetract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1913,
                      "src": "14515:12:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 53772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14515:44:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53773,
                  "nodeType": "EmitStatement",
                  "src": "14510:49:88"
                },
                {
                  "assignments": [53775, null, null, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53775,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "14571:7:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53801,
                      "src": "14566:12:88",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 53774,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "14566:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 53782,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 53778,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53726,
                          "src": "14631:3:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrderResult memory"
                          }
                        },
                        "id": 53779,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14273,
                        "src": "14631:11:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 53780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14662:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 53776,
                        "name": "sell_taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52522,
                        "src": "14590:10:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$50091",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 53777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "takeWithInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49945,
                      "src": "14590:23:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (bool,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 53781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": ["offerId", "takerWants"],
                    "nodeType": "FunctionCall",
                    "src": "14590:80:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14565:105:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53784,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53775,
                        "src": "14687:7:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "736e697065206661696c6564",
                        "id": 53785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14696:14:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e5b8d2378626d33dc62f40422d0949058b0e7703d932017008fb45be9f64c408",
                          "typeString": "literal_string \"snipe failed\""
                        },
                        "value": "snipe failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e5b8d2378626d33dc62f40422d0949058b0e7703d932017008fb45be9f64c408",
                          "typeString": "literal_string \"snipe failed\""
                        }
                      ],
                      "id": 53783,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "14676:10:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 53786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14676:35:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53787,
                  "nodeType": "ExpressionStatement",
                  "src": "14676:35:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53794,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "14769:4:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                                  "typeString": "contract MangroveOrder_Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                                  "typeString": "contract MangroveOrder_Test"
                                }
                              ],
                              "id": 53793,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47041,
                              "src": "14767:1:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 53795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14767:7:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 53789,
                                "name": "mgo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52513,
                                "src": "14733:3:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                                  "typeString": "contract MangroveOrderEnriched"
                                }
                              },
                              "id": 53790,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "router",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10914,
                              "src": "14733:10:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AbstractRouter_$16287_$",
                                "typeString": "function () view external returns (contract AbstractRouter)"
                              }
                            },
                            "id": 53791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14733:12:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractRouter_$16287",
                              "typeString": "contract AbstractRouter"
                            }
                          },
                          "id": 53792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveNativeBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16220,
                          "src": "14733:33:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14733:42:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53797,
                        "name": "oldWeiBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53735,
                        "src": "14783:13:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "726574726163742073686f756c64206e6f7420646570726f766973696f6e",
                        "id": 53798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14804:32:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eda4c20443e05d0efe5e83749c78daef1cf80b8a061dd00adfc533e594ed5d13",
                          "typeString": "literal_string \"retract should not deprovision\""
                        },
                        "value": "retract should not deprovision"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eda4c20443e05d0efe5e83749c78daef1cf80b8a061dd00adfc533e594ed5d13",
                          "typeString": "literal_string \"retract should not deprovision\""
                        }
                      ],
                      "id": 53788,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "14717:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 53799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14717:125:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53800,
                  "nodeType": "ExpressionStatement",
                  "src": "14717:125:88"
                }
              ]
            },
            "functionSelector": "98ec3a97",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_resting_offer_retracts_when_unable_to_repost",
            "nameLocation": "13661:49:88",
            "parameters": {
              "id": 53699,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13710:2:88"
            },
            "returnParameters": {
              "id": 53700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13720:0:88"
            },
            "scope": 54338,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53876,
            "nodeType": "FunctionDefinition",
            "src": "14851:859:88",
            "body": {
              "id": 53875,
              "nodeType": "Block",
              "src": "14905:805:88",
              "statements": [
                {
                  "assignments": [53809],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53809,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "14941:8:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53875,
                      "src": "14911:38:88",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder"
                      },
                      "typeName": {
                        "id": 53808,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53807,
                          "name": "IOrderLogic.TakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14263,
                          "src": "14911:22:88"
                        },
                        "referencedDeclaration": 14263,
                        "src": "14911:22:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53825,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53812,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "14989:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 53813,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "15008:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 53814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15044:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 53815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15066:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "32",
                        "id": 53816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15099:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 53817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15121:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "32",
                        "id": 53818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15151:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 53819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15178:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 53820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15210:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "30",
                        "id": 53821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15235:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "365f3530305f303030",
                        "id": 53822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15263:9:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        "value": "6_500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 53823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15309:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 53810,
                        "name": "IOrderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14320,
                        "src": "14952:11:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOrderLogic_$14320_$",
                          "typeString": "type(contract IOrderLogic)"
                        }
                      },
                      "id": 53811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TakerOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14263,
                      "src": "14952:22:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TakerOrder_$14263_storage_ptr_$",
                        "typeString": "type(struct IOrderLogic.TakerOrder storage pointer)"
                      }
                    },
                    "id": 53824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "base",
                      "quote",
                      "partialFillNotAllowed",
                      "selling",
                      "wants",
                      "gives",
                      "makerWants",
                      "makerGives",
                      "restingOrder",
                      "retryNumber",
                      "gasForMarketOrder",
                      "blocksToLiveForRestingOrder"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "14952:370:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14911:411:88"
                },
                {
                  "assignments": [53830],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53830,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "15364:3:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53875,
                      "src": "15328:39:88",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrderResult"
                      },
                      "typeName": {
                        "id": 53829,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53828,
                          "name": "IOrderLogic.TakerOrderResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14274,
                          "src": "15328:28:88"
                        },
                        "referencedDeclaration": 14274,
                        "src": "15328:28:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrderResult_$14274_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrderResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53837,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53835,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53809,
                        "src": "15404:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        ],
                        "expression": {
                          "id": 53831,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52513,
                          "src": "15370:3:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 53832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6440,
                        "src": "15370:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$14263_memory_ptr_$returns$_t_struct$_TakerOrderResult_$14274_memory_ptr_$",
                          "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                        }
                      },
                      "id": 53834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 53833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15386:9:88",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "15370:26:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$14263_memory_ptr_$returns$_t_struct$_TakerOrderResult_$14274_memory_ptr_$value",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 53836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15370:48:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15328:90:88"
                },
                {
                  "assignments": [53839],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53839,
                      "mutability": "mutable",
                      "name": "userWeiBalanceOld",
                      "nameLocation": "15429:17:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53875,
                      "src": "15424:22:88",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53838,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15424:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53848,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53845,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "15485:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 53844,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "15483:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 53846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15483:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 53840,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52513,
                            "src": "15449:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          },
                          "id": 53841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "router",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10914,
                          "src": "15449:10:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AbstractRouter_$16287_$",
                            "typeString": "function () view external returns (contract AbstractRouter)"
                          }
                        },
                        "id": 53842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15449:12:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractRouter_$16287",
                          "typeString": "contract AbstractRouter"
                        }
                      },
                      "id": 53843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "reserveNativeBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16220,
                      "src": "15449:33:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 53847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15449:42:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15424:67:88"
                },
                {
                  "assignments": [53850],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53850,
                      "mutability": "mutable",
                      "name": "credited",
                      "nameLocation": "15502:8:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 53875,
                      "src": "15497:13:88",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53849,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15497:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53859,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53853,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "15530:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 53854,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "15537:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "expression": {
                          "id": 53855,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53830,
                          "src": "15543:3:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrderResult memory"
                          }
                        },
                        "id": 53856,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14273,
                        "src": "15543:11:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 53857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15556:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 53851,
                        "name": "mgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52513,
                        "src": "15513:3:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                          "typeString": "contract MangroveOrderEnriched"
                        }
                      },
                      "id": 53852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "retractOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15121,
                      "src": "15513:16:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$2050_$_t_contract$_IERC20_$2050_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint256,bool) external returns (uint256)"
                      }
                    },
                    "id": 53858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15513:48:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15497:64:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53866,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "15619:4:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                                  "typeString": "contract MangroveOrder_Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                                  "typeString": "contract MangroveOrder_Test"
                                }
                              ],
                              "id": 53865,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47041,
                              "src": "15617:1:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 53867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15617:7:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 53861,
                                "name": "mgo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52513,
                                "src": "15583:3:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                                  "typeString": "contract MangroveOrderEnriched"
                                }
                              },
                              "id": 53862,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "router",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10914,
                              "src": "15583:10:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AbstractRouter_$16287_$",
                                "typeString": "function () view external returns (contract AbstractRouter)"
                              }
                            },
                            "id": 53863,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15583:12:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractRouter_$16287",
                              "typeString": "contract AbstractRouter"
                            }
                          },
                          "id": 53864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reserveNativeBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16220,
                          "src": "15583:33:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15583:42:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 53869,
                          "name": "userWeiBalanceOld",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53839,
                          "src": "15633:17:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 53870,
                          "name": "credited",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53850,
                          "src": "15653:8:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15633:28:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f72726563742070726f766973696f6e207265636569766564",
                        "id": 53872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15669:30:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2875c8791dd723a11f0ab8efa788c63cd9309915e519f55049bbe7a0ca000e7b",
                          "typeString": "literal_string \"Incorrect provision received\""
                        },
                        "value": "Incorrect provision received"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2875c8791dd723a11f0ab8efa788c63cd9309915e519f55049bbe7a0ca000e7b",
                          "typeString": "literal_string \"Incorrect provision received\""
                        }
                      ],
                      "id": 53860,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "15567:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 53873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15567:138:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53874,
                  "nodeType": "ExpressionStatement",
                  "src": "15567:138:88"
                }
              ]
            },
            "functionSelector": "026f7423",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_user_can_retract_resting_offer",
            "nameLocation": "14860:35:88",
            "parameters": {
              "id": 53803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14895:2:88"
            },
            "returnParameters": {
              "id": 53804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14905:0:88"
            },
            "scope": 54338,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 54012,
            "nodeType": "FunctionDefinition",
            "src": "15714:1599:88",
            "body": {
              "id": 54011,
              "nodeType": "Block",
              "src": "15790:1523:88",
              "statements": [
                {
                  "assignments": [53883],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53883,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "15826:8:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 54011,
                      "src": "15796:38:88",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder"
                      },
                      "typeName": {
                        "id": 53882,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53881,
                          "name": "IOrderLogic.TakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14263,
                          "src": "15796:22:88"
                        },
                        "referencedDeclaration": 14263,
                        "src": "15796:22:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53899,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53886,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "15874:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 53887,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "15893:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 53888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15929:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 53889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15951:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "32",
                        "id": 53890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15984:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 53891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16006:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "32",
                        "id": 53892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16036:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 53893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16063:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 53894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16095:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "30",
                        "id": 53895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16120:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "365f3530305f303030",
                        "id": 53896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16148:9:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        "value": "6_500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 53897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16194:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 53884,
                        "name": "IOrderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14320,
                        "src": "15837:11:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOrderLogic_$14320_$",
                          "typeString": "type(contract IOrderLogic)"
                        }
                      },
                      "id": 53885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TakerOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14263,
                      "src": "15837:22:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TakerOrder_$14263_storage_ptr_$",
                        "typeString": "type(struct IOrderLogic.TakerOrder storage pointer)"
                      }
                    },
                    "id": 53898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "base",
                      "quote",
                      "partialFillNotAllowed",
                      "selling",
                      "wants",
                      "gives",
                      "makerWants",
                      "makerGives",
                      "restingOrder",
                      "retryNumber",
                      "gasForMarketOrder",
                      "blocksToLiveForRestingOrder"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "15837:370:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15796:411:88"
                },
                {
                  "assignments": [53901],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53901,
                      "mutability": "mutable",
                      "name": "provision",
                      "nameLocation": "16219:9:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 54011,
                      "src": "16214:14:88",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53900,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16214:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53903,
                  "initialValue": {
                    "hexValue": "35",
                    "id": 53902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "16231:7:88",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_5000000000000000000_by_1",
                      "typeString": "int_const 5000000000000000000"
                    },
                    "value": "5"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16214:24:88"
                },
                {
                  "assignments": [53908],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53908,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "16280:3:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 54011,
                      "src": "16244:39:88",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrderResult"
                      },
                      "typeName": {
                        "id": 53907,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53906,
                          "name": "IOrderLogic.TakerOrderResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14274,
                          "src": "16244:28:88"
                        },
                        "referencedDeclaration": 14274,
                        "src": "16244:28:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrderResult_$14274_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrderResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53915,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53913,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53883,
                        "src": "16320:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        ],
                        "expression": {
                          "id": 53909,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52513,
                          "src": "16286:3:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 53910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6440,
                        "src": "16286:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$14263_memory_ptr_$returns$_t_struct$_TakerOrderResult_$14274_memory_ptr_$",
                          "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                        }
                      },
                      "id": 53912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 53911,
                          "name": "provision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53901,
                          "src": "16302:9:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "16286:26:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$14263_memory_ptr_$returns$_t_struct$_TakerOrderResult_$14274_memory_ptr_$value",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 53914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16286:48:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16244:90:88"
                },
                {
                  "assignments": [53917],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53917,
                      "mutability": "mutable",
                      "name": "native_reserve_before",
                      "nameLocation": "16382:21:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 54011,
                      "src": "16377:26:88",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53916,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16377:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53926,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53923,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "16442:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 53922,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "16440:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 53924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16440:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 53918,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52513,
                            "src": "16406:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          },
                          "id": 53919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "router",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10914,
                          "src": "16406:10:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AbstractRouter_$16287_$",
                            "typeString": "function () view external returns (contract AbstractRouter)"
                          }
                        },
                        "id": 53920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16406:12:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractRouter_$16287",
                          "typeString": "contract AbstractRouter"
                        }
                      },
                      "id": 53921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "reserveNativeBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16220,
                      "src": "16406:33:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 53925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16406:42:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16377:71:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 53931,
                                "name": "mgo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52513,
                                "src": "16547:3:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                                  "typeString": "contract MangroveOrderEnriched"
                                }
                              },
                              "id": 53932,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "router",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10914,
                              "src": "16547:10:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AbstractRouter_$16287_$",
                                "typeString": "function () view external returns (contract AbstractRouter)"
                              }
                            },
                            "id": 53933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16547:12:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractRouter_$16287",
                              "typeString": "contract AbstractRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractRouter_$16287",
                              "typeString": "contract AbstractRouter"
                            }
                          ],
                          "id": 53930,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47007,
                          "src": "16545:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AccessControlled_$20247_$returns$_t_address_payable_$",
                            "typeString": "function (contract AccessControlled) pure returns (address payable)"
                          }
                        },
                        "id": 53934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16545:15:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 53935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16562:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 53927,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "16531:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 53929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "16531:13:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 53936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16531:33:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53937,
                  "nodeType": "ExpressionStatement",
                  "src": "16531:33:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 53942,
                                "name": "mgo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52513,
                                "src": "16585:3:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                                  "typeString": "contract MangroveOrderEnriched"
                                }
                              },
                              "id": 53943,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "router",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10914,
                              "src": "16585:10:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AbstractRouter_$16287_$",
                                "typeString": "function () view external returns (contract AbstractRouter)"
                              }
                            },
                            "id": 53944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16585:12:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractRouter_$16287",
                              "typeString": "contract AbstractRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractRouter_$16287",
                              "typeString": "contract AbstractRouter"
                            }
                          ],
                          "id": 53941,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47007,
                          "src": "16583:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AccessControlled_$20247_$returns$_t_address_payable_$",
                            "typeString": "function (contract AccessControlled) pure returns (address payable)"
                          }
                        },
                        "id": 53945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16583:15:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 53946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16600:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 53938,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "16570:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 53940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50944,
                      "src": "16570:12:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 53947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16570:32:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53948,
                  "nodeType": "ExpressionStatement",
                  "src": "16570:32:88"
                },
                {
                  "assignments": [null, null, null, 53950, null],
                  "declarations": [
                    null,
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 53950,
                      "mutability": "mutable",
                      "name": "bounty",
                      "nameLocation": "16621:6:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 54011,
                      "src": "16616:11:88",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53949,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16616:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 53957,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 53953,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53908,
                          "src": "16674:3:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrderResult memory"
                          }
                        },
                        "id": 53954,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14273,
                        "src": "16674:11:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 53955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16705:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 53951,
                        "name": "sell_taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52522,
                        "src": "16633:10:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$50091",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 53952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "takeWithInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49945,
                      "src": "16633:23:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (bool,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 53956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": ["offerId", "takerWants"],
                    "nodeType": "FunctionCall",
                    "src": "16633:80:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16609:104:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 53959,
                          "name": "bounty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53950,
                          "src": "16730:6:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 53960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16739:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "16730:10:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "736e6970652073686f756c642068617665206661696c6564",
                        "id": 53962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16742:26:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3af53249debbe6f24d094ddf5bdc5196aa118572c68db3532f55dedccca002e6",
                          "typeString": "literal_string \"snipe should have failed\""
                        },
                        "value": "snipe should have failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3af53249debbe6f24d094ddf5bdc5196aa118572c68db3532f55dedccca002e6",
                          "typeString": "literal_string \"snipe should have failed\""
                        }
                      ],
                      "id": 53958,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "16719:10:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 53963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16719:50:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53964,
                  "nodeType": "ExpressionStatement",
                  "src": "16719:50:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53968,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "16829:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 53969,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "16836:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "expression": {
                          "id": 53970,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53908,
                          "src": "16842:3:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrderResult memory"
                          }
                        },
                        "id": 53971,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14273,
                        "src": "16842:11:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 53972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16855:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 53965,
                        "name": "mgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52513,
                        "src": "16812:3:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                          "typeString": "contract MangroveOrderEnriched"
                        }
                      },
                      "id": 53967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "retractOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15121,
                      "src": "16812:16:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$2050_$_t_contract$_IERC20_$2050_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint256,bool) external returns (uint256)"
                      }
                    },
                    "id": 53973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16812:48:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 53974,
                  "nodeType": "ExpressionStatement",
                  "src": "16812:48:88"
                },
                {
                  "assignments": [53976],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53976,
                      "mutability": "mutable",
                      "name": "native_reserve_after",
                      "nameLocation": "16871:20:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 54011,
                      "src": "16866:25:88",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53975,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16866:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53985,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53982,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "16930:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 53981,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "16928:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 53983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16928:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 53977,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52513,
                            "src": "16894:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          },
                          "id": 53978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "router",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10914,
                          "src": "16894:10:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AbstractRouter_$16287_$",
                            "typeString": "function () view external returns (contract AbstractRouter)"
                          }
                        },
                        "id": 53979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16894:12:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractRouter_$16287",
                          "typeString": "contract AbstractRouter"
                        }
                      },
                      "id": 53980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "reserveNativeBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16220,
                      "src": "16894:33:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 53984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16894:42:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16866:70:88"
                },
                {
                  "assignments": [53987],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53987,
                      "mutability": "mutable",
                      "name": "userReleasedProvision",
                      "nameLocation": "16947:21:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 54011,
                      "src": "16942:26:88",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53986,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16942:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53991,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 53990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 53988,
                      "name": "native_reserve_after",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53976,
                      "src": "16971:20:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 53989,
                      "name": "native_reserve_before",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53917,
                      "src": "16994:21:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16971:44:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16942:73:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 53993,
                          "name": "userReleasedProvision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53987,
                          "src": "17032:21:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 53994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17056:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "17032:25:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2072656c65617365642070726f766973696f6e",
                        "id": 53996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17059:23:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d410cdf9ef11191e5e177387980c49728b2970158a735de605c3a0ebc957ace4",
                          "typeString": "literal_string \"No released provision\""
                        },
                        "value": "No released provision"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d410cdf9ef11191e5e177387980c49728b2970158a735de605c3a0ebc957ace4",
                          "typeString": "literal_string \"No released provision\""
                        }
                      ],
                      "id": 53992,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "17021:10:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 53997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17021:62:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53998,
                  "nodeType": "ExpressionStatement",
                  "src": "17021:62:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 54006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 54003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 54000,
                                "name": "provision",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53901,
                                "src": "17200:9:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "expression": {
                                  "id": 54001,
                                  "name": "res",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53908,
                                  "src": "17212:3:88",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                                    "typeString": "struct IOrderLogic.TakerOrderResult memory"
                                  }
                                },
                                "id": 54002,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "bounty",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14269,
                                "src": "17212:10:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "17200:22:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 54004,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "17199:24:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 54005,
                          "name": "userReleasedProvision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53987,
                          "src": "17226:21:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17199:48:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 54007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17255:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "696e76616c696420616d6f756e74206f662072656c65617365642070726f766973696f6e",
                        "id": 54008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17264:38:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a88eb7356d3a23f299babf18529a5212d00489f9a1d2470e4e358b12193ec6b8",
                          "typeString": "literal_string \"invalid amount of released provision\""
                        },
                        "value": "invalid amount of released provision"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a88eb7356d3a23f299babf18529a5212d00489f9a1d2470e4e358b12193ec6b8",
                          "typeString": "literal_string \"invalid amount of released provision\""
                        }
                      ],
                      "id": 53999,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "17183:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 54009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17183:125:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54010,
                  "nodeType": "ExpressionStatement",
                  "src": "17183:125:88"
                }
              ]
            },
            "functionSelector": "11d70a7d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_failing_resting_offer_releases_uncollected_provision",
            "nameLocation": "15723:57:88",
            "parameters": {
              "id": 53877,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15780:2:88"
            },
            "returnParameters": {
              "id": 53878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15790:0:88"
            },
            "scope": 54338,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 54179,
            "nodeType": "FunctionDefinition",
            "src": "17317:1382:88",
            "body": {
              "id": 54178,
              "nodeType": "Block",
              "src": "17373:1326:88",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 54018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17402:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 54015,
                        "name": "ask_maker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52519,
                        "src": "17379:9:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 54017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "shouldRepost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48995,
                      "src": "17379:22:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 54019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17379:28:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54020,
                  "nodeType": "ExpressionStatement",
                  "src": "17379:28:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54023,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "17426:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 54022,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "17424:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 54024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17424:6:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 54021,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "17413:10:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 54025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17413:18:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54026,
                  "nodeType": "ExpressionStatement",
                  "src": "17413:18:88"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54029,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "17465:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 54028,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "17463:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 54030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17463:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 54032,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "17480:5:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 54031,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "17478:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 54033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17478:8:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 54035,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52513,
                            "src": "17496:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          ],
                          "id": 54034,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47007,
                          "src": "17494:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AccessControlled_$20247_$returns$_t_address_payable_$",
                            "typeString": "function (contract AccessControlled) pure returns (address payable)"
                          }
                        },
                        "id": 54036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17494:6:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 54039,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45878,
                                "src": "17519:4:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 54038,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "17517:1:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 54040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17517:7:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 54042,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45881,
                                "src": "17528:5:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 54041,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "17526:1:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 54043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17526:8:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 54044,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17536:7:88",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "id": 54037,
                          "name": "minusFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46470,
                          "src": "17508:8:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256) view returns (uint256)"
                          }
                        },
                        "id": 54045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17508:36:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e3133",
                        "id": 54046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17552:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        "value": "0.13"
                      },
                      {
                        "hexValue": "30",
                        "id": 54047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17570:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 54050,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45878,
                                "src": "17588:4:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 54049,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "17586:1:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 54051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17586:7:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 54053,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45881,
                                "src": "17597:5:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 54052,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "17595:1:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 54054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17595:8:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 54055,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17605:7:88",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "id": 54048,
                          "name": "getFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46434,
                          "src": "17579:6:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256) view returns (uint256)"
                          }
                        },
                        "id": 54056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17579:34:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 54027,
                      "name": "OrderComplete",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1831,
                      "src": "17442:13:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 54057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17442:177:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54058,
                  "nodeType": "EmitStatement",
                  "src": "17437:182:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54061,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "17638:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 54060,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "17636:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 54062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17636:6:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 54059,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "17625:10:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 54063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17625:18:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54064,
                  "nodeType": "ExpressionStatement",
                  "src": "17625:18:88"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54067,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "17677:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 54066,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "17675:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 54068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17675:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 54070,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "17692:5:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 54069,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "17690:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 54071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17690:8:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 54073,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52513,
                            "src": "17708:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          ],
                          "id": 54072,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47007,
                          "src": "17706:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AccessControlled_$20247_$returns$_t_address_payable_$",
                            "typeString": "function (contract AccessControlled) pure returns (address payable)"
                          }
                        },
                        "id": 54074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17706:6:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 54077,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45878,
                                "src": "17731:4:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 54076,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "17729:1:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 54078,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17729:7:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 54080,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45881,
                                "src": "17740:5:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 54079,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "17738:1:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 54081,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17738:8:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 54082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17748:7:88",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "id": 54075,
                          "name": "minusFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46470,
                          "src": "17720:8:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256) view returns (uint256)"
                          }
                        },
                        "id": 54083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17720:36:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e3133",
                        "id": 54084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17764:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        "value": "0.13"
                      },
                      {
                        "hexValue": "30",
                        "id": 54085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17782:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 54088,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45878,
                                "src": "17800:4:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 54087,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "17798:1:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 54089,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17798:7:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 54091,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45881,
                                "src": "17809:5:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 54090,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "17807:1:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 54092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17807:8:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 54093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17817:7:88",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "id": 54086,
                          "name": "getFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46434,
                          "src": "17791:6:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256) view returns (uint256)"
                          }
                        },
                        "id": 54094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17791:34:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_130000000000000000_by_1",
                          "typeString": "int_const 130000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 54065,
                      "name": "OrderComplete",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1831,
                      "src": "17654:13:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 54095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17654:177:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54096,
                  "nodeType": "EmitStatement",
                  "src": "17649:182:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54099,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52513,
                            "src": "17850:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          ],
                          "id": 54098,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47007,
                          "src": "17848:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AccessControlled_$20247_$returns$_t_address_payable_$",
                            "typeString": "function (contract AccessControlled) pure returns (address payable)"
                          }
                        },
                        "id": 54100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17848:6:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 54097,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "17837:10:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 54101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17837:18:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54102,
                  "nodeType": "ExpressionStatement",
                  "src": "17837:18:88"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 54107,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45875,
                                "src": "17904:3:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                  "typeString": "contract AbstractMangrove"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                  "typeString": "contract AbstractMangrove"
                                }
                              ],
                              "id": 54106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17896:8:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 54105,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "17896:8:88",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 54108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17896:12:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 54104,
                          "name": "IMangrove",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 645,
                          "src": "17886:9:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMangrove_$645_$",
                            "typeString": "type(contract IMangrove)"
                          }
                        },
                        "id": 54109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17886:23:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMangrove_$645",
                          "typeString": "contract IMangrove"
                        }
                      },
                      {
                        "id": 54110,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "17917:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 54111,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "17929:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 54113,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "17944:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 54112,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "17942:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 54114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17942:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 54115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17957:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 54118,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45878,
                                "src": "17981:4:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 54117,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "17979:1:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 54119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17979:7:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 54121,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45881,
                                "src": "17990:5:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 54120,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "17988:1:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 54122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17988:8:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "hexValue": "32",
                            "id": 54123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17998:7:88",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2000000000000000000_by_1",
                              "typeString": "int_const 2000000000000000000"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_rational_2000000000000000000_by_1",
                              "typeString": "int_const 2000000000000000000"
                            }
                          ],
                          "id": 54116,
                          "name": "minusFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46470,
                          "src": "17970:8:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256) view returns (uint256)"
                          }
                        },
                        "id": 54124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17970:36:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 54125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18014:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "30",
                        "id": 54126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18032:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 54127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18041:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IMangrove_$645",
                          "typeString": "contract IMangrove"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 54103,
                      "name": "OrderSummary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52510,
                      "src": "17866:12:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IMangrove_$645_$_t_contract$_IERC20_$2050_$_t_contract$_IERC20_$2050_$_t_address_$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IMangrove,contract IERC20,contract IERC20,address,bool,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 54128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17866:182:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54129,
                  "nodeType": "EmitStatement",
                  "src": "17861:187:88"
                },
                {
                  "assignments": [54134],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54134,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "18084:8:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 54178,
                      "src": "18054:38:88",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder"
                      },
                      "typeName": {
                        "id": 54133,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54132,
                          "name": "IOrderLogic.TakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14263,
                          "src": "18054:22:88"
                        },
                        "referencedDeclaration": 14263,
                        "src": "18054:22:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54150,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54137,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "18132:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 54138,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "18151:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 54139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18187:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 54140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18209:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "32",
                        "id": 54141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18242:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 54142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18264:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "32",
                        "id": 54143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18294:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e3236",
                        "id": 54144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18321:10:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        "value": "0.26"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 54145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18353:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "31",
                        "id": 54146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18378:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "365f3530305f303030",
                        "id": 54147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18406:9:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        "value": "6_500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 54148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18452:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_260000000000000000_by_1",
                          "typeString": "int_const 260000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 54135,
                        "name": "IOrderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14320,
                        "src": "18095:11:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOrderLogic_$14320_$",
                          "typeString": "type(contract IOrderLogic)"
                        }
                      },
                      "id": 54136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TakerOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14263,
                      "src": "18095:22:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TakerOrder_$14263_storage_ptr_$",
                        "typeString": "type(struct IOrderLogic.TakerOrder storage pointer)"
                      }
                    },
                    "id": 54149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "base",
                      "quote",
                      "partialFillNotAllowed",
                      "selling",
                      "wants",
                      "gives",
                      "makerWants",
                      "makerGives",
                      "restingOrder",
                      "retryNumber",
                      "gasForMarketOrder",
                      "blocksToLiveForRestingOrder"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "18095:370:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18054:411:88"
                },
                {
                  "assignments": [54155],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54155,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "18507:3:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 54178,
                      "src": "18471:39:88",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrderResult"
                      },
                      "typeName": {
                        "id": 54154,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54153,
                          "name": "IOrderLogic.TakerOrderResult",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14274,
                          "src": "18471:28:88"
                        },
                        "referencedDeclaration": 14274,
                        "src": "18471:28:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrderResult_$14274_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrderResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54162,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54160,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54134,
                        "src": "18547:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        ],
                        "expression": {
                          "id": 54156,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52513,
                          "src": "18513:3:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 54157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6440,
                        "src": "18513:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$14263_memory_ptr_$returns$_t_struct$_TakerOrderResult_$14274_memory_ptr_$",
                          "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                        }
                      },
                      "id": 54159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 54158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18529:9:88",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "18513:26:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$14263_memory_ptr_$returns$_t_struct$_TakerOrderResult_$14274_memory_ptr_$value",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 54161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18513:48:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18471:90:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 54164,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54155,
                          "src": "18583:3:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrderResult memory"
                          }
                        },
                        "id": 54165,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "takerGot",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14265,
                        "src": "18583:12:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 54168,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45878,
                                "src": "18614:4:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 54167,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "18612:1:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 54169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18612:7:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 54171,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45881,
                                "src": "18623:5:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 54170,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "18621:1:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 54172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18621:8:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "hexValue": "32",
                            "id": 54173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18631:7:88",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2000000000000000000_by_1",
                              "typeString": "int_const 2000000000000000000"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_rational_2000000000000000000_by_1",
                              "typeString": "int_const 2000000000000000000"
                            }
                          ],
                          "id": 54166,
                          "name": "minusFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46470,
                          "src": "18603:8:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256) view returns (uint256)"
                          }
                        },
                        "id": 54174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18603:36:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "497465726174697665206d61726b6574206f7264657220776173206e6f7420636f6d706c657465",
                        "id": 54175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18647:41:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8579a38e5e56bb88374fd0936cf33774653b317d69fb91812634a933b2585868",
                          "typeString": "literal_string \"Iterative market order was not complete\""
                        },
                        "value": "Iterative market order was not complete"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8579a38e5e56bb88374fd0936cf33774653b317d69fb91812634a933b2585868",
                          "typeString": "literal_string \"Iterative market order was not complete\""
                        }
                      ],
                      "id": 54163,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "18567:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 54176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18567:127:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54177,
                  "nodeType": "ExpressionStatement",
                  "src": "18567:127:88"
                }
              ]
            },
            "functionSelector": "5c36d7f6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_iterative_market_order_completes",
            "nameLocation": "17326:37:88",
            "parameters": {
              "id": 54013,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17363:2:88"
            },
            "returnParameters": {
              "id": 54014,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17373:0:88"
            },
            "scope": 54338,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 54337,
            "nodeType": "FunctionDefinition",
            "src": "18703:1412:88",
            "body": {
              "id": 54336,
              "nodeType": "Block",
              "src": "18745:1370:88",
              "statements": [
                {
                  "assignments": [54186],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54186,
                      "mutability": "mutable",
                      "name": "buyOrder",
                      "nameLocation": "18781:8:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 54336,
                      "src": "18751:38:88",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder"
                      },
                      "typeName": {
                        "id": 54185,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54184,
                          "name": "IOrderLogic.TakerOrder",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14263,
                          "src": "18751:22:88"
                        },
                        "referencedDeclaration": 14263,
                        "src": "18751:22:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_storage_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54202,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54189,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "18829:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 54190,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "18848:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 54191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18884:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 54192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18906:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "32",
                        "id": 54193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18926:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e31",
                        "id": 54194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18948:9:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      },
                      {
                        "hexValue": "32",
                        "id": 54195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18977:7:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "302e31",
                        "id": 54196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19004:9:88",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 54197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19035:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "31",
                        "id": 54198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19060:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "365f3530305f303030",
                        "id": 54199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19088:9:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        "value": "6_500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 54200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19134:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_6500000_by_1",
                          "typeString": "int_const 6500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 54187,
                        "name": "IOrderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14320,
                        "src": "18792:11:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IOrderLogic_$14320_$",
                          "typeString": "type(contract IOrderLogic)"
                        }
                      },
                      "id": 54188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TakerOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14263,
                      "src": "18792:22:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TakerOrder_$14263_storage_ptr_$",
                        "typeString": "type(struct IOrderLogic.TakerOrder storage pointer)"
                      }
                    },
                    "id": 54201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "base",
                      "quote",
                      "partialFillNotAllowed",
                      "selling",
                      "wants",
                      "gives",
                      "makerWants",
                      "makerGives",
                      "restingOrder",
                      "retryNumber",
                      "gasForMarketOrder",
                      "blocksToLiveForRestingOrder"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "18792:355:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18751:396:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54205,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52513,
                            "src": "19166:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          ],
                          "id": 54204,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47007,
                          "src": "19164:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AccessControlled_$20247_$returns$_t_address_payable_$",
                            "typeString": "function (contract AccessControlled) pure returns (address payable)"
                          }
                        },
                        "id": 54206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19164:6:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 54203,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "19153:10:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 54207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19153:18:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54208,
                  "nodeType": "ExpressionStatement",
                  "src": "19153:18:88"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 54213,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45875,
                                "src": "19220:3:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                  "typeString": "contract AbstractMangrove"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                  "typeString": "contract AbstractMangrove"
                                }
                              ],
                              "id": 54212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "19212:8:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 54211,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "19212:8:88",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 54214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19212:12:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 54210,
                          "name": "IMangrove",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 645,
                          "src": "19202:9:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMangrove_$645_$",
                            "typeString": "type(contract IMangrove)"
                          }
                        },
                        "id": 54215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19202:23:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMangrove_$645",
                          "typeString": "contract IMangrove"
                        }
                      },
                      {
                        "id": 54216,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "19233:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 54217,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "19245:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 54219,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "19260:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 54218,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "19258:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 54220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19258:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 54221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19273:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "30",
                        "id": 54222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19286:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 54223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19295:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 54224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19304:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "34",
                        "id": 54225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19313:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IMangrove_$645",
                          "typeString": "contract IMangrove"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "id": 54209,
                      "name": "OrderSummary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52510,
                      "src": "19182:12:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IMangrove_$645_$_t_contract$_IERC20_$2050_$_t_contract$_IERC20_$2050_$_t_address_$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IMangrove,contract IERC20,contract IERC20,address,bool,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 54226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19182:199:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54227,
                  "nodeType": "EmitStatement",
                  "src": "19177:204:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54233,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54186,
                        "src": "19414:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        ],
                        "expression": {
                          "id": 54228,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52513,
                          "src": "19387:3:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 54230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6440,
                        "src": "19387:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$14263_memory_ptr_$returns$_t_struct$_TakerOrderResult_$14274_memory_ptr_$",
                          "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                        }
                      },
                      "id": 54232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 54231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19403:9:88",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "19387:26:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$14263_memory_ptr_$returns$_t_struct$_TakerOrderResult_$14274_memory_ptr_$value",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 54234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19387:36:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "id": 54235,
                  "nodeType": "ExpressionStatement",
                  "src": "19387:36:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54238,
                            "name": "mgo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52513,
                            "src": "19442:3:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                              "typeString": "contract MangroveOrderEnriched"
                            }
                          ],
                          "id": 54237,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47007,
                          "src": "19440:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AccessControlled_$20247_$returns$_t_address_payable_$",
                            "typeString": "function (contract AccessControlled) pure returns (address payable)"
                          }
                        },
                        "id": 54239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19440:6:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 54236,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "19429:10:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 54240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19429:18:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54241,
                  "nodeType": "ExpressionStatement",
                  "src": "19429:18:88"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 54246,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45875,
                                "src": "19496:3:88",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                  "typeString": "contract AbstractMangrove"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                  "typeString": "contract AbstractMangrove"
                                }
                              ],
                              "id": 54245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "19488:8:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 54244,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "19488:8:88",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 54247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19488:12:88",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 54243,
                          "name": "IMangrove",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 645,
                          "src": "19478:9:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMangrove_$645_$",
                            "typeString": "type(contract IMangrove)"
                          }
                        },
                        "id": 54248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19478:23:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMangrove_$645",
                          "typeString": "contract IMangrove"
                        }
                      },
                      {
                        "id": 54249,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "19509:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 54250,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "19521:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 54252,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "19536:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 54251,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "19534:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 54253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19534:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 54254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19549:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "30",
                        "id": 54255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19562:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 54256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19571:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 54257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19580:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "35",
                        "id": 54258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19589:1:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IMangrove_$645",
                          "typeString": "contract IMangrove"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "id": 54242,
                      "name": "OrderSummary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52510,
                      "src": "19458:12:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IMangrove_$645_$_t_contract$_IERC20_$2050_$_t_contract$_IERC20_$2050_$_t_address_$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IMangrove,contract IERC20,contract IERC20,address,bool,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 54259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19458:199:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54260,
                  "nodeType": "EmitStatement",
                  "src": "19453:204:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54266,
                        "name": "buyOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54186,
                        "src": "19690:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TakerOrder_$14263_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        ],
                        "expression": {
                          "id": 54261,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52513,
                          "src": "19663:3:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 54263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "take",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6440,
                        "src": "19663:8:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$14263_memory_ptr_$returns$_t_struct$_TakerOrderResult_$14274_memory_ptr_$",
                          "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                        }
                      },
                      "id": 54265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 54264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19679:9:88",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "19663:26:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_TakerOrder_$14263_memory_ptr_$returns$_t_struct$_TakerOrderResult_$14274_memory_ptr_$value",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory) payable external returns (struct IOrderLogic.TakerOrderResult memory)"
                      }
                    },
                    "id": 54267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19663:36:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$14274_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "id": 54268,
                  "nodeType": "ExpressionStatement",
                  "src": "19663:36:88"
                },
                {
                  "assignments": [54273, 54276],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54273,
                      "mutability": "mutable",
                      "name": "live",
                      "nameLocation": "19720:4:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 54336,
                      "src": "19706:18:88",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 54271,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "19706:4:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 54272,
                        "nodeType": "ArrayTypeName",
                        "src": "19706:6:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 54276,
                      "mutability": "mutable",
                      "name": "dead",
                      "nameLocation": "19740:4:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 54336,
                      "src": "19726:18:88",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 54274,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "19726:4:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 54275,
                        "nodeType": "ArrayTypeName",
                        "src": "19726:6:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54285,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 54280,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "19775:4:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                              "typeString": "contract MangroveOrder_Test"
                            }
                          ],
                          "id": 54279,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "19773:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 54281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19773:7:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 54282,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "19788:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 54283,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "19801:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      ],
                      "expression": {
                        "id": 54277,
                        "name": "mgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52513,
                        "src": "19748:3:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                          "typeString": "contract MangroveOrderEnriched"
                        }
                      },
                      "id": 54278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offersOfOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6745,
                      "src": "19748:17:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_contract$_IERC20_$2050_$_t_contract$_IERC20_$2050_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address,contract IERC20,contract IERC20) view external returns (uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 54284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19748:63:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256[] memory,uint256[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19705:106:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 54295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 54290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 54287,
                              "name": "live",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54273,
                              "src": "19828:4:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 54288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "19828:11:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 54289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19843:1:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "19828:16:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 54294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 54291,
                              "name": "dead",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54276,
                              "src": "19848:4:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 54292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "19848:11:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 54293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19863:1:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "19848:16:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "19828:36:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374206f66666572206c697374",
                        "id": 54296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19866:22:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e23a4ef5f05f3810b4dac31980e233ef7b7375e51da9eda8c27f8658b9eb98d",
                          "typeString": "literal_string \"Incorrect offer list\""
                        },
                        "value": "Incorrect offer list"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e23a4ef5f05f3810b4dac31980e233ef7b7375e51da9eda8c27f8658b9eb98d",
                          "typeString": "literal_string \"Incorrect offer list\""
                        }
                      ],
                      "id": 54286,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "19817:10:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 54297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19817:72:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54298,
                  "nodeType": "ExpressionStatement",
                  "src": "19817:72:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54302,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "19912:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "id": 54303,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "19919:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 54304,
                          "name": "live",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54273,
                          "src": "19925:4:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 54306,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 54305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19930:1:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19925:7:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 54307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19934:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 54299,
                        "name": "mgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52513,
                        "src": "19895:3:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                          "typeString": "contract MangroveOrderEnriched"
                        }
                      },
                      "id": 54301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "retractOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15121,
                      "src": "19895:16:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$2050_$_t_contract$_IERC20_$2050_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint256,bool) external returns (uint256)"
                      }
                    },
                    "id": 54308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19895:45:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 54309,
                  "nodeType": "ExpressionStatement",
                  "src": "19895:45:88"
                },
                {
                  "expression": {
                    "id": 54321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 54310,
                          "name": "live",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54273,
                          "src": "19947:4:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 54311,
                          "name": "dead",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54276,
                          "src": "19953:4:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        }
                      ],
                      "id": 54312,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "19946:12:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "tuple(uint256[] memory,uint256[] memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 54316,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "19981:4:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                                "typeString": "contract MangroveOrder_Test"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MangroveOrder_Test_$54338",
                                "typeString": "contract MangroveOrder_Test"
                              }
                            ],
                            "id": 54315,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47041,
                            "src": "19979:1:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                              "typeString": "function (contract Test) pure returns (address payable)"
                            }
                          },
                          "id": 54317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19979:7:88",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 54318,
                          "name": "quote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45881,
                          "src": "19988:5:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestToken_$52050",
                            "typeString": "contract TestToken"
                          }
                        },
                        {
                          "id": 54319,
                          "name": "base",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45878,
                          "src": "19995:4:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestToken_$52050",
                            "typeString": "contract TestToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_contract$_TestToken_$52050",
                            "typeString": "contract TestToken"
                          },
                          {
                            "typeIdentifier": "t_contract$_TestToken_$52050",
                            "typeString": "contract TestToken"
                          }
                        ],
                        "expression": {
                          "id": 54313,
                          "name": "mgo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52513,
                          "src": "19961:3:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MangroveOrderEnriched_$6746",
                            "typeString": "contract MangroveOrderEnriched"
                          }
                        },
                        "id": 54314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "offersOfOwner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6745,
                        "src": "19961:17:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_contract$_IERC20_$2050_$_t_contract$_IERC20_$2050_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (address,contract IERC20,contract IERC20) view external returns (uint256[] memory,uint256[] memory)"
                        }
                      },
                      "id": 54320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19961:39:88",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "tuple(uint256[] memory,uint256[] memory)"
                      }
                    },
                    "src": "19946:54:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54322,
                  "nodeType": "ExpressionStatement",
                  "src": "19946:54:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 54332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 54327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 54324,
                              "name": "live",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54273,
                              "src": "20024:4:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 54325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "20024:11:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 54326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20039:1:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "20024:16:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 54331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 54328,
                              "name": "dead",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54276,
                              "src": "20044:4:88",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 54329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "20044:11:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 54330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20059:1:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "20044:16:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "20024:36:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374206f66666572206c6973742061667465722072657472616374",
                        "id": 54333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20068:36:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e767876541d360204b3cd655aa55433a106b958a25b69ea65ddf58270ad605c9",
                          "typeString": "literal_string \"Incorrect offer list after retract\""
                        },
                        "value": "Incorrect offer list after retract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e767876541d360204b3cd655aa55433a106b958a25b69ea65ddf58270ad605c9",
                          "typeString": "literal_string \"Incorrect offer list after retract\""
                        }
                      ],
                      "id": 54323,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "20006:10:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 54334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20006:104:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54335,
                  "nodeType": "ExpressionStatement",
                  "src": "20006:104:88"
                }
              ]
            },
            "functionSelector": "70aa3a5d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_ownership_relation",
            "nameLocation": "18712:23:88",
            "parameters": {
              "id": 54180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18735:2:88"
            },
            "returnParameters": {
              "id": 54181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18745:0:88"
            },
            "scope": 54338,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 52463,
              "name": "MangroveTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47059,
              "src": "620:12:88"
            },
            "id": 52464,
            "nodeType": "InheritanceSpecifier",
            "src": "620:12:88"
          }
        ],
        "canonicalName": "MangroveOrder_Test",
        "contractDependencies": [780, 906, 6746, 48825, 49499, 50091, 52050],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          54338, 47059, 1914, 47434, 48626, 62095, 60776, 60744
        ],
        "name": "MangroveOrder_Test",
        "nameLocation": "598:18:88",
        "scope": 54339,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0"
  },
  "id": 88
}
