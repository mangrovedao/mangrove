{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Credit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Debit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "callname",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "GasCost",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Kill",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "NewMgv",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "base",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "quote",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "offerIds",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "wants",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "gives",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "makerAddr",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "gasreqs",
          "type": "uint256[]"
        }
      ],
      "name": "OBState",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "mgvData",
          "type": "bytes32"
        }
      ],
      "name": "OfferFail",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "OfferRetract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGives",
          "type": "uint256"
        }
      ],
      "name": "OfferSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasprice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prev",
          "type": "uint256"
        }
      ],
      "name": "OfferWrite",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGot",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGave",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "penalty",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feePaid",
          "type": "uint256"
        }
      ],
      "name": "OrderComplete",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "OrderStart",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "posthookData",
          "type": "bytes32"
        }
      ],
      "name": "PosthookFail",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetActive",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetDensity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offer_gasbase",
          "type": "uint256"
        }
      ],
      "name": "SetGasbase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasmax",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasprice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetGovernance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetMonitor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetNotify",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetUseOracle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetVault",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "outbound",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "inbound",
          "type": "address"
        }
      ],
      "name": "offers_head",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        }
      ],
      "name": "offers_line",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract TestToken",
          "name": "t",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "power",
          "type": "uint256"
        }
      ],
      "name": "cash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract TestToken",
          "name": "t",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "cash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "adjust",
          "type": "bool"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "args",
          "type": "bytes"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256[]",
          "name": "ints",
          "type": "int256[]"
        }
      ],
      "name": "logary",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "uints",
          "type": "uint256[]"
        }
      ],
      "name": "logary",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "rewind",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        }
      ],
      "name": "setupMaker",
      "outputs": [
        {
          "internalType": "contract TestMaker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        }
      ],
      "name": "setupMakerDeployer",
      "outputs": [
        {
          "internalType": "contract MakerDeployer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "inverted",
          "type": "bool"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "_mgv",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "inverted",
          "type": "bool"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "_mgv",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "inbound_tkn",
          "type": "address"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        }
      ],
      "name": "setupTaker",
      "outputs": [
        {
          "internalType": "contract TestTaker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "skip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_market_with_failures",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "tip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6000805462ff00ff191662010001178155600160088190556009556080818152600a610160818152692130b9b2902a37b5b2b760b11b61018090815261010091825260046101a0818152632428412960e01b6101c05261012052601261014081905260a0849052600b6102409081526a28bab7ba32902a37b5b2b760a91b610260526101e09081526102c0604052610280928352632428422960e01b6102a052610200929092526102205260c05260e094909452600e805460ff1916815592939091600f91620000d29183919062000298565b506020828101518051620000ed926001850192019062000298565b50604091820151600291909101805460ff191660ff909216919091179055820151805180516004840191620001289183916020019062000298565b50602082810151805162000143926001850192019062000298565b50604091909101516002909101805460ff191660ff909216919091179055606091909101516007909101553480156200017b57600080fd5b50604080516318caf8e360e31b8152326004820152602481019190915260096044820152683a3c1737b934b3b4b760b91b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b158015620001eb57600080fd5b505af115801562000200573d6000803e3d6000fd5b5050604080516318caf8e360e31b815230600482015260248101829052600b60448201526a2a32b9ba10393ab73732b960a91b60648201529051737109709ecfa91a80626ff3989d68f67f5b1dd12d935063c657c7189250608480830192600092919082900301818387803b1580156200027957600080fd5b505af11580156200028e573d6000803e3d6000fd5b505050506200037a565b828054620002a6906200033e565b90600052602060002090601f016020900481019282620002ca576000855562000315565b82601f10620002e557805160ff191683800117855562000315565b8280016001018555821562000315579182015b8281111562000315578251825591602001919060010190620002f8565b506200032392915062000327565b5090565b5b8082111562000323576000815560010162000328565b600181811c908216806200035357607f821691505b6020821081036200037457634e487b7160e01b600052602260045260246000fd5b50919050565b6201a73c806200038b6000396000f3fe60806040523480156200001157600080fd5b5060043610620002255760003560e01c806397754ae91162000131578063bfdc358811620000bb578063d82555f11162000086578063d82555f114620004b9578063e9a79a7b14620004d0578063ea14b5c314620004e7578063f8ccbf4714620004fe578063fa7626d4146200051257600080fd5b8063bfdc3588146200045d578063c88a5e6d1462000474578063d06d8229146200048b578063d56a22f014620004a257600080fd5b8063b84e3eda11620000fc578063b84e3eda14620003fd578063b9c071b41462000414578063ba414fa6146200042b578063bbab0fac146200044657600080fd5b806397754ae914620003ae5780639a8325a014620003c5578063a6b23bdb14620003dc578063af9bbe5f14620003e657600080fd5b80633336a63f11620001b35780636bce989b116200017e5780636bce989b14620003505780636cc12a2414620003675780636f597075146200038d5780638c00483214620003a457600080fd5b80633336a63f14620002f45780633a768463146200030b5780633bf82db11462000322578063521606d2146200033957600080fd5b8063233240ee11620001f4578063233240ee146200029857806329a9e30014620002af57806329ce9dde14620002c65780632d6c17a314620002dd57600080fd5b80630645f2be146200022a5780630a9254e4146200025e5780630b3d8c42146200026a578063108554f21462000281575b600080fd5b620002416200023b36600462003a1f565b62000520565b6040516001600160a01b0390911681526020015b60405180910390f35b620002686200064a565b005b620002416200027b36600462003a55565b62000a7d565b620002686200029236600462003aa7565b62000aa0565b62000268620002a936600462003ad6565b62000b79565b62000268620002c036600462003af6565b62000c55565b62000241620002d736600462003c0f565b62000d07565b62000268620002ee36600462003c8f565b62000e37565b620002416200030536600462003ca9565b62000e77565b620002416000805160206201a6c783398151915281565b620002686200033336600462003d13565b62000fc7565b620002686200034a36600462003d80565b620010a9565b620002686200036136600462003d13565b62001172565b6200037e6200037836600462003e1a565b62001186565b60405190815260200162000255565b620002686200039e36600462003ad6565b620011b5565b620002416200125f565b62000268620003bf36600462003e52565b62001272565b62000241620003d636600462003eac565b620014b3565b62000268620015b5565b62000268620003f736600462003d13565b620015c1565b620002686200040e36600462003d80565b6200166f565b620002686200042536600462003c8f565b6200171a565b620004356200173b565b604051901515815260200162000255565b620002416200045736600462003af6565b6200186c565b620002416200046e36600462003ca9565b620018ef565b620002686200048536600462003aa7565b62001918565b620002686200049c36600462003af6565b6200194e565b6200037e620004b336600462003aa7565b62001a00565b62000268620004ca36600462003d13565b62001a8e565b62000268620004e136600462003aa7565b62001b85565b62000241620004f836600462003af6565b62001c2b565b600054620004359062010000900460ff1681565b600054620004359060ff1681565b600081156200057257306028621e84806040516200053e9062003979565b6200054c9392919062003ee5565b604051809103906000f08015801562000569573d6000803e3d6000fd5b509050620005b6565b306028621e8480604051620005879062003987565b620005959392919062003ee5565b604051809103906000f080158015620005b2573d6000803e3d6000fd5b5090505b6000805160206201a6c783398151915263c657c71882604080516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260086044820152674d616e67726f766560c01b6064820152608401600060405180830381600087803b1580156200062c57600080fd5b505af115801562000641573d6000803e3d6000fd5b50505050919050565b6200065462001c3b565b600c5462000695906001600160a01b0316600d546001600160a01b0316604051806040016040528060058152602001643a30b5b2b960d91b81525062000e77565b601680546001600160a01b0319166001600160a01b03928316179055600d54620006d591166016546001600160a01b0316674563918244f4000062001172565b601654600d5460405163a3cfe14d60e01b81526001600160a01b039283169263a3cfe14d9262000716929116906801158e460913d000009060040162003f06565b600060405180830381600087803b1580156200073157600080fd5b505af115801562000746573d6000803e3d6000fd5b5050601654600c5460405163a3cfe14d60e01b81526001600160a01b03928316945063a3cfe14d93506200078c92909116906801158e460913d000009060040162003f06565b600060405180830381600087803b158015620007a757600080fd5b505af1158015620007bc573d6000803e3d6000fd5b5050600b54600c546001600160a01b039182169350169050600d546001600160a01b0316604051620007ee9062003995565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f0801580156200082b573d6000803e3d6000fd5b50601780546001600160a01b0319166001600160a01b03929092169182179055604080516318caf8e360e31b81526004810192909252602482015260086044820152674d6f72696172747960c01b60648201526000805160206201a6c78339815191529063c657c71890608401600060405180830381600087803b158015620008b357600080fd5b505af1158015620008c8573d6000803e3d6000fd5b5050601754620008ee92506001600160a01b031690506801158e460913d0000062001918565b6017546040516369c22ff560e11b8152678ac7230489e8000060048201526001600160a01b039091169063d3845fea90602401600060405180830381600087803b1580156200093c57600080fd5b505af115801562000951573d6000803e3d6000fd5b5050600c546200098292506001600160a01b031690506017546001600160a01b0316674563918244f4000062001172565b601754600c5460405163a3cfe14d60e01b81526001600160a01b039283169263a3cfe14d92620009c292911690674563918244f400009060040162003f06565b600060405180830381600087803b158015620009dd57600080fd5b505af1158015620009f2573d6000803e3d6000fd5b505060175460405163cda30c3b60e01b8152670de0b6b3a764000060048201526706f05b59d3b200006024820152620186a06044820152600060648201526001600160a01b03909116925063cda30c3b9150608401600060405180830381600087803b15801562000a6257600080fd5b505af115801562000a77573d6000803e3d6000fd5b50505050565b600062000a8a8262000520565b905062000a9984848362001ea7565b9392505050565b60405163c88a5e6d60e01b81526000805160206201a6c78339815191529063c88a5e6d9062000ad6908590859060040162003f06565b600060405180830381600087803b15801562000af157600080fd5b505af115801562000b06573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b03851660048201526000805160206201a6c783398151915292506306447d5691506024015b600060405180830381600087803b15801562000b5c57600080fd5b505af115801562000b71573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b81526000805160206201a6c78339815191529063c88a5e6d9062000bb3908490600160801b9060040162003f06565b600060405180830381600087803b15801562000bce57600080fd5b505af115801562000be3573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b03841660048201526000805160206201a6c7833981519152925063ca669fa791506024015b600060405180830381600087803b15801562000c3957600080fd5b505af115801562000c4e573d6000803e3d6000fd5b5050505050565b60405163c88a5e6d60e01b81526000805160206201a6c78339815191529063c88a5e6d9062000c8f908590600160801b9060040162003f06565b600060405180830381600087803b15801562000caa57600080fd5b505af115801562000cbf573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b038086166004830152841660248201526000805160206201a6c783398151915292506347e50cce915060440162000b41565b604051638d1cc92560e01b815260009081906000805160206201a6c783398151915290638d1cc9259062000d4090879060040162003f7c565b6000604051808303816000875af115801562000d60573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000d8a919081019062003fc7565b8360405160200162000d9e92919062004015565b60405160208183030381529060405290508051602082016000f091506001600160a01b03821662000e305760405162461bcd60e51b815260206004820152603160248201527f54657374206465706c6f79436f646528737472696e672c6279746573293a204460448201527032b83637bcb6b2b73a103330b4b632b21760791b60648201526084015b60405180910390fd5b5092915050565b6000805160206201a6c783398151915263e5d6bf0262000e5883426200405e565b6040518263ffffffff1660e01b815260040162000c1e91815260200190565b600080600b60009054906101000a90046001600160a01b0316858560405162000ea090620039a3565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562000edd573d6000803e3d6000fd5b5060405163c88a5e6d60e01b81529091506000805160206201a6c78339815191529063c88a5e6d9062000f2090849068056bc75e2d631000009060040162003f06565b600060405180830381600087803b15801562000f3b57600080fd5b505af115801562000f50573d6000803e3d6000fd5b50506040516318caf8e360e31b81526000805160206201a6c7833981519152925063c657c718915062000f8a908490879060040162004078565b600060405180830381600087803b15801562000fa557600080fd5b505af115801562000fba573d6000803e3d6000fd5b5092979650505050505050565b60405163c88a5e6d60e01b81526000805160206201a6c78339815191529063c88a5e6d9062000ffd908690859060040162003f06565b600060405180830381600087803b1580156200101857600080fd5b505af11580156200102d573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b038087166004830152851660248201526000805160206201a6c783398151915292506345b5607891506044015b600060405180830381600087803b1580156200108b57600080fd5b505af1158015620010a0573d6000803e3d6000fd5b50505050505050565b604080516020810190915260008082525b8251811015620011625781620010ec848381518110620010de57620010de6200409e565b602002602001015162002153565b604051602001620010ff92919062004015565b6040516020818303038152906040529150600183516200112091906200405e565b8110156200114d57816040516020016200113b9190620040b4565b60405160208183030381529060405291505b806200115981620040dc565b915050620010ba565b506200116e8162002240565b5050565b62001181838383600062001272565b505050565b60006200119582600a620041f5565b620011a1858562001a00565b620011ad919062004203565b949350505050565b60405163c88a5e6d60e01b81526000805160206201a6c78339815191529063c88a5e6d90620011ef908490600160801b9060040162003f06565b600060405180830381600087803b1580156200120a57600080fd5b505af11580156200121f573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b03841660048201526000805160206201a6c783398151915292506306447d56915060240162000c1e565b60006200126d600062000520565b905090565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b1790529151600092871691620012c89162004226565b6000604051808303816000865af19150503d806000811462001307576040519150601f19603f3d011682016040523d82523d6000602084013e6200130c565b606091505b5091505060008180602001905181019062001328919062004244565b90506200139a8462001393876200136a6370a0823160e01b6200134d60018d62002287565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b90620022ac565b821562000b715760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b03891691620013e5919062004226565b6000604051808303816000865af19150503d806000811462001424576040519150601f19603f3d011682016040523d82523d6000602084013e62001429565b606091505b5091505060008180602001905181019062001445919062004244565b90508286101562001470576200145c86846200405e565b6200146890826200405e565b90506200148b565b6200147c83876200405e565b6200148890826200425e565b90505b620014a981620013936318160ddd60e01b6200134d60018d62002287565b5050505050505050565b604051638d1cc92560e01b815260009081906000805160206201a6c783398151915290638d1cc92590620014ec90869060040162003f7c565b6000604051808303816000875af11580156200150c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001536919081019062003fc7565b90508051602082016000f091506001600160a01b038216620015af5760405162461bcd60e51b815260206004820152602b60248201527f54657374206465706c6f79436f646528737472696e67293a204465706c6f796d60448201526a32b73a103330b4b632b21760a91b606482015260840162000e27565b50919050565b620015bf620022b8565b565b60405163c88a5e6d60e01b81526000805160206201a6c78339815191529063c88a5e6d90620015f7908690859060040162003f06565b600060405180830381600087803b1580156200161257600080fd5b505af115801562001627573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b038087166004830152851660248201526000805160206201a6c783398151915292506347e50cce915060440162001070565b604080516020810190915260008082525b8251811015620011625781620016a4848381518110620010de57620010de6200409e565b604051602001620016b792919062004015565b604051602081830303815290604052915060018351620016d891906200405e565b811015620017055781604051602001620016f39190620040b4565b60405160208183030381529060405291505b806200171181620040dc565b91505062001680565b6000805160206201a6c783398151915263e5d6bf0262000e5883426200425e565b60008054610100900460ff16156200175c5750600054610100900460ff1690565b60006000805160206201a6c78339815191523b1562001867576040516000906000805160206201a6c7833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490620017c99083906519985a5b195960d21b9060200162003f06565b60408051601f1981840301815290829052620017e9929160200162004279565b60408051601f1981840301815290829052620018059162004226565b6000604051808303816000865af19150503d806000811462001844576040519150601f19603f3d011682016040523d82523d6000602084013e62001849565b606091505b5091505080806020019051810190620018639190620042ac565b9150505b919050565b600b5460009062001886906001600160a01b0316620023a5565b50600b546040516001600160a01b039091169084908490620018a890620039b1565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f080158015620018e5573d6000803e3d6000fd5b5090505b92915050565b600080600b60009054906101000a90046001600160a01b0316858560405162000ea090620039bf565b60405163c88a5e6d60e01b81526000805160206201a6c78339815191529063c88a5e6d9062000b41908590859060040162003f06565b60405163c88a5e6d60e01b81526000805160206201a6c78339815191529063c88a5e6d9062001988908590600160801b9060040162003f06565b600060405180830381600087803b158015620019a357600080fd5b505af1158015620019b8573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b038086166004830152841660248201526000805160206201a6c783398151915292506345b56078915060440162000b41565b60008062001a7362001a6d6040518060400160405280600c81526020016b5f5f646563696d616c73282960a01b81525062001a468760016200228790919063ffffffff16565b90805160209091012060038201805460e09290921c63ffffffff1990921691909117905590565b6200248f565b905062001a8281600a620041f5565b620011ad9084620042cc565b7f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358360405162001b5a906040808252600790820152665741524e494e4760c81b6060820152608060208201819052605e908201527f546573742074697028616464726573732c616464726573732c75696e7432353660a08201527f293a2054686520607469706020737464636865617420686173206265656e206460c08201527f6570726563617465642e2055736520606465616c6020696e73746561642e000060e08201526101000190565b60405180910390a1620011818162001393846200136a6370a0823160e01b6200134d60018a62002287565b60405163c88a5e6d60e01b81526000805160206201a6c78339815191529063c88a5e6d9062001bbb908590859060040162003f06565b600060405180830381600087803b15801562001bd657600080fd5b505af115801562001beb573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b03851660048201526000805160206201a6c7833981519152925063ca669fa7915060240162000b41565b600062000a998383600062000a7d565b6011546040513091600f9160109160ff169062001c5890620039cd565b62001c67949392919062004395565b604051809103906000f08015801562001c84573d6000803e3d6000fd5b50600c80546001600160a01b0319166001600160a01b03929092169190911790553060145460405160129160139160ff9091169062001cc390620039cd565b62001cd2949392919062004395565b604051809103906000f08015801562001cef573d6000803e3d6000fd5b50600d80546001600160a01b0319166001600160a01b03928316908117909155600c54600e5462001d299391909116919060ff1662000a7d565b600b80546001600160a01b0319166001600160a01b03929092169182179055604080516316c1a85160e31b8152905163b60d428891678ac7230489e8000091600480830192600092919082900301818588803b15801562001d8957600080fd5b505af115801562001d9e573d6000803e3d6000fd5b5050600c54600b5460405163095ea7b360e01b81526001600160a01b03928316955063095ea7b3945062001ddd93509116906000199060040162003f06565b6020604051808303816000875af115801562001dfd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e239190620042ac565b50600d54600b5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39262001e5e929116906000199060040162003f06565b6020604051808303816000875af115801562001e7e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001ea49190620042ac565b50565b62001eb283620023a5565b5062001ebe82620023a5565b50601554604051630b73a18f60e01b81526001600160a01b0385811660048301528481166024830152604482019290925260006064820152614e20608482015290821690630b73a18f9060a401600060405180830381600087803b15801562001f2657600080fd5b505af115801562001f3b573d6000803e3d6000fd5b5050601554604051630b73a18f60e01b81526001600160a01b0386811660048301528781166024830152604482019290925260006064820152614e2060848201529084169250630b73a18f915060a401600060405180830381600087803b15801562001fa657600080fd5b505af115801562001fbb573d6000803e3d6000fd5b505050506000805160206201a6e783398151915260001c60601b60601c6001600160a01b031663c657c71884856001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562002026573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002050919081019062003fc7565b6040518363ffffffff1660e01b81526004016200206f92919062004078565b600060405180830381600087803b1580156200208a57600080fd5b505af11580156200209f573d6000803e3d6000fd5b505050506000805160206201a6e783398151915260001c60601b60601c6001600160a01b031663c657c71883846001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156200210a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002134919081019062003fc7565b6040518363ffffffff1660e01b81526004016200107092919062004078565b6060816000036200217b5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156200219557600101600a820491506200217f565b60008167ffffffffffffffff811115620021b357620021b362003b34565b6040519080825280601f01601f191660200182016040528015620021de576020820181803683370190505b50905060001982015b85156200223757600a860660300160f81b828280600190039350815181106200221457620022146200409e565b60200101906001600160f81b031916908160001a905350600a86049550620021e7565b50949350505050565b62001ea48160405160240162002257919062003f7c565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052620024b1565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b6200116e8282620024d2565b601654604051632d24c42f60e01b8152678ac7230489e8000060048201526801a055690d9db8000060248201526001600160a01b0390911690632d24c42f9060440160408051808303816000875af115801562002319573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200233f9190620043e4565b5050600c54620015bf9062002369906001600160a01b0316600d546001600160a01b03166200283b565b6040518060400160405280601a81526020017f4f6666657220626f6f6b2073686f756c6420626520656d707479000000000000815250620028bd565b60006001600160a01b03821662002480577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162002416906020808252601e908201527f4572726f723a20616464726573732073686f756c64206e6f7420626520300000604082015260600190565b60405180910390a160408051818152600781830152664164647265737360c81b60608201526001600160a01b038416602082015290517f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9181900360800190a16200248062002907565b506001600160a01b0316151590565b60006200249c8262002a0b565b806020019051810190620018e9919062004244565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b94600093909290918301828280156200254557602002820191906000526020600020905b81548152602001906001019080831162002530575b505050505090506000836200255a8362002ad3565b6040516020016200256d92919062004279565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a168352815292812091945090929091620025c191869188910162004409565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620025fc57620025fa8762002b80565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b03198816845282528083209051909183916200263d91879189910162004409565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b03168460405162002684919062004226565b600060405180830381855afa9150503d8060008114620026c1576040519150601f19603f3d011682016040523d82523d6000602084013e620026c6565b606091505b509150620026e3905081620026dd886020620042cc565b62003877565b604051630667f9d760e41b8152909250600091506000805160206201a6c78339815191529063667f9d709062002720908b90879060040162003f06565b6020604051808303816000875af115801562002740573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002766919062004244565b90508082146200278a5760405162461bcd60e51b815260040162000e279062004445565b6040516370ca10bb60e01b81526000805160206201a6c7833981519152906370ca10bb90620027c2908b9087908e9060040162003ee5565b600060405180830381600087803b158015620027dd57600080fd5b505af1158015620027f2573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff191690556200282760028b016000620039db565b896004016000905550505050505050505050565b600b54604051636f7aeed560e11b81526001600160a01b0384811660048301528381166024830152600092169063def5ddaa90604401602060405180830381865afa1580156200288f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620028b5919062004244565b159392505050565b816200116e577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051620028f49190620044e0565b60405180910390a16200116e8262003901565b6000805160206201a6c78339815191523b15620029fa576040516000906000805160206201a6c7833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490620029759083906519985a5b195960d21b9060019060200162003ee5565b60408051601f198184030181529082905262002995929160200162004279565b60408051601f1981840301815290829052620029b19162004226565b6000604051808303816000865af19150503d8060008114620029f0576040519150601f19603f3d011682016040523d82523d6000602084013e620029f5565b606091505b505050505b6000805461ff001916610100179055565b60058101546060906001600160a01b0316600062002a298462002b80565b604051630667f9d760e41b81529091506000805160206201a6c78339815191529063667f9d709062002a62908590859060040162003f06565b6020604051808303816000875af115801562002a82573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002aa8919062004244565b60405160200162002abb91815260200190565b60405160208183030381529060405292505050919050565b606060008251602062002ae79190620042cc565b67ffffffffffffffff81111562002b025762002b0262003b34565b6040519080825280601f01601f19166020018201604052801562002b2d576020820181803683370190505b50905060005b835181101562000e3057600084828151811062002b545762002b546200409e565b60200260200101519050808260200260200184015250808062002b7790620040dc565b91505062002b33565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b94938793919290919083018282801562002bf257602002820191906000526020600020905b81548152602001906001019080831162002bdd575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519596509491935062002c3e9250859187910162004409565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161562002cdd576001600160a01b0384166000908152602087815260408083206001600160e01b0319871684528252808320905190929162002cad91859187910162004409565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b60008362002ceb8362002ad3565b60405160200162002cfe92919062004279565b60405160208183030381529060405290506000805160206201a6e783398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562002d5d57600080fd5b505af115801562002d72573d6000803e3d6000fd5b50505050600080866001600160a01b03168360405162002d93919062004226565b600060405180830381855afa9150503d806000811462002dd0576040519150601f19603f3d011682016040523d82523d6000602084013e62002dd5565b606091505b50915062002dec905081620026dd876020620042cc565b6040516365bc948160e01b81526001600160a01b0389166004820152909250600091506000805160206201a6c7833981519152906365bc9481906024016000604051808303816000875af115801562002e49573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002e7391908101906200457e565b50905080516001036200313c5760006000805160206201a6e783398151915260001c6001600160a01b031663667f9d70898460008151811062002eba5762002eba6200409e565b60200260200101516040518363ffffffff1660e01b815260040162002ee192919062003f06565b6020604051808303816000875af115801562002f01573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002f27919062004244565b90508062002f8b577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811062002f675762002f676200409e565b602002602001015160001c60405162002f8292919062003f06565b60405180910390a15b80831462002fad5760405162461bcd60e51b815260040162000e279062004445565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8888878960405160200162002fe592919062004409565b60405160208183030381529060405280519060200120856000815181106200301157620030116200409e565b602002602001015160001c6040516200302e9493929190620045df565b60405180910390a1816000815181106200304c576200304c6200409e565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262003097918a918c910162004409565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c1685528252828420925190939162003101918a918c910162004409565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550620036fa565b600181511115620036895760005b8151811015620036825760006000805160206201a6e783398151915260001c6001600160a01b031663667f9d708a8585815181106200318d576200318d6200409e565b60200260200101516040518363ffffffff1660e01b8152600401620031b492919062003f06565b6020604051808303816000875af1158015620031d4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620031fa919062004244565b9050806200325d577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5898484815181106200323957620032396200409e565b602002602001015160001c6040516200325492919062003f06565b60405180910390a15b6000805160206201a6e783398151915260001c6001600160a01b03166370ca10bb8a8585815181106200329457620032946200409e565b602002602001015161133760f01b6040518463ffffffff1660e01b8152600401620032c29392919062003ee5565b600060405180830381600087803b158015620032dd57600080fd5b505af1158015620032f2573d6000803e3d6000fd5b50505050600060608a6001600160a01b03168760405162003314919062004226565b600060405180830381855afa9150503d806000811462003351576040519150601f19603f3d011682016040523d82523d6000602084013e62003356565b606091505b5090925090506200336e81620026dd8b6020620042cc565b955081801562003382575061133760f01b86145b15620035d5577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001620033c092919062004409565b60405160208183030381529060405280519060200120888881518110620033eb57620033eb6200409e565b602002602001015160001c604051620034089493929190620045df565b60405180910390a18484815181106200342557620034256200409e565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f168352845280822090519293909262003470918d918f910162004409565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c604051602001620034fd92919062004409565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff0219169083151502179055506000805160206201a6e783398151915260001c6001600160a01b03166370ca10bb8c8787815181106200356f576200356f6200409e565b6020026020010151866040518463ffffffff1660e01b8152600401620035989392919062003ee5565b600060405180830381600087803b158015620035b357600080fd5b505af1158015620035c8573d6000803e3d6000fd5b5050505050505062003682565b6000805160206201a6e783398151915260001c6001600160a01b03166370ca10bb8c8787815181106200360c576200360c6200409e565b6020026020010151866040518463ffffffff1660e01b8152600401620036359392919062003ee5565b600060405180830381600087803b1580156200365057600080fd5b505af115801562003665573d6000803e3d6000fd5b5050505050505080806200367990620040dc565b9150506200314a565b50620036fa565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e606482015260840162000e27565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519092916200373e9188918a910162004409565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620037cd5760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b606482015260840162000e27565b6005890180546001600160a01b031916905560038901805463ffffffff19169055620037fe60028a016000620039db565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a16845282528083209051909291620038449188918a910162004409565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b600080600060208551116200388e57845162003891565b60205b905060005b81811015620038f757620038ac816008620042cc565b86620038b983886200425e565b81518110620038cc57620038cc6200409e565b01602001516001600160f81b031916901c929092179180620038ee81620040dc565b91505062003896565b5090949350505050565b8062001ea4577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620039679060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a162001ea462002907565b61567e806200461083390190565b6155e48062009c8e83390190565b6108d8806200f27283390190565b610baf806200fb4a83390190565b61452180620106f983390190565b613ef58062014c1a83390190565b611bb88062018b0f83390190565b508054600082559060005260206000209081019062001ea491905b8082111562003a0c5760008155600101620039f6565b5090565b801515811462001ea457600080fd5b60006020828403121562003a3257600080fd5b813562000a998162003a10565b6001600160a01b038116811462001ea457600080fd5b60008060006060848603121562003a6b57600080fd5b833562003a788162003a3f565b9250602084013562003a8a8162003a3f565b9150604084013562003a9c8162003a10565b809150509250925092565b6000806040838503121562003abb57600080fd5b823562003ac88162003a3f565b946020939093013593505050565b60006020828403121562003ae957600080fd5b813562000a998162003a3f565b6000806040838503121562003b0a57600080fd5b823562003b178162003a3f565b9150602083013562003b298162003a3f565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171562003b765762003b7662003b34565b604052919050565b600067ffffffffffffffff82111562003b9b5762003b9b62003b34565b50601f01601f191660200190565b600062003bc062003bba8462003b7e565b62003b4a565b905082815283838301111562003bd557600080fd5b828260208301376000602084830101529392505050565b600082601f83011262003bfe57600080fd5b62000a998383356020850162003ba9565b6000806040838503121562003c2357600080fd5b823567ffffffffffffffff8082111562003c3c57600080fd5b62003c4a8683870162003bec565b9350602085013591508082111562003c6157600080fd5b508301601f8101851362003c7457600080fd5b62003c858582356020840162003ba9565b9150509250929050565b60006020828403121562003ca257600080fd5b5035919050565b60008060006060848603121562003cbf57600080fd5b833562003ccc8162003a3f565b9250602084013562003cde8162003a3f565b9150604084013567ffffffffffffffff81111562003cfb57600080fd5b62003d098682870162003bec565b9150509250925092565b60008060006060848603121562003d2957600080fd5b833562003d368162003a3f565b9250602084013562003d488162003a3f565b929592945050506040919091013590565b600067ffffffffffffffff82111562003d765762003d7662003b34565b5060051b60200190565b6000602080838503121562003d9457600080fd5b823567ffffffffffffffff81111562003dac57600080fd5b8301601f8101851362003dbe57600080fd5b803562003dcf62003bba8262003d59565b81815260059190911b8201830190838101908783111562003def57600080fd5b928401925b8284101562003e0f5783358252928401929084019062003df4565b979650505050505050565b60008060006060848603121562003e3057600080fd5b833562003e3d8162003a3f565b95602085013595506040909401359392505050565b6000806000806080858703121562003e6957600080fd5b843562003e768162003a3f565b9350602085013562003e888162003a3f565b925060408501359150606085013562003ea18162003a10565b939692955090935050565b60006020828403121562003ebf57600080fd5b813567ffffffffffffffff81111562003ed757600080fd5b620011ad8482850162003bec565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b03929092168252602082015260400190565b60005b8381101562003f3c57818101518382015260200162003f22565b8381111562000a775750506000910152565b6000815180845262003f6881602086016020860162003f1f565b601f01601f19169290920160200192915050565b60208152600062000a99602083018462003f4e565b600062003fa262003bba8462003b7e565b905082815283838301111562003fb757600080fd5b62000a9983602083018462003f1f565b60006020828403121562003fda57600080fd5b815167ffffffffffffffff81111562003ff257600080fd5b8201601f810184136200400457600080fd5b620011ad8482516020840162003f91565b600083516200402981846020880162003f1f565b8351908301906200403f81836020880162003f1f565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60008282101562004073576200407362004048565b500390565b6001600160a01b0383168152604060208201819052600090620011ad9083018462003f4e565b634e487b7160e01b600052603260045260246000fd5b60008251620040c881846020870162003f1f565b61016160f51b920191825250600201919050565b600060018201620040f157620040f162004048565b5060010190565b600181815b80851115620041395781600019048211156200411d576200411d62004048565b808516156200412b57918102915b93841c9390800290620040fd565b509250929050565b6000826200415257506001620018e9565b816200416157506000620018e9565b81600181146200417a57600281146200418557620041a5565b6001915050620018e9565b60ff84111562004199576200419962004048565b50506001821b620018e9565b5060208310610133831016604e8410600b8410161715620041ca575081810a620018e9565b620041d68383620040f8565b8060001904821115620041ed57620041ed62004048565b029392505050565b600062000a99838362004141565b6000826200422157634e487b7160e01b600052601260045260246000fd5b500490565b600082516200423a81846020870162003f1f565b9190910192915050565b6000602082840312156200425757600080fd5b5051919050565b6000821982111562004274576200427462004048565b500190565b6001600160e01b03198316815281516000906200429e81600485016020870162003f1f565b919091016004019392505050565b600060208284031215620042bf57600080fd5b815162000a998162003a10565b6000816000190483118215151615620042e957620042e962004048565b500290565b8054600090600181811c90808316806200430957607f831692505b602080841082036200432b57634e487b7160e01b600052602260045260246000fd5b838852602088018280156200434957600181146200435b5762004388565b60ff1987168252828201975062004388565b60008981526020902060005b87811015620043825781548482015290860190840162004367565b83019850505b5050505050505092915050565b6001600160a01b0385168152608060208201819052600090620043bb90830186620042ee565b8281036040840152620043cf8186620042ee565b91505060ff8316606083015295945050505050565b60008060408385031215620043f857600080fd5b505080516020909101519092909150565b825160009082906020808701845b83811015620044355781518552938201939082019060010162004417565b5050948252509092019392505050565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b60408152600560408201526422b93937b960d91b606082015260806020820152600062000a99608083018462003f4e565b600082601f8301126200452357600080fd5b815160206200453662003bba8362003d59565b82815260059290921b840181019181810190868411156200455657600080fd5b8286015b848110156200457357805183529183019183016200455a565b509695505050505050565b600080604083850312156200459257600080fd5b825167ffffffffffffffff80821115620045ab57600080fd5b620045b98683870162004511565b93506020850151915080821115620045d057600080fd5b5062003c858582860162004511565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe60a06040523480156200001157600080fd5b506040516200567e3803806200567e83398101604081905262000034916200048c565b8282826040518060400160405280601081526020016f496e7665727465644d616e67726f766560801b815250808484847f72201d073f249840099a96530e189c4291c1852040b1e96ff1f606db656be4ff60405160405180910390a16200009b836200016d565b620000a682620001cc565b620000b1816200027f565b620000bc836200032f565b5050815160208084019190912060408051808201825260018152603160f81b9084015280517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f938101939093528201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001905060408051601f19818403018152919052805160209091012060805250620004d19650505050505050565b62000177620003e0565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f30906020015b60405180910390a150565b620001d6620003e0565b61ffff811681146200022f5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f31366269747300000000000060448201526064015b60405180910390fd5b6200024b816001546200045160201b62001d4e1790919060201c565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001620001c1565b62000289620003e0565b808162ffffff1614620002df5760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f3234626974730000000000000000604482015260640162000226565b620002fb816001546200046f60201b62001d711790919060201c565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001620001c1565b62000339620003e0565b6001600160a01b038116620003915760405162461bcd60e51b815260206004820152601360248201527f6d67762f636f6e6669672f676f762f6e6f743000000000000000000000000000604482015260640162000226565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001620001c1565b6003546001600160a01b0316331480620003f957503330145b806200040e57506003546001600160a01b0316155b6200044f5760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b604482015260640162000226565b565b60401b69ffff00000000000000001661ffff60401b19919091161790565b60281b67ffffff00000000001662ffffff60281b19919091161790565b600080600060608486031215620004a257600080fd5b83516001600160a01b0381168114620004ba57600080fd5b602085015160409095015190969495509392505050565b60805161518a620004f46000396000818161036401526116aa015261518a6000f3fe60806040526004361061024a5760003560e01c80636d27de6711610139578063b60d4288116100b6578063dc7e98df1161007a578063dc7e98df146108a8578063def5ddaa146108c8578063fbb66910146108e8578063fbfa77cf14610908578063fbffe5fd14610928578063fcaa7e2e1461094857600080fd5b8063b60d4288146107e4578063c7bb25d0146107ec578063cbf75c9a14610833578063d0ee509914610868578063db20266f1461088857600080fd5b8063aa4dd282116100fd578063aa4dd28214610744578063ab033ea914610764578063ad97db1b14610784578063b09d2a16146107a4578063b2b12057146107c457600080fd5b80636d27de671461061457806370a08231146106545780637ecebe00146106815780638c66715c146106ae57806395999ee31461072457600080fd5b80635722647b116101c7578063644e67031161018b578063644e6703146104cc5780636804f613146105835780636817031b146105a357806368c13d6b146105c35780636a4f76911461060157600080fd5b80635722647b146103f657806359eba454146104345780635a611f4e146104545780635aa6e675146104745780635cd82390146104ac57600080fd5b806330adf81f1161020e57806330adf81f146103105780633644e5151461035257806341c0e1b51461038657806346e142fa1461039b57806349f6d2dc146103e357600080fd5b80630b73a18f1461025f578063230244081461027f578063275074581461029257806327d097c6146102d05780632e1a7d4d146102f057600080fd5b3661025a5761025833610968565b005b600080fd5b34801561026b57600080fd5b5061025861027a3660046149b8565b61098f565b61025861028d366004614a05565b610968565b34801561029e57600080fd5b506102bb6102ad366004614a20565b6001600160601b0316151590565b60405190151581526020015b60405180910390f35b3480156102dc57600080fd5b506102586102eb366004614a39565b610a2d565b3480156102fc57600080fd5b506102bb61030b366004614a20565b610b08565b34801561031c57600080fd5b506103447fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a281565b6040519081526020016102c7565b34801561035e57600080fd5b506103447f000000000000000000000000000000000000000000000000000000000000000081565b34801561039257600080fd5b50610258610b62565b3480156103a757600080fd5b506103bb6103b6366004614ac8565b610baa565b604080519586526020860194909452928401919091526060830152608082015260a0016102c7565b6103446103f1366004614b41565b610bd6565b34801561040257600080fd5b50610344610411366004614a39565b600560209081526000938452604080852082529284528284209052825290205481565b34801561044057600080fd5b506102bb61044f366004614b9f565b610d41565b34801561046057600080fd5b5061025861046f366004614bea565b610dca565b34801561048057600080fd5b50600354610494906001600160a01b031681565b6040516001600160a01b0390911681526020016102c7565b3480156104b857600080fd5b506102586104c7366004614a05565b610e24565b3480156104d857600080fd5b506104ec6104e7366004614c07565b610e84565b6040805183516001600160a01b0316815260208085015115158183015284830151151582840152606080860151818401526080808701518185015260a0968701511515878501528551151560c0808601919091529286015160e0850152938501516101008401528401516101208301529183015115156101408201529282015161016084015201516101808201526101a0016102c7565b34801561058f57600080fd5b5061025861059e366004614bea565b610f87565b3480156105af57600080fd5b506102586105be366004614a05565b610fd1565b3480156105cf57600080fd5b506103446105de366004614a39565b600460209081526000938452604080852082529284528284209052825290205481565b61025861060f366004614c3a565b611027565b34801561062057600080fd5b5061063461062f366004614ca1565b61113a565b6040805194855260208501939093529183015260608201526080016102c7565b34801561066057600080fd5b5061034461066f366004614a05565b60066020526000908152604090205481565b34801561068d57600080fd5b5061034461069c366004614a05565b60086020526000908152604090205481565b3480156106ba57600080fd5b506106ce6106c9366004614a39565b611171565b60408051835181526020808501518183015284830151828401526060948501518583015283516001600160a01b0316608083015283015160a08201529082015160c082015291015160e0820152610100016102c7565b34801561073057600080fd5b5061025861073f366004614a20565b61124d565b34801561075057600080fd5b5061034461075f366004614d09565b6112e9565b34801561077057600080fd5b5061025861077f366004614a05565b61134a565b34801561079057600080fd5b5061034461079f366004614d3c565b6113ec565b3480156107b057600080fd5b506102586107bf366004614d8b565b6115be565b3480156107d057600080fd5b506103bb6107df366004614e21565b6118b7565b6102586118f3565b3480156107f857600080fd5b50610344610807366004614e9b565b600760209081526000948552604080862082529385528385208152918452828420909152825290205481565b34801561083f57600080fd5b5061085361084e366004614c07565b6118fe565b604080519283526020830191909152016102c7565b34801561087457600080fd5b50610258610883366004614c07565b6119fb565b34801561089457600080fd5b506102bb6108a3366004614c07565b611a6c565b3480156108b457600080fd5b506102586108c3366004614a39565b611aa7565b3480156108d457600080fd5b506103446108e3366004614c07565b611b67565b3480156108f457600080fd5b50610258610903366004614a39565b611b9f565b34801561091457600080fd5b50600054610494906001600160a01b031681565b34801561093457600080fd5b50610634610943366004614eef565b611c8c565b34801561095457600080fd5b50610258610963366004614a20565b611cb3565b60006109756000806118fe565b50905061098181611d90565b61098b8234611dd3565b5050565b610997611e2f565b6001600160a01b0385811660008181526002602090815260408083209489168084529482529182902080546001600160f81b0316600160f81b17905581516001815291517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a3610a10858585611aa7565b610a1b858584611b9f565b610a26858583610a2d565b5050505050565b610a35611e2f565b808162ffffff1614610a8e5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f636f6e6669672f6f666665725f676173626173652f3234626974730060448201526064015b60405180910390fd5b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805462ffffff60601b191662ffffff60601b606088901b1617905590518481527fc5859916e5f3fc1ed4d2cfb8c7a6cf709580f228fa0c9d9e0fa468744c7e4a9191015b60405180910390a3505050565b6000610b143383611e9a565b60405133908390600081818185875af1925050503d8060008114610b54576040519150601f19603f3d011682016040523d82523d6000602084013e610b59565b606091505b50909392505050565b610b6a611e2f565b60015464ff000000001916640100000000176001556040517fbe26733c2bf6ff3ea5ba8cfe744422bd49052ff9ed5685c9e81e6f9321dbaddd90600090a1565b6000806000806000610bc08a8a8a8a8a33611f5f565b939e929d50909b50995090975095505050505050565b6000610be0614864565b610bea89896118fe565b6101208301819052610100830191909152610c04906120ac565b610c188161010001518261012001516120f8565b3415610c2857610c283334611dd3565b61012081015160181c63ffffffff166001016080820181905263ffffffff811614610c8b5760405162461bcd60e51b81526020600482015260136024820152726d67762f6f6666657249644f766572666c6f7760681b6044820152606401610a85565b6080810151610120820151610cb79160181b66ffffffff0000001666ffffffff00000019919091161790565b6101208201526001600160a01b03808a16825288166020820152604081018790526060810186905260a0810185905260c0810184905260e08101839052610cff816000612148565b61012081015181516001600160a01b03908116600090815260026020908152604080832082870151909416835292905220556080015198975050505050505050565b6001600160a01b038085166000818152600760209081526040808320888616808552908352818420338086529084528285209689168552959092528083208690555191939092917f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d91610db79188908890614f3c565b60405180910390a3506001949350505050565b610dd2611e2f565b60015460ff60501b191660ff60501b605083901b161760015560405181151581527f9b84fe4d9ffc14a6f7ec50c18884ee0d4bb8165aa718a28558df12ab4bd32b14906020015b60405180910390a150565b610e2c611e2f565b6001546001600160601b03166001600160601b0319606083901b16176001556040516001600160a01b03821681527ff592e42c32883b35bebfbf9d9b801570a25d5ccbba452310746ad2cfd20d548f90602001610e19565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152610efa6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b600080610f0786866118fe565b91509150610f71826040805160c081018252606083811c8252605884901c60ff9081161515602080850191909152605086901c82161515848601529385901c61ffff1691830191909152602884901c62ffffff1660808301529290911c909116151560a082015290565b9350610f7c816128c5565b925050509250929050565b610f8f611e2f565b600154610f9c9082612973565b60015560405181151581527fbf39fbfab835c119637f4dbc4fb0f428c559c210200405d1ec25ddb50a93f9d490602001610e19565b610fd9611e2f565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f3090602001610e19565b61102f614864565b61103989896118fe565b6101208301819052610100830191909152611053906120ac565b6110678161010001518261012001516120f8565b3415611077576110773334611dd3565b6001600160a01b03808a16808352908916602080840182905260408085018b9052606085018a90526080850186905260a0850189905260c0850188905260e0850187905260009384526004825280842092845291815281832085845290529020546101408201526101208101516110ef826001612148565b610120820151811461112e5761012082015182516001600160a01b03908116600090815260026020908152604080832082880151909416835292905220555b50505050505050505050565b60008060008061114e8a8a8a8a8a8a61298a565b929650909450925090506111648a8a8786612c72565b9650965096509692505050565b61119c6040518060800160405280600081526020016000815260200160008152602001600081525090565b6111d0604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b6001600160a01b03808616600090815260046020908152604080832093881683529281528282208683529052205461120781612d72565b6001600160a01b038088166000908152600560209081526040808320938a1683529281528282208883529052205490935061124181612dd4565b92505050935093915050565b611255611e2f565b808162ffffff16146112a95760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f32346269747300000000000000006044820152606401610a85565b6001546112b69082611d71565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001610e19565b600033301461133a5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f696e766572746564466c6173686c6f616e2f70726f746563746564006044820152606401610a85565b61134383612e43565b9392505050565b611352611e2f565b6001600160a01b03811661139e5760405162461bcd60e51b815260206004820152601360248201527206d67762f636f6e6669672f676f762f6e6f743606c1b6044820152606401610a85565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001610e19565b6000806113f986866118fe565b915050611405816120ac565b6001600160a01b038087166000818152600460209081526040808320948a16808452948252808320898452825280832054938352600582528083209483529381528382208883529052919091205461145d8160601c90565b6001600160a01b0316336001600160a01b0316146114bd5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f726574726163744f666665722f756e617574686f72697a65640000006044820152606401610a85565b6001600160601b0382161561152157826114ed89896114dc8660e01c90565b60c087901c63ffffffff1688612fc4565b935080841461151f576001600160a01b03808a166000908152600260209081526040808320938c168352929052208490555b505b61152f88888885858a6130a4565b841561156657603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020293506115663385611dd3565b866001600160a01b0316886001600160a01b03167fe2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b886040516115ab91815260200190565b60405180910390a3505050949350505050565b428410156116035760405162461bcd60e51b81526020600482015260126024820152711b59dd8bdc195c9b5a5d0bd95e1c1a5c995960721b6044820152606401610a85565b6001600160a01b03878116600081815260086020908152604080832080546001810190915581517fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a2818501528f8716818401528e871660608201526080810195909552948b1660a085015260c084018a905260e084018590526101008085018a9052815180860390910181526101208501909152805191012061190160f01b6101408401527f0000000000000000000000000000000000000000000000000000000000000000610142840152610162830152906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611745573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061177b5750896001600160a01b0316816001600160a01b0316145b6117c75760405162461bcd60e51b815260206004820152601b60248201527f6d67762f7065726d69742f696e76616c69645369676e617475726500000000006044820152606401610a85565b87600760008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020819055508a6001600160a01b03168c6001600160a01b03167f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d8c8c8c6040516118a193929190614f3c565b60405180910390a3505050505050505050505050565b60008060008060006118cd8b8b8b8b8b8b611f5f565b9398509196509450925090506118e58b8b8886612c72565b965096509650965096915050565b6118fc33610968565b565b6001546001600160a01b03838116600090815260026020908152604080832093861683529290522054605882901c60ff16156119f4576000806119418460601c90565b604051636968abd360e01b81526001600160a01b03888116600483015287811660248301529190911690636968abd3906044016040805180830381865afa158015611990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b49190614f60565b915091506119c58261ffff81161490565b156119d7576119d48483611d4e565b93505b6001600160701b03811681036119f157610f7c8382613119565b50505b9250929050565b611a03611e2f565b6001600160a01b03828116600081815260026020908152604080832094861680845294825280832080546001600160f81b031690558051928352517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a35050565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054605881901c60ff1615155b949350505050565b611aaf611e2f565b6101f4811115611af85760405162461bcd60e51b815260206004820152601460248201527306d67762f636f6e6669672f6665652f3c3d3530360641b6044820152606401610a85565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805461ffff60e81b191661ffff60e81b60e888901b1617905590518481527f44a6d70a601a6f8a85c075467e9d7245897140cbf6dd505c9d9d764459f5fb649101610afb565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054603881901c63ffffffff16611a9f565b611ba7611e2f565b6001600160701b0381168114611bff5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f64656e736974792f313132626974730000000000006044820152606401610a85565b6001600160a01b03808416600090815260026020908152604080832093861683529290522054611c2f9082613119565b6001600160a01b038481166000818152600260209081526040808320948816808452948252918290209490945551848152919290917f95f1a495c6d9d1a215995408f6ad898c2b33798d6eb3cf3220b4c6cc8b61b0649101610afb565b600080600080611ca089898989893361298a565b929c919b50995090975095505050505050565b611cbb611e2f565b61ffff81168114611d0e5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f3136626974730000000000006044820152606401610a85565b600154611d1b9082611d4e565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001610e19565b60401b69ffff00000000000000001669ffff000000000000000019919091161790565b60281b67ffffff00000000001667ffffff000000000019919091161790565b602081901c60ff1615611dd05760405162461bcd60e51b81526020600482015260086024820152671b59dd8bd919585960c21b6044820152606401610a85565b50565b6001600160a01b03821660008181526006602052604090819020805484019055517f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09490611e239084815260200190565b60405180910390a25050565b6003546001600160a01b0316331480611e4757503330145b80611e5b57506003546001600160a01b0316155b6118fc5760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b6044820152606401610a85565b6001600160a01b03821660009081526006602052604090205481811015611f035760405162461bcd60e51b815260206004820152601960248201527f6d67762f696e73756666696369656e7450726f766973696f6e000000000000006044820152606401610a85565b6001600160a01b038316600081815260066020526040908190208484039055517f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc604690611f529085815260200190565b60405180910390a2505050565b6000806000806000611f6f6148d0565b6001600160a01b03808d1682528b166020820152611f8d8c8c6118fe565b61010083015260e0820152611fa061492e565b6001600160a01b03881660a082015288151560c082015260e0820151610100830151611fcc91906120f8565b611fda8261010001516120ac565b6040517fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b990600090a161200f81838d8d61314a565b60808401519299509097509550612025906135d9565b602080830151835160808085015160e0860151604080518d81529687018c905286019190915260608501526001600160a01b03808d1694938116939216917ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47910160405180910390a4806080015193508060e0015192505050965096509650965096915050565b605881901c60ff1615611dd05760405162461bcd60e51b81526020600482015260146024820152731b59dd8bdc99595b9d1c985b98de531bd8dad95960621b6044820152606401610a85565b61210182611d90565b61210d8160f81c151590565b61098b5760405162461bcd60e51b815260206004820152600c60248201526b6d67762f696e61637469766560a01b6044820152606401610a85565b60c082015161ffff81161461219f5760405162461bcd60e51b815260206004820152601e60248201527f6d67762f77726974654f666665722f67617370726963652f31366269747300006044820152606401610a85565b61010082015160401c61ffff168260c0015110156121ca5761010082015160401c61ffff1660c08301525b61010082015160281c62ffffff168260a00151111561222b5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f6761737265712f746f6f486967680000006044820152606401610a85565b600082606001511161227f5760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f746f6f4c6f7700000000006044820152606401610a85565b61012082015160781c6001600160701b031661012083015160601c62ffffff168360a001510102826060015110156122f95760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f770000006044820152606401610a85565b60608201516001600160601b038116146123555760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f39366269747300000000006044820152606401610a85565b60408201516001600160601b038116146123b15760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f77616e74732f39366269747300000000006044820152606401610a85565b6000806123bd84613677565b9150915083602001516001600160a01b031684600001516001600160a01b03167f2b101f9ef8ca2761d91bea55ab50a4d051e9248088ff7314ddb8826839544c2a33876040015188606001518960c001518a60a001518b608001518a60405161246297969594939291906001600160a01b03979097168752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b60405180910390a383516001600160a01b03908116600090815260056020908152604080832082890151909416835292815282822060808801518352905290812054841561253c576124b48160601c90565b6001600160a01b0316336001600160a01b0316146125145760405162461bcd60e51b815260206004820152601c60248201527f6d67762f7570646174654f666665722f756e617574686f72697a6564000000006044820152606401610a85565b603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020291505b841580612556575060a0860151604882901c62ffffff1614155b8061256d575060c0860151602082901c61ffff1614155b8061258e575061012086015160601c62ffffff16603082901c62ffffff1614155b156126385761012086015160009060601c62ffffff1690506125fe338860a00151838a60c0015160201b65ffff000000001660309190911b68ffffff0000000000001660489290921b6bffffff0000000000000000001660609390931b6001600160601b03191692909217171790565b87516001600160a01b039081166000908152600560209081526040808320828d0151909416835292815282822060808c0151835290522055505b5060c08501516101208601516000919060601c62ffffff168760a001510102633b9aca00029050818111156126785761267333838303611e9a565b61268c565b8181101561268c5761268c33828403611dd3565b506101408501516001600160601b031615806126b0575061014085015160e01c8314155b1561283c57821561273657608085015185516001600160a01b039081166000908152600460209081526040808320828b01519094168352928152828220878352905220546126fd916138a3565b85516001600160a01b039081166000908152600460209081526040808320828b0151909416835292815282822087835290522055612769565b60808501516101208601516127629160381b63ffffffff60381b1663ffffffff60381b19919091161790565b6101208601525b81156127e057608085015185516001600160a01b039081166000908152600460208181526040808420828c018051871686529083528185208986528352818520548c518716865293835281852090519095168452938152838320878452905291902060e09290921b6001600160e01b039091161790555b8380156127fa57506101408501516001600160601b031615155b1561283c576128358560000151866020015161281b88610140015160e01c90565b61014089015160c01c63ffffffff16896101200151612fc4565b6101208601525b60408501516060808701516000926001600160601b03909116911b6bffffffffffffffffffffffff60601b1660c085901b63ffffffff60c01b1660e087901b17171786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282206080909a0151825298909852909620959095555050505050565b6129096040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b60f882901c1515815260e882901c61ffff166020820152607882901c6001600160701b03166040820152606082811c62ffffff1690820152605882901c60ff1615156080820152603882901c63ffffffff90811660a083015260189290921c90911660c082015290565b60581b60ff60581b1660ff60581b19919091161790565b60008060008087886001600160a01b0316146129e85760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657257616e74732f313630626974730000006044820152606401610a85565b86876001600160a01b031614612a405760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657247697665732f313630626974730000006044820152606401610a85565b612a486148d0565b6001600160a01b03808c1682528a166020820152612a668b8b6118fe565b610100830181905260e083019190915260381c63ffffffff1660408083019182526001600160a01b03808e16600090815260046020908152838220928f1682529182528281209351815292905290205460608201526080810189905260a08101889052612ad161492e565b898152602081018990526001600160a01b03871660a082015287151560c082015260e0820151610100830151612b0791906120f8565b612b158261010001516120ac565b610100820151612b26906001612973565b82610100018181525050816101000151600260008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020819055507fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b960405160405180910390a1612bba818360016138c0565b612bc781608001516135d9565b866001600160a01b03168b6001600160a01b03168d6001600160a01b03167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec478460400151856060015186608001518760e00151604051612c40949392919093845260208401929092526040830152606082015260800190565b60405180910390a460408101516060820151608083015160e090930151919e909d50919b509950975050505050505050565b6001600160a01b0380851660009081526007602090815260408083208785168452825280832093861683529281528282203383529052205481811015612ced5760405162461bcd60e51b815260206004820152601060248201526f6d67762f6c6f77416c6c6f77616e636560801b6044820152606401610a85565b6001600160a01b0380861660008181526007602090815260408083208986168085529083528184209589168452948252808320338085529252918290208686039081905591517f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d92612d63928992909190614f3c565b60405180910390a35050505050565b612d9d6040518060800160405280600081526020016000815260200160008152602001600081525090565b60e082901c815263ffffffff60c083901c1660208201526001600160601b03606083811c8216604084015292169181019190915290565b612e08604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b606082811c8252604883901c62ffffff908116602080850191909152603085901c90911660408401529290921c61ffff169181019190915290565b600080636c49c32c60e01b83604051602401612e5f9190614f84565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b0390931692909217909152905060c0830135604881901c62ffffff169060601c60005a9050826040820482031015612f0157604080516060810182527f6d67762f6e6f74456e6f756768476173466f724d616b65725472616465000000815260006020820181905291810191909152612f0190606081fd5b600080612f0f848688613b32565b915091505a8303965081612f5557612f5560405180606001604052806e1b59dd8bdb585ad95c94995d995c9d608a1b81526020018960001b815260200183815250606081fd5b6000612f73612f6760208b018b614a05565b86308c60800135613b60565b905080612fb857612fb86040518060600160405280741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b81526020018a60001b815260200184815250606081fd5b50505050505050919050565b60008315613037576001600160a01b03808716600090815260046020908152604080832093891683529281528282208783529052205461300490846138a3565b6001600160a01b038088166000908152600460209081526040808320938a16835292815282822088835290522055613054565b63ffffffff60381b19821663ffffffff60381b603885901b161791505b821561309b576001600160a01b038681166000908152600460209081526040808320938916835292815282822086835290522080546001600160e01b031660e086901b1790555b50949350505050565b6001600160601b03198316925080156130c45765ffff0000000019821691505b506001600160a01b039485166000818152600460209081526040808320979098168083529681528782208683528152878220949094559081526005835285812094815293825284842092845291905291902055565b60781b6dffffffffffffffffffffffffffff60781b166dffffffffffffffffffffffffffff60781b19919091161790565b60008080805b848110156135ce57600060408901819052606089015285858281811061317857613178615016565b90506080020160006004811061319057613190615016565b60209081029190910135604089810191825289516001600160a01b039081166000908152600485528281208c86018051841683529086528382208551835286528382205460608e019081528d518416835260058752848320915190931682528552828120935181529290935290205460c0890152516001600160601b0316158061325c575085858281811061322757613227615016565b90506080020160036004811061323f5761323f615016565b602002013561325a8860c0015162ffffff60489190911c1690565b115b6135c65785858281811061327257613272615016565b90506080020160016004811061328a5761328a615016565b60200201358686838181106132a1576132a1615016565b9050608002016001600481106132b9576132b9615016565b60200201356001600160601b0316146133145760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657257616e74732f393662697473000000006044820152606401610a85565b85858281811061332657613326615016565b90506080020160026004811061333e5761333e615016565b602002013586868381811061335557613355615016565b90506080020160026004811061336d5761336d615016565b60200201356001600160601b0316146133c85760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657247697665732f393662697473000000006044820152606401610a85565b8585828181106133da576133da615016565b9050608002016001600481106133f2576133f2615016565b6020020135608088015285858281811061340e5761340e615016565b90506080020160026004811061342657613426615016565b602002013560a0880152610100870151613441906001612973565b610100880181905287516001600160a01b039081166000908152600260209081526040808320828d015190941683529290529081209190915580806134868b8b613c48565b925092509250806f6d67762f74726164655375636365737360801b036134ad576001870196505b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b14613501576134fa8a600001518b602001516134e18d6060015160e01c90565b60608e015160c01c63ffffffff168e6101000151612fc4565b6101008b01525b6101008a0151613512906000612973565b8a610100018181525050896101000151600260008c600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008c602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055506135808b8b614248565b61358a8b8b61434a565b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b146135b0576135b08b8b858585614436565b8a60400151860195508a60600151850194505050505b600101613150565b509450945094915050565b8015611dd057604051600090339083908381818185875af1925050503d8060008114613621576040519150601f19603f3d011682016040523d82523d6000602084013e613626565b606091505b505090508061098b5760405162461bcd60e51b815260206004820152601760248201527f6d67762f73656e6450656e616c747952657665727465640000000000000000006044820152606401610a85565b60008060008060008560e0015190506000866080015182146136cc5786516001600160a01b039081166000908152600460209081526040808320828c01519094168352928152828220858352905220546136d3565b8661014001515b90506001600160601b03811661372c5761012087015160381c63ffffffff1687516001600160a01b039081166000908152600460209081526040808320828d015190941683529281528282208483529052205490925090505b6137378782846144bc565b156137d15760005b60c082901c63ffffffff16156137b9575086516001600160a01b039081166000908152600460209081526040808320828c0151909416835292815282822063ffffffff60c086901c168084529152919020549061379d8983836144bc565b156137ad578093508192506137b3565b506137b9565b5061373f565b8260c083901c63ffffffff16909550935061385a9050565b60005b6137de8260e01c90565b156138475760006137ef8360e01c90565b89516001600160a01b039081166000908152600460209081526040808320828f0151909416835292815282822084835290522054925090506138328983836144bc565b1561383d5750613847565b92509050806137d4565b6138518260e01c90565b94509192508291505b8660800151841461386b5783613875565b61014087015160e01c5b876080015184146138865783613896565b61014088015160c01c63ffffffff165b9550955050505050915091565b60c01b63ffffffff60c01b1663ffffffff60c01b19919091161790565b8080156138e757508260c001516138de5760008260a00151116138e7565b60008260800151115b80156138f7575060008260400151115b15613ab35781516001600160a01b03908116600090815260056020908152604080832082870151909416835292815282822083860151835290529081205460c084015280806139468686613c48565b608088015160a089015160408a015160608b015160c08c015196995094975092955090939092906e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613a3d5760408b01518b51116139995760006139a2565b60408b01518b51035b60808b015260608b81015160208d01510360a08c01528a015160c01c63ffffffff168a6040018181525050600460008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b602001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b604001518152602001908152602001600020548a60600181815250505b613a5d8b8b886e1b59dd8bdb9bdd115e1958dd5d1959608a1b14156138c0565b60408a0183905260808a0185905260a08a0184905260608a0182905260c08a018190526e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613aa657613aa68b8b8a8a8a614436565b5050505050505050505050565b613ad28260000151836020015160008560400151866101000151612fc4565b6101008301819052613ae5906000612973565b610100830181905282516001600160a01b0390811660009081526002602090815260408083208288015190941683529290522055613b238383614248565b613b2d838361434a565b505050565b600080613b3d61497e565b60648185516020870160008a8af192508060448415020151915050935093915050565b6000806323b872dd60e01b858585604051602401613b8093929190614f3c565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080876001600160a01b031683604051613bd0919061502c565b6000604051808303816000865af19150503d8060008114613c0d576040519150601f19603f3d011682016040523d82523d6000602084013e613c12565b606091505b5091509150818015613c3c575080511580613c3c575080806020019051810190613c3c9190615067565b98975050505050505050565b600080600080613c6885606001516001600160601b0360609190911c1690565b90506000613c8086606001516001600160601b031690565b608087015160a0880151919250908083028483021115613cc05750600095508594506e1b59dd8bdb9bdd115e1958dd5d1959608a1b935061424192505050565b8860c001518015613cd057508183105b80613ce757508860c00151158015613ce757508084105b15613cff576080880183905260a08801849052613d76565b8860c0015115613d4a57838202838181613d1b57613d1b615000565b0615613d28576001613d2b565b60005b60ff16848281613d3d57613d3d615000565b040160a08a015250613d76565b83600003613d5e5760808801839052613d76565b8381840281613d6f57613d6f615000565b0460808901525b50505050600080306001600160a01b031663aa4dd28260e01b878960a00151604051602401613da69291906150ea565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051613de4919061502c565b6000604051808303816000865af19150503d8060008114613e21576040519150601f19603f3d011682016040523d82523d6000602084013e613e26565b606091505b50915091508115613f805780806020019051810190613e459190615112565b94506f6d67762f74726164655375636365737360801b925085602001516001600160a01b031686600001516001600160a01b03167f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d88604001518a60a001518a608001518b60a00151604051613edd94939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405180910390a360e086015160501c60ff1615613f5b5760e086015160a088015160405163cac1827160e01b815260609290921c9163cac1827191613f28918a91906004016150ea565b600060405180830381600087803b158015613f4257600080fd5b505af1158015613f56573d6000803e3d6000fd5b505050505b6080860151604088018051909101905260a08601516060880180519091019052614206565b602081015160408201516060830151909650945092506e1b59dd8bdb585ad95c94995d995c9d608a1b831480613fcd575082741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b145b80613fee575082731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b145b156141005785602001516001600160a01b031686600001516001600160a01b03167f1d59c048edb5397821854bd12cbe02242b82101c677f949d076d14eb7bd8343688604001518a60a001518a608001518b60a001518960405161407d9594939291909485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b60405180910390a360e086015160501c60ff16156140fb5760e086015160a0880151604051631159507360e01b815260609290921c916311595073916140c8918a91906004016150ea565b600060405180830381600087803b1580156140e257600080fd5b505af11580156140f6573d6000803e3d6000fd5b505050505b614206565b827f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000000361416f5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000006044820152606401610a85565b82741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b036141ce5760405162461bcd60e51b81526020600482015260156024820152741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b6044820152606401610a85565b60405162461bcd60e51b815260206004820152600d60248201526c36b3bb17b9bbb0b822b93937b960991b6044820152606401610a85565b61423e86600001518760200151886040015189606001518a60c00151886f6d67762f74726164655375636365737360801b14156130a4565b50505b9250925092565b6101008101516000906127109060e81c61ffff168460400151028161426f5761426f615000565b04905080156142e557604083018051829003905260e0830181905281516000546142a391906001600160a01b031683614562565b6142e55760405162461bcd60e51b81526020600482015260136024820152721b59dd8bd99959551c985b9cd9995c91985a5b606a1b6044820152606401610a85565b604083015115613b2d5761430682600001518460a001518560400151614562565b613b2d5760405162461bcd60e51b815260206004820152601560248201527436b3bb17a6b3bb2330b4b62a37a830bcaa30b5b2b960591b6044820152606401610a85565b60a08201518151602083015160408086015160608701519151631154020b60e01b81526001600160a01b039485166004820152928416602484015260448301526064820152911690631154020b90608401600060405180830381600087803b1580156143b557600080fd5b505af11580156143c9573d6000803e3d6000fd5b5050505060006143e782602001518460a00151308660600151613b60565b905080613b2d5760405162461bcd60e51b815260206004820152601760248201527f6d67762f74616b65724661696c546f506179546f74616c0000000000000000006044820152606401610a85565b806f6d67762f74726164655375636365737360801b036144595761445984614637565b60c084015160481c62ffffff1680841115614472578093505b61448085858303858561467c565b84019350816f6d67762f74726164655375636365737360801b146144b4576144a885856147d2565b60808701805190910190525b505050505050565b6000816000036144ce57506001611343565b60408401516060858101516001600160601b039186901c82169291861691908084028284028082036145555789516001600160a01b039081166000908152600560209081526040808320828f015190941683529281528282208b835290529081205460481c62ffffff1660a08c015194029590930294909410159550611343945050505050565b1194506113439350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839182918816906145c090859061502c565b6000604051808303816000865af19150503d80600081146145fd576040519150601f19603f3d011682016040523d82523d6000602084013e614602565b606091505b509150915081801561462c57508051158061462c57508080602001905181019061462c9190615067565b979650505050505050565b614657816020015161464d8360c0015160601c90565b8360a00151614562565b611dd057602081015160005460a083015161098b92916001600160a01b031690614562565b600080633d3d130d60e01b866040518060400160405280878152602001868152506040516024016146ae92919061512b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319939093169290921790915260c087015190915060601c60005a90508660408204820310156147465760405162461bcd60e51b815260206004820181905260248201527f6d67762f6e6f74456e6f756768476173466f724d616b6572506f7374686f6f6b6044820152606401610a85565b600080614754848a87613b32565b915091505a83039550816147c55789602001516001600160a01b03168a600001516001600160a01b03167f51d5a3ecf332626d83c8207fe9bd22f38801f578c7eb222e2d811cd1b4c629a58c60400151846040516147bc929190918252602082015260400190565b60405180910390a35b5050505050949350505050565b60c082015160009062ffffff604882901c81169161ffff602082901c1660309190911c909116820102633b9aca00028184111561480d578193505b61010085015160009060601c62ffffff1660e08701519086019060401c61ffff16633b9aca0002029050818111156148425750805b61485b6148538760c0015160601c90565b828403611dd3565b95945050505050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610120016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600081525090565b60405180608001604052806004906020820280368337509192915050565b80356001600160a01b03811681146149b357600080fd5b919050565b600080600080600060a086880312156149d057600080fd5b6149d98661499c565b94506149e76020870161499c565b94979496505050506040830135926060810135926080909101359150565b600060208284031215614a1757600080fd5b6113438261499c565b600060208284031215614a3257600080fd5b5035919050565b600080600060608486031215614a4e57600080fd5b614a578461499c565b9250614a656020850161499c565b9150604084013590509250925092565b60008083601f840112614a8757600080fd5b50813567ffffffffffffffff811115614a9f57600080fd5b6020830191508360208260071b85010111156119f457600080fd5b8015158114611dd057600080fd5b600080600080600060808688031215614ae057600080fd5b614ae98661499c565b9450614af76020870161499c565b9350604086013567ffffffffffffffff811115614b1357600080fd5b614b1f88828901614a75565b9094509250506060860135614b3381614aba565b809150509295509295909350565b600080600080600080600060e0888a031215614b5c57600080fd5b614b658861499c565b9650614b736020890161499c565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b60008060008060808587031215614bb557600080fd5b614bbe8561499c565b9350614bcc6020860161499c565b9250614bda6040860161499c565b9396929550929360600135925050565b600060208284031215614bfc57600080fd5b813561134381614aba565b60008060408385031215614c1a57600080fd5b614c238361499c565b9150614c316020840161499c565b90509250929050565b600080600080600080600080610100898b031215614c5757600080fd5b614c608961499c565b9750614c6e60208a0161499c565b979a9799505050506040860135956060810135956080820135955060a0820135945060c0820135935060e0909101359150565b60008060008060008060c08789031215614cba57600080fd5b614cc38761499c565b9550614cd16020880161499c565b945060408701359350606087013592506080870135614cef81614aba565b9150614cfd60a0880161499c565b90509295509295509295565b600080828403610140811215614d1e57600080fd5b61012080821215614d2e57600080fd5b849350610f7c81860161499c565b60008060008060808587031215614d5257600080fd5b614d5b8561499c565b9350614d696020860161499c565b9250604085013591506060850135614d8081614aba565b939692955090935050565b60008060008060008060008060006101208a8c031215614daa57600080fd5b614db38a61499c565b9850614dc160208b0161499c565b9750614dcf60408b0161499c565b9650614ddd60608b0161499c565b955060808a0135945060a08a0135935060c08a013560ff81168114614e0157600080fd5b8093505060e08a013591506101008a013590509295985092959850929598565b60008060008060008060a08789031215614e3a57600080fd5b614e438761499c565b9550614e516020880161499c565b9450604087013567ffffffffffffffff811115614e6d57600080fd5b614e7989828a01614a75565b9095509350506060870135614e8d81614aba565b9150614cfd6080880161499c565b60008060008060808587031215614eb157600080fd5b614eba8561499c565b9350614ec86020860161499c565b9250614ed66040860161499c565b9150614ee46060860161499c565b905092959194509250565b600080600080600060a08688031215614f0757600080fd5b614f108661499c565b9450614f1e6020870161499c565b935060408601359250606086013591506080860135614b3381614aba565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60008060408385031215614f7357600080fd5b505080516020909101519092909150565b61012081016001600160a01b0380614f9b8561499c565b16835280614fab6020860161499c565b1660208401525060408301356040830152606083013560608301526080830135608083015260a083013560a083015260c083013560c083015260e083013560e083015261010080840135818401525092915050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000825160005b8181101561504d5760208186018101518583015201615033565b8181111561505c576000828501525b509190910192915050565b60006020828403121561507957600080fd5b815161134381614aba565b60018060a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b61014081016150f98285615084565b6001600160a01b03929092166101209190910152919050565b60006020828403121561512457600080fd5b5051919050565b610160810161513a8285615084565b82516101208301526020830151610140830152939250505056fea26469706673582212209a27c46efe9a049a0c8d78cb7362a0c516bbb9784d448b972f2886aca3b09ff464736f6c634300080e003360a06040523480156200001157600080fd5b50604051620055e4380380620055e4833981016040819052620000349162000484565b828282604051806040016040528060088152602001674d616e67726f766560c01b815250808484847f72201d073f249840099a96530e189c4291c1852040b1e96ff1f606db656be4ff60405160405180910390a1620000938362000165565b6200009e82620001c4565b620000a98162000277565b620000b48362000327565b5050815160208084019190912060408051808201825260018152603160f81b9084015280517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f938101939093528201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001905060408051601f19818403018152919052805160209091012060805250620004c99650505050505050565b6200016f620003d8565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f30906020015b60405180910390a150565b620001ce620003d8565b61ffff81168114620002275760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f31366269747300000000000060448201526064015b60405180910390fd5b62000243816001546200044960201b62001e221790919060201c565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001620001b9565b62000281620003d8565b808162ffffff1614620002d75760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f323462697473000000000000000060448201526064016200021e565b620002f3816001546200046760201b62001e451790919060201c565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001620001b9565b62000331620003d8565b6001600160a01b038116620003895760405162461bcd60e51b815260206004820152601360248201527f6d67762f636f6e6669672f676f762f6e6f74300000000000000000000000000060448201526064016200021e565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001620001b9565b6003546001600160a01b0316331480620003f157503330145b806200040657506003546001600160a01b0316155b620004475760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b60448201526064016200021e565b565b60401b69ffff00000000000000001661ffff60401b19919091161790565b60281b67ffffff00000000001662ffffff60281b19919091161790565b6000806000606084860312156200049a57600080fd5b83516001600160a01b0381168114620004b257600080fd5b602085015160409095015190969495509392505050565b6080516150f8620004ec60003960008181610364015261177e01526150f86000f3fe60806040526004361061024a5760003560e01c80636d27de6711610139578063b60d4288116100b6578063dc7e98df1161007a578063dc7e98df146108a8578063def5ddaa146108c8578063fbb66910146108e8578063fbfa77cf14610908578063fbffe5fd14610928578063fcaa7e2e1461094857600080fd5b8063b60d4288146107e4578063c7bb25d0146107ec578063cbf75c9a14610833578063d0ee509914610868578063db20266f1461088857600080fd5b8063aa4dd282116100fd578063aa4dd28214610744578063ab033ea914610764578063ad97db1b14610784578063b09d2a16146107a4578063b2b12057146107c457600080fd5b80636d27de671461061457806370a08231146106545780637ecebe00146106815780638c66715c146106ae57806395999ee31461072457600080fd5b80635722647b116101c7578063644e67031161018b578063644e6703146104cc5780636804f613146105835780636817031b146105a357806368c13d6b146105c35780636a4f76911461060157600080fd5b80635722647b146103f657806359eba454146104345780635a611f4e146104545780635aa6e675146104745780635cd82390146104ac57600080fd5b806330adf81f1161020e57806330adf81f146103105780633644e5151461035257806341c0e1b51461038657806346e142fa1461039b57806349f6d2dc146103e357600080fd5b80630b73a18f1461025f578063230244081461027f578063275074581461029257806327d097c6146102d05780632e1a7d4d146102f057600080fd5b3661025a5761025833610968565b005b600080fd5b34801561026b57600080fd5b5061025861027a366004614926565b61098f565b61025861028d366004614973565b610968565b34801561029e57600080fd5b506102bb6102ad36600461498e565b6001600160601b0316151590565b60405190151581526020015b60405180910390f35b3480156102dc57600080fd5b506102586102eb3660046149a7565b610a2d565b3480156102fc57600080fd5b506102bb61030b36600461498e565b610b08565b34801561031c57600080fd5b506103447fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a281565b6040519081526020016102c7565b34801561035e57600080fd5b506103447f000000000000000000000000000000000000000000000000000000000000000081565b34801561039257600080fd5b50610258610b62565b3480156103a757600080fd5b506103bb6103b6366004614a36565b610baa565b604080519586526020860194909452928401919091526060830152608082015260a0016102c7565b6103446103f1366004614aaf565b610bd6565b34801561040257600080fd5b506103446104113660046149a7565b600560209081526000938452604080852082529284528284209052825290205481565b34801561044057600080fd5b506102bb61044f366004614b0d565b610d41565b34801561046057600080fd5b5061025861046f366004614b58565b610dca565b34801561048057600080fd5b50600354610494906001600160a01b031681565b6040516001600160a01b0390911681526020016102c7565b3480156104b857600080fd5b506102586104c7366004614973565b610e24565b3480156104d857600080fd5b506104ec6104e7366004614b75565b610e84565b6040805183516001600160a01b0316815260208085015115158183015284830151151582840152606080860151818401526080808701518185015260a0968701511515878501528551151560c0808601919091529286015160e0850152938501516101008401528401516101208301529183015115156101408201529282015161016084015201516101808201526101a0016102c7565b34801561058f57600080fd5b5061025861059e366004614b58565b610f87565b3480156105af57600080fd5b506102586105be366004614973565b610fd1565b3480156105cf57600080fd5b506103446105de3660046149a7565b600460209081526000938452604080852082529284528284209052825290205481565b61025861060f366004614ba8565b611027565b34801561062057600080fd5b5061063461062f366004614c0f565b61113a565b6040805194855260208501939093529183015260608201526080016102c7565b34801561066057600080fd5b5061034461066f366004614973565b60066020526000908152604090205481565b34801561068d57600080fd5b5061034461069c366004614973565b60086020526000908152604090205481565b3480156106ba57600080fd5b506106ce6106c93660046149a7565b611171565b60408051835181526020808501518183015284830151828401526060948501518583015283516001600160a01b0316608083015283015160a08201529082015160c082015291015160e0820152610100016102c7565b34801561073057600080fd5b5061025861073f36600461498e565b61124d565b34801561075057600080fd5b5061034461075f366004614c77565b6112e9565b34801561077057600080fd5b5061025861077f366004614973565b61141e565b34801561079057600080fd5b5061034461079f366004614caa565b6114c0565b3480156107b057600080fd5b506102586107bf366004614cf9565b611692565b3480156107d057600080fd5b506103bb6107df366004614d8f565b61198b565b6102586119c7565b3480156107f857600080fd5b50610344610807366004614e09565b600760209081526000948552604080862082529385528385208152918452828420909152825290205481565b34801561083f57600080fd5b5061085361084e366004614b75565b6119d2565b604080519283526020830191909152016102c7565b34801561087457600080fd5b50610258610883366004614b75565b611acf565b34801561089457600080fd5b506102bb6108a3366004614b75565b611b40565b3480156108b457600080fd5b506102586108c33660046149a7565b611b7b565b3480156108d457600080fd5b506103446108e3366004614b75565b611c3b565b3480156108f457600080fd5b506102586109033660046149a7565b611c73565b34801561091457600080fd5b50600054610494906001600160a01b031681565b34801561093457600080fd5b50610634610943366004614e5d565b611d60565b34801561095457600080fd5b5061025861096336600461498e565b611d87565b60006109756000806119d2565b50905061098181611e64565b61098b8234611ea7565b5050565b610997611f03565b6001600160a01b0385811660008181526002602090815260408083209489168084529482529182902080546001600160f81b0316600160f81b17905581516001815291517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a3610a10858585611b7b565b610a1b858584611c73565b610a26858583610a2d565b5050505050565b610a35611f03565b808162ffffff1614610a8e5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f636f6e6669672f6f666665725f676173626173652f3234626974730060448201526064015b60405180910390fd5b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805462ffffff60601b191662ffffff60601b606088901b1617905590518481527fc5859916e5f3fc1ed4d2cfb8c7a6cf709580f228fa0c9d9e0fa468744c7e4a9191015b60405180910390a3505050565b6000610b143383611f6e565b60405133908390600081818185875af1925050503d8060008114610b54576040519150601f19603f3d011682016040523d82523d6000602084013e610b59565b606091505b50909392505050565b610b6a611f03565b60015464ff000000001916640100000000176001556040517fbe26733c2bf6ff3ea5ba8cfe744422bd49052ff9ed5685c9e81e6f9321dbaddd90600090a1565b6000806000806000610bc08a8a8a8a8a33612033565b939e929d50909b50995090975095505050505050565b6000610be06147d2565b610bea89896119d2565b6101208301819052610100830191909152610c0490612180565b610c188161010001518261012001516121cc565b3415610c2857610c283334611ea7565b61012081015160181c63ffffffff166001016080820181905263ffffffff811614610c8b5760405162461bcd60e51b81526020600482015260136024820152726d67762f6f6666657249644f766572666c6f7760681b6044820152606401610a85565b6080810151610120820151610cb79160181b66ffffffff0000001666ffffffff00000019919091161790565b6101208201526001600160a01b03808a16825288166020820152604081018790526060810186905260a0810185905260c0810184905260e08101839052610cff81600061221c565b61012081015181516001600160a01b03908116600090815260026020908152604080832082870151909416835292905220556080015198975050505050505050565b6001600160a01b038085166000818152600760209081526040808320888616808552908352818420338086529084528285209689168552959092528083208690555191939092917f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d91610db79188908890614eaa565b60405180910390a3506001949350505050565b610dd2611f03565b60015460ff60501b191660ff60501b605083901b161760015560405181151581527f9b84fe4d9ffc14a6f7ec50c18884ee0d4bb8165aa718a28558df12ab4bd32b14906020015b60405180910390a150565b610e2c611f03565b6001546001600160601b03166001600160601b0319606083901b16176001556040516001600160a01b03821681527ff592e42c32883b35bebfbf9d9b801570a25d5ccbba452310746ad2cfd20d548f90602001610e19565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152610efa6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b600080610f0786866119d2565b91509150610f71826040805160c081018252606083811c8252605884901c60ff9081161515602080850191909152605086901c82161515848601529385901c61ffff1691830191909152602884901c62ffffff1660808301529290911c909116151560a082015290565b9350610f7c81612999565b925050509250929050565b610f8f611f03565b600154610f9c9082612a47565b60015560405181151581527fbf39fbfab835c119637f4dbc4fb0f428c559c210200405d1ec25ddb50a93f9d490602001610e19565b610fd9611f03565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f3090602001610e19565b61102f6147d2565b61103989896119d2565b610120830181905261010083019190915261105390612180565b6110678161010001518261012001516121cc565b3415611077576110773334611ea7565b6001600160a01b03808a16808352908916602080840182905260408085018b9052606085018a90526080850186905260a0850189905260c0850188905260e0850187905260009384526004825280842092845291815281832085845290529020546101408201526101208101516110ef82600161221c565b610120820151811461112e5761012082015182516001600160a01b03908116600090815260026020908152604080832082880151909416835292905220555b50505050505050505050565b60008060008061114e8a8a8a8a8a8a612a5e565b929650909450925090506111648a8a8786612d46565b9650965096509692505050565b61119c6040518060800160405280600081526020016000815260200160008152602001600081525090565b6111d0604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b6001600160a01b03808616600090815260046020908152604080832093881683529281528282208683529052205461120781612e46565b6001600160a01b038088166000908152600560209081526040808320938a1683529281528282208883529052205490935061124181612ea8565b92505050935093915050565b611255611f03565b808162ffffff16146112a95760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f32346269747300000000000000006044820152606401610a85565b6001546112b69082611e45565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001610e19565b600033301461133a5760405162461bcd60e51b815260206004820152601760248201527f6d67762f666c6173686c6f616e2f70726f7465637465640000000000000000006044820152606401610a85565b61135961134d6040850160208601614973565b83308660a00135612f17565b156113da576113836113716040850160208601614973565b60c085013560601c8560a00135612fff565b1561139857611391836130d6565b9050611418565b60408051606081018252731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b8152600060208201819052918101919091526113d590606081fd5b611418565b60408051606081018252741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b81526000602082018190529181019190915261141890606081fd5b92915050565b611426611f03565b6001600160a01b0381166114725760405162461bcd60e51b815260206004820152601360248201527206d67762f636f6e6669672f676f762f6e6f743606c1b6044820152606401610a85565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001610e19565b6000806114cd86866119d2565b9150506114d981612180565b6001600160a01b038087166000818152600460209081526040808320948a1680845294825280832089845282528083205493835260058252808320948352938152838220888352905291909120546115318160601c90565b6001600160a01b0316336001600160a01b0316146115915760405162461bcd60e51b815260206004820152601d60248201527f6d67762f726574726163744f666665722f756e617574686f72697a65640000006044820152606401610a85565b6001600160601b038216156115f557826115c189896115b08660e01c90565b60c087901c63ffffffff1688613257565b93508084146115f3576001600160a01b03808a166000908152600260209081526040808320938c168352929052208490555b505b61160388888885858a613337565b841561163a57603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca000202935061163a3385611ea7565b866001600160a01b0316886001600160a01b03167fe2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b8860405161167f91815260200190565b60405180910390a3505050949350505050565b428410156116d75760405162461bcd60e51b81526020600482015260126024820152711b59dd8bdc195c9b5a5d0bd95e1c1a5c995960721b6044820152606401610a85565b6001600160a01b03878116600081815260086020908152604080832080546001810190915581517fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a2818501528f8716818401528e871660608201526080810195909552948b1660a085015260c084018a905260e084018590526101008085018a9052815180860390910181526101208501909152805191012061190160f01b6101408401527f0000000000000000000000000000000000000000000000000000000000000000610142840152610162830152906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611819573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061184f5750896001600160a01b0316816001600160a01b0316145b61189b5760405162461bcd60e51b815260206004820152601b60248201527f6d67762f7065726d69742f696e76616c69645369676e617475726500000000006044820152606401610a85565b87600760008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020819055508a6001600160a01b03168c6001600160a01b03167f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d8c8c8c60405161197593929190614eaa565b60405180910390a3505050505050505050505050565b60008060008060006119a18b8b8b8b8b8b612033565b9398509196509450925090506119b98b8b8886612d46565b965096509650965096915050565b6119d033610968565b565b6001546001600160a01b03838116600090815260026020908152604080832093861683529290522054605882901c60ff1615611ac857600080611a158460601c90565b604051636968abd360e01b81526001600160a01b03888116600483015287811660248301529190911690636968abd3906044016040805180830381865afa158015611a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a889190614ece565b91509150611a998261ffff81161490565b15611aab57611aa88483611e22565b93505b6001600160701b0381168103611ac557610f7c83826133ac565b50505b9250929050565b611ad7611f03565b6001600160a01b03828116600081815260026020908152604080832094861680845294825280832080546001600160f81b031690558051928352517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a35050565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054605881901c60ff1615155b949350505050565b611b83611f03565b6101f4811115611bcc5760405162461bcd60e51b815260206004820152601460248201527306d67762f636f6e6669672f6665652f3c3d3530360641b6044820152606401610a85565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805461ffff60e81b191661ffff60e81b60e888901b1617905590518481527f44a6d70a601a6f8a85c075467e9d7245897140cbf6dd505c9d9d764459f5fb649101610afb565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054603881901c63ffffffff16611b73565b611c7b611f03565b6001600160701b0381168114611cd35760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f64656e736974792f313132626974730000000000006044820152606401610a85565b6001600160a01b03808416600090815260026020908152604080832093861683529290522054611d0390826133ac565b6001600160a01b038481166000818152600260209081526040808320948816808452948252918290209490945551848152919290917f95f1a495c6d9d1a215995408f6ad898c2b33798d6eb3cf3220b4c6cc8b61b0649101610afb565b600080600080611d74898989898933612a5e565b929c919b50995090975095505050505050565b611d8f611f03565b61ffff81168114611de25760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f3136626974730000000000006044820152606401610a85565b600154611def9082611e22565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001610e19565b60401b69ffff00000000000000001669ffff000000000000000019919091161790565b60281b67ffffff00000000001667ffffff000000000019919091161790565b602081901c60ff1615611ea45760405162461bcd60e51b81526020600482015260086024820152671b59dd8bd919585960c21b6044820152606401610a85565b50565b6001600160a01b03821660008181526006602052604090819020805484019055517f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09490611ef79084815260200190565b60405180910390a25050565b6003546001600160a01b0316331480611f1b57503330145b80611f2f57506003546001600160a01b0316155b6119d05760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b6044820152606401610a85565b6001600160a01b03821660009081526006602052604090205481811015611fd75760405162461bcd60e51b815260206004820152601960248201527f6d67762f696e73756666696369656e7450726f766973696f6e000000000000006044820152606401610a85565b6001600160a01b038316600081815260066020526040908190208484039055517f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc6046906120269085815260200190565b60405180910390a2505050565b600080600080600061204361483e565b6001600160a01b03808d1682528b1660208201526120618c8c6119d2565b61010083015260e082015261207461489c565b6001600160a01b03881660a082015288151560c082015260e08201516101008301516120a091906121cc565b6120ae826101000151612180565b6040517fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b990600090a16120e381838d8d6133dd565b608084015192995090975095506120f990613862565b602080830151835160808085015160e0860151604080518d81529687018c905286019190915260608501526001600160a01b03808d1694938116939216917ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47910160405180910390a4806080015193508060e0015192505050965096509650965096915050565b605881901c60ff1615611ea45760405162461bcd60e51b81526020600482015260146024820152731b59dd8bdc99595b9d1c985b98de531bd8dad95960621b6044820152606401610a85565b6121d582611e64565b6121e18160f81c151590565b61098b5760405162461bcd60e51b815260206004820152600c60248201526b6d67762f696e61637469766560a01b6044820152606401610a85565b60c082015161ffff8116146122735760405162461bcd60e51b815260206004820152601e60248201527f6d67762f77726974654f666665722f67617370726963652f31366269747300006044820152606401610a85565b61010082015160401c61ffff168260c00151101561229e5761010082015160401c61ffff1660c08301525b61010082015160281c62ffffff168260a0015111156122ff5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f6761737265712f746f6f486967680000006044820152606401610a85565b60008260600151116123535760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f746f6f4c6f7700000000006044820152606401610a85565b61012082015160781c6001600160701b031661012083015160601c62ffffff168360a001510102826060015110156123cd5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f770000006044820152606401610a85565b60608201516001600160601b038116146124295760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f39366269747300000000006044820152606401610a85565b60408201516001600160601b038116146124855760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f77616e74732f39366269747300000000006044820152606401610a85565b60008061249184613900565b9150915083602001516001600160a01b031684600001516001600160a01b03167f2b101f9ef8ca2761d91bea55ab50a4d051e9248088ff7314ddb8826839544c2a33876040015188606001518960c001518a60a001518b608001518a60405161253697969594939291906001600160a01b03979097168752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b60405180910390a383516001600160a01b039081166000908152600560209081526040808320828901519094168352928152828220608088015183529052908120548415612610576125888160601c90565b6001600160a01b0316336001600160a01b0316146125e85760405162461bcd60e51b815260206004820152601c60248201527f6d67762f7570646174654f666665722f756e617574686f72697a6564000000006044820152606401610a85565b603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020291505b84158061262a575060a0860151604882901c62ffffff1614155b80612641575060c0860151602082901c61ffff1614155b80612662575061012086015160601c62ffffff16603082901c62ffffff1614155b1561270c5761012086015160009060601c62ffffff1690506126d2338860a00151838a60c0015160201b65ffff000000001660309190911b68ffffff0000000000001660489290921b6bffffff0000000000000000001660609390931b6001600160601b03191692909217171790565b87516001600160a01b039081166000908152600560209081526040808320828d0151909416835292815282822060808c0151835290522055505b5060c08501516101208601516000919060601c62ffffff168760a001510102633b9aca000290508181111561274c5761274733838303611f6e565b612760565b818110156127605761276033828403611ea7565b506101408501516001600160601b03161580612784575061014085015160e01c8314155b1561291057821561280a57608085015185516001600160a01b039081166000908152600460209081526040808320828b01519094168352928152828220878352905220546127d191613b2c565b85516001600160a01b039081166000908152600460209081526040808320828b015190941683529281528282208783529052205561283d565b60808501516101208601516128369160381b63ffffffff60381b1663ffffffff60381b19919091161790565b6101208601525b81156128b457608085015185516001600160a01b039081166000908152600460208181526040808420828c018051871686529083528185208986528352818520548c518716865293835281852090519095168452938152838320878452905291902060e09290921b6001600160e01b039091161790555b8380156128ce57506101408501516001600160601b031615155b1561291057612909856000015186602001516128ef88610140015160e01c90565b61014089015160c01c63ffffffff16896101200151613257565b6101208601525b60408501516060808701516000926001600160601b03909116911b6bffffffffffffffffffffffff60601b1660c085901b63ffffffff60c01b1660e087901b17171786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282206080909a0151825298909852909620959095555050505050565b6129dd6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b60f882901c1515815260e882901c61ffff166020820152607882901c6001600160701b03166040820152606082811c62ffffff1690820152605882901c60ff1615156080820152603882901c63ffffffff90811660a083015260189290921c90911660c082015290565b60581b60ff60581b1660ff60581b19919091161790565b60008060008087886001600160a01b031614612abc5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657257616e74732f313630626974730000006044820152606401610a85565b86876001600160a01b031614612b145760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657247697665732f313630626974730000006044820152606401610a85565b612b1c61483e565b6001600160a01b03808c1682528a166020820152612b3a8b8b6119d2565b610100830181905260e083019190915260381c63ffffffff1660408083019182526001600160a01b03808e16600090815260046020908152838220928f1682529182528281209351815292905290205460608201526080810189905260a08101889052612ba561489c565b898152602081018990526001600160a01b03871660a082015287151560c082015260e0820151610100830151612bdb91906121cc565b612be9826101000151612180565b610100820151612bfa906001612a47565b82610100018181525050816101000151600260008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020819055507fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b960405160405180910390a1612c8e81836001613b49565b612c9b8160800151613862565b866001600160a01b03168b6001600160a01b03168d6001600160a01b03167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec478460400151856060015186608001518760e00151604051612d14949392919093845260208401929092526040830152606082015260800190565b60405180910390a460408101516060820151608083015160e090930151919e909d50919b509950975050505050505050565b6001600160a01b0380851660009081526007602090815260408083208785168452825280832093861683529281528282203383529052205481811015612dc15760405162461bcd60e51b815260206004820152601060248201526f6d67762f6c6f77416c6c6f77616e636560801b6044820152606401610a85565b6001600160a01b0380861660008181526007602090815260408083208986168085529083528184209589168452948252808320338085529252918290208686039081905591517f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d92612e37928992909190614eaa565b60405180910390a35050505050565b612e716040518060800160405280600081526020016000815260200160008152602001600081525090565b60e082901c815263ffffffff60c083901c1660208201526001600160601b03606083811c8216604084015292169181019190915290565b612edc604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b606082811c8252604883901c62ffffff908116602080850191909152603085901c90911660408401529290921c61ffff169181019190915290565b6000806323b872dd60e01b858585604051602401612f3793929190614eaa565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080876001600160a01b031683604051612f879190614ef2565b6000604051808303816000865af19150503d8060008114612fc4576040519150601f19603f3d011682016040523d82523d6000602084013e612fc9565b606091505b5091509150818015612ff3575080511580612ff3575080806020019051810190612ff39190614f2d565b98975050505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928391829188169061305d908590614ef2565b6000604051808303816000865af19150503d806000811461309a576040519150601f19603f3d011682016040523d82523d6000602084013e61309f565b606091505b50915091508180156130c95750805115806130c95750808060200190518101906130c99190614f2d565b93505050505b9392505050565b600080636c49c32c60e01b836040516024016130f29190614f4a565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b0390931692909217909152905060c0830135604881901c62ffffff169060601c60005a905082604082048203101561319457604080516060810182527f6d67762f6e6f74456e6f756768476173466f724d616b6572547261646500000081526000602082018190529181019190915261319490606081fd5b6000806131a2848688613db1565b915091505a83039650816131e8576131e860405180606001604052806e1b59dd8bdb585ad95c94995d995c9d608a1b81526020018960001b815260200183815250606081fd5b60006132066131fa60208b018b614973565b86308c60800135612f17565b90508061324b5761324b6040518060600160405280741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b81526020018a60001b815260200184815250606081fd5b50505050505050919050565b600083156132ca576001600160a01b0380871660009081526004602090815260408083209389168352928152828220878352905220546132979084613b2c565b6001600160a01b038088166000908152600460209081526040808320938a168352928152828220888352905220556132e7565b63ffffffff60381b19821663ffffffff60381b603885901b161791505b821561332e576001600160a01b038681166000908152600460209081526040808320938916835292815282822086835290522080546001600160e01b031660e086901b1790555b50949350505050565b6001600160601b03198316925080156133575765ffff0000000019821691505b506001600160a01b039485166000818152600460209081526040808320979098168083529681528782208683528152878220949094559081526005835285812094815293825284842092845291905291902055565b60781b6dffffffffffffffffffffffffffff60781b166dffffffffffffffffffffffffffff60781b19919091161790565b60008080805b8481101561385757600060408901819052606089015285858281811061340b5761340b614fdc565b90506080020160006004811061342357613423614fdc565b60209081029190910135604089810191825289516001600160a01b039081166000908152600485528281208c86018051841683529086528382208551835286528382205460608e019081528d518416835260058752848320915190931682528552828120935181529290935290205460c0890152516001600160601b031615806134ef57508585828181106134ba576134ba614fdc565b9050608002016003600481106134d2576134d2614fdc565b60200201356134ed8860c0015162ffffff60489190911c1690565b115b61384f5785858281811061350557613505614fdc565b90506080020160016004811061351d5761351d614fdc565b602002013586868381811061353457613534614fdc565b90506080020160016004811061354c5761354c614fdc565b60200201356001600160601b0316146135a75760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657257616e74732f393662697473000000006044820152606401610a85565b8585828181106135b9576135b9614fdc565b9050608002016002600481106135d1576135d1614fdc565b60200201358686838181106135e8576135e8614fdc565b90506080020160026004811061360057613600614fdc565b60200201356001600160601b03161461365b5760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657247697665732f393662697473000000006044820152606401610a85565b85858281811061366d5761366d614fdc565b90506080020160016004811061368557613685614fdc565b602002013560808801528585828181106136a1576136a1614fdc565b9050608002016002600481106136b9576136b9614fdc565b602002013560a08801526101008701516136d4906001612a47565b610100880181905287516001600160a01b039081166000908152600260209081526040808320828d015190941683529290529081209190915580806137198b8b613ddf565b925092509250806f6d67762f74726164655375636365737360801b03613740576001870196505b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b146137945761378d8a600001518b602001516137748d6060015160e01c90565b60608e015160c01c63ffffffff168e6101000151613257565b6101008b01525b6101008a01516137a5906000612a47565b8a610100018181525050896101000151600260008c600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008c602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055506138138b8b6143df565b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b14613839576138398b8b8585856144e1565b8a60400151860195508a60600151850194505050505b6001016133e3565b509450945094915050565b8015611ea457604051600090339083908381818185875af1925050503d80600081146138aa576040519150601f19603f3d011682016040523d82523d6000602084013e6138af565b606091505b505090508061098b5760405162461bcd60e51b815260206004820152601760248201527f6d67762f73656e6450656e616c747952657665727465640000000000000000006044820152606401610a85565b60008060008060008560e0015190506000866080015182146139555786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282208583529052205461395c565b8661014001515b90506001600160601b0381166139b55761012087015160381c63ffffffff1687516001600160a01b039081166000908152600460209081526040808320828d015190941683529281528282208483529052205490925090505b6139c0878284614544565b15613a5a5760005b60c082901c63ffffffff1615613a42575086516001600160a01b039081166000908152600460209081526040808320828c0151909416835292815282822063ffffffff60c086901c1680845291529190205490613a26898383614544565b15613a3657809350819250613a3c565b50613a42565b506139c8565b8260c083901c63ffffffff169095509350613ae39050565b60005b613a678260e01c90565b15613ad0576000613a788360e01c90565b89516001600160a01b039081166000908152600460209081526040808320828f015190941683529281528282208483529052205492509050613abb898383614544565b15613ac65750613ad0565b9250905080613a5d565b613ada8260e01c90565b94509192508291505b86608001518414613af45783613afe565b61014087015160e01c5b87608001518414613b0f5783613b1f565b61014088015160c01c63ffffffff165b9550955050505050915091565b60c01b63ffffffff60c01b1663ffffffff60c01b19919091161790565b808015613b7057508260c00151613b675760008260a0015111613b70565b60008260800151115b8015613b80575060008260400151115b15613d3c5781516001600160a01b03908116600090815260056020908152604080832082870151909416835292815282822083860151835290529081205460c08401528080613bcf8686613ddf565b608088015160a089015160408a015160608b015160c08c015196995094975092955090939092906e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613cc65760408b01518b5111613c22576000613c2b565b60408b01518b51035b60808b015260608b81015160208d01510360a08c01528a015160c01c63ffffffff168a6040018181525050600460008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b602001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b604001518152602001908152602001600020548a60600181815250505b613ce68b8b886e1b59dd8bdb9bdd115e1958dd5d1959608a1b1415613b49565b60408a0183905260808a0185905260a08a0184905260608a0182905260c08a018190526e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613d2f57613d2f8b8b8a8a8a6144e1565b5050505050505050505050565b613d5b8260000151836020015160008560400151866101000151613257565b6101008301819052613d6e906000612a47565b610100830181905282516001600160a01b0390811660009081526002602090815260408083208288015190941683529290522055613dac83836143df565b505050565b600080613dbc6148ec565b60648185516020870160008a8af192508060448415020151915050935093915050565b600080600080613dff85606001516001600160601b0360609190911c1690565b90506000613e1786606001516001600160601b031690565b608087015160a0880151919250908083028483021115613e575750600095508594506e1b59dd8bdb9bdd115e1958dd5d1959608a1b93506143d892505050565b8860c001518015613e6757508183105b80613e7e57508860c00151158015613e7e57508084105b15613e96576080880183905260a08801849052613f0d565b8860c0015115613ee157838202838181613eb257613eb2614fc6565b0615613ebf576001613ec2565b60005b60ff16848281613ed457613ed4614fc6565b040160a08a015250613f0d565b83600003613ef55760808801839052613f0d565b8381840281613f0657613f06614fc6565b0460808901525b50505050600080306001600160a01b031663aa4dd28260e01b878960a00151604051602401613f3d929190615058565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051613f7b9190614ef2565b6000604051808303816000865af19150503d8060008114613fb8576040519150601f19603f3d011682016040523d82523d6000602084013e613fbd565b606091505b509150915081156141175780806020019051810190613fdc9190615080565b94506f6d67762f74726164655375636365737360801b925085602001516001600160a01b031686600001516001600160a01b03167f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d88604001518a60a001518a608001518b60a0015160405161407494939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405180910390a360e086015160501c60ff16156140f25760e086015160a088015160405163cac1827160e01b815260609290921c9163cac18271916140bf918a9190600401615058565b600060405180830381600087803b1580156140d957600080fd5b505af11580156140ed573d6000803e3d6000fd5b505050505b6080860151604088018051909101905260a0860151606088018051909101905261439d565b602081015160408201516060830151909650945092506e1b59dd8bdb585ad95c94995d995c9d608a1b831480614164575082741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b145b80614185575082731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b145b156142975785602001516001600160a01b031686600001516001600160a01b03167f1d59c048edb5397821854bd12cbe02242b82101c677f949d076d14eb7bd8343688604001518a60a001518a608001518b60a00151896040516142149594939291909485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b60405180910390a360e086015160501c60ff16156142925760e086015160a0880151604051631159507360e01b815260609290921c9163115950739161425f918a9190600401615058565b600060405180830381600087803b15801561427957600080fd5b505af115801561428d573d6000803e3d6000fd5b505050505b61439d565b827f6d67762f6e6f74456e6f756768476173466f724d616b65725472616465000000036143065760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000006044820152606401610a85565b82741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b036143655760405162461bcd60e51b81526020600482015260156024820152741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b6044820152606401610a85565b60405162461bcd60e51b815260206004820152600d60248201526c36b3bb17b9bbb0b822b93937b960991b6044820152606401610a85565b6143d586600001518760200151886040015189606001518a60c00151886f6d67762f74726164655375636365737360801b1415613337565b50505b9250925092565b6101008101516000906127109060e81c61ffff168460400151028161440657614406614fc6565b049050801561447c57604083018051829003905260e08301819052815160005461443a91906001600160a01b031683612fff565b61447c5760405162461bcd60e51b81526020600482015260136024820152721b59dd8bd99959551c985b9cd9995c91985a5b606a1b6044820152606401610a85565b604083015115613dac5761449d82600001518460a001518560400151612fff565b613dac5760405162461bcd60e51b815260206004820152601560248201527436b3bb17a6b3bb2330b4b62a37a830bcaa30b5b2b960591b6044820152606401610a85565b60c084015160481c62ffffff16808411156144fa578093505b6145088585830385856145ea565b84019350816f6d67762f74726164655375636365737360801b1461453c576145308585614740565b60808701805190910190525b505050505050565b600081600003614556575060016130cf565b60408401516060858101516001600160601b039186901c82169291861691908084028284028082036145dd5789516001600160a01b039081166000908152600560209081526040808320828f015190941683529281528282208b835290529081205460481c62ffffff1660a08c0151940295909302949094101595506130cf945050505050565b1194506130cf9350505050565b600080633d3d130d60e01b8660405180604001604052808781526020018681525060405160240161461c929190615099565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319939093169290921790915260c087015190915060601c60005a90508660408204820310156146b45760405162461bcd60e51b815260206004820181905260248201527f6d67762f6e6f74456e6f756768476173466f724d616b6572506f7374686f6f6b6044820152606401610a85565b6000806146c2848a87613db1565b915091505a83039550816147335789602001516001600160a01b03168a600001516001600160a01b03167f51d5a3ecf332626d83c8207fe9bd22f38801f578c7eb222e2d811cd1b4c629a58c604001518460405161472a929190918252602082015260400190565b60405180910390a35b5050505050949350505050565b60c082015160009062ffffff604882901c81169161ffff602082901c1660309190911c909116820102633b9aca00028184111561477b578193505b61010085015160009060601c62ffffff1660e08701519086019060401c61ffff16633b9aca0002029050818111156147b05750805b6147c96147c18760c0015160601c90565b828403611ea7565b95945050505050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610120016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600081525090565b60405180608001604052806004906020820280368337509192915050565b80356001600160a01b038116811461492157600080fd5b919050565b600080600080600060a0868803121561493e57600080fd5b6149478661490a565b94506149556020870161490a565b94979496505050506040830135926060810135926080909101359150565b60006020828403121561498557600080fd5b6130cf8261490a565b6000602082840312156149a057600080fd5b5035919050565b6000806000606084860312156149bc57600080fd5b6149c58461490a565b92506149d36020850161490a565b9150604084013590509250925092565b60008083601f8401126149f557600080fd5b50813567ffffffffffffffff811115614a0d57600080fd5b6020830191508360208260071b8501011115611ac857600080fd5b8015158114611ea457600080fd5b600080600080600060808688031215614a4e57600080fd5b614a578661490a565b9450614a656020870161490a565b9350604086013567ffffffffffffffff811115614a8157600080fd5b614a8d888289016149e3565b9094509250506060860135614aa181614a28565b809150509295509295909350565b600080600080600080600060e0888a031215614aca57600080fd5b614ad38861490a565b9650614ae16020890161490a565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b60008060008060808587031215614b2357600080fd5b614b2c8561490a565b9350614b3a6020860161490a565b9250614b486040860161490a565b9396929550929360600135925050565b600060208284031215614b6a57600080fd5b81356130cf81614a28565b60008060408385031215614b8857600080fd5b614b918361490a565b9150614b9f6020840161490a565b90509250929050565b600080600080600080600080610100898b031215614bc557600080fd5b614bce8961490a565b9750614bdc60208a0161490a565b979a9799505050506040860135956060810135956080820135955060a0820135945060c0820135935060e0909101359150565b60008060008060008060c08789031215614c2857600080fd5b614c318761490a565b9550614c3f6020880161490a565b945060408701359350606087013592506080870135614c5d81614a28565b9150614c6b60a0880161490a565b90509295509295509295565b600080828403610140811215614c8c57600080fd5b61012080821215614c9c57600080fd5b849350610f7c81860161490a565b60008060008060808587031215614cc057600080fd5b614cc98561490a565b9350614cd76020860161490a565b9250604085013591506060850135614cee81614a28565b939692955090935050565b60008060008060008060008060006101208a8c031215614d1857600080fd5b614d218a61490a565b9850614d2f60208b0161490a565b9750614d3d60408b0161490a565b9650614d4b60608b0161490a565b955060808a0135945060a08a0135935060c08a013560ff81168114614d6f57600080fd5b8093505060e08a013591506101008a013590509295985092959850929598565b60008060008060008060a08789031215614da857600080fd5b614db18761490a565b9550614dbf6020880161490a565b9450604087013567ffffffffffffffff811115614ddb57600080fd5b614de789828a016149e3565b9095509350506060870135614dfb81614a28565b9150614c6b6080880161490a565b60008060008060808587031215614e1f57600080fd5b614e288561490a565b9350614e366020860161490a565b9250614e446040860161490a565b9150614e526060860161490a565b905092959194509250565b600080600080600060a08688031215614e7557600080fd5b614e7e8661490a565b9450614e8c6020870161490a565b935060408601359250606086013591506080860135614aa181614a28565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60008060408385031215614ee157600080fd5b505080516020909101519092909150565b6000825160005b81811015614f135760208186018101518583015201614ef9565b81811115614f22576000828501525b509190910192915050565b600060208284031215614f3f57600080fd5b81516130cf81614a28565b61012081016001600160a01b0380614f618561490a565b16835280614f716020860161490a565b1660208401525060408301356040830152606083013560608301526080830135608083015260a083013560a083015260c083013560c083015260e083013560e083015261010080840135818401525092915050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60018060a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b61014081016150678285614ff2565b6001600160a01b03929092166101209190910152919050565b60006020828403121561509257600080fd5b5051919050565b61016081016150a88285614ff2565b82516101208301526020830151610140830152939250505056fea2646970667358221220499241dc243bdcb4e833b09a1b7eec4b8948311d5c1950899a510972d4b519f164736f6c634300080e0033608060405234801561001057600080fd5b506040516108d83803806108d883398101604081905261002f91610098565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169390911692909217909155600280546001600160a81b0319169190921617600160a01b1790556100e5565b6001600160a01b038116811461009557600080fd5b50565b6000806000606084860312156100ad57600080fd5b83516100b881610080565b60208501519093506100c981610080565b60408501519092506100da81610080565b809150509250925092565b6107e4806100f46000396000f3fe60806040526004361061004e5760003560e01c80633d3d130d1461005a5780636c49c32c1461007b578063a3cfe14d146100ad578063cda30c3b146100cd578063d3845fea146100ed57600080fd5b3661005557005b600080fd5b34801561006657600080fd5b506100796100753660046105c4565b5050565b005b34801561008757600080fd5b5061009b610096366004610607565b61010d565b60405190815260200160405180910390f35b3480156100b957600080fd5b506100796100c836600461062b565b610156565b3480156100d957600080fd5b506100796100e8366004610663565b6101d2565b3480156100f957600080fd5b50610079610108366004610695565b610551565b600254600354600091600160a01b900460ff1690604084013503610139576002805460ff60a01b191690555b80156101485760009150610150565b6101506106ae565b50919050565b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af11580156101a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cd91906106c4565b505050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416946349f6d2dc946102159481169316918a918a918a91908a906004016106e6565b6020604051808303816000875af1158015610234573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102589190610724565b506000805460015460025460405163127db4b760e21b81526001600160a01b03938416946349f6d2dc9461029c9481169316918a918a918a91908a906004016106e6565b6020604051808303816000875af11580156102bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102df9190610724565b506000805460015460025460405163127db4b760e21b81526001600160a01b03938416946349f6d2dc946103239481169316918a918a918a91908a906004016106e6565b6020604051808303816000875af1158015610342573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103669190610724565b506000805460015460025460405163127db4b760e21b81526001600160a01b03938416946349f6d2dc946103aa9481169316918a918a918a91908a906004016106e6565b6020604051808303816000875af11580156103c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ed9190610724565b50600080546001546002546040516365fbae4d60e11b81526001600160a01b039283166004820152908216602482015291169063cbf75c9a906044016040805180830381865afa158015610445573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610469919061073d565b600054600180546002549395506dffffffffffffffffffffffffffff607887901c16945062ffffff606087901c16936001600160a01b03938416936349f6d2dc93928116929116906104be86620186a0610777565b600088116104cd5760016104cf565b875b6104d9919061078f565b620186a06000806040518863ffffffff1660e01b815260040161050297969594939291906106e6565b6020604051808303816000875af1158015610521573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105459190610724565b60035550505050505050565b600080546040516001600160a01b039091169083908381818185875af1925050503d806000811461059e576040519150601f19603f3d011682016040523d82523d6000602084013e6105a3565b606091505b505090508061007557600080fd5b6000610120828403121561015057600080fd5b6000808284036101608112156105d957600080fd5b6105e385856105b1565b9250604061011f19820112156105f857600080fd5b50610120830190509250929050565b6000610120828403121561061a57600080fd5b61062483836105b1565b9392505050565b6000806040838503121561063e57600080fd5b82356001600160a01b038116811461065557600080fd5b946020939093013593505050565b6000806000806080858703121561067957600080fd5b5050823594602084013594506040840135936060013592509050565b6000602082840312156106a757600080fd5b5035919050565b634e487b7160e01b600052600160045260246000fd5b6000602082840312156106d657600080fd5b8151801515811461062457600080fd5b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b60006020828403121561073657600080fd5b5051919050565b6000806040838503121561075057600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b6000821982111561078a5761078a610761565b500190565b60008160001904831182151516156107a9576107a9610761565b50029056fea2646970667358221220bcd41fa8b88b3760c5bd8455cf4f873f598ef8ba07ae3bdf6eec671cbb941b7f64736f6c634300080e0033608060405234801561001057600080fd5b50604051610baf380380610baf83398101604081905261002f91610089565b600080546001600160a01b039485166001600160a01b0319918216179091556001805493851693821693909317909255600280549190931691161790556100d6565b6001600160a01b038116811461008657600080fd5b50565b60008060006060848603121561009e57600080fd5b83516100a981610071565b60208501519093506100ba81610071565b60408501519092506100cb81610071565b809150509250925092565b610aca806100e56000396000f3fe6080604052600436106100955760003560e01c8063a3cfe14d11610059578063a3cfe14d14610198578063aa2cc08b146101b8578063b04220dd146100e4578063e1f21c67146101d8578063ff2e2d33146101f857600080fd5b8063080d7c4d146100a15780631154020b146100c35780632d24c42f146100e45780634d1d2b661461011e578063978b7c021461016857600080fd5b3661009c57005b600080fd5b3480156100ad57600080fd5b506100c16100bc366004610757565b610218565b005b3480156100cf57600080fd5b506100c16100de366004610783565b50505050565b3480156100f057600080fd5b506101046100ff3660046107c9565b6102aa565b604080519283526020830191909152015b60405180910390f35b34801561012a57600080fd5b5061013e6101393660046107c9565b61034d565b6040805195151586526020860194909452928401919091526060830152608082015260a001610115565b34801561017457600080fd5b506101886101833660046107c9565b610444565b6040519015158152602001610115565b3480156101a457600080fd5b506100c16101b3366004610757565b6104bc565b3480156101c457600080fd5b506101046101d33660046107eb565b6104f5565b3480156101e457600080fd5b506100c16101f3366004610846565b610593565b34801561020457600080fd5b50610188610213366004610887565b610606565b60005460015460025460405163167ae91560e21b81526001600160a01b03928316600482015290821660248201528482166044820152606481018490529116906359eba454906084015b6020604051808303816000875af1158015610281573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a5919061090a565b505050565b600080546001805460025460405163fbffe5fd60e01b81526001600160a01b0392831660048201529082166024820152604481018790526064810186905260848101929092528392169063fbffe5fd9060a4016080604051808303816000875af115801561031c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610340919061092c565b5091969095509350505050565b60008060008060008061039560405180608001604052808a81526020018981526020016bffffffffffffffffffffffff8016815260200165ffffffffffff80168152506106c4565b6000805460018054600254604051632370a17d60e11b8152959650939485948594859485946001600160a01b03928316946346e142fa946103e194928316939216918c91600401610962565b60a0604051808303816000875af1158015610400573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042491906109f7565b60019094149e50919c509a50985096505050505050509295509295909350565b60405163268e95b360e11b815260048101839052602481018290526000903090634d1d2b669060440160a0604051808303816000875af115801561048c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b09190610a37565b50929695505050505050565b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b390604401610262565b60405163fbffe5fd60e01b81526001600160a01b0385811660048301528481166024830152604482018490526064820183905260016084830152600091829188169063fbffe5fd9060a4016080604051808303816000875af115801561055f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610583919061092c565b5091999098509650505050505050565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b3906044016020604051808303816000875af11580156105e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100de919061090a565b6000806106326040518060800160405280888152602001878152602001868152602001858152506106c4565b90506000896001600160a01b03166346e142fa8a8a8560016040518563ffffffff1660e01b81526004016106699493929190610962565b60a0604051808303816000875af1158015610688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ac91906109f7565b50506001909214945050505050979650505050505050565b60408051600180825281830190925260609160009190816020015b6106e7610721565b8152602001906001900390816106df579050509050828160008151811061071057610710610a7e565b602090810291909101015292915050565b60405180608001604052806004906020820280368337509192915050565b6001600160a01b038116811461075457600080fd5b50565b6000806040838503121561076a57600080fd5b82356107758161073f565b946020939093013593505050565b6000806000806080858703121561079957600080fd5b84356107a48161073f565b935060208501356107b48161073f565b93969395505050506040820135916060013590565b600080604083850312156107dc57600080fd5b50508035926020909101359150565b600080600080600060a0868803121561080357600080fd5b853561080e8161073f565b9450602086013561081e8161073f565b9350604086013561082e8161073f565b94979396509394606081013594506080013592915050565b60008060006060848603121561085b57600080fd5b83356108668161073f565b925060208401356108768161073f565b929592945050506040919091013590565b600080600080600080600060e0888a0312156108a257600080fd5b87356108ad8161073f565b965060208801356108bd8161073f565b955060408801356108cd8161073f565b969995985095966060810135965060808101359560a0820135955060c0909101359350915050565b8051801515811461090557600080fd5b919050565b60006020828403121561091c57600080fd5b610925826108f5565b9392505050565b6000806000806080858703121561094257600080fd5b505082516020840151604085015160609095015191969095509092509050565b6001600160a01b038581168252841660208083019190915260806040830181905284518382018190526000928681019160a08601919085805b828110156109d857855185835b60048110156109c5578251825291860191908601906001016109a8565b505050948301949386019360010161099b565b50505050851515606086015292506109ee915050565b95945050505050565b600080600080600060a08688031215610a0f57600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b600080600080600060a08688031215610a4f57600080fd5b610a58866108f5565b602087015160408801516060890151608090990151929a91995097965090945092505050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220ee5af508a000963283870ccb1238e226334c277144ecdb6cbe941aa9b871504c64736f6c634300080e0033608060405234801561001057600080fd5b5060405161452138038061452183398101604081905261002f91610092565b600180546001600160a01b0394851661010002610100600160a81b0319909116179055600280549284166001600160a01b0319938416179055600380549190931691161790556100df565b6001600160a01b038116811461008f57600080fd5b50565b6000806000606084860312156100a757600080fd5b83516100b28161007a565b60208501519093506100c38161007a565b60408501519092506100d48161007a565b809150509250925092565b614433806100ee6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631f7b6d32146100515780635686153214610067578063a5e3875114610092578063e9c4a3ac146100a7575b600080fd5b6000546040519081526020015b60405180910390f35b61007a61007536600461047a565b6100af565b6040516001600160a01b03909116815260200161005e565b6100a56100a036600461047a565b6100de565b005b6100a5610320565b60008082815481106100c3576100c3610493565b6000918252602090912001546001600160a01b031692915050565b60015460ff16610311578067ffffffffffffffff811115610101576101016104a9565b60405190808252806020026020018201604052801561012a578160200160208202803683370190505b50805161013f916000916020909101906103f3565b5060005b8181101561030f576001546002546003546040516101009093046001600160a01b03908116939281169291169061017990610458565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f0801580156101b5573d6000803e3d6000fd5b50600082815481106101c9576101c9610493565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506000818154811061020a5761020a610493565b60009182526020909120015460025460405163a3cfe14d60e01b81526001600160a01b039182166004820152678ac7230489e80000602482015291169063a3cfe14d90604401600060405180830381600087803b15801561026a57600080fd5b505af115801561027e573d6000803e3d6000fd5b505050506000818154811061029557610295610493565b600091825260209091200154604051635239cafb60e11b8152821560048201526001600160a01b039091169063a47395f690602401600060405180830381600087803b1580156102e457600080fd5b505af11580156102f8573d6000803e3d6000fd5b505050508080610307906104bf565b915050610143565b505b506001805460ff191681179055565b600080549061032f82476104e6565b90506000811161037b5760405162461bcd60e51b8152602060048201526013602482015272181032ba3432b9103a37903a3930b739b332b960691b604482015260640160405180910390fd5b60005b828110156103ee57600080828154811061039a5761039a610493565b60009182526020822001546040516001600160a01b039091169250829085156108fc0290869084818181858888f193505050509050806103d957600080fd5b505080806103e6906104bf565b91505061037e565b505050565b828054828255906000526020600020908101928215610448579160200282015b8281111561044857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610413565b50610454929150610465565b5090565b613ef58061050983390190565b5b808211156104545760008155600101610466565b60006020828403121561048c57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6000600182016104df57634e487b7160e01b600052601160045260246000fd5b5060010190565b60008261050357634e487b7160e01b600052601260045260246000fd5b50049056fe60806040526000805462ff00ff1916620100011790553480156200002257600080fd5b5060405162003ef538038062003ef58339810160408190526200004591620000a1565b600880546001600160a01b039485166001600160a01b0319918216179091556009805493851693821693909317909255600a8054919093169116179055620000f5565b6001600160a01b03811681146200009e57600080fd5b50565b600080600060608486031215620000b757600080fd5b8351620000c48162000088565b6020850151909350620000d78162000088565b6040850151909250620000ea8162000088565b809150509250925092565b613df080620001056000396000f3fe60806040526004361061026b5760003560e01c8063a3cfe14d11610144578063d3845fea116100b6578063f5537ede1161007a578063f5537ede146107b9578063f8ccbf47146107d9578063fa7626d4146107f9578063fc3816c814610813578063fc8349f214610833578063ffae399e1461085357600080fd5b8063d3845fea14610719578063d82555f114610739578063e67ecda114610759578063e923c65114610779578063e9a79a7b1461079957600080fd5b8063c4c6c87d11610108578063c4c6c87d14610659578063c88a5e6d14610679578063cafffca814610699578063ccfbf94d146106b9578063cda30c3b146106d9578063d06d8229146106f957600080fd5b8063a3cfe14d1461059b578063a47395f6146105bb578063af9bbe5f146105f4578063b9c071b414610614578063ba414fa61461063457600080fd5b806353e575ac116101dd5780636f597075116101a15780636f597075146104cd5780637a943a37146104ed5780637ec95ff3146105265780638b0af9bb1461054657806397754ae91461055b5780639a8325a01461057b57600080fd5b806353e575ac146103f8578063557f49c3146104265780635a4924e81461045f5780636bce989b1461048d5780636c49c32c146104ad57600080fd5b806329ce9dde1161022f57806329ce9dde146103195780632d6c17a31461035657806333ac5efd146103765780633a768463146103965780633bf82db1146103b85780633d3d130d146103d857600080fd5b80630cc9d65614610277578063108554f214610299578063233240ee146102b95780632644c05c146102d957806329a9e300146102f957600080fd5b3661027257005b600080fd5b34801561028357600080fd5b5061029761029236600461333e565b61088c565b005b3480156102a557600080fd5b506102976102b43660046133a3565b6108d5565b3480156102c557600080fd5b506102976102d43660046133cf565b6109a6565b3480156102e557600080fd5b506102976102f43660046133f3565b610a7a565b34801561030557600080fd5b5061029761031436600461342e565b610afb565b34801561032557600080fd5b50610339610334366004613534565b610ba6565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561036257600080fd5b506102976103713660046135ac565b610ccd565b34801561038257600080fd5b506102976103913660046135c5565b610d09565b3480156103a257600080fd5b50610339600080516020613d7b83398151915281565b3480156103c457600080fd5b506102976103d3366004613608565b610d8c565b3480156103e457600080fd5b506102976103f336600461365c565b610e66565b34801561040457600080fd5b506104186104133660046133f3565b610fa2565b60405190815260200161034d565b34801561043257600080fd5b506102976104413660046136ad565b600a8054911515600160a81b0260ff60a81b19909216919091179055565b34801561046b57600080fd5b5061029761047a3660046136ad565b600c805460ff1916911515919091179055565b34801561049957600080fd5b506102976104a8366004613608565b61103a565b3480156104b957600080fd5b506104186104c83660046136ca565b61104c565b3480156104d957600080fd5b506102976104e83660046133cf565b6111b0565b3480156104f957600080fd5b506102976105083660046136ad565b600a8054911515600160b81b0260ff60b81b19909216919091179055565b34801561053257600080fd5b506104186105413660046135c5565b611253565b34801561055257600080fd5b506104186112ec565b34801561056757600080fd5b506102976105763660046136e7565b61135e565b34801561058757600080fd5b5061033961059636600461373a565b61157e565b3480156105a757600080fd5b506102976105b63660046133a3565b611678565b3480156105c757600080fd5b506102976105d63660046136ad565b600a8054911515600160a01b0260ff60a01b19909216919091179055565b34801561060057600080fd5b5061029761060f366004613608565b6116ef565b34801561062057600080fd5b5061029761062f3660046135ac565b611796565b34801561064057600080fd5b506106496117b4565b604051901515815260200161034d565b34801561066557600080fd5b506104186106743660046135ac565b6118d7565b34801561068557600080fd5b506102976106943660046133a3565b61196e565b3480156106a557600080fd5b506104186106b43660046135ac565b6119a1565b3480156106c557600080fd5b506104186106d4366004613777565b6119f3565b3480156106e557600080fd5b506104186106f43660046137d0565b611a73565b34801561070557600080fd5b5061029761071436600461342e565b611b06565b34801561072557600080fd5b506102976107343660046135ac565b611bb1565b34801561074557600080fd5b50610297610754366004613608565b611bf7565b34801561076557600080fd5b506102976107743660046135ac565b600b55565b34801561078557600080fd5b506104186107943660046133f3565b611ce8565b3480156107a557600080fd5b506102976107b43660046133a3565b611d72565b3480156107c557600080fd5b506102976107d4366004613608565b611e11565b3480156107e557600080fd5b506000546106499062010000900460ff1681565b34801561080557600080fd5b506000546106499060ff1681565b34801561081f57600080fd5b5061041861082e366004613802565b611e88565b34801561083f57600080fd5b5061064961084e3660046135ac565b611f16565b34801561085f57600080fd5b5061029761086e3660046136ad565b600a8054911515600160b01b0260ff60b01b19909216919091179055565b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c28686868686866040516108c596959493929190613864565b60405180910390a1505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610908908590859060040161389d565b600060405180830381600087803b15801561092257600080fd5b505af1158015610936573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0385166004820152600080516020613d7b83398151915292506306447d5691506024015b600060405180830381600087803b15801561098a57600080fd5b505af115801561099e573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d906109dd908490600160801b9060040161389d565b600060405180830381600087803b1580156109f757600080fd5b505af1158015610a0b573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0384166004820152600080516020613d7b833981519152925063ca669fa791506024015b600060405180830381600087803b158015610a5f57600080fd5b505af1158015610a73573d6000803e3d6000fd5b5050505050565b600854600954600a54604051636a4f769160e01b81526001600160a01b0393841693636a4f769193610ac293908216929116908a908a908a906000908b908b906004016138b6565b600060405180830381600087803b158015610adc57600080fd5b505af1158015610af0573d6000803e3d6000fd5b505050505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610b32908590600160801b9060040161389d565b600060405180830381600087803b158015610b4c57600080fd5b505af1158015610b60573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808616600483015284166024820152600080516020613d7b83398151915292506347e50cce9150604401610970565b604051638d1cc92560e01b81526000908190600080516020613d7b83398151915290638d1cc92590610bdc908790600401613952565b6000604051808303816000875af1158015610bfb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c239190810190613965565b83604051602001610c359291906139d3565b60405160208183030381529060405290508051602082016000f091506001600160a01b038216610cc65760405162461bcd60e51b815260206004820152603160248201527f54657374206465706c6f79436f646528737472696e672c6279746573293a204460448201527032b83637bcb6b2b73a103330b4b632b21760791b60648201526084015b60405180910390fd5b5092915050565b600080516020613d7b83398151915263e5d6bf02610ceb8342613a18565b6040518263ffffffff1660e01b8152600401610a4591815260200190565b600854600954600a54604051636a4f769160e01b81526001600160a01b0393841693636a4f7691938693610d52939183169216908c908c908c906000908d908d906004016138b6565b6000604051808303818588803b158015610d6b57600080fd5b505af1158015610d7f573d6000803e3d6000fd5b5050505050505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610dbf908690859060040161389d565b600060405180830381600087803b158015610dd957600080fd5b505af1158015610ded573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808716600483015285166024820152600080516020613d7b83398151915292506345b5607891506044015b600060405180830381600087803b158015610e4957600080fd5b505af1158015610e5d573d6000803e3d6000fd5b50505050505050565b600c5460ff1615610ea85760405162461bcd60e51b815260206004820152600c60248201526b1c1bdcdd1a1bdbdad1985a5b60a21b6044820152606401610cbd565b600b5415610ef657610ef68160200135600b546040518060400160405280601881526020017f496e636f727265637420737461747573206d6573736167650000000000000000815250611f86565b600a54600160b81b900460ff1615610f9e576008546001600160a01b0316636a4f7691610f2660208501856133cf565b610f3660408601602087016133cf565b606080870135901c6bffffffffffffffffffffffff166bffffffffffffffffffffffff60608801351660c088013560481c62ffffff16600060608a013560e01c8a604001356040518963ffffffff1660e01b81526004016109709897969594939291906138b6565b5050565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc938793610fed9392831692909116908c908c908c908a908d90600401613a2f565b60206040518083038185885af115801561100b573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906110309190613a6d565b9695505050505050565b611047838383600061135e565b505050565b600a54600090600160b01b900460ff1615611087576040805160208082019092526f1d195cdd13585ad95c8bdc995d995c9d60821b81529081fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c2336110b660208501856133cf565b6110c660408601602087016133cf565b856040013586608001358760a001356040516110e796959493929190613864565b60405180910390a1600a54600160a01b900460ff16156111875761110e60208301836133cf565b60085460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926111429291169060009060040161389d565b6020604051808303816000875af1158015611161573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111859190613a86565b505b600a54600160a81b900460ff16156111a857506418589bdc9d60da1b919050565b506000919050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d906111e7908490600160801b9060040161389d565b600060405180830381600087803b15801561120157600080fd5b505af1158015611215573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0384166004820152600080516020613d7b83398151915292506306447d569150602401610a45565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc93879361129e9392831692909116908d908d908d908d908d90600401613a2f565b60206040518083038185885af11580156112bc573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906112e19190613a6d565b979650505050505050565b6008546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611335573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113599190613a6d565b905090565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b17905291516000928716916113b291613aa3565b6000604051808303816000865af19150503d80600081146113ef576040519150601f19603f3d011682016040523d82523d6000602084013e6113f4565b606091505b5091505060008180602001905181019061140e9190613a6d565b905061147a846114748761144b6370a0823160e01b61142e60018d611fce565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b90611ff3565b821561099e5760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b038916916114c29190613aa3565b6000604051808303816000865af19150503d80600081146114ff576040519150601f19603f3d011682016040523d82523d6000602084013e611504565b606091505b5091505060008180602001905181019061151e9190613a6d565b905082861015611543576115328684613a18565b61153c9082613a18565b905061155a565b61154d8387613a18565b6115579082613abf565b90505b611574816114746318160ddd60e01b61142e60018d611fce565b5050505050505050565b604051638d1cc92560e01b81526000908190600080516020613d7b83398151915290638d1cc925906115b4908690600401613952565b6000604051808303816000875af11580156115d3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115fb9190810190613965565b90508051602082016000f091506001600160a01b0382166116725760405162461bcd60e51b815260206004820152602b60248201527f54657374206465706c6f79436f646528737472696e67293a204465706c6f796d60448201526a32b73a103330b4b632b21760a91b6064820152608401610cbd565b50919050565b60085460405163095ea7b360e01b81526001600160a01b038481169263095ea7b3926116ac9290911690859060040161389d565b6020604051808303816000875af11580156116cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110479190613a86565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90611722908690859060040161389d565b600060405180830381600087803b15801561173c57600080fd5b505af1158015611750573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808716600483015285166024820152600080516020613d7b83398151915292506347e50cce9150604401610e2f565b600080516020613d7b83398151915263e5d6bf02610ceb8342613abf565b60008054610100900460ff16156117d45750600054610100900460ff1690565b6000600080516020613d7b8339815191523b156118d257604051600090600080516020613d7b833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49061183c9083906519985a5b195960d21b9060200161389d565b60408051601f198184030181529082905261185a9291602001613ad7565b60408051601f198184030181529082905261187491613aa3565b6000604051808303816000865af19150503d80600081146118b1576040519150601f19603f3d011682016040523d82523d6000602084013e6118b6565b606091505b50915050808060200190518101906118ce9190613a86565b9150505b919050565b600854600954600a5460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810184905260006064820181905292919091169063ad97db1b906084015b6020604051808303816000875af1158015611944573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119689190613a6d565b92915050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610970908590859060040161389d565b600854600954600a5460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810184905260016064820152600092919091169063ad97db1b90608401611925565b60085460405163127db4b760e21b81526000916001600160a01b0316906349f6d2dc90611a30908a908a908a908a908a9089908b90600401613a2f565b6020604051808303816000875af1158015611a4f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e19190613a6d565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc93611aba939183169216908a908a908a9089908b90600401613a2f565b6020604051808303816000875af1158015611ad9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611afd9190613a6d565b95945050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90611b3d908590600160801b9060040161389d565b600060405180830381600087803b158015611b5757600080fd5b505af1158015611b6b573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808616600483015284166024820152600080516020613d7b83398151915292506345b560789150604401610970565b600854604051630460488160e31b81523060048201526001600160a01b039091169063230244089083906024016000604051808303818588803b15801561098a57600080fd5b7f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583604051611cc2906040808252600790820152665741524e494e4760c81b6060820152608060208201819052605e908201527f546573742074697028616464726573732c616464726573732c75696e7432353660a08201527f293a2054686520607469706020737464636865617420686173206265656e206460c08201527f6570726563617465642e2055736520606465616c6020696e73746561642e000060e08201526101000190565b60405180910390a1611047816114748461144b6370a0823160e01b61142e60018a611fce565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc93611d2f939183169216908b908b908b908b908b90600401613a2f565b6020604051808303816000875af1158015611d4e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110309190613a6d565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90611da5908590859060040161389d565b600060405180830381600087803b158015611dbf57600080fd5b505af1158015611dd3573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0385166004820152600080516020613d7b833981519152925063ca669fa79150602401610970565b60405163a9059cbb60e01b81526001600160a01b0384169063a9059cbb90611e3f908590859060040161389d565b6020604051808303816000875af1158015611e5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e829190613a86565b50505050565b60085460405163127db4b760e21b81526000916001600160a01b0316906349f6d2dc908490611ec7908c908c908c908c908c908a908d90600401613a2f565b60206040518083038185885af1158015611ee5573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611f0a9190613a6d565b98975050505050505050565b600854604051632e1a7d4d60e01b8152600481018390526000916001600160a01b031690632e1a7d4d906024016020604051808303816000875af1158015611f62573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119689190613a86565b818314611047577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051611fbc9190613b08565b60405180910390a16110478383611ffd565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b610f9e8282612127565b808214610f9e577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516120719060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a1610f9e61246b565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b946000939092909183018282801561219857602002820191906000526020600020905b815481526020019060010190808311612184575b505050505090506000836121ab83612564565b6040516020016121bc929190613ad7565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a16835281529281209194509092909161220e918691889101613b37565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166122465761224487612604565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905190918391612285918791899101613b37565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b0316846040516122ca9190613aa3565b600060405180830381855afa9150503d8060008114612305576040519150601f19603f3d011682016040523d82523d6000602084013e61230a565b606091505b50915061232390508161231e886020613b71565b613272565b604051630667f9d760e41b815290925060009150600080516020613d7b8339815191529063667f9d709061235d908b90879060040161389d565b6020604051808303816000875af115801561237c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123a09190613a6d565b90508082146123c15760405162461bcd60e51b8152600401610cbd90613b90565b6040516370ca10bb60e01b8152600080516020613d7b833981519152906370ca10bb906123f6908b9087908e90600401613c2b565b600060405180830381600087803b15801561241057600080fd5b505af1158015612424573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff1916905561245760028b0160006132ef565b896004016000905550505050505050505050565b600080516020613d7b8339815191523b1561255357604051600090600080516020613d7b833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc4906124d49083906519985a5b195960d21b90600190602001613c2b565b60408051601f19818403018152908290526124f29291602001613ad7565b60408051601f198184030181529082905261250c91613aa3565b6000604051808303816000865af19150503d8060008114612549576040519150601f19603f3d011682016040523d82523d6000602084013e61254e565b606091505b505050505b6000805461ff001916610100179055565b60606000825160206125769190613b71565b67ffffffffffffffff81111561258e5761258e613467565b6040519080825280601f01601f1916602001820160405280156125b8576020820181803683370190505b50905060005b8351811015610cc65760008482815181106125db576125db613c4c565b6020026020010151905080826020026020018401525080806125fc90613c62565b9150506125be565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b94938793919290919083018282801561267457602002820191906000526020600020905b815481526020019060010190808311612660575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051959650949193506126be92508591879101613b37565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161561275a576001600160a01b0384166000908152602087815260408083206001600160e01b0319871684528252808320905190929161272a918591879101613b37565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b60008361276683612564565b604051602001612777929190613ad7565b6040516020818303038152906040529050600080516020613d9b83398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156127d457600080fd5b505af11580156127e8573d6000803e3d6000fd5b50505050600080866001600160a01b0316836040516128079190613aa3565b600060405180830381855afa9150503d8060008114612842576040519150601f19603f3d011682016040523d82523d6000602084013e612847565b606091505b50915061285b90508161231e876020613b71565b6040516365bc948160e01b81526001600160a01b038916600482015290925060009150600080516020613d7b833981519152906365bc9481906024016000604051808303816000875af11580156128b6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526128de9190810190613cf0565b5090508051600103612b85576000600080516020613d9b83398151915260001c6001600160a01b031663667f9d70898460008151811061292057612920613c4c565b60200260200101516040518363ffffffff1660e01b815260040161294592919061389d565b6020604051808303816000875af1158015612964573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129889190613a6d565b9050806129e6577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a588836000815181106129c4576129c4613c4c565b602002602001015160001c6040516129dd92919061389d565b60405180910390a15b808314612a055760405162461bcd60e51b8152600401610cbd90613b90565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed88888789604051602001612a3b929190613b37565b6040516020818303038152906040528051906020012085600081518110612a6457612a64613c4c565b602002602001015160001c604051612a7f9493929190613d4a565b60405180910390a181600081518110612a9a57612a9a613c4c565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c1683528452808220905192939092612ae3918a918c9101613b37565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c16855282528284209251909391612b4b918a918c9101613b37565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff1916911515919091179055506130fd565b60018151111561308d5760005b8151811015613087576000600080516020613d9b83398151915260001c6001600160a01b031663667f9d708a858581518110612bd057612bd0613c4c565b60200260200101516040518363ffffffff1660e01b8152600401612bf592919061389d565b6020604051808303816000875af1158015612c14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c389190613a6d565b905080612c95577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a589848481518110612c7357612c73613c4c565b602002602001015160001c604051612c8c92919061389d565b60405180910390a15b600080516020613d9b83398151915260001c6001600160a01b03166370ca10bb8a858581518110612cc857612cc8613c4c565b602002602001015161133760f01b6040518463ffffffff1660e01b8152600401612cf493929190613c2b565b600060405180830381600087803b158015612d0e57600080fd5b505af1158015612d22573d6000803e3d6000fd5b50505050600060608a6001600160a01b031687604051612d429190613aa3565b600060405180830381855afa9150503d8060008114612d7d576040519150601f19603f3d011682016040523d82523d6000602084013e612d82565b606091505b509092509050612d978161231e8b6020613b71565b9550818015612daa575061133760f01b86145b15612fe5577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001612de5929190613b37565b60405160208183030381529060405280519060200120888881518110612e0d57612e0d613c4c565b602002602001015160001c604051612e289493929190613d4a565b60405180910390a1848481518110612e4257612e42613c4c565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f1683528452808220905192939092612e8b918d918f9101613b37565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c604051602001612f16929190613b37565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff021916908315150217905550600080516020613d9b83398151915260001c6001600160a01b03166370ca10bb8c878781518110612f8457612f84613c4c565b6020026020010151866040518463ffffffff1660e01b8152600401612fab93929190613c2b565b600060405180830381600087803b158015612fc557600080fd5b505af1158015612fd9573d6000803e3d6000fd5b50505050505050613087565b600080516020613d9b83398151915260001c6001600160a01b03166370ca10bb8c87878151811061301857613018613c4c565b6020026020010151866040518463ffffffff1660e01b815260040161303f93929190613c2b565b600060405180830381600087803b15801561305957600080fd5b505af115801561306d573d6000803e3d6000fd5b50505050505050808061307f90613c62565b915050612b92565b506130fd565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e6064820152608401610cbd565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905190929161313f9188918a9101613b37565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166131cc5760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b6064820152608401610cbd565b6005890180546001600160a01b031916905560038901805463ffffffff191690556131fb60028a0160006132ef565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a1684528252808320905190929161323f9188918a9101613b37565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b6000806000602085511161328757845161328a565b60205b905060005b818110156132e5576132a2816008613b71565b866132ad8388613abf565b815181106132bd576132bd613c4c565b01602001516001600160f81b031916901c9290921791806132dd81613c62565b91505061328f565b5090949350505050565b508054600082559060005260206000209081019061330d9190613310565b50565b5b808211156133255760008155600101613311565b5090565b6001600160a01b038116811461330d57600080fd5b60008060008060008060c0878903121561335757600080fd5b863561336281613329565b9550602087013561337281613329565b9450604087013561338281613329565b959894975094956060810135955060808101359460a0909101359350915050565b600080604083850312156133b657600080fd5b82356133c181613329565b946020939093013593505050565b6000602082840312156133e157600080fd5b81356133ec81613329565b9392505050565b600080600080600060a0868803121561340b57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b6000806040838503121561344157600080fd5b823561344c81613329565b9150602083013561345c81613329565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156134a6576134a6613467565b604052919050565b600067ffffffffffffffff8211156134c8576134c8613467565b50601f01601f191660200190565b60006134e96134e4846134ae565b61347d565b90508281528383830111156134fd57600080fd5b828260208301376000602084830101529392505050565b600082601f83011261352557600080fd5b6133ec838335602085016134d6565b6000806040838503121561354757600080fd5b823567ffffffffffffffff8082111561355f57600080fd5b61356b86838701613514565b9350602085013591508082111561358157600080fd5b508301601f8101851361359357600080fd5b6135a2858235602084016134d6565b9150509250929050565b6000602082840312156135be57600080fd5b5035919050565b60008060008060008060c087890312156135de57600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b60008060006060848603121561361d57600080fd5b833561362881613329565b9250602084013561363881613329565b929592945050506040919091013590565b6000610120828403121561167257600080fd5b60008082840361016081121561367157600080fd5b61367b8585613649565b9250604061011f198201121561369057600080fd5b50610120830190509250929050565b801515811461330d57600080fd5b6000602082840312156136bf57600080fd5b81356133ec8161369f565b600061012082840312156136dd57600080fd5b6133ec8383613649565b600080600080608085870312156136fd57600080fd5b843561370881613329565b9350602085013561371881613329565b925060408501359150606085013561372f8161369f565b939692955090935050565b60006020828403121561374c57600080fd5b813567ffffffffffffffff81111561376357600080fd5b61376f84828501613514565b949350505050565b60008060008060008060c0878903121561379057600080fd5b863561379b81613329565b955060208701356137ab81613329565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600080600080608085870312156137e657600080fd5b5050823594602084013594506040840135936060013592509050565b600080600080600080600060e0888a03121561381d57600080fd5b873561382881613329565b9650602088013561383881613329565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b60005b838110156139155781810151838201526020016138fd565b83811115611e825750506000910152565b6000815180845261393e8160208601602086016138fa565b601f01601f19169290920160200192915050565b6020815260006133ec6020830184613926565b60006020828403121561397757600080fd5b815167ffffffffffffffff81111561398e57600080fd5b8201601f8101841361399f57600080fd5b80516139ad6134e4826134ae565b8181528560208385010111156139c257600080fd5b611afd8260208301602086016138fa565b600083516139e58184602088016138fa565b8351908301906139f98183602088016138fa565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600082821015613a2a57613a2a613a02565b500390565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b600060208284031215613a7f57600080fd5b5051919050565b600060208284031215613a9857600080fd5b81516133ec8161369f565b60008251613ab58184602087016138fa565b9190910192915050565b60008219821115613ad257613ad2613a02565b500190565b6001600160e01b0319831681528151600090613afa8160048501602087016138fa565b919091016004019392505050565b60408152600560408201526422b93937b960d91b60608201526080602082015260006133ec6080830184613926565b825160009082906020808701845b83811015613b6157815185529382019390820190600101613b45565b5050948252509092019392505050565b6000816000190483118215151615613b8b57613b8b613a02565b500290565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b6001600160a01b039390931683526020830191909152604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060018201613c7457613c74613a02565b5060010190565b600082601f830112613c8c57600080fd5b8151602067ffffffffffffffff821115613ca857613ca8613467565b8160051b613cb782820161347d565b9283528481018201928281019087851115613cd157600080fd5b83870192505b848310156112e157825182529183019190830190613cd7565b60008060408385031215613d0357600080fd5b825167ffffffffffffffff80821115613d1b57600080fd5b613d2786838701613c7b565b93506020850151915080821115613d3d57600080fd5b506135a285828601613c7b565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe0000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220f9422ffe2dc0cea5614cee05acbced5148d638eb509e3a6adff8d2274a16877b64736f6c634300080e0033a264697066735822122015d66ca0797b173b00ee5f4ef88a00f3037e9384fb101d577dd391797849ef3964736f6c634300080e003360806040526000805462ff00ff1916620100011790553480156200002257600080fd5b5060405162003ef538038062003ef58339810160408190526200004591620000a1565b600880546001600160a01b039485166001600160a01b0319918216179091556009805493851693821693909317909255600a8054919093169116179055620000f5565b6001600160a01b03811681146200009e57600080fd5b50565b600080600060608486031215620000b757600080fd5b8351620000c48162000088565b6020850151909350620000d78162000088565b6040850151909250620000ea8162000088565b809150509250925092565b613df080620001056000396000f3fe60806040526004361061026b5760003560e01c8063a3cfe14d11610144578063d3845fea116100b6578063f5537ede1161007a578063f5537ede146107b9578063f8ccbf47146107d9578063fa7626d4146107f9578063fc3816c814610813578063fc8349f214610833578063ffae399e1461085357600080fd5b8063d3845fea14610719578063d82555f114610739578063e67ecda114610759578063e923c65114610779578063e9a79a7b1461079957600080fd5b8063c4c6c87d11610108578063c4c6c87d14610659578063c88a5e6d14610679578063cafffca814610699578063ccfbf94d146106b9578063cda30c3b146106d9578063d06d8229146106f957600080fd5b8063a3cfe14d1461059b578063a47395f6146105bb578063af9bbe5f146105f4578063b9c071b414610614578063ba414fa61461063457600080fd5b806353e575ac116101dd5780636f597075116101a15780636f597075146104cd5780637a943a37146104ed5780637ec95ff3146105265780638b0af9bb1461054657806397754ae91461055b5780639a8325a01461057b57600080fd5b806353e575ac146103f8578063557f49c3146104265780635a4924e81461045f5780636bce989b1461048d5780636c49c32c146104ad57600080fd5b806329ce9dde1161022f57806329ce9dde146103195780632d6c17a31461035657806333ac5efd146103765780633a768463146103965780633bf82db1146103b85780633d3d130d146103d857600080fd5b80630cc9d65614610277578063108554f214610299578063233240ee146102b95780632644c05c146102d957806329a9e300146102f957600080fd5b3661027257005b600080fd5b34801561028357600080fd5b5061029761029236600461333e565b61088c565b005b3480156102a557600080fd5b506102976102b43660046133a3565b6108d5565b3480156102c557600080fd5b506102976102d43660046133cf565b6109a6565b3480156102e557600080fd5b506102976102f43660046133f3565b610a7a565b34801561030557600080fd5b5061029761031436600461342e565b610afb565b34801561032557600080fd5b50610339610334366004613534565b610ba6565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561036257600080fd5b506102976103713660046135ac565b610ccd565b34801561038257600080fd5b506102976103913660046135c5565b610d09565b3480156103a257600080fd5b50610339600080516020613d7b83398151915281565b3480156103c457600080fd5b506102976103d3366004613608565b610d8c565b3480156103e457600080fd5b506102976103f336600461365c565b610e66565b34801561040457600080fd5b506104186104133660046133f3565b610fa2565b60405190815260200161034d565b34801561043257600080fd5b506102976104413660046136ad565b600a8054911515600160a81b0260ff60a81b19909216919091179055565b34801561046b57600080fd5b5061029761047a3660046136ad565b600c805460ff1916911515919091179055565b34801561049957600080fd5b506102976104a8366004613608565b61103a565b3480156104b957600080fd5b506104186104c83660046136ca565b61104c565b3480156104d957600080fd5b506102976104e83660046133cf565b6111b0565b3480156104f957600080fd5b506102976105083660046136ad565b600a8054911515600160b81b0260ff60b81b19909216919091179055565b34801561053257600080fd5b506104186105413660046135c5565b611253565b34801561055257600080fd5b506104186112ec565b34801561056757600080fd5b506102976105763660046136e7565b61135e565b34801561058757600080fd5b5061033961059636600461373a565b61157e565b3480156105a757600080fd5b506102976105b63660046133a3565b611678565b3480156105c757600080fd5b506102976105d63660046136ad565b600a8054911515600160a01b0260ff60a01b19909216919091179055565b34801561060057600080fd5b5061029761060f366004613608565b6116ef565b34801561062057600080fd5b5061029761062f3660046135ac565b611796565b34801561064057600080fd5b506106496117b4565b604051901515815260200161034d565b34801561066557600080fd5b506104186106743660046135ac565b6118d7565b34801561068557600080fd5b506102976106943660046133a3565b61196e565b3480156106a557600080fd5b506104186106b43660046135ac565b6119a1565b3480156106c557600080fd5b506104186106d4366004613777565b6119f3565b3480156106e557600080fd5b506104186106f43660046137d0565b611a73565b34801561070557600080fd5b5061029761071436600461342e565b611b06565b34801561072557600080fd5b506102976107343660046135ac565b611bb1565b34801561074557600080fd5b50610297610754366004613608565b611bf7565b34801561076557600080fd5b506102976107743660046135ac565b600b55565b34801561078557600080fd5b506104186107943660046133f3565b611ce8565b3480156107a557600080fd5b506102976107b43660046133a3565b611d72565b3480156107c557600080fd5b506102976107d4366004613608565b611e11565b3480156107e557600080fd5b506000546106499062010000900460ff1681565b34801561080557600080fd5b506000546106499060ff1681565b34801561081f57600080fd5b5061041861082e366004613802565b611e88565b34801561083f57600080fd5b5061064961084e3660046135ac565b611f16565b34801561085f57600080fd5b5061029761086e3660046136ad565b600a8054911515600160b01b0260ff60b01b19909216919091179055565b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c28686868686866040516108c596959493929190613864565b60405180910390a1505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610908908590859060040161389d565b600060405180830381600087803b15801561092257600080fd5b505af1158015610936573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0385166004820152600080516020613d7b83398151915292506306447d5691506024015b600060405180830381600087803b15801561098a57600080fd5b505af115801561099e573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d906109dd908490600160801b9060040161389d565b600060405180830381600087803b1580156109f757600080fd5b505af1158015610a0b573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0384166004820152600080516020613d7b833981519152925063ca669fa791506024015b600060405180830381600087803b158015610a5f57600080fd5b505af1158015610a73573d6000803e3d6000fd5b5050505050565b600854600954600a54604051636a4f769160e01b81526001600160a01b0393841693636a4f769193610ac293908216929116908a908a908a906000908b908b906004016138b6565b600060405180830381600087803b158015610adc57600080fd5b505af1158015610af0573d6000803e3d6000fd5b505050505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610b32908590600160801b9060040161389d565b600060405180830381600087803b158015610b4c57600080fd5b505af1158015610b60573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808616600483015284166024820152600080516020613d7b83398151915292506347e50cce9150604401610970565b604051638d1cc92560e01b81526000908190600080516020613d7b83398151915290638d1cc92590610bdc908790600401613952565b6000604051808303816000875af1158015610bfb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c239190810190613965565b83604051602001610c359291906139d3565b60405160208183030381529060405290508051602082016000f091506001600160a01b038216610cc65760405162461bcd60e51b815260206004820152603160248201527f54657374206465706c6f79436f646528737472696e672c6279746573293a204460448201527032b83637bcb6b2b73a103330b4b632b21760791b60648201526084015b60405180910390fd5b5092915050565b600080516020613d7b83398151915263e5d6bf02610ceb8342613a18565b6040518263ffffffff1660e01b8152600401610a4591815260200190565b600854600954600a54604051636a4f769160e01b81526001600160a01b0393841693636a4f7691938693610d52939183169216908c908c908c906000908d908d906004016138b6565b6000604051808303818588803b158015610d6b57600080fd5b505af1158015610d7f573d6000803e3d6000fd5b5050505050505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610dbf908690859060040161389d565b600060405180830381600087803b158015610dd957600080fd5b505af1158015610ded573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808716600483015285166024820152600080516020613d7b83398151915292506345b5607891506044015b600060405180830381600087803b158015610e4957600080fd5b505af1158015610e5d573d6000803e3d6000fd5b50505050505050565b600c5460ff1615610ea85760405162461bcd60e51b815260206004820152600c60248201526b1c1bdcdd1a1bdbdad1985a5b60a21b6044820152606401610cbd565b600b5415610ef657610ef68160200135600b546040518060400160405280601881526020017f496e636f727265637420737461747573206d6573736167650000000000000000815250611f86565b600a54600160b81b900460ff1615610f9e576008546001600160a01b0316636a4f7691610f2660208501856133cf565b610f3660408601602087016133cf565b606080870135901c6bffffffffffffffffffffffff166bffffffffffffffffffffffff60608801351660c088013560481c62ffffff16600060608a013560e01c8a604001356040518963ffffffff1660e01b81526004016109709897969594939291906138b6565b5050565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc938793610fed9392831692909116908c908c908c908a908d90600401613a2f565b60206040518083038185885af115801561100b573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906110309190613a6d565b9695505050505050565b611047838383600061135e565b505050565b600a54600090600160b01b900460ff1615611087576040805160208082019092526f1d195cdd13585ad95c8bdc995d995c9d60821b81529081fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c2336110b660208501856133cf565b6110c660408601602087016133cf565b856040013586608001358760a001356040516110e796959493929190613864565b60405180910390a1600a54600160a01b900460ff16156111875761110e60208301836133cf565b60085460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926111429291169060009060040161389d565b6020604051808303816000875af1158015611161573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111859190613a86565b505b600a54600160a81b900460ff16156111a857506418589bdc9d60da1b919050565b506000919050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d906111e7908490600160801b9060040161389d565b600060405180830381600087803b15801561120157600080fd5b505af1158015611215573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0384166004820152600080516020613d7b83398151915292506306447d569150602401610a45565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc93879361129e9392831692909116908d908d908d908d908d90600401613a2f565b60206040518083038185885af11580156112bc573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906112e19190613a6d565b979650505050505050565b6008546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611335573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113599190613a6d565b905090565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b17905291516000928716916113b291613aa3565b6000604051808303816000865af19150503d80600081146113ef576040519150601f19603f3d011682016040523d82523d6000602084013e6113f4565b606091505b5091505060008180602001905181019061140e9190613a6d565b905061147a846114748761144b6370a0823160e01b61142e60018d611fce565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b90611ff3565b821561099e5760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b038916916114c29190613aa3565b6000604051808303816000865af19150503d80600081146114ff576040519150601f19603f3d011682016040523d82523d6000602084013e611504565b606091505b5091505060008180602001905181019061151e9190613a6d565b905082861015611543576115328684613a18565b61153c9082613a18565b905061155a565b61154d8387613a18565b6115579082613abf565b90505b611574816114746318160ddd60e01b61142e60018d611fce565b5050505050505050565b604051638d1cc92560e01b81526000908190600080516020613d7b83398151915290638d1cc925906115b4908690600401613952565b6000604051808303816000875af11580156115d3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115fb9190810190613965565b90508051602082016000f091506001600160a01b0382166116725760405162461bcd60e51b815260206004820152602b60248201527f54657374206465706c6f79436f646528737472696e67293a204465706c6f796d60448201526a32b73a103330b4b632b21760a91b6064820152608401610cbd565b50919050565b60085460405163095ea7b360e01b81526001600160a01b038481169263095ea7b3926116ac9290911690859060040161389d565b6020604051808303816000875af11580156116cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110479190613a86565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90611722908690859060040161389d565b600060405180830381600087803b15801561173c57600080fd5b505af1158015611750573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808716600483015285166024820152600080516020613d7b83398151915292506347e50cce9150604401610e2f565b600080516020613d7b83398151915263e5d6bf02610ceb8342613abf565b60008054610100900460ff16156117d45750600054610100900460ff1690565b6000600080516020613d7b8339815191523b156118d257604051600090600080516020613d7b833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49061183c9083906519985a5b195960d21b9060200161389d565b60408051601f198184030181529082905261185a9291602001613ad7565b60408051601f198184030181529082905261187491613aa3565b6000604051808303816000865af19150503d80600081146118b1576040519150601f19603f3d011682016040523d82523d6000602084013e6118b6565b606091505b50915050808060200190518101906118ce9190613a86565b9150505b919050565b600854600954600a5460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810184905260006064820181905292919091169063ad97db1b906084015b6020604051808303816000875af1158015611944573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119689190613a6d565b92915050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610970908590859060040161389d565b600854600954600a5460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810184905260016064820152600092919091169063ad97db1b90608401611925565b60085460405163127db4b760e21b81526000916001600160a01b0316906349f6d2dc90611a30908a908a908a908a908a9089908b90600401613a2f565b6020604051808303816000875af1158015611a4f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e19190613a6d565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc93611aba939183169216908a908a908a9089908b90600401613a2f565b6020604051808303816000875af1158015611ad9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611afd9190613a6d565b95945050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90611b3d908590600160801b9060040161389d565b600060405180830381600087803b158015611b5757600080fd5b505af1158015611b6b573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808616600483015284166024820152600080516020613d7b83398151915292506345b560789150604401610970565b600854604051630460488160e31b81523060048201526001600160a01b039091169063230244089083906024016000604051808303818588803b15801561098a57600080fd5b7f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583604051611cc2906040808252600790820152665741524e494e4760c81b6060820152608060208201819052605e908201527f546573742074697028616464726573732c616464726573732c75696e7432353660a08201527f293a2054686520607469706020737464636865617420686173206265656e206460c08201527f6570726563617465642e2055736520606465616c6020696e73746561642e000060e08201526101000190565b60405180910390a1611047816114748461144b6370a0823160e01b61142e60018a611fce565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc93611d2f939183169216908b908b908b908b908b90600401613a2f565b6020604051808303816000875af1158015611d4e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110309190613a6d565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90611da5908590859060040161389d565b600060405180830381600087803b158015611dbf57600080fd5b505af1158015611dd3573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0385166004820152600080516020613d7b833981519152925063ca669fa79150602401610970565b60405163a9059cbb60e01b81526001600160a01b0384169063a9059cbb90611e3f908590859060040161389d565b6020604051808303816000875af1158015611e5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e829190613a86565b50505050565b60085460405163127db4b760e21b81526000916001600160a01b0316906349f6d2dc908490611ec7908c908c908c908c908c908a908d90600401613a2f565b60206040518083038185885af1158015611ee5573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611f0a9190613a6d565b98975050505050505050565b600854604051632e1a7d4d60e01b8152600481018390526000916001600160a01b031690632e1a7d4d906024016020604051808303816000875af1158015611f62573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119689190613a86565b818314611047577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051611fbc9190613b08565b60405180910390a16110478383611ffd565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b610f9e8282612127565b808214610f9e577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516120719060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a1610f9e61246b565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b946000939092909183018282801561219857602002820191906000526020600020905b815481526020019060010190808311612184575b505050505090506000836121ab83612564565b6040516020016121bc929190613ad7565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a16835281529281209194509092909161220e918691889101613b37565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166122465761224487612604565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905190918391612285918791899101613b37565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b0316846040516122ca9190613aa3565b600060405180830381855afa9150503d8060008114612305576040519150601f19603f3d011682016040523d82523d6000602084013e61230a565b606091505b50915061232390508161231e886020613b71565b613272565b604051630667f9d760e41b815290925060009150600080516020613d7b8339815191529063667f9d709061235d908b90879060040161389d565b6020604051808303816000875af115801561237c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123a09190613a6d565b90508082146123c15760405162461bcd60e51b8152600401610cbd90613b90565b6040516370ca10bb60e01b8152600080516020613d7b833981519152906370ca10bb906123f6908b9087908e90600401613c2b565b600060405180830381600087803b15801561241057600080fd5b505af1158015612424573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff1916905561245760028b0160006132ef565b896004016000905550505050505050505050565b600080516020613d7b8339815191523b1561255357604051600090600080516020613d7b833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc4906124d49083906519985a5b195960d21b90600190602001613c2b565b60408051601f19818403018152908290526124f29291602001613ad7565b60408051601f198184030181529082905261250c91613aa3565b6000604051808303816000865af19150503d8060008114612549576040519150601f19603f3d011682016040523d82523d6000602084013e61254e565b606091505b505050505b6000805461ff001916610100179055565b60606000825160206125769190613b71565b67ffffffffffffffff81111561258e5761258e613467565b6040519080825280601f01601f1916602001820160405280156125b8576020820181803683370190505b50905060005b8351811015610cc65760008482815181106125db576125db613c4c565b6020026020010151905080826020026020018401525080806125fc90613c62565b9150506125be565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b94938793919290919083018282801561267457602002820191906000526020600020905b815481526020019060010190808311612660575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051959650949193506126be92508591879101613b37565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161561275a576001600160a01b0384166000908152602087815260408083206001600160e01b0319871684528252808320905190929161272a918591879101613b37565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b60008361276683612564565b604051602001612777929190613ad7565b6040516020818303038152906040529050600080516020613d9b83398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156127d457600080fd5b505af11580156127e8573d6000803e3d6000fd5b50505050600080866001600160a01b0316836040516128079190613aa3565b600060405180830381855afa9150503d8060008114612842576040519150601f19603f3d011682016040523d82523d6000602084013e612847565b606091505b50915061285b90508161231e876020613b71565b6040516365bc948160e01b81526001600160a01b038916600482015290925060009150600080516020613d7b833981519152906365bc9481906024016000604051808303816000875af11580156128b6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526128de9190810190613cf0565b5090508051600103612b85576000600080516020613d9b83398151915260001c6001600160a01b031663667f9d70898460008151811061292057612920613c4c565b60200260200101516040518363ffffffff1660e01b815260040161294592919061389d565b6020604051808303816000875af1158015612964573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129889190613a6d565b9050806129e6577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a588836000815181106129c4576129c4613c4c565b602002602001015160001c6040516129dd92919061389d565b60405180910390a15b808314612a055760405162461bcd60e51b8152600401610cbd90613b90565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed88888789604051602001612a3b929190613b37565b6040516020818303038152906040528051906020012085600081518110612a6457612a64613c4c565b602002602001015160001c604051612a7f9493929190613d4a565b60405180910390a181600081518110612a9a57612a9a613c4c565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c1683528452808220905192939092612ae3918a918c9101613b37565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c16855282528284209251909391612b4b918a918c9101613b37565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff1916911515919091179055506130fd565b60018151111561308d5760005b8151811015613087576000600080516020613d9b83398151915260001c6001600160a01b031663667f9d708a858581518110612bd057612bd0613c4c565b60200260200101516040518363ffffffff1660e01b8152600401612bf592919061389d565b6020604051808303816000875af1158015612c14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c389190613a6d565b905080612c95577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a589848481518110612c7357612c73613c4c565b602002602001015160001c604051612c8c92919061389d565b60405180910390a15b600080516020613d9b83398151915260001c6001600160a01b03166370ca10bb8a858581518110612cc857612cc8613c4c565b602002602001015161133760f01b6040518463ffffffff1660e01b8152600401612cf493929190613c2b565b600060405180830381600087803b158015612d0e57600080fd5b505af1158015612d22573d6000803e3d6000fd5b50505050600060608a6001600160a01b031687604051612d429190613aa3565b600060405180830381855afa9150503d8060008114612d7d576040519150601f19603f3d011682016040523d82523d6000602084013e612d82565b606091505b509092509050612d978161231e8b6020613b71565b9550818015612daa575061133760f01b86145b15612fe5577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001612de5929190613b37565b60405160208183030381529060405280519060200120888881518110612e0d57612e0d613c4c565b602002602001015160001c604051612e289493929190613d4a565b60405180910390a1848481518110612e4257612e42613c4c565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f1683528452808220905192939092612e8b918d918f9101613b37565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c604051602001612f16929190613b37565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff021916908315150217905550600080516020613d9b83398151915260001c6001600160a01b03166370ca10bb8c878781518110612f8457612f84613c4c565b6020026020010151866040518463ffffffff1660e01b8152600401612fab93929190613c2b565b600060405180830381600087803b158015612fc557600080fd5b505af1158015612fd9573d6000803e3d6000fd5b50505050505050613087565b600080516020613d9b83398151915260001c6001600160a01b03166370ca10bb8c87878151811061301857613018613c4c565b6020026020010151866040518463ffffffff1660e01b815260040161303f93929190613c2b565b600060405180830381600087803b15801561305957600080fd5b505af115801561306d573d6000803e3d6000fd5b50505050505050808061307f90613c62565b915050612b92565b506130fd565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e6064820152608401610cbd565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905190929161313f9188918a9101613b37565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166131cc5760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b6064820152608401610cbd565b6005890180546001600160a01b031916905560038901805463ffffffff191690556131fb60028a0160006132ef565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a1684528252808320905190929161323f9188918a9101613b37565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b6000806000602085511161328757845161328a565b60205b905060005b818110156132e5576132a2816008613b71565b866132ad8388613abf565b815181106132bd576132bd613c4c565b01602001516001600160f81b031916901c9290921791806132dd81613c62565b91505061328f565b5090949350505050565b508054600082559060005260206000209081019061330d9190613310565b50565b5b808211156133255760008155600101613311565b5090565b6001600160a01b038116811461330d57600080fd5b60008060008060008060c0878903121561335757600080fd5b863561336281613329565b9550602087013561337281613329565b9450604087013561338281613329565b959894975094956060810135955060808101359460a0909101359350915050565b600080604083850312156133b657600080fd5b82356133c181613329565b946020939093013593505050565b6000602082840312156133e157600080fd5b81356133ec81613329565b9392505050565b600080600080600060a0868803121561340b57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b6000806040838503121561344157600080fd5b823561344c81613329565b9150602083013561345c81613329565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156134a6576134a6613467565b604052919050565b600067ffffffffffffffff8211156134c8576134c8613467565b50601f01601f191660200190565b60006134e96134e4846134ae565b61347d565b90508281528383830111156134fd57600080fd5b828260208301376000602084830101529392505050565b600082601f83011261352557600080fd5b6133ec838335602085016134d6565b6000806040838503121561354757600080fd5b823567ffffffffffffffff8082111561355f57600080fd5b61356b86838701613514565b9350602085013591508082111561358157600080fd5b508301601f8101851361359357600080fd5b6135a2858235602084016134d6565b9150509250929050565b6000602082840312156135be57600080fd5b5035919050565b60008060008060008060c087890312156135de57600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b60008060006060848603121561361d57600080fd5b833561362881613329565b9250602084013561363881613329565b929592945050506040919091013590565b6000610120828403121561167257600080fd5b60008082840361016081121561367157600080fd5b61367b8585613649565b9250604061011f198201121561369057600080fd5b50610120830190509250929050565b801515811461330d57600080fd5b6000602082840312156136bf57600080fd5b81356133ec8161369f565b600061012082840312156136dd57600080fd5b6133ec8383613649565b600080600080608085870312156136fd57600080fd5b843561370881613329565b9350602085013561371881613329565b925060408501359150606085013561372f8161369f565b939692955090935050565b60006020828403121561374c57600080fd5b813567ffffffffffffffff81111561376357600080fd5b61376f84828501613514565b949350505050565b60008060008060008060c0878903121561379057600080fd5b863561379b81613329565b955060208701356137ab81613329565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600080600080608085870312156137e657600080fd5b5050823594602084013594506040840135936060013592509050565b600080600080600080600060e0888a03121561381d57600080fd5b873561382881613329565b9650602088013561383881613329565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b60005b838110156139155781810151838201526020016138fd565b83811115611e825750506000910152565b6000815180845261393e8160208601602086016138fa565b601f01601f19169290920160200192915050565b6020815260006133ec6020830184613926565b60006020828403121561397757600080fd5b815167ffffffffffffffff81111561398e57600080fd5b8201601f8101841361399f57600080fd5b80516139ad6134e4826134ae565b8181528560208385010111156139c257600080fd5b611afd8260208301602086016138fa565b600083516139e58184602088016138fa565b8351908301906139f98183602088016138fa565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600082821015613a2a57613a2a613a02565b500390565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b600060208284031215613a7f57600080fd5b5051919050565b600060208284031215613a9857600080fd5b81516133ec8161369f565b60008251613ab58184602087016138fa565b9190910192915050565b60008219821115613ad257613ad2613a02565b500190565b6001600160e01b0319831681528151600090613afa8160048501602087016138fa565b919091016004019392505050565b60408152600560408201526422b93937b960d91b60608201526080602082015260006133ec6080830184613926565b825160009082906020808701845b83811015613b6157815185529382019390820190600101613b45565b5050948252509092019392505050565b6000816000190483118215151615613b8b57613b8b613a02565b500290565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b6001600160a01b039390931683526020830191909152604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060018201613c7457613c74613a02565b5060010190565b600082601f830112613c8c57600080fd5b8151602067ffffffffffffffff821115613ca857613ca8613467565b8160051b613cb782820161347d565b9283528481018201928281019087851115613cd157600080fd5b83870192505b848310156112e157825182529183019190830190613cd7565b60008060408385031215613d0357600080fd5b825167ffffffffffffffff80821115613d1b57600080fd5b613d2786838701613c7b565b93506020850151915080821115613d3d57600080fd5b506135a285828601613c7b565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe0000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220f9422ffe2dc0cea5614cee05acbced5148d638eb509e3a6adff8d2274a16877b64736f6c634300080e00336101406040523480156200001257600080fd5b5060405162001bb838038062001bb88339810160408190526200003591620002c1565b82828180604051806040016040528060018152602001603160f81b815250848481600390805190602001906200006d9291906200014e565b508051620000839060049060208401906200014e565b5050825160208085019190912083518483012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c0019052805194019390932091935091906080523060c05261012052505050506001600160a01b03969096166000908152600860205260409020805460ff19166001179055505060ff1660095550620003a1915050565b8280546200015c9062000365565b90600052602060002090601f016020900481019282620001805760008555620001cb565b82601f106200019b57805160ff1916838001178555620001cb565b82800160010185558215620001cb579182015b82811115620001cb578251825591602001919060010190620001ae565b50620001d9929150620001dd565b5090565b5b80821115620001d95760008155600101620001de565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200021c57600080fd5b81516001600160401b0380821115620002395762000239620001f4565b604051601f8301601f19908116603f01168101908282118183101715620002645762000264620001f4565b816040528381526020925086838588010111156200028157600080fd5b600091505b83821015620002a5578582018301518183018401529082019062000286565b83821115620002b75760008385830101525b9695505050505050565b60008060008060808587031215620002d857600080fd5b84516001600160a01b0381168114620002f057600080fd5b60208601519094506001600160401b03808211156200030e57600080fd5b6200031c888389016200020a565b945060408701519150808211156200033357600080fd5b5062000342878288016200020a565b925050606085015160ff811681146200035a57600080fd5b939692955090935050565b600181811c908216806200037a57607f821691505b6020821081036200039b57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516117c7620003f160003960006109290152600061097801526000610953015260006108ac015260006108d60152600061090001526117c76000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806340c10f19116100c357806395d89b411161007c57806395d89b41146102c45780639dc29fac146102cc578063a457c2d7146102df578063a9059cbb146102f2578063d505accf14610305578063dd62ed3e1461031857600080fd5b806340c10f1914610236578063704802751461024957806370a082311461025c5780637a6d69b4146102855780637ecebe00146102a85780638ea2da7d146102bb57600080fd5b80631e7be210116101155780631e7be210146101cd57806323b872dd146101e057806325db769e146101f3578063313ce567146102065780633644e5151461021b578063395093511461022357600080fd5b806306fdde0314610152578063095ea7b31461017057806316c02129146101935780631785f53c146101a857806318160ddd146101bb575b600080fd5b61015a61032b565b604051610167919061140b565b60405180910390f35b61018361017e36600461147c565b6103bd565b6040519015158152602001610167565b6101a66101a13660046114a6565b610444565b005b6101a66101b63660046114a6565b610477565b6002545b604051908152602001610167565b6101a66101db3660046114a6565b6104a0565b6101836101ee3660046114c8565b6104cd565b6101bf610201366004611504565b610589565b60095460405160ff9091168152602001610167565b6101bf6105af565b61018361023136600461147c565b6105be565b6101a661024436600461147c565b6105ea565b6101a66102573660046114a6565b610600565b6101bf61026a3660046114a6565b6001600160a01b031660009081526020819052604090205490565b6101836102933660046114a6565b60076020526000908152604090205460ff1681565b6101bf6102b63660046114a6565b61062c565b6101bf60095481565b61015a61064a565b6101a66102da36600461147c565b610659565b6101836102ed36600461147c565b61066b565b61018361030036600461147c565b6106f1565b6101a661031336600461151d565b610766565b6101bf610326366004611590565b6107f6565b60606003805461033a906115c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610366906115c3565b80156103b35780601f10610388576101008083540402835291602001916103b3565b820191906000526020600020905b81548152906001019060200180831161039657829003601f168201915b5050505050905090565b6001600160a01b038216600090815260076020526040812054839060ff16156104015760405162461bcd60e51b81526004016103f8906115f7565b60405180910390fd5b3360008181526007602052604090205460ff16156104315760405162461bcd60e51b81526004016103f8906115f7565b61043b8585610821565b95945050505050565b61044c61082f565b610474816001600160a01b03166000908152600760205260409020805460ff19166001179055565b50565b61047f61082f565b6001600160a01b03166000908152600860205260409020805460ff19169055565b6104a861082f565b610474816001600160a01b03166000908152600760205260409020805460ff19169055565b6001600160a01b038316600090815260076020526040812054849060ff16156105085760405162461bcd60e51b81526004016103f8906115f7565b6001600160a01b038416600090815260076020526040902054849060ff16156105435760405162461bcd60e51b81526004016103f8906115f7565b3360008181526007602052604090205460ff16156105735760405162461bcd60e51b81526004016103f8906115f7565b61057e878787610886565b979650505050505050565b600061059460095490565b61059f90600a61171e565b6105a9908361172d565b92915050565b60006105b961089f565b905090565b6000336105e08185856105d183836107f6565b6105db919061174c565b6109c6565b5060019392505050565b6105f261082f565b6105fc8282610aeb565b5050565b61060861082f565b6001600160a01b03166000908152600860205260409020805460ff19166001179055565b6001600160a01b0381166000908152600560205260408120546105a9565b60606004805461033a906115c3565b61066161082f565b6105fc8282610bca565b6000338161067982866107f6565b9050838110156106d95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103f8565b6106e682868684036109c6565b506001949350505050565b6001600160a01b038216600090815260076020526040812054839060ff161561072c5760405162461bcd60e51b81526004016103f8906115f7565b3360008181526007602052604090205460ff161561075c5760405162461bcd60e51b81526004016103f8906115f7565b61043b8585610d10565b6001600160a01b038716600090815260076020526040902054879060ff16156107a15760405162461bcd60e51b81526004016103f8906115f7565b6001600160a01b038716600090815260076020526040902054879060ff16156107dc5760405162461bcd60e51b81526004016103f8906115f7565b6107eb89898989898989610d1e565b505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000336105e08185856109c6565b3360009081526008602052604090205460ff166108845760405162461bcd60e51b815260206004820152601360248201527254657374546f6b656e2f61646d696e4f6e6c7960681b60448201526064016103f8565b565b600033610894858285610e82565b6106e6858585610efc565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156108f857507f000000000000000000000000000000000000000000000000000000000000000046145b1561092257507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6001600160a01b038316610a285760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103f8565b6001600160a01b038216610a895760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103f8565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038216610b415760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103f8565b8060026000828254610b53919061174c565b90915550506001600160a01b03821660009081526020819052604081208054839290610b8090849061174c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610c2a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103f8565b6001600160a01b03821660009081526020819052604090205481811015610c9e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103f8565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610ccd908490611764565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610ade565b6000336105e0818585610efc565b83421115610d6e5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016103f8565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610d9d8c6110ca565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610df8826110f2565b90506000610e0882878787611140565b9050896001600160a01b0316816001600160a01b031614610e6b5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016103f8565b610e768a8a8a6109c6565b50505050505050505050565b6000610e8e84846107f6565b90506000198114610ef65781811015610ee95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103f8565b610ef684848484036109c6565b50505050565b6001600160a01b038316610f605760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103f8565b6001600160a01b038216610fc25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103f8565b6001600160a01b0383166000908152602081905260409020548181101561103a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103f8565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061107190849061174c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110bd91815260200190565b60405180910390a3610ef6565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b60006105a96110ff61089f565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061115187878787611168565b9150915061115e81611255565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561119f575060009050600361124c565b8460ff16601b141580156111b757508460ff16601c14155b156111c8575060009050600461124c565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561121c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166112455760006001925092505061124c565b9150600090505b94509492505050565b60008160048111156112695761126961177b565b036112715750565b60018160048111156112855761128561177b565b036112d25760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016103f8565b60028160048111156112e6576112e661177b565b036113335760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103f8565b60038160048111156113475761134761177b565b0361139f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016103f8565b60048160048111156113b3576113b361177b565b036104745760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016103f8565b600060208083528351808285015260005b818110156114385785810183015185820160400152820161141c565b8181111561144a576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461147757600080fd5b919050565b6000806040838503121561148f57600080fd5b61149883611460565b946020939093013593505050565b6000602082840312156114b857600080fd5b6114c182611460565b9392505050565b6000806000606084860312156114dd57600080fd5b6114e684611460565b92506114f460208501611460565b9150604084013590509250925092565b60006020828403121561151657600080fd5b5035919050565b600080600080600080600060e0888a03121561153857600080fd5b61154188611460565b965061154f60208901611460565b95506040880135945060608801359350608088013560ff8116811461157357600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156115a357600080fd5b6115ac83611460565b91506115ba60208401611460565b90509250929050565b600181811c908216806115d757607f821691505b6020821081036110ec57634e487b7160e01b600052602260045260246000fd5b602080825260139082015272115490cc8c10930bd09b1858dadb1a5cdd1959606a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561167557816000190482111561165b5761165b611624565b8085161561166857918102915b93841c939080029061163f565b509250929050565b60008261168c575060016105a9565b81611699575060006105a9565b81600181146116af57600281146116b9576116d5565b60019150506105a9565b60ff8411156116ca576116ca611624565b50506001821b6105a9565b5060208310610133831016604e8410600b84101617156116f8575081810a6105a9565b611702838361163a565b806000190482111561171657611716611624565b029392505050565b60006114c160ff84168361167d565b600081600019048311821515161561174757611747611624565b500290565b6000821982111561175f5761175f611624565b500190565b60008282101561177657611776611624565b500390565b634e487b7160e01b600052602160045260246000fdfea26469706673582212209bdbfaec88bd6f48fcba6d4557d696967a35e239ba335fd932eea09261da1b0864736f6c634300080e00330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220cccc36498adbdc36aed3fdc91197e98a3a0903f5c221714eef009ad004fb000b64736f6c634300080e0033",
    "sourceMap": "1572:26:101:-:0;;;-1:-1:-1;;171:28:102;;;;;-1:-1:-1;624:20:77;;;;2159:34;;11075:971:72;1763:237:76;;;1828:64;;;;;-1:-1:-1;;;1828:64:76;;;;1572:26:101;1828:64:76;;;;;;;;-1:-1:-1;;;1828:64:76;;;;1888:2;-1:-1:-1;1828:64:76;;;-1:-1:-1;1763:237:76;;;1907:65;;;;;-1:-1:-1;;;1907:65:76;;1828:64;1907:65;;;;-1:-1:-1;1907:65:76;;;;;-1:-1:-1;;;1907:65:76;;-1:-1:-1;1907:65:76;;;;-1:-1:-1;1907:65:76;-1:-1:-1;1763:237:76;-1:-1:-1;1763:237:76;;;;1729:271;;;-1:-1:-1;;1729:271:76;;;11075:971:72;;1572:26:101;;1729:271:76;;;;;;1828:64;1729:271;:::i;:::-;-1:-1:-1;1729:271:76;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1729:271:76;;;;;;;;;;;;-1:-1:-1;;1729:271:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1729:271:76;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1729:271:76;;;;;;;;;;;;-1:-1:-1;;1729:271:76;;;;;;;;;;;;;;;;;;;;;;11075:971:72;;;;;;;;;-1:-1:-1;2055:32:76;;;-1:-1:-1;;;2055:32:76;;2064:9;2055:32;;;226:51:107;293:18;;;286:30;;;;352:1;332:18;;;325:29;-1:-1:-1;;;370:18:107;;;363:39;251:64:102;;2055:8:76;;419:19:107;;2055:32:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2093:32:76;;;-1:-1:-1;;;2093:32:76;;2104:4;2093:32;;;669:51:107;736:18;;;729:30;;;795:2;775:18;;;768:30;-1:-1:-1;;;814:18:107;;;807:41;2093:32:76;;251:64:102;;-1:-1:-1;2093:8:76;;-1:-1:-1;865:19:107;;;;;-1:-1:-1;;2093:32:76;;;;;;;-1:-1:-1;251:64:102;2093:32:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11075:971:72;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11075:971:72;;;-1:-1:-1;11075:971:72;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;895:380:107;974:1;970:12;;;;1017;;;1038:61;;1092:4;1084:6;1080:17;1070:27;;1038:61;1145:2;1137:6;1134:14;1114:18;1111:38;1108:161;;1191:10;1186:3;1182:20;1179:1;1172:31;1226:4;1223:1;1216:15;1254:4;1251:1;1244:15;1108:161;;895:380;;;:::o;:::-;11075:971:72;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620002255760003560e01c806397754ae91162000131578063bfdc358811620000bb578063d82555f11162000086578063d82555f114620004b9578063e9a79a7b14620004d0578063ea14b5c314620004e7578063f8ccbf4714620004fe578063fa7626d4146200051257600080fd5b8063bfdc3588146200045d578063c88a5e6d1462000474578063d06d8229146200048b578063d56a22f014620004a257600080fd5b8063b84e3eda11620000fc578063b84e3eda14620003fd578063b9c071b41462000414578063ba414fa6146200042b578063bbab0fac146200044657600080fd5b806397754ae914620003ae5780639a8325a014620003c5578063a6b23bdb14620003dc578063af9bbe5f14620003e657600080fd5b80633336a63f11620001b35780636bce989b116200017e5780636bce989b14620003505780636cc12a2414620003675780636f597075146200038d5780638c00483214620003a457600080fd5b80633336a63f14620002f45780633a768463146200030b5780633bf82db11462000322578063521606d2146200033957600080fd5b8063233240ee11620001f4578063233240ee146200029857806329a9e30014620002af57806329ce9dde14620002c65780632d6c17a314620002dd57600080fd5b80630645f2be146200022a5780630a9254e4146200025e5780630b3d8c42146200026a578063108554f21462000281575b600080fd5b620002416200023b36600462003a1f565b62000520565b6040516001600160a01b0390911681526020015b60405180910390f35b620002686200064a565b005b620002416200027b36600462003a55565b62000a7d565b620002686200029236600462003aa7565b62000aa0565b62000268620002a936600462003ad6565b62000b79565b62000268620002c036600462003af6565b62000c55565b62000241620002d736600462003c0f565b62000d07565b62000268620002ee36600462003c8f565b62000e37565b620002416200030536600462003ca9565b62000e77565b620002416000805160206201a6c783398151915281565b620002686200033336600462003d13565b62000fc7565b620002686200034a36600462003d80565b620010a9565b620002686200036136600462003d13565b62001172565b6200037e6200037836600462003e1a565b62001186565b60405190815260200162000255565b620002686200039e36600462003ad6565b620011b5565b620002416200125f565b62000268620003bf36600462003e52565b62001272565b62000241620003d636600462003eac565b620014b3565b62000268620015b5565b62000268620003f736600462003d13565b620015c1565b620002686200040e36600462003d80565b6200166f565b620002686200042536600462003c8f565b6200171a565b620004356200173b565b604051901515815260200162000255565b620002416200045736600462003af6565b6200186c565b620002416200046e36600462003ca9565b620018ef565b620002686200048536600462003aa7565b62001918565b620002686200049c36600462003af6565b6200194e565b6200037e620004b336600462003aa7565b62001a00565b62000268620004ca36600462003d13565b62001a8e565b62000268620004e136600462003aa7565b62001b85565b62000241620004f836600462003af6565b62001c2b565b600054620004359062010000900460ff1681565b600054620004359060ff1681565b600081156200057257306028621e84806040516200053e9062003979565b6200054c9392919062003ee5565b604051809103906000f08015801562000569573d6000803e3d6000fd5b509050620005b6565b306028621e8480604051620005879062003987565b620005959392919062003ee5565b604051809103906000f080158015620005b2573d6000803e3d6000fd5b5090505b6000805160206201a6c783398151915263c657c71882604080516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260086044820152674d616e67726f766560c01b6064820152608401600060405180830381600087803b1580156200062c57600080fd5b505af115801562000641573d6000803e3d6000fd5b50505050919050565b6200065462001c3b565b600c5462000695906001600160a01b0316600d546001600160a01b0316604051806040016040528060058152602001643a30b5b2b960d91b81525062000e77565b601680546001600160a01b0319166001600160a01b03928316179055600d54620006d591166016546001600160a01b0316674563918244f4000062001172565b601654600d5460405163a3cfe14d60e01b81526001600160a01b039283169263a3cfe14d9262000716929116906801158e460913d000009060040162003f06565b600060405180830381600087803b1580156200073157600080fd5b505af115801562000746573d6000803e3d6000fd5b5050601654600c5460405163a3cfe14d60e01b81526001600160a01b03928316945063a3cfe14d93506200078c92909116906801158e460913d000009060040162003f06565b600060405180830381600087803b158015620007a757600080fd5b505af1158015620007bc573d6000803e3d6000fd5b5050600b54600c546001600160a01b039182169350169050600d546001600160a01b0316604051620007ee9062003995565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f0801580156200082b573d6000803e3d6000fd5b50601780546001600160a01b0319166001600160a01b03929092169182179055604080516318caf8e360e31b81526004810192909252602482015260086044820152674d6f72696172747960c01b60648201526000805160206201a6c78339815191529063c657c71890608401600060405180830381600087803b158015620008b357600080fd5b505af1158015620008c8573d6000803e3d6000fd5b5050601754620008ee92506001600160a01b031690506801158e460913d0000062001918565b6017546040516369c22ff560e11b8152678ac7230489e8000060048201526001600160a01b039091169063d3845fea90602401600060405180830381600087803b1580156200093c57600080fd5b505af115801562000951573d6000803e3d6000fd5b5050600c546200098292506001600160a01b031690506017546001600160a01b0316674563918244f4000062001172565b601754600c5460405163a3cfe14d60e01b81526001600160a01b039283169263a3cfe14d92620009c292911690674563918244f400009060040162003f06565b600060405180830381600087803b158015620009dd57600080fd5b505af1158015620009f2573d6000803e3d6000fd5b505060175460405163cda30c3b60e01b8152670de0b6b3a764000060048201526706f05b59d3b200006024820152620186a06044820152600060648201526001600160a01b03909116925063cda30c3b9150608401600060405180830381600087803b15801562000a6257600080fd5b505af115801562000a77573d6000803e3d6000fd5b50505050565b600062000a8a8262000520565b905062000a9984848362001ea7565b9392505050565b60405163c88a5e6d60e01b81526000805160206201a6c78339815191529063c88a5e6d9062000ad6908590859060040162003f06565b600060405180830381600087803b15801562000af157600080fd5b505af115801562000b06573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b03851660048201526000805160206201a6c783398151915292506306447d5691506024015b600060405180830381600087803b15801562000b5c57600080fd5b505af115801562000b71573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b81526000805160206201a6c78339815191529063c88a5e6d9062000bb3908490600160801b9060040162003f06565b600060405180830381600087803b15801562000bce57600080fd5b505af115801562000be3573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b03841660048201526000805160206201a6c7833981519152925063ca669fa791506024015b600060405180830381600087803b15801562000c3957600080fd5b505af115801562000c4e573d6000803e3d6000fd5b5050505050565b60405163c88a5e6d60e01b81526000805160206201a6c78339815191529063c88a5e6d9062000c8f908590600160801b9060040162003f06565b600060405180830381600087803b15801562000caa57600080fd5b505af115801562000cbf573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b038086166004830152841660248201526000805160206201a6c783398151915292506347e50cce915060440162000b41565b604051638d1cc92560e01b815260009081906000805160206201a6c783398151915290638d1cc9259062000d4090879060040162003f7c565b6000604051808303816000875af115801562000d60573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000d8a919081019062003fc7565b8360405160200162000d9e92919062004015565b60405160208183030381529060405290508051602082016000f091506001600160a01b03821662000e305760405162461bcd60e51b815260206004820152603160248201527f54657374206465706c6f79436f646528737472696e672c6279746573293a204460448201527032b83637bcb6b2b73a103330b4b632b21760791b60648201526084015b60405180910390fd5b5092915050565b6000805160206201a6c783398151915263e5d6bf0262000e5883426200405e565b6040518263ffffffff1660e01b815260040162000c1e91815260200190565b600080600b60009054906101000a90046001600160a01b0316858560405162000ea090620039a3565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562000edd573d6000803e3d6000fd5b5060405163c88a5e6d60e01b81529091506000805160206201a6c78339815191529063c88a5e6d9062000f2090849068056bc75e2d631000009060040162003f06565b600060405180830381600087803b15801562000f3b57600080fd5b505af115801562000f50573d6000803e3d6000fd5b50506040516318caf8e360e31b81526000805160206201a6c7833981519152925063c657c718915062000f8a908490879060040162004078565b600060405180830381600087803b15801562000fa557600080fd5b505af115801562000fba573d6000803e3d6000fd5b5092979650505050505050565b60405163c88a5e6d60e01b81526000805160206201a6c78339815191529063c88a5e6d9062000ffd908690859060040162003f06565b600060405180830381600087803b1580156200101857600080fd5b505af11580156200102d573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b038087166004830152851660248201526000805160206201a6c783398151915292506345b5607891506044015b600060405180830381600087803b1580156200108b57600080fd5b505af1158015620010a0573d6000803e3d6000fd5b50505050505050565b604080516020810190915260008082525b8251811015620011625781620010ec848381518110620010de57620010de6200409e565b602002602001015162002153565b604051602001620010ff92919062004015565b6040516020818303038152906040529150600183516200112091906200405e565b8110156200114d57816040516020016200113b9190620040b4565b60405160208183030381529060405291505b806200115981620040dc565b915050620010ba565b506200116e8162002240565b5050565b62001181838383600062001272565b505050565b60006200119582600a620041f5565b620011a1858562001a00565b620011ad919062004203565b949350505050565b60405163c88a5e6d60e01b81526000805160206201a6c78339815191529063c88a5e6d90620011ef908490600160801b9060040162003f06565b600060405180830381600087803b1580156200120a57600080fd5b505af11580156200121f573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b03841660048201526000805160206201a6c783398151915292506306447d56915060240162000c1e565b60006200126d600062000520565b905090565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b1790529151600092871691620012c89162004226565b6000604051808303816000865af19150503d806000811462001307576040519150601f19603f3d011682016040523d82523d6000602084013e6200130c565b606091505b5091505060008180602001905181019062001328919062004244565b90506200139a8462001393876200136a6370a0823160e01b6200134d60018d62002287565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b90620022ac565b821562000b715760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b03891691620013e5919062004226565b6000604051808303816000865af19150503d806000811462001424576040519150601f19603f3d011682016040523d82523d6000602084013e62001429565b606091505b5091505060008180602001905181019062001445919062004244565b90508286101562001470576200145c86846200405e565b6200146890826200405e565b90506200148b565b6200147c83876200405e565b6200148890826200425e565b90505b620014a981620013936318160ddd60e01b6200134d60018d62002287565b5050505050505050565b604051638d1cc92560e01b815260009081906000805160206201a6c783398151915290638d1cc92590620014ec90869060040162003f7c565b6000604051808303816000875af11580156200150c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001536919081019062003fc7565b90508051602082016000f091506001600160a01b038216620015af5760405162461bcd60e51b815260206004820152602b60248201527f54657374206465706c6f79436f646528737472696e67293a204465706c6f796d60448201526a32b73a103330b4b632b21760a91b606482015260840162000e27565b50919050565b620015bf620022b8565b565b60405163c88a5e6d60e01b81526000805160206201a6c78339815191529063c88a5e6d90620015f7908690859060040162003f06565b600060405180830381600087803b1580156200161257600080fd5b505af115801562001627573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b038087166004830152851660248201526000805160206201a6c783398151915292506347e50cce915060440162001070565b604080516020810190915260008082525b8251811015620011625781620016a4848381518110620010de57620010de6200409e565b604051602001620016b792919062004015565b604051602081830303815290604052915060018351620016d891906200405e565b811015620017055781604051602001620016f39190620040b4565b60405160208183030381529060405291505b806200171181620040dc565b91505062001680565b6000805160206201a6c783398151915263e5d6bf0262000e5883426200425e565b60008054610100900460ff16156200175c5750600054610100900460ff1690565b60006000805160206201a6c78339815191523b1562001867576040516000906000805160206201a6c7833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490620017c99083906519985a5b195960d21b9060200162003f06565b60408051601f1981840301815290829052620017e9929160200162004279565b60408051601f1981840301815290829052620018059162004226565b6000604051808303816000865af19150503d806000811462001844576040519150601f19603f3d011682016040523d82523d6000602084013e62001849565b606091505b5091505080806020019051810190620018639190620042ac565b9150505b919050565b600b5460009062001886906001600160a01b0316620023a5565b50600b546040516001600160a01b039091169084908490620018a890620039b1565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f080158015620018e5573d6000803e3d6000fd5b5090505b92915050565b600080600b60009054906101000a90046001600160a01b0316858560405162000ea090620039bf565b60405163c88a5e6d60e01b81526000805160206201a6c78339815191529063c88a5e6d9062000b41908590859060040162003f06565b60405163c88a5e6d60e01b81526000805160206201a6c78339815191529063c88a5e6d9062001988908590600160801b9060040162003f06565b600060405180830381600087803b158015620019a357600080fd5b505af1158015620019b8573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b038086166004830152841660248201526000805160206201a6c783398151915292506345b56078915060440162000b41565b60008062001a7362001a6d6040518060400160405280600c81526020016b5f5f646563696d616c73282960a01b81525062001a468760016200228790919063ffffffff16565b90805160209091012060038201805460e09290921c63ffffffff1990921691909117905590565b6200248f565b905062001a8281600a620041f5565b620011ad9084620042cc565b7f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358360405162001b5a906040808252600790820152665741524e494e4760c81b6060820152608060208201819052605e908201527f546573742074697028616464726573732c616464726573732c75696e7432353660a08201527f293a2054686520607469706020737464636865617420686173206265656e206460c08201527f6570726563617465642e2055736520606465616c6020696e73746561642e000060e08201526101000190565b60405180910390a1620011818162001393846200136a6370a0823160e01b6200134d60018a62002287565b60405163c88a5e6d60e01b81526000805160206201a6c78339815191529063c88a5e6d9062001bbb908590859060040162003f06565b600060405180830381600087803b15801562001bd657600080fd5b505af115801562001beb573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b03851660048201526000805160206201a6c7833981519152925063ca669fa7915060240162000b41565b600062000a998383600062000a7d565b6011546040513091600f9160109160ff169062001c5890620039cd565b62001c67949392919062004395565b604051809103906000f08015801562001c84573d6000803e3d6000fd5b50600c80546001600160a01b0319166001600160a01b03929092169190911790553060145460405160129160139160ff9091169062001cc390620039cd565b62001cd2949392919062004395565b604051809103906000f08015801562001cef573d6000803e3d6000fd5b50600d80546001600160a01b0319166001600160a01b03928316908117909155600c54600e5462001d299391909116919060ff1662000a7d565b600b80546001600160a01b0319166001600160a01b03929092169182179055604080516316c1a85160e31b8152905163b60d428891678ac7230489e8000091600480830192600092919082900301818588803b15801562001d8957600080fd5b505af115801562001d9e573d6000803e3d6000fd5b5050600c54600b5460405163095ea7b360e01b81526001600160a01b03928316955063095ea7b3945062001ddd93509116906000199060040162003f06565b6020604051808303816000875af115801562001dfd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e239190620042ac565b50600d54600b5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39262001e5e929116906000199060040162003f06565b6020604051808303816000875af115801562001e7e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001ea49190620042ac565b50565b62001eb283620023a5565b5062001ebe82620023a5565b50601554604051630b73a18f60e01b81526001600160a01b0385811660048301528481166024830152604482019290925260006064820152614e20608482015290821690630b73a18f9060a401600060405180830381600087803b15801562001f2657600080fd5b505af115801562001f3b573d6000803e3d6000fd5b5050601554604051630b73a18f60e01b81526001600160a01b0386811660048301528781166024830152604482019290925260006064820152614e2060848201529084169250630b73a18f915060a401600060405180830381600087803b15801562001fa657600080fd5b505af115801562001fbb573d6000803e3d6000fd5b505050506000805160206201a6e783398151915260001c60601b60601c6001600160a01b031663c657c71884856001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562002026573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002050919081019062003fc7565b6040518363ffffffff1660e01b81526004016200206f92919062004078565b600060405180830381600087803b1580156200208a57600080fd5b505af11580156200209f573d6000803e3d6000fd5b505050506000805160206201a6e783398151915260001c60601b60601c6001600160a01b031663c657c71883846001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156200210a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002134919081019062003fc7565b6040518363ffffffff1660e01b81526004016200107092919062004078565b6060816000036200217b5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156200219557600101600a820491506200217f565b60008167ffffffffffffffff811115620021b357620021b362003b34565b6040519080825280601f01601f191660200182016040528015620021de576020820181803683370190505b50905060001982015b85156200223757600a860660300160f81b828280600190039350815181106200221457620022146200409e565b60200101906001600160f81b031916908160001a905350600a86049550620021e7565b50949350505050565b62001ea48160405160240162002257919062003f7c565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052620024b1565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b6200116e8282620024d2565b601654604051632d24c42f60e01b8152678ac7230489e8000060048201526801a055690d9db8000060248201526001600160a01b0390911690632d24c42f9060440160408051808303816000875af115801562002319573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200233f9190620043e4565b5050600c54620015bf9062002369906001600160a01b0316600d546001600160a01b03166200283b565b6040518060400160405280601a81526020017f4f6666657220626f6f6b2073686f756c6420626520656d707479000000000000815250620028bd565b60006001600160a01b03821662002480577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162002416906020808252601e908201527f4572726f723a20616464726573732073686f756c64206e6f7420626520300000604082015260600190565b60405180910390a160408051818152600781830152664164647265737360c81b60608201526001600160a01b038416602082015290517f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9181900360800190a16200248062002907565b506001600160a01b0316151590565b60006200249c8262002a0b565b806020019051810190620018e9919062004244565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b94600093909290918301828280156200254557602002820191906000526020600020905b81548152602001906001019080831162002530575b505050505090506000836200255a8362002ad3565b6040516020016200256d92919062004279565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a168352815292812091945090929091620025c191869188910162004409565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620025fc57620025fa8762002b80565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b03198816845282528083209051909183916200263d91879189910162004409565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b03168460405162002684919062004226565b600060405180830381855afa9150503d8060008114620026c1576040519150601f19603f3d011682016040523d82523d6000602084013e620026c6565b606091505b509150620026e3905081620026dd886020620042cc565b62003877565b604051630667f9d760e41b8152909250600091506000805160206201a6c78339815191529063667f9d709062002720908b90879060040162003f06565b6020604051808303816000875af115801562002740573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002766919062004244565b90508082146200278a5760405162461bcd60e51b815260040162000e279062004445565b6040516370ca10bb60e01b81526000805160206201a6c7833981519152906370ca10bb90620027c2908b9087908e9060040162003ee5565b600060405180830381600087803b158015620027dd57600080fd5b505af1158015620027f2573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff191690556200282760028b016000620039db565b896004016000905550505050505050505050565b600b54604051636f7aeed560e11b81526001600160a01b0384811660048301528381166024830152600092169063def5ddaa90604401602060405180830381865afa1580156200288f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620028b5919062004244565b159392505050565b816200116e577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051620028f49190620044e0565b60405180910390a16200116e8262003901565b6000805160206201a6c78339815191523b15620029fa576040516000906000805160206201a6c7833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490620029759083906519985a5b195960d21b9060019060200162003ee5565b60408051601f198184030181529082905262002995929160200162004279565b60408051601f1981840301815290829052620029b19162004226565b6000604051808303816000865af19150503d8060008114620029f0576040519150601f19603f3d011682016040523d82523d6000602084013e620029f5565b606091505b505050505b6000805461ff001916610100179055565b60058101546060906001600160a01b0316600062002a298462002b80565b604051630667f9d760e41b81529091506000805160206201a6c78339815191529063667f9d709062002a62908590859060040162003f06565b6020604051808303816000875af115801562002a82573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002aa8919062004244565b60405160200162002abb91815260200190565b60405160208183030381529060405292505050919050565b606060008251602062002ae79190620042cc565b67ffffffffffffffff81111562002b025762002b0262003b34565b6040519080825280601f01601f19166020018201604052801562002b2d576020820181803683370190505b50905060005b835181101562000e3057600084828151811062002b545762002b546200409e565b60200260200101519050808260200260200184015250808062002b7790620040dc565b91505062002b33565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b94938793919290919083018282801562002bf257602002820191906000526020600020905b81548152602001906001019080831162002bdd575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519596509491935062002c3e9250859187910162004409565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161562002cdd576001600160a01b0384166000908152602087815260408083206001600160e01b0319871684528252808320905190929162002cad91859187910162004409565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b60008362002ceb8362002ad3565b60405160200162002cfe92919062004279565b60405160208183030381529060405290506000805160206201a6e783398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562002d5d57600080fd5b505af115801562002d72573d6000803e3d6000fd5b50505050600080866001600160a01b03168360405162002d93919062004226565b600060405180830381855afa9150503d806000811462002dd0576040519150601f19603f3d011682016040523d82523d6000602084013e62002dd5565b606091505b50915062002dec905081620026dd876020620042cc565b6040516365bc948160e01b81526001600160a01b0389166004820152909250600091506000805160206201a6c7833981519152906365bc9481906024016000604051808303816000875af115801562002e49573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002e7391908101906200457e565b50905080516001036200313c5760006000805160206201a6e783398151915260001c6001600160a01b031663667f9d70898460008151811062002eba5762002eba6200409e565b60200260200101516040518363ffffffff1660e01b815260040162002ee192919062003f06565b6020604051808303816000875af115801562002f01573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002f27919062004244565b90508062002f8b577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811062002f675762002f676200409e565b602002602001015160001c60405162002f8292919062003f06565b60405180910390a15b80831462002fad5760405162461bcd60e51b815260040162000e279062004445565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8888878960405160200162002fe592919062004409565b60405160208183030381529060405280519060200120856000815181106200301157620030116200409e565b602002602001015160001c6040516200302e9493929190620045df565b60405180910390a1816000815181106200304c576200304c6200409e565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262003097918a918c910162004409565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c1685528252828420925190939162003101918a918c910162004409565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550620036fa565b600181511115620036895760005b8151811015620036825760006000805160206201a6e783398151915260001c6001600160a01b031663667f9d708a8585815181106200318d576200318d6200409e565b60200260200101516040518363ffffffff1660e01b8152600401620031b492919062003f06565b6020604051808303816000875af1158015620031d4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620031fa919062004244565b9050806200325d577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5898484815181106200323957620032396200409e565b602002602001015160001c6040516200325492919062003f06565b60405180910390a15b6000805160206201a6e783398151915260001c6001600160a01b03166370ca10bb8a8585815181106200329457620032946200409e565b602002602001015161133760f01b6040518463ffffffff1660e01b8152600401620032c29392919062003ee5565b600060405180830381600087803b158015620032dd57600080fd5b505af1158015620032f2573d6000803e3d6000fd5b50505050600060608a6001600160a01b03168760405162003314919062004226565b600060405180830381855afa9150503d806000811462003351576040519150601f19603f3d011682016040523d82523d6000602084013e62003356565b606091505b5090925090506200336e81620026dd8b6020620042cc565b955081801562003382575061133760f01b86145b15620035d5577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001620033c092919062004409565b60405160208183030381529060405280519060200120888881518110620033eb57620033eb6200409e565b602002602001015160001c604051620034089493929190620045df565b60405180910390a18484815181106200342557620034256200409e565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f168352845280822090519293909262003470918d918f910162004409565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c604051602001620034fd92919062004409565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff0219169083151502179055506000805160206201a6e783398151915260001c6001600160a01b03166370ca10bb8c8787815181106200356f576200356f6200409e565b6020026020010151866040518463ffffffff1660e01b8152600401620035989392919062003ee5565b600060405180830381600087803b158015620035b357600080fd5b505af1158015620035c8573d6000803e3d6000fd5b5050505050505062003682565b6000805160206201a6e783398151915260001c6001600160a01b03166370ca10bb8c8787815181106200360c576200360c6200409e565b6020026020010151866040518463ffffffff1660e01b8152600401620036359392919062003ee5565b600060405180830381600087803b1580156200365057600080fd5b505af115801562003665573d6000803e3d6000fd5b5050505050505080806200367990620040dc565b9150506200314a565b50620036fa565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e606482015260840162000e27565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519092916200373e9188918a910162004409565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620037cd5760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b606482015260840162000e27565b6005890180546001600160a01b031916905560038901805463ffffffff19169055620037fe60028a016000620039db565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a16845282528083209051909291620038449188918a910162004409565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b600080600060208551116200388e57845162003891565b60205b905060005b81811015620038f757620038ac816008620042cc565b86620038b983886200425e565b81518110620038cc57620038cc6200409e565b01602001516001600160f81b031916901c929092179180620038ee81620040dc565b91505062003896565b5090949350505050565b8062001ea4577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620039679060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a162001ea462002907565b61567e806200461083390190565b6155e48062009c8e83390190565b6108d8806200f27283390190565b610baf806200fb4a83390190565b61452180620106f983390190565b613ef58062014c1a83390190565b611bb88062018b0f83390190565b508054600082559060005260206000209081019062001ea491905b8082111562003a0c5760008155600101620039f6565b5090565b801515811462001ea457600080fd5b60006020828403121562003a3257600080fd5b813562000a998162003a10565b6001600160a01b038116811462001ea457600080fd5b60008060006060848603121562003a6b57600080fd5b833562003a788162003a3f565b9250602084013562003a8a8162003a3f565b9150604084013562003a9c8162003a10565b809150509250925092565b6000806040838503121562003abb57600080fd5b823562003ac88162003a3f565b946020939093013593505050565b60006020828403121562003ae957600080fd5b813562000a998162003a3f565b6000806040838503121562003b0a57600080fd5b823562003b178162003a3f565b9150602083013562003b298162003a3f565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171562003b765762003b7662003b34565b604052919050565b600067ffffffffffffffff82111562003b9b5762003b9b62003b34565b50601f01601f191660200190565b600062003bc062003bba8462003b7e565b62003b4a565b905082815283838301111562003bd557600080fd5b828260208301376000602084830101529392505050565b600082601f83011262003bfe57600080fd5b62000a998383356020850162003ba9565b6000806040838503121562003c2357600080fd5b823567ffffffffffffffff8082111562003c3c57600080fd5b62003c4a8683870162003bec565b9350602085013591508082111562003c6157600080fd5b508301601f8101851362003c7457600080fd5b62003c858582356020840162003ba9565b9150509250929050565b60006020828403121562003ca257600080fd5b5035919050565b60008060006060848603121562003cbf57600080fd5b833562003ccc8162003a3f565b9250602084013562003cde8162003a3f565b9150604084013567ffffffffffffffff81111562003cfb57600080fd5b62003d098682870162003bec565b9150509250925092565b60008060006060848603121562003d2957600080fd5b833562003d368162003a3f565b9250602084013562003d488162003a3f565b929592945050506040919091013590565b600067ffffffffffffffff82111562003d765762003d7662003b34565b5060051b60200190565b6000602080838503121562003d9457600080fd5b823567ffffffffffffffff81111562003dac57600080fd5b8301601f8101851362003dbe57600080fd5b803562003dcf62003bba8262003d59565b81815260059190911b8201830190838101908783111562003def57600080fd5b928401925b8284101562003e0f5783358252928401929084019062003df4565b979650505050505050565b60008060006060848603121562003e3057600080fd5b833562003e3d8162003a3f565b95602085013595506040909401359392505050565b6000806000806080858703121562003e6957600080fd5b843562003e768162003a3f565b9350602085013562003e888162003a3f565b925060408501359150606085013562003ea18162003a10565b939692955090935050565b60006020828403121562003ebf57600080fd5b813567ffffffffffffffff81111562003ed757600080fd5b620011ad8482850162003bec565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b03929092168252602082015260400190565b60005b8381101562003f3c57818101518382015260200162003f22565b8381111562000a775750506000910152565b6000815180845262003f6881602086016020860162003f1f565b601f01601f19169290920160200192915050565b60208152600062000a99602083018462003f4e565b600062003fa262003bba8462003b7e565b905082815283838301111562003fb757600080fd5b62000a9983602083018462003f1f565b60006020828403121562003fda57600080fd5b815167ffffffffffffffff81111562003ff257600080fd5b8201601f810184136200400457600080fd5b620011ad8482516020840162003f91565b600083516200402981846020880162003f1f565b8351908301906200403f81836020880162003f1f565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60008282101562004073576200407362004048565b500390565b6001600160a01b0383168152604060208201819052600090620011ad9083018462003f4e565b634e487b7160e01b600052603260045260246000fd5b60008251620040c881846020870162003f1f565b61016160f51b920191825250600201919050565b600060018201620040f157620040f162004048565b5060010190565b600181815b80851115620041395781600019048211156200411d576200411d62004048565b808516156200412b57918102915b93841c9390800290620040fd565b509250929050565b6000826200415257506001620018e9565b816200416157506000620018e9565b81600181146200417a57600281146200418557620041a5565b6001915050620018e9565b60ff84111562004199576200419962004048565b50506001821b620018e9565b5060208310610133831016604e8410600b8410161715620041ca575081810a620018e9565b620041d68383620040f8565b8060001904821115620041ed57620041ed62004048565b029392505050565b600062000a99838362004141565b6000826200422157634e487b7160e01b600052601260045260246000fd5b500490565b600082516200423a81846020870162003f1f565b9190910192915050565b6000602082840312156200425757600080fd5b5051919050565b6000821982111562004274576200427462004048565b500190565b6001600160e01b03198316815281516000906200429e81600485016020870162003f1f565b919091016004019392505050565b600060208284031215620042bf57600080fd5b815162000a998162003a10565b6000816000190483118215151615620042e957620042e962004048565b500290565b8054600090600181811c90808316806200430957607f831692505b602080841082036200432b57634e487b7160e01b600052602260045260246000fd5b838852602088018280156200434957600181146200435b5762004388565b60ff1987168252828201975062004388565b60008981526020902060005b87811015620043825781548482015290860190840162004367565b83019850505b5050505050505092915050565b6001600160a01b0385168152608060208201819052600090620043bb90830186620042ee565b8281036040840152620043cf8186620042ee565b91505060ff8316606083015295945050505050565b60008060408385031215620043f857600080fd5b505080516020909101519092909150565b825160009082906020808701845b83811015620044355781518552938201939082019060010162004417565b5050948252509092019392505050565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b60408152600560408201526422b93937b960d91b606082015260806020820152600062000a99608083018462003f4e565b600082601f8301126200452357600080fd5b815160206200453662003bba8362003d59565b82815260059290921b840181019181810190868411156200455657600080fd5b8286015b848110156200457357805183529183019183016200455a565b509695505050505050565b600080604083850312156200459257600080fd5b825167ffffffffffffffff80821115620045ab57600080fd5b620045b98683870162004511565b93506020850151915080821115620045d057600080fd5b5062003c858582860162004511565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe60a06040523480156200001157600080fd5b506040516200567e3803806200567e83398101604081905262000034916200048c565b8282826040518060400160405280601081526020016f496e7665727465644d616e67726f766560801b815250808484847f72201d073f249840099a96530e189c4291c1852040b1e96ff1f606db656be4ff60405160405180910390a16200009b836200016d565b620000a682620001cc565b620000b1816200027f565b620000bc836200032f565b5050815160208084019190912060408051808201825260018152603160f81b9084015280517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f938101939093528201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001905060408051601f19818403018152919052805160209091012060805250620004d19650505050505050565b62000177620003e0565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f30906020015b60405180910390a150565b620001d6620003e0565b61ffff811681146200022f5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f31366269747300000000000060448201526064015b60405180910390fd5b6200024b816001546200045160201b62001d4e1790919060201c565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001620001c1565b62000289620003e0565b808162ffffff1614620002df5760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f3234626974730000000000000000604482015260640162000226565b620002fb816001546200046f60201b62001d711790919060201c565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001620001c1565b62000339620003e0565b6001600160a01b038116620003915760405162461bcd60e51b815260206004820152601360248201527f6d67762f636f6e6669672f676f762f6e6f743000000000000000000000000000604482015260640162000226565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001620001c1565b6003546001600160a01b0316331480620003f957503330145b806200040e57506003546001600160a01b0316155b6200044f5760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b604482015260640162000226565b565b60401b69ffff00000000000000001661ffff60401b19919091161790565b60281b67ffffff00000000001662ffffff60281b19919091161790565b600080600060608486031215620004a257600080fd5b83516001600160a01b0381168114620004ba57600080fd5b602085015160409095015190969495509392505050565b60805161518a620004f46000396000818161036401526116aa015261518a6000f3fe60806040526004361061024a5760003560e01c80636d27de6711610139578063b60d4288116100b6578063dc7e98df1161007a578063dc7e98df146108a8578063def5ddaa146108c8578063fbb66910146108e8578063fbfa77cf14610908578063fbffe5fd14610928578063fcaa7e2e1461094857600080fd5b8063b60d4288146107e4578063c7bb25d0146107ec578063cbf75c9a14610833578063d0ee509914610868578063db20266f1461088857600080fd5b8063aa4dd282116100fd578063aa4dd28214610744578063ab033ea914610764578063ad97db1b14610784578063b09d2a16146107a4578063b2b12057146107c457600080fd5b80636d27de671461061457806370a08231146106545780637ecebe00146106815780638c66715c146106ae57806395999ee31461072457600080fd5b80635722647b116101c7578063644e67031161018b578063644e6703146104cc5780636804f613146105835780636817031b146105a357806368c13d6b146105c35780636a4f76911461060157600080fd5b80635722647b146103f657806359eba454146104345780635a611f4e146104545780635aa6e675146104745780635cd82390146104ac57600080fd5b806330adf81f1161020e57806330adf81f146103105780633644e5151461035257806341c0e1b51461038657806346e142fa1461039b57806349f6d2dc146103e357600080fd5b80630b73a18f1461025f578063230244081461027f578063275074581461029257806327d097c6146102d05780632e1a7d4d146102f057600080fd5b3661025a5761025833610968565b005b600080fd5b34801561026b57600080fd5b5061025861027a3660046149b8565b61098f565b61025861028d366004614a05565b610968565b34801561029e57600080fd5b506102bb6102ad366004614a20565b6001600160601b0316151590565b60405190151581526020015b60405180910390f35b3480156102dc57600080fd5b506102586102eb366004614a39565b610a2d565b3480156102fc57600080fd5b506102bb61030b366004614a20565b610b08565b34801561031c57600080fd5b506103447fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a281565b6040519081526020016102c7565b34801561035e57600080fd5b506103447f000000000000000000000000000000000000000000000000000000000000000081565b34801561039257600080fd5b50610258610b62565b3480156103a757600080fd5b506103bb6103b6366004614ac8565b610baa565b604080519586526020860194909452928401919091526060830152608082015260a0016102c7565b6103446103f1366004614b41565b610bd6565b34801561040257600080fd5b50610344610411366004614a39565b600560209081526000938452604080852082529284528284209052825290205481565b34801561044057600080fd5b506102bb61044f366004614b9f565b610d41565b34801561046057600080fd5b5061025861046f366004614bea565b610dca565b34801561048057600080fd5b50600354610494906001600160a01b031681565b6040516001600160a01b0390911681526020016102c7565b3480156104b857600080fd5b506102586104c7366004614a05565b610e24565b3480156104d857600080fd5b506104ec6104e7366004614c07565b610e84565b6040805183516001600160a01b0316815260208085015115158183015284830151151582840152606080860151818401526080808701518185015260a0968701511515878501528551151560c0808601919091529286015160e0850152938501516101008401528401516101208301529183015115156101408201529282015161016084015201516101808201526101a0016102c7565b34801561058f57600080fd5b5061025861059e366004614bea565b610f87565b3480156105af57600080fd5b506102586105be366004614a05565b610fd1565b3480156105cf57600080fd5b506103446105de366004614a39565b600460209081526000938452604080852082529284528284209052825290205481565b61025861060f366004614c3a565b611027565b34801561062057600080fd5b5061063461062f366004614ca1565b61113a565b6040805194855260208501939093529183015260608201526080016102c7565b34801561066057600080fd5b5061034461066f366004614a05565b60066020526000908152604090205481565b34801561068d57600080fd5b5061034461069c366004614a05565b60086020526000908152604090205481565b3480156106ba57600080fd5b506106ce6106c9366004614a39565b611171565b60408051835181526020808501518183015284830151828401526060948501518583015283516001600160a01b0316608083015283015160a08201529082015160c082015291015160e0820152610100016102c7565b34801561073057600080fd5b5061025861073f366004614a20565b61124d565b34801561075057600080fd5b5061034461075f366004614d09565b6112e9565b34801561077057600080fd5b5061025861077f366004614a05565b61134a565b34801561079057600080fd5b5061034461079f366004614d3c565b6113ec565b3480156107b057600080fd5b506102586107bf366004614d8b565b6115be565b3480156107d057600080fd5b506103bb6107df366004614e21565b6118b7565b6102586118f3565b3480156107f857600080fd5b50610344610807366004614e9b565b600760209081526000948552604080862082529385528385208152918452828420909152825290205481565b34801561083f57600080fd5b5061085361084e366004614c07565b6118fe565b604080519283526020830191909152016102c7565b34801561087457600080fd5b50610258610883366004614c07565b6119fb565b34801561089457600080fd5b506102bb6108a3366004614c07565b611a6c565b3480156108b457600080fd5b506102586108c3366004614a39565b611aa7565b3480156108d457600080fd5b506103446108e3366004614c07565b611b67565b3480156108f457600080fd5b50610258610903366004614a39565b611b9f565b34801561091457600080fd5b50600054610494906001600160a01b031681565b34801561093457600080fd5b50610634610943366004614eef565b611c8c565b34801561095457600080fd5b50610258610963366004614a20565b611cb3565b60006109756000806118fe565b50905061098181611d90565b61098b8234611dd3565b5050565b610997611e2f565b6001600160a01b0385811660008181526002602090815260408083209489168084529482529182902080546001600160f81b0316600160f81b17905581516001815291517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a3610a10858585611aa7565b610a1b858584611b9f565b610a26858583610a2d565b5050505050565b610a35611e2f565b808162ffffff1614610a8e5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f636f6e6669672f6f666665725f676173626173652f3234626974730060448201526064015b60405180910390fd5b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805462ffffff60601b191662ffffff60601b606088901b1617905590518481527fc5859916e5f3fc1ed4d2cfb8c7a6cf709580f228fa0c9d9e0fa468744c7e4a9191015b60405180910390a3505050565b6000610b143383611e9a565b60405133908390600081818185875af1925050503d8060008114610b54576040519150601f19603f3d011682016040523d82523d6000602084013e610b59565b606091505b50909392505050565b610b6a611e2f565b60015464ff000000001916640100000000176001556040517fbe26733c2bf6ff3ea5ba8cfe744422bd49052ff9ed5685c9e81e6f9321dbaddd90600090a1565b6000806000806000610bc08a8a8a8a8a33611f5f565b939e929d50909b50995090975095505050505050565b6000610be0614864565b610bea89896118fe565b6101208301819052610100830191909152610c04906120ac565b610c188161010001518261012001516120f8565b3415610c2857610c283334611dd3565b61012081015160181c63ffffffff166001016080820181905263ffffffff811614610c8b5760405162461bcd60e51b81526020600482015260136024820152726d67762f6f6666657249644f766572666c6f7760681b6044820152606401610a85565b6080810151610120820151610cb79160181b66ffffffff0000001666ffffffff00000019919091161790565b6101208201526001600160a01b03808a16825288166020820152604081018790526060810186905260a0810185905260c0810184905260e08101839052610cff816000612148565b61012081015181516001600160a01b03908116600090815260026020908152604080832082870151909416835292905220556080015198975050505050505050565b6001600160a01b038085166000818152600760209081526040808320888616808552908352818420338086529084528285209689168552959092528083208690555191939092917f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d91610db79188908890614f3c565b60405180910390a3506001949350505050565b610dd2611e2f565b60015460ff60501b191660ff60501b605083901b161760015560405181151581527f9b84fe4d9ffc14a6f7ec50c18884ee0d4bb8165aa718a28558df12ab4bd32b14906020015b60405180910390a150565b610e2c611e2f565b6001546001600160601b03166001600160601b0319606083901b16176001556040516001600160a01b03821681527ff592e42c32883b35bebfbf9d9b801570a25d5ccbba452310746ad2cfd20d548f90602001610e19565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152610efa6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b600080610f0786866118fe565b91509150610f71826040805160c081018252606083811c8252605884901c60ff9081161515602080850191909152605086901c82161515848601529385901c61ffff1691830191909152602884901c62ffffff1660808301529290911c909116151560a082015290565b9350610f7c816128c5565b925050509250929050565b610f8f611e2f565b600154610f9c9082612973565b60015560405181151581527fbf39fbfab835c119637f4dbc4fb0f428c559c210200405d1ec25ddb50a93f9d490602001610e19565b610fd9611e2f565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f3090602001610e19565b61102f614864565b61103989896118fe565b6101208301819052610100830191909152611053906120ac565b6110678161010001518261012001516120f8565b3415611077576110773334611dd3565b6001600160a01b03808a16808352908916602080840182905260408085018b9052606085018a90526080850186905260a0850189905260c0850188905260e0850187905260009384526004825280842092845291815281832085845290529020546101408201526101208101516110ef826001612148565b610120820151811461112e5761012082015182516001600160a01b03908116600090815260026020908152604080832082880151909416835292905220555b50505050505050505050565b60008060008061114e8a8a8a8a8a8a61298a565b929650909450925090506111648a8a8786612c72565b9650965096509692505050565b61119c6040518060800160405280600081526020016000815260200160008152602001600081525090565b6111d0604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b6001600160a01b03808616600090815260046020908152604080832093881683529281528282208683529052205461120781612d72565b6001600160a01b038088166000908152600560209081526040808320938a1683529281528282208883529052205490935061124181612dd4565b92505050935093915050565b611255611e2f565b808162ffffff16146112a95760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f32346269747300000000000000006044820152606401610a85565b6001546112b69082611d71565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001610e19565b600033301461133a5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f696e766572746564466c6173686c6f616e2f70726f746563746564006044820152606401610a85565b61134383612e43565b9392505050565b611352611e2f565b6001600160a01b03811661139e5760405162461bcd60e51b815260206004820152601360248201527206d67762f636f6e6669672f676f762f6e6f743606c1b6044820152606401610a85565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001610e19565b6000806113f986866118fe565b915050611405816120ac565b6001600160a01b038087166000818152600460209081526040808320948a16808452948252808320898452825280832054938352600582528083209483529381528382208883529052919091205461145d8160601c90565b6001600160a01b0316336001600160a01b0316146114bd5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f726574726163744f666665722f756e617574686f72697a65640000006044820152606401610a85565b6001600160601b0382161561152157826114ed89896114dc8660e01c90565b60c087901c63ffffffff1688612fc4565b935080841461151f576001600160a01b03808a166000908152600260209081526040808320938c168352929052208490555b505b61152f88888885858a6130a4565b841561156657603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020293506115663385611dd3565b866001600160a01b0316886001600160a01b03167fe2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b886040516115ab91815260200190565b60405180910390a3505050949350505050565b428410156116035760405162461bcd60e51b81526020600482015260126024820152711b59dd8bdc195c9b5a5d0bd95e1c1a5c995960721b6044820152606401610a85565b6001600160a01b03878116600081815260086020908152604080832080546001810190915581517fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a2818501528f8716818401528e871660608201526080810195909552948b1660a085015260c084018a905260e084018590526101008085018a9052815180860390910181526101208501909152805191012061190160f01b6101408401527f0000000000000000000000000000000000000000000000000000000000000000610142840152610162830152906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611745573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061177b5750896001600160a01b0316816001600160a01b0316145b6117c75760405162461bcd60e51b815260206004820152601b60248201527f6d67762f7065726d69742f696e76616c69645369676e617475726500000000006044820152606401610a85565b87600760008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020819055508a6001600160a01b03168c6001600160a01b03167f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d8c8c8c6040516118a193929190614f3c565b60405180910390a3505050505050505050505050565b60008060008060006118cd8b8b8b8b8b8b611f5f565b9398509196509450925090506118e58b8b8886612c72565b965096509650965096915050565b6118fc33610968565b565b6001546001600160a01b03838116600090815260026020908152604080832093861683529290522054605882901c60ff16156119f4576000806119418460601c90565b604051636968abd360e01b81526001600160a01b03888116600483015287811660248301529190911690636968abd3906044016040805180830381865afa158015611990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b49190614f60565b915091506119c58261ffff81161490565b156119d7576119d48483611d4e565b93505b6001600160701b03811681036119f157610f7c8382613119565b50505b9250929050565b611a03611e2f565b6001600160a01b03828116600081815260026020908152604080832094861680845294825280832080546001600160f81b031690558051928352517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a35050565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054605881901c60ff1615155b949350505050565b611aaf611e2f565b6101f4811115611af85760405162461bcd60e51b815260206004820152601460248201527306d67762f636f6e6669672f6665652f3c3d3530360641b6044820152606401610a85565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805461ffff60e81b191661ffff60e81b60e888901b1617905590518481527f44a6d70a601a6f8a85c075467e9d7245897140cbf6dd505c9d9d764459f5fb649101610afb565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054603881901c63ffffffff16611a9f565b611ba7611e2f565b6001600160701b0381168114611bff5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f64656e736974792f313132626974730000000000006044820152606401610a85565b6001600160a01b03808416600090815260026020908152604080832093861683529290522054611c2f9082613119565b6001600160a01b038481166000818152600260209081526040808320948816808452948252918290209490945551848152919290917f95f1a495c6d9d1a215995408f6ad898c2b33798d6eb3cf3220b4c6cc8b61b0649101610afb565b600080600080611ca089898989893361298a565b929c919b50995090975095505050505050565b611cbb611e2f565b61ffff81168114611d0e5760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f3136626974730000000000006044820152606401610a85565b600154611d1b9082611d4e565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001610e19565b60401b69ffff00000000000000001669ffff000000000000000019919091161790565b60281b67ffffff00000000001667ffffff000000000019919091161790565b602081901c60ff1615611dd05760405162461bcd60e51b81526020600482015260086024820152671b59dd8bd919585960c21b6044820152606401610a85565b50565b6001600160a01b03821660008181526006602052604090819020805484019055517f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09490611e239084815260200190565b60405180910390a25050565b6003546001600160a01b0316331480611e4757503330145b80611e5b57506003546001600160a01b0316155b6118fc5760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b6044820152606401610a85565b6001600160a01b03821660009081526006602052604090205481811015611f035760405162461bcd60e51b815260206004820152601960248201527f6d67762f696e73756666696369656e7450726f766973696f6e000000000000006044820152606401610a85565b6001600160a01b038316600081815260066020526040908190208484039055517f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc604690611f529085815260200190565b60405180910390a2505050565b6000806000806000611f6f6148d0565b6001600160a01b03808d1682528b166020820152611f8d8c8c6118fe565b61010083015260e0820152611fa061492e565b6001600160a01b03881660a082015288151560c082015260e0820151610100830151611fcc91906120f8565b611fda8261010001516120ac565b6040517fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b990600090a161200f81838d8d61314a565b60808401519299509097509550612025906135d9565b602080830151835160808085015160e0860151604080518d81529687018c905286019190915260608501526001600160a01b03808d1694938116939216917ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47910160405180910390a4806080015193508060e0015192505050965096509650965096915050565b605881901c60ff1615611dd05760405162461bcd60e51b81526020600482015260146024820152731b59dd8bdc99595b9d1c985b98de531bd8dad95960621b6044820152606401610a85565b61210182611d90565b61210d8160f81c151590565b61098b5760405162461bcd60e51b815260206004820152600c60248201526b6d67762f696e61637469766560a01b6044820152606401610a85565b60c082015161ffff81161461219f5760405162461bcd60e51b815260206004820152601e60248201527f6d67762f77726974654f666665722f67617370726963652f31366269747300006044820152606401610a85565b61010082015160401c61ffff168260c0015110156121ca5761010082015160401c61ffff1660c08301525b61010082015160281c62ffffff168260a00151111561222b5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f6761737265712f746f6f486967680000006044820152606401610a85565b600082606001511161227f5760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f746f6f4c6f7700000000006044820152606401610a85565b61012082015160781c6001600160701b031661012083015160601c62ffffff168360a001510102826060015110156122f95760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f770000006044820152606401610a85565b60608201516001600160601b038116146123555760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f39366269747300000000006044820152606401610a85565b60408201516001600160601b038116146123b15760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f77616e74732f39366269747300000000006044820152606401610a85565b6000806123bd84613677565b9150915083602001516001600160a01b031684600001516001600160a01b03167f2b101f9ef8ca2761d91bea55ab50a4d051e9248088ff7314ddb8826839544c2a33876040015188606001518960c001518a60a001518b608001518a60405161246297969594939291906001600160a01b03979097168752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b60405180910390a383516001600160a01b03908116600090815260056020908152604080832082890151909416835292815282822060808801518352905290812054841561253c576124b48160601c90565b6001600160a01b0316336001600160a01b0316146125145760405162461bcd60e51b815260206004820152601c60248201527f6d67762f7570646174654f666665722f756e617574686f72697a6564000000006044820152606401610a85565b603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020291505b841580612556575060a0860151604882901c62ffffff1614155b8061256d575060c0860151602082901c61ffff1614155b8061258e575061012086015160601c62ffffff16603082901c62ffffff1614155b156126385761012086015160009060601c62ffffff1690506125fe338860a00151838a60c0015160201b65ffff000000001660309190911b68ffffff0000000000001660489290921b6bffffff0000000000000000001660609390931b6001600160601b03191692909217171790565b87516001600160a01b039081166000908152600560209081526040808320828d0151909416835292815282822060808c0151835290522055505b5060c08501516101208601516000919060601c62ffffff168760a001510102633b9aca00029050818111156126785761267333838303611e9a565b61268c565b8181101561268c5761268c33828403611dd3565b506101408501516001600160601b031615806126b0575061014085015160e01c8314155b1561283c57821561273657608085015185516001600160a01b039081166000908152600460209081526040808320828b01519094168352928152828220878352905220546126fd916138a3565b85516001600160a01b039081166000908152600460209081526040808320828b0151909416835292815282822087835290522055612769565b60808501516101208601516127629160381b63ffffffff60381b1663ffffffff60381b19919091161790565b6101208601525b81156127e057608085015185516001600160a01b039081166000908152600460208181526040808420828c018051871686529083528185208986528352818520548c518716865293835281852090519095168452938152838320878452905291902060e09290921b6001600160e01b039091161790555b8380156127fa57506101408501516001600160601b031615155b1561283c576128358560000151866020015161281b88610140015160e01c90565b61014089015160c01c63ffffffff16896101200151612fc4565b6101208601525b60408501516060808701516000926001600160601b03909116911b6bffffffffffffffffffffffff60601b1660c085901b63ffffffff60c01b1660e087901b17171786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282206080909a0151825298909852909620959095555050505050565b6129096040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b60f882901c1515815260e882901c61ffff166020820152607882901c6001600160701b03166040820152606082811c62ffffff1690820152605882901c60ff1615156080820152603882901c63ffffffff90811660a083015260189290921c90911660c082015290565b60581b60ff60581b1660ff60581b19919091161790565b60008060008087886001600160a01b0316146129e85760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657257616e74732f313630626974730000006044820152606401610a85565b86876001600160a01b031614612a405760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657247697665732f313630626974730000006044820152606401610a85565b612a486148d0565b6001600160a01b03808c1682528a166020820152612a668b8b6118fe565b610100830181905260e083019190915260381c63ffffffff1660408083019182526001600160a01b03808e16600090815260046020908152838220928f1682529182528281209351815292905290205460608201526080810189905260a08101889052612ad161492e565b898152602081018990526001600160a01b03871660a082015287151560c082015260e0820151610100830151612b0791906120f8565b612b158261010001516120ac565b610100820151612b26906001612973565b82610100018181525050816101000151600260008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020819055507fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b960405160405180910390a1612bba818360016138c0565b612bc781608001516135d9565b866001600160a01b03168b6001600160a01b03168d6001600160a01b03167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec478460400151856060015186608001518760e00151604051612c40949392919093845260208401929092526040830152606082015260800190565b60405180910390a460408101516060820151608083015160e090930151919e909d50919b509950975050505050505050565b6001600160a01b0380851660009081526007602090815260408083208785168452825280832093861683529281528282203383529052205481811015612ced5760405162461bcd60e51b815260206004820152601060248201526f6d67762f6c6f77416c6c6f77616e636560801b6044820152606401610a85565b6001600160a01b0380861660008181526007602090815260408083208986168085529083528184209589168452948252808320338085529252918290208686039081905591517f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d92612d63928992909190614f3c565b60405180910390a35050505050565b612d9d6040518060800160405280600081526020016000815260200160008152602001600081525090565b60e082901c815263ffffffff60c083901c1660208201526001600160601b03606083811c8216604084015292169181019190915290565b612e08604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b606082811c8252604883901c62ffffff908116602080850191909152603085901c90911660408401529290921c61ffff169181019190915290565b600080636c49c32c60e01b83604051602401612e5f9190614f84565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b0390931692909217909152905060c0830135604881901c62ffffff169060601c60005a9050826040820482031015612f0157604080516060810182527f6d67762f6e6f74456e6f756768476173466f724d616b65725472616465000000815260006020820181905291810191909152612f0190606081fd5b600080612f0f848688613b32565b915091505a8303965081612f5557612f5560405180606001604052806e1b59dd8bdb585ad95c94995d995c9d608a1b81526020018960001b815260200183815250606081fd5b6000612f73612f6760208b018b614a05565b86308c60800135613b60565b905080612fb857612fb86040518060600160405280741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b81526020018a60001b815260200184815250606081fd5b50505050505050919050565b60008315613037576001600160a01b03808716600090815260046020908152604080832093891683529281528282208783529052205461300490846138a3565b6001600160a01b038088166000908152600460209081526040808320938a16835292815282822088835290522055613054565b63ffffffff60381b19821663ffffffff60381b603885901b161791505b821561309b576001600160a01b038681166000908152600460209081526040808320938916835292815282822086835290522080546001600160e01b031660e086901b1790555b50949350505050565b6001600160601b03198316925080156130c45765ffff0000000019821691505b506001600160a01b039485166000818152600460209081526040808320979098168083529681528782208683528152878220949094559081526005835285812094815293825284842092845291905291902055565b60781b6dffffffffffffffffffffffffffff60781b166dffffffffffffffffffffffffffff60781b19919091161790565b60008080805b848110156135ce57600060408901819052606089015285858281811061317857613178615016565b90506080020160006004811061319057613190615016565b60209081029190910135604089810191825289516001600160a01b039081166000908152600485528281208c86018051841683529086528382208551835286528382205460608e019081528d518416835260058752848320915190931682528552828120935181529290935290205460c0890152516001600160601b0316158061325c575085858281811061322757613227615016565b90506080020160036004811061323f5761323f615016565b602002013561325a8860c0015162ffffff60489190911c1690565b115b6135c65785858281811061327257613272615016565b90506080020160016004811061328a5761328a615016565b60200201358686838181106132a1576132a1615016565b9050608002016001600481106132b9576132b9615016565b60200201356001600160601b0316146133145760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657257616e74732f393662697473000000006044820152606401610a85565b85858281811061332657613326615016565b90506080020160026004811061333e5761333e615016565b602002013586868381811061335557613355615016565b90506080020160026004811061336d5761336d615016565b60200201356001600160601b0316146133c85760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657247697665732f393662697473000000006044820152606401610a85565b8585828181106133da576133da615016565b9050608002016001600481106133f2576133f2615016565b6020020135608088015285858281811061340e5761340e615016565b90506080020160026004811061342657613426615016565b602002013560a0880152610100870151613441906001612973565b610100880181905287516001600160a01b039081166000908152600260209081526040808320828d015190941683529290529081209190915580806134868b8b613c48565b925092509250806f6d67762f74726164655375636365737360801b036134ad576001870196505b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b14613501576134fa8a600001518b602001516134e18d6060015160e01c90565b60608e015160c01c63ffffffff168e6101000151612fc4565b6101008b01525b6101008a0151613512906000612973565b8a610100018181525050896101000151600260008c600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008c602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055506135808b8b614248565b61358a8b8b61434a565b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b146135b0576135b08b8b858585614436565b8a60400151860195508a60600151850194505050505b600101613150565b509450945094915050565b8015611dd057604051600090339083908381818185875af1925050503d8060008114613621576040519150601f19603f3d011682016040523d82523d6000602084013e613626565b606091505b505090508061098b5760405162461bcd60e51b815260206004820152601760248201527f6d67762f73656e6450656e616c747952657665727465640000000000000000006044820152606401610a85565b60008060008060008560e0015190506000866080015182146136cc5786516001600160a01b039081166000908152600460209081526040808320828c01519094168352928152828220858352905220546136d3565b8661014001515b90506001600160601b03811661372c5761012087015160381c63ffffffff1687516001600160a01b039081166000908152600460209081526040808320828d015190941683529281528282208483529052205490925090505b6137378782846144bc565b156137d15760005b60c082901c63ffffffff16156137b9575086516001600160a01b039081166000908152600460209081526040808320828c0151909416835292815282822063ffffffff60c086901c168084529152919020549061379d8983836144bc565b156137ad578093508192506137b3565b506137b9565b5061373f565b8260c083901c63ffffffff16909550935061385a9050565b60005b6137de8260e01c90565b156138475760006137ef8360e01c90565b89516001600160a01b039081166000908152600460209081526040808320828f0151909416835292815282822084835290522054925090506138328983836144bc565b1561383d5750613847565b92509050806137d4565b6138518260e01c90565b94509192508291505b8660800151841461386b5783613875565b61014087015160e01c5b876080015184146138865783613896565b61014088015160c01c63ffffffff165b9550955050505050915091565b60c01b63ffffffff60c01b1663ffffffff60c01b19919091161790565b8080156138e757508260c001516138de5760008260a00151116138e7565b60008260800151115b80156138f7575060008260400151115b15613ab35781516001600160a01b03908116600090815260056020908152604080832082870151909416835292815282822083860151835290529081205460c084015280806139468686613c48565b608088015160a089015160408a015160608b015160c08c015196995094975092955090939092906e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613a3d5760408b01518b51116139995760006139a2565b60408b01518b51035b60808b015260608b81015160208d01510360a08c01528a015160c01c63ffffffff168a6040018181525050600460008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b602001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b604001518152602001908152602001600020548a60600181815250505b613a5d8b8b886e1b59dd8bdb9bdd115e1958dd5d1959608a1b14156138c0565b60408a0183905260808a0185905260a08a0184905260608a0182905260c08a018190526e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613aa657613aa68b8b8a8a8a614436565b5050505050505050505050565b613ad28260000151836020015160008560400151866101000151612fc4565b6101008301819052613ae5906000612973565b610100830181905282516001600160a01b0390811660009081526002602090815260408083208288015190941683529290522055613b238383614248565b613b2d838361434a565b505050565b600080613b3d61497e565b60648185516020870160008a8af192508060448415020151915050935093915050565b6000806323b872dd60e01b858585604051602401613b8093929190614f3c565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080876001600160a01b031683604051613bd0919061502c565b6000604051808303816000865af19150503d8060008114613c0d576040519150601f19603f3d011682016040523d82523d6000602084013e613c12565b606091505b5091509150818015613c3c575080511580613c3c575080806020019051810190613c3c9190615067565b98975050505050505050565b600080600080613c6885606001516001600160601b0360609190911c1690565b90506000613c8086606001516001600160601b031690565b608087015160a0880151919250908083028483021115613cc05750600095508594506e1b59dd8bdb9bdd115e1958dd5d1959608a1b935061424192505050565b8860c001518015613cd057508183105b80613ce757508860c00151158015613ce757508084105b15613cff576080880183905260a08801849052613d76565b8860c0015115613d4a57838202838181613d1b57613d1b615000565b0615613d28576001613d2b565b60005b60ff16848281613d3d57613d3d615000565b040160a08a015250613d76565b83600003613d5e5760808801839052613d76565b8381840281613d6f57613d6f615000565b0460808901525b50505050600080306001600160a01b031663aa4dd28260e01b878960a00151604051602401613da69291906150ea565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051613de4919061502c565b6000604051808303816000865af19150503d8060008114613e21576040519150601f19603f3d011682016040523d82523d6000602084013e613e26565b606091505b50915091508115613f805780806020019051810190613e459190615112565b94506f6d67762f74726164655375636365737360801b925085602001516001600160a01b031686600001516001600160a01b03167f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d88604001518a60a001518a608001518b60a00151604051613edd94939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405180910390a360e086015160501c60ff1615613f5b5760e086015160a088015160405163cac1827160e01b815260609290921c9163cac1827191613f28918a91906004016150ea565b600060405180830381600087803b158015613f4257600080fd5b505af1158015613f56573d6000803e3d6000fd5b505050505b6080860151604088018051909101905260a08601516060880180519091019052614206565b602081015160408201516060830151909650945092506e1b59dd8bdb585ad95c94995d995c9d608a1b831480613fcd575082741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b145b80613fee575082731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b145b156141005785602001516001600160a01b031686600001516001600160a01b03167f1d59c048edb5397821854bd12cbe02242b82101c677f949d076d14eb7bd8343688604001518a60a001518a608001518b60a001518960405161407d9594939291909485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b60405180910390a360e086015160501c60ff16156140fb5760e086015160a0880151604051631159507360e01b815260609290921c916311595073916140c8918a91906004016150ea565b600060405180830381600087803b1580156140e257600080fd5b505af11580156140f6573d6000803e3d6000fd5b505050505b614206565b827f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000000361416f5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000006044820152606401610a85565b82741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b036141ce5760405162461bcd60e51b81526020600482015260156024820152741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b6044820152606401610a85565b60405162461bcd60e51b815260206004820152600d60248201526c36b3bb17b9bbb0b822b93937b960991b6044820152606401610a85565b61423e86600001518760200151886040015189606001518a60c00151886f6d67762f74726164655375636365737360801b14156130a4565b50505b9250925092565b6101008101516000906127109060e81c61ffff168460400151028161426f5761426f615000565b04905080156142e557604083018051829003905260e0830181905281516000546142a391906001600160a01b031683614562565b6142e55760405162461bcd60e51b81526020600482015260136024820152721b59dd8bd99959551c985b9cd9995c91985a5b606a1b6044820152606401610a85565b604083015115613b2d5761430682600001518460a001518560400151614562565b613b2d5760405162461bcd60e51b815260206004820152601560248201527436b3bb17a6b3bb2330b4b62a37a830bcaa30b5b2b960591b6044820152606401610a85565b60a08201518151602083015160408086015160608701519151631154020b60e01b81526001600160a01b039485166004820152928416602484015260448301526064820152911690631154020b90608401600060405180830381600087803b1580156143b557600080fd5b505af11580156143c9573d6000803e3d6000fd5b5050505060006143e782602001518460a00151308660600151613b60565b905080613b2d5760405162461bcd60e51b815260206004820152601760248201527f6d67762f74616b65724661696c546f506179546f74616c0000000000000000006044820152606401610a85565b806f6d67762f74726164655375636365737360801b036144595761445984614637565b60c084015160481c62ffffff1680841115614472578093505b61448085858303858561467c565b84019350816f6d67762f74726164655375636365737360801b146144b4576144a885856147d2565b60808701805190910190525b505050505050565b6000816000036144ce57506001611343565b60408401516060858101516001600160601b039186901c82169291861691908084028284028082036145555789516001600160a01b039081166000908152600560209081526040808320828f015190941683529281528282208b835290529081205460481c62ffffff1660a08c015194029590930294909410159550611343945050505050565b1194506113439350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839182918816906145c090859061502c565b6000604051808303816000865af19150503d80600081146145fd576040519150601f19603f3d011682016040523d82523d6000602084013e614602565b606091505b509150915081801561462c57508051158061462c57508080602001905181019061462c9190615067565b979650505050505050565b614657816020015161464d8360c0015160601c90565b8360a00151614562565b611dd057602081015160005460a083015161098b92916001600160a01b031690614562565b600080633d3d130d60e01b866040518060400160405280878152602001868152506040516024016146ae92919061512b565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319939093169290921790915260c087015190915060601c60005a90508660408204820310156147465760405162461bcd60e51b815260206004820181905260248201527f6d67762f6e6f74456e6f756768476173466f724d616b6572506f7374686f6f6b6044820152606401610a85565b600080614754848a87613b32565b915091505a83039550816147c55789602001516001600160a01b03168a600001516001600160a01b03167f51d5a3ecf332626d83c8207fe9bd22f38801f578c7eb222e2d811cd1b4c629a58c60400151846040516147bc929190918252602082015260400190565b60405180910390a35b5050505050949350505050565b60c082015160009062ffffff604882901c81169161ffff602082901c1660309190911c909116820102633b9aca00028184111561480d578193505b61010085015160009060601c62ffffff1660e08701519086019060401c61ffff16633b9aca0002029050818111156148425750805b61485b6148538760c0015160601c90565b828403611dd3565b95945050505050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610120016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600081525090565b60405180608001604052806004906020820280368337509192915050565b80356001600160a01b03811681146149b357600080fd5b919050565b600080600080600060a086880312156149d057600080fd5b6149d98661499c565b94506149e76020870161499c565b94979496505050506040830135926060810135926080909101359150565b600060208284031215614a1757600080fd5b6113438261499c565b600060208284031215614a3257600080fd5b5035919050565b600080600060608486031215614a4e57600080fd5b614a578461499c565b9250614a656020850161499c565b9150604084013590509250925092565b60008083601f840112614a8757600080fd5b50813567ffffffffffffffff811115614a9f57600080fd5b6020830191508360208260071b85010111156119f457600080fd5b8015158114611dd057600080fd5b600080600080600060808688031215614ae057600080fd5b614ae98661499c565b9450614af76020870161499c565b9350604086013567ffffffffffffffff811115614b1357600080fd5b614b1f88828901614a75565b9094509250506060860135614b3381614aba565b809150509295509295909350565b600080600080600080600060e0888a031215614b5c57600080fd5b614b658861499c565b9650614b736020890161499c565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b60008060008060808587031215614bb557600080fd5b614bbe8561499c565b9350614bcc6020860161499c565b9250614bda6040860161499c565b9396929550929360600135925050565b600060208284031215614bfc57600080fd5b813561134381614aba565b60008060408385031215614c1a57600080fd5b614c238361499c565b9150614c316020840161499c565b90509250929050565b600080600080600080600080610100898b031215614c5757600080fd5b614c608961499c565b9750614c6e60208a0161499c565b979a9799505050506040860135956060810135956080820135955060a0820135945060c0820135935060e0909101359150565b60008060008060008060c08789031215614cba57600080fd5b614cc38761499c565b9550614cd16020880161499c565b945060408701359350606087013592506080870135614cef81614aba565b9150614cfd60a0880161499c565b90509295509295509295565b600080828403610140811215614d1e57600080fd5b61012080821215614d2e57600080fd5b849350610f7c81860161499c565b60008060008060808587031215614d5257600080fd5b614d5b8561499c565b9350614d696020860161499c565b9250604085013591506060850135614d8081614aba565b939692955090935050565b60008060008060008060008060006101208a8c031215614daa57600080fd5b614db38a61499c565b9850614dc160208b0161499c565b9750614dcf60408b0161499c565b9650614ddd60608b0161499c565b955060808a0135945060a08a0135935060c08a013560ff81168114614e0157600080fd5b8093505060e08a013591506101008a013590509295985092959850929598565b60008060008060008060a08789031215614e3a57600080fd5b614e438761499c565b9550614e516020880161499c565b9450604087013567ffffffffffffffff811115614e6d57600080fd5b614e7989828a01614a75565b9095509350506060870135614e8d81614aba565b9150614cfd6080880161499c565b60008060008060808587031215614eb157600080fd5b614eba8561499c565b9350614ec86020860161499c565b9250614ed66040860161499c565b9150614ee46060860161499c565b905092959194509250565b600080600080600060a08688031215614f0757600080fd5b614f108661499c565b9450614f1e6020870161499c565b935060408601359250606086013591506080860135614b3381614aba565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60008060408385031215614f7357600080fd5b505080516020909101519092909150565b61012081016001600160a01b0380614f9b8561499c565b16835280614fab6020860161499c565b1660208401525060408301356040830152606083013560608301526080830135608083015260a083013560a083015260c083013560c083015260e083013560e083015261010080840135818401525092915050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000825160005b8181101561504d5760208186018101518583015201615033565b8181111561505c576000828501525b509190910192915050565b60006020828403121561507957600080fd5b815161134381614aba565b60018060a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b61014081016150f98285615084565b6001600160a01b03929092166101209190910152919050565b60006020828403121561512457600080fd5b5051919050565b610160810161513a8285615084565b82516101208301526020830151610140830152939250505056fea26469706673582212209a27c46efe9a049a0c8d78cb7362a0c516bbb9784d448b972f2886aca3b09ff464736f6c634300080e003360a06040523480156200001157600080fd5b50604051620055e4380380620055e4833981016040819052620000349162000484565b828282604051806040016040528060088152602001674d616e67726f766560c01b815250808484847f72201d073f249840099a96530e189c4291c1852040b1e96ff1f606db656be4ff60405160405180910390a1620000938362000165565b6200009e82620001c4565b620000a98162000277565b620000b48362000327565b5050815160208084019190912060408051808201825260018152603160f81b9084015280517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f938101939093528201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c001905060408051601f19818403018152919052805160209091012060805250620004c99650505050505050565b6200016f620003d8565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f30906020015b60405180910390a150565b620001ce620003d8565b61ffff81168114620002275760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f31366269747300000000000060448201526064015b60405180910390fd5b62000243816001546200044960201b62001e221790919060201c565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001620001b9565b62000281620003d8565b808162ffffff1614620002d75760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f323462697473000000000000000060448201526064016200021e565b620002f3816001546200046760201b62001e451790919060201c565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001620001b9565b62000331620003d8565b6001600160a01b038116620003895760405162461bcd60e51b815260206004820152601360248201527f6d67762f636f6e6669672f676f762f6e6f74300000000000000000000000000060448201526064016200021e565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001620001b9565b6003546001600160a01b0316331480620003f157503330145b806200040657506003546001600160a01b0316155b620004475760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b60448201526064016200021e565b565b60401b69ffff00000000000000001661ffff60401b19919091161790565b60281b67ffffff00000000001662ffffff60281b19919091161790565b6000806000606084860312156200049a57600080fd5b83516001600160a01b0381168114620004b257600080fd5b602085015160409095015190969495509392505050565b6080516150f8620004ec60003960008181610364015261177e01526150f86000f3fe60806040526004361061024a5760003560e01c80636d27de6711610139578063b60d4288116100b6578063dc7e98df1161007a578063dc7e98df146108a8578063def5ddaa146108c8578063fbb66910146108e8578063fbfa77cf14610908578063fbffe5fd14610928578063fcaa7e2e1461094857600080fd5b8063b60d4288146107e4578063c7bb25d0146107ec578063cbf75c9a14610833578063d0ee509914610868578063db20266f1461088857600080fd5b8063aa4dd282116100fd578063aa4dd28214610744578063ab033ea914610764578063ad97db1b14610784578063b09d2a16146107a4578063b2b12057146107c457600080fd5b80636d27de671461061457806370a08231146106545780637ecebe00146106815780638c66715c146106ae57806395999ee31461072457600080fd5b80635722647b116101c7578063644e67031161018b578063644e6703146104cc5780636804f613146105835780636817031b146105a357806368c13d6b146105c35780636a4f76911461060157600080fd5b80635722647b146103f657806359eba454146104345780635a611f4e146104545780635aa6e675146104745780635cd82390146104ac57600080fd5b806330adf81f1161020e57806330adf81f146103105780633644e5151461035257806341c0e1b51461038657806346e142fa1461039b57806349f6d2dc146103e357600080fd5b80630b73a18f1461025f578063230244081461027f578063275074581461029257806327d097c6146102d05780632e1a7d4d146102f057600080fd5b3661025a5761025833610968565b005b600080fd5b34801561026b57600080fd5b5061025861027a366004614926565b61098f565b61025861028d366004614973565b610968565b34801561029e57600080fd5b506102bb6102ad36600461498e565b6001600160601b0316151590565b60405190151581526020015b60405180910390f35b3480156102dc57600080fd5b506102586102eb3660046149a7565b610a2d565b3480156102fc57600080fd5b506102bb61030b36600461498e565b610b08565b34801561031c57600080fd5b506103447fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a281565b6040519081526020016102c7565b34801561035e57600080fd5b506103447f000000000000000000000000000000000000000000000000000000000000000081565b34801561039257600080fd5b50610258610b62565b3480156103a757600080fd5b506103bb6103b6366004614a36565b610baa565b604080519586526020860194909452928401919091526060830152608082015260a0016102c7565b6103446103f1366004614aaf565b610bd6565b34801561040257600080fd5b506103446104113660046149a7565b600560209081526000938452604080852082529284528284209052825290205481565b34801561044057600080fd5b506102bb61044f366004614b0d565b610d41565b34801561046057600080fd5b5061025861046f366004614b58565b610dca565b34801561048057600080fd5b50600354610494906001600160a01b031681565b6040516001600160a01b0390911681526020016102c7565b3480156104b857600080fd5b506102586104c7366004614973565b610e24565b3480156104d857600080fd5b506104ec6104e7366004614b75565b610e84565b6040805183516001600160a01b0316815260208085015115158183015284830151151582840152606080860151818401526080808701518185015260a0968701511515878501528551151560c0808601919091529286015160e0850152938501516101008401528401516101208301529183015115156101408201529282015161016084015201516101808201526101a0016102c7565b34801561058f57600080fd5b5061025861059e366004614b58565b610f87565b3480156105af57600080fd5b506102586105be366004614973565b610fd1565b3480156105cf57600080fd5b506103446105de3660046149a7565b600460209081526000938452604080852082529284528284209052825290205481565b61025861060f366004614ba8565b611027565b34801561062057600080fd5b5061063461062f366004614c0f565b61113a565b6040805194855260208501939093529183015260608201526080016102c7565b34801561066057600080fd5b5061034461066f366004614973565b60066020526000908152604090205481565b34801561068d57600080fd5b5061034461069c366004614973565b60086020526000908152604090205481565b3480156106ba57600080fd5b506106ce6106c93660046149a7565b611171565b60408051835181526020808501518183015284830151828401526060948501518583015283516001600160a01b0316608083015283015160a08201529082015160c082015291015160e0820152610100016102c7565b34801561073057600080fd5b5061025861073f36600461498e565b61124d565b34801561075057600080fd5b5061034461075f366004614c77565b6112e9565b34801561077057600080fd5b5061025861077f366004614973565b61141e565b34801561079057600080fd5b5061034461079f366004614caa565b6114c0565b3480156107b057600080fd5b506102586107bf366004614cf9565b611692565b3480156107d057600080fd5b506103bb6107df366004614d8f565b61198b565b6102586119c7565b3480156107f857600080fd5b50610344610807366004614e09565b600760209081526000948552604080862082529385528385208152918452828420909152825290205481565b34801561083f57600080fd5b5061085361084e366004614b75565b6119d2565b604080519283526020830191909152016102c7565b34801561087457600080fd5b50610258610883366004614b75565b611acf565b34801561089457600080fd5b506102bb6108a3366004614b75565b611b40565b3480156108b457600080fd5b506102586108c33660046149a7565b611b7b565b3480156108d457600080fd5b506103446108e3366004614b75565b611c3b565b3480156108f457600080fd5b506102586109033660046149a7565b611c73565b34801561091457600080fd5b50600054610494906001600160a01b031681565b34801561093457600080fd5b50610634610943366004614e5d565b611d60565b34801561095457600080fd5b5061025861096336600461498e565b611d87565b60006109756000806119d2565b50905061098181611e64565b61098b8234611ea7565b5050565b610997611f03565b6001600160a01b0385811660008181526002602090815260408083209489168084529482529182902080546001600160f81b0316600160f81b17905581516001815291517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a3610a10858585611b7b565b610a1b858584611c73565b610a26858583610a2d565b5050505050565b610a35611f03565b808162ffffff1614610a8e5760405162461bcd60e51b815260206004820152601f60248201527f6d67762f636f6e6669672f6f666665725f676173626173652f3234626974730060448201526064015b60405180910390fd5b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805462ffffff60601b191662ffffff60601b606088901b1617905590518481527fc5859916e5f3fc1ed4d2cfb8c7a6cf709580f228fa0c9d9e0fa468744c7e4a9191015b60405180910390a3505050565b6000610b143383611f6e565b60405133908390600081818185875af1925050503d8060008114610b54576040519150601f19603f3d011682016040523d82523d6000602084013e610b59565b606091505b50909392505050565b610b6a611f03565b60015464ff000000001916640100000000176001556040517fbe26733c2bf6ff3ea5ba8cfe744422bd49052ff9ed5685c9e81e6f9321dbaddd90600090a1565b6000806000806000610bc08a8a8a8a8a33612033565b939e929d50909b50995090975095505050505050565b6000610be06147d2565b610bea89896119d2565b6101208301819052610100830191909152610c0490612180565b610c188161010001518261012001516121cc565b3415610c2857610c283334611ea7565b61012081015160181c63ffffffff166001016080820181905263ffffffff811614610c8b5760405162461bcd60e51b81526020600482015260136024820152726d67762f6f6666657249644f766572666c6f7760681b6044820152606401610a85565b6080810151610120820151610cb79160181b66ffffffff0000001666ffffffff00000019919091161790565b6101208201526001600160a01b03808a16825288166020820152604081018790526060810186905260a0810185905260c0810184905260e08101839052610cff81600061221c565b61012081015181516001600160a01b03908116600090815260026020908152604080832082870151909416835292905220556080015198975050505050505050565b6001600160a01b038085166000818152600760209081526040808320888616808552908352818420338086529084528285209689168552959092528083208690555191939092917f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d91610db79188908890614eaa565b60405180910390a3506001949350505050565b610dd2611f03565b60015460ff60501b191660ff60501b605083901b161760015560405181151581527f9b84fe4d9ffc14a6f7ec50c18884ee0d4bb8165aa718a28558df12ab4bd32b14906020015b60405180910390a150565b610e2c611f03565b6001546001600160601b03166001600160601b0319606083901b16176001556040516001600160a01b03821681527ff592e42c32883b35bebfbf9d9b801570a25d5ccbba452310746ad2cfd20d548f90602001610e19565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152610efa6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b600080610f0786866119d2565b91509150610f71826040805160c081018252606083811c8252605884901c60ff9081161515602080850191909152605086901c82161515848601529385901c61ffff1691830191909152602884901c62ffffff1660808301529290911c909116151560a082015290565b9350610f7c81612999565b925050509250929050565b610f8f611f03565b600154610f9c9082612a47565b60015560405181151581527fbf39fbfab835c119637f4dbc4fb0f428c559c210200405d1ec25ddb50a93f9d490602001610e19565b610fd9611f03565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f3090602001610e19565b61102f6147d2565b61103989896119d2565b610120830181905261010083019190915261105390612180565b6110678161010001518261012001516121cc565b3415611077576110773334611ea7565b6001600160a01b03808a16808352908916602080840182905260408085018b9052606085018a90526080850186905260a0850189905260c0850188905260e0850187905260009384526004825280842092845291815281832085845290529020546101408201526101208101516110ef82600161221c565b610120820151811461112e5761012082015182516001600160a01b03908116600090815260026020908152604080832082880151909416835292905220555b50505050505050505050565b60008060008061114e8a8a8a8a8a8a612a5e565b929650909450925090506111648a8a8786612d46565b9650965096509692505050565b61119c6040518060800160405280600081526020016000815260200160008152602001600081525090565b6111d0604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b6001600160a01b03808616600090815260046020908152604080832093881683529281528282208683529052205461120781612e46565b6001600160a01b038088166000908152600560209081526040808320938a1683529281528282208883529052205490935061124181612ea8565b92505050935093915050565b611255611f03565b808162ffffff16146112a95760405162461bcd60e51b815260206004820152601860248201527f6d67762f636f6e6669672f6761736d61782f32346269747300000000000000006044820152606401610a85565b6001546112b69082611e45565b6001556040518181527f8cdff0cd5ed2543bcdf7eb93d8ec1c23626e579925f4531beeef15d84cf78d1890602001610e19565b600033301461133a5760405162461bcd60e51b815260206004820152601760248201527f6d67762f666c6173686c6f616e2f70726f7465637465640000000000000000006044820152606401610a85565b61135961134d6040850160208601614973565b83308660a00135612f17565b156113da576113836113716040850160208601614973565b60c085013560601c8560a00135612fff565b1561139857611391836130d6565b9050611418565b60408051606081018252731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b8152600060208201819052918101919091526113d590606081fd5b611418565b60408051606081018252741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b81526000602082018190529181019190915261141890606081fd5b92915050565b611426611f03565b6001600160a01b0381166114725760405162461bcd60e51b815260206004820152601360248201527206d67762f636f6e6669672f676f762f6e6f743606c1b6044820152606401610a85565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001610e19565b6000806114cd86866119d2565b9150506114d981612180565b6001600160a01b038087166000818152600460209081526040808320948a1680845294825280832089845282528083205493835260058252808320948352938152838220888352905291909120546115318160601c90565b6001600160a01b0316336001600160a01b0316146115915760405162461bcd60e51b815260206004820152601d60248201527f6d67762f726574726163744f666665722f756e617574686f72697a65640000006044820152606401610a85565b6001600160601b038216156115f557826115c189896115b08660e01c90565b60c087901c63ffffffff1688613257565b93508084146115f3576001600160a01b03808a166000908152600260209081526040808320938c168352929052208490555b505b61160388888885858a613337565b841561163a57603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca000202935061163a3385611ea7565b866001600160a01b0316886001600160a01b03167fe2ce51fba856682424155a2d89b2ad1d2adde6ea0a9e3115b4b474cd6cb1798b8860405161167f91815260200190565b60405180910390a3505050949350505050565b428410156116d75760405162461bcd60e51b81526020600482015260126024820152711b59dd8bdc195c9b5a5d0bd95e1c1a5c995960721b6044820152606401610a85565b6001600160a01b03878116600081815260086020908152604080832080546001810190915581517fb7bf278e51ab1478b10530c0300f911d9ed3562fc93ab5e6593368fe23c077a2818501528f8716818401528e871660608201526080810195909552948b1660a085015260c084018a905260e084018590526101008085018a9052815180860390910181526101208501909152805191012061190160f01b6101408401527f0000000000000000000000000000000000000000000000000000000000000000610142840152610162830152906101820160408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015611819573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061184f5750896001600160a01b0316816001600160a01b0316145b61189b5760405162461bcd60e51b815260206004820152601b60248201527f6d67762f7065726d69742f696e76616c69645369676e617475726500000000006044820152606401610a85565b87600760008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b03168152602001908152602001600020819055508a6001600160a01b03168c6001600160a01b03167f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d8c8c8c60405161197593929190614eaa565b60405180910390a3505050505050505050505050565b60008060008060006119a18b8b8b8b8b8b612033565b9398509196509450925090506119b98b8b8886612d46565b965096509650965096915050565b6119d033610968565b565b6001546001600160a01b03838116600090815260026020908152604080832093861683529290522054605882901c60ff1615611ac857600080611a158460601c90565b604051636968abd360e01b81526001600160a01b03888116600483015287811660248301529190911690636968abd3906044016040805180830381865afa158015611a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a889190614ece565b91509150611a998261ffff81161490565b15611aab57611aa88483611e22565b93505b6001600160701b0381168103611ac557610f7c83826133ac565b50505b9250929050565b611ad7611f03565b6001600160a01b03828116600081815260026020908152604080832094861680845294825280832080546001600160f81b031690558051928352517fc4ad6e84469caa93e473acfa6c029fcf9d3757d8e268e6233c150771e9f88da69281900390910190a35050565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054605881901c60ff1615155b949350505050565b611b83611f03565b6101f4811115611bcc5760405162461bcd60e51b815260206004820152601460248201527306d67762f636f6e6669672f6665652f3c3d3530360641b6044820152606401610a85565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805461ffff60e81b191661ffff60e81b60e888901b1617905590518481527f44a6d70a601a6f8a85c075467e9d7245897140cbf6dd505c9d9d764459f5fb649101610afb565b6001600160a01b038281166000908152600260209081526040808320938516835292905290812054603881901c63ffffffff16611b73565b611c7b611f03565b6001600160701b0381168114611cd35760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f64656e736974792f313132626974730000000000006044820152606401610a85565b6001600160a01b03808416600090815260026020908152604080832093861683529290522054611d0390826133ac565b6001600160a01b038481166000818152600260209081526040808320948816808452948252918290209490945551848152919290917f95f1a495c6d9d1a215995408f6ad898c2b33798d6eb3cf3220b4c6cc8b61b0649101610afb565b600080600080611d74898989898933612a5e565b929c919b50995090975095505050505050565b611d8f611f03565b61ffff81168114611de25760405162461bcd60e51b815260206004820152601a60248201527f6d67762f636f6e6669672f67617370726963652f3136626974730000000000006044820152606401610a85565b600154611def9082611e22565b6001556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001610e19565b60401b69ffff00000000000000001669ffff000000000000000019919091161790565b60281b67ffffff00000000001667ffffff000000000019919091161790565b602081901c60ff1615611ea45760405162461bcd60e51b81526020600482015260086024820152671b59dd8bd919585960c21b6044820152606401610a85565b50565b6001600160a01b03821660008181526006602052604090819020805484019055517f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09490611ef79084815260200190565b60405180910390a25050565b6003546001600160a01b0316331480611f1b57503330145b80611f2f57506003546001600160a01b0316155b6119d05760405162461bcd60e51b815260206004820152601060248201526f1b59dd8bdd5b985d5d1a1bdc9a5e995960821b6044820152606401610a85565b6001600160a01b03821660009081526006602052604090205481811015611fd75760405162461bcd60e51b815260206004820152601960248201527f6d67762f696e73756666696369656e7450726f766973696f6e000000000000006044820152606401610a85565b6001600160a01b038316600081815260066020526040908190208484039055517f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc6046906120269085815260200190565b60405180910390a2505050565b600080600080600061204361483e565b6001600160a01b03808d1682528b1660208201526120618c8c6119d2565b61010083015260e082015261207461489c565b6001600160a01b03881660a082015288151560c082015260e08201516101008301516120a091906121cc565b6120ae826101000151612180565b6040517fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b990600090a16120e381838d8d6133dd565b608084015192995090975095506120f990613862565b602080830151835160808085015160e0860151604080518d81529687018c905286019190915260608501526001600160a01b03808d1694938116939216917ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec47910160405180910390a4806080015193508060e0015192505050965096509650965096915050565b605881901c60ff1615611ea45760405162461bcd60e51b81526020600482015260146024820152731b59dd8bdc99595b9d1c985b98de531bd8dad95960621b6044820152606401610a85565b6121d582611e64565b6121e18160f81c151590565b61098b5760405162461bcd60e51b815260206004820152600c60248201526b6d67762f696e61637469766560a01b6044820152606401610a85565b60c082015161ffff8116146122735760405162461bcd60e51b815260206004820152601e60248201527f6d67762f77726974654f666665722f67617370726963652f31366269747300006044820152606401610a85565b61010082015160401c61ffff168260c00151101561229e5761010082015160401c61ffff1660c08301525b61010082015160281c62ffffff168260a0015111156122ff5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f6761737265712f746f6f486967680000006044820152606401610a85565b60008260600151116123535760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f746f6f4c6f7700000000006044820152606401610a85565b61012082015160781c6001600160701b031661012083015160601c62ffffff168360a001510102826060015110156123cd5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f770000006044820152606401610a85565b60608201516001600160601b038116146124295760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f67697665732f39366269747300000000006044820152606401610a85565b60408201516001600160601b038116146124855760405162461bcd60e51b815260206004820152601b60248201527f6d67762f77726974654f666665722f77616e74732f39366269747300000000006044820152606401610a85565b60008061249184613900565b9150915083602001516001600160a01b031684600001516001600160a01b03167f2b101f9ef8ca2761d91bea55ab50a4d051e9248088ff7314ddb8826839544c2a33876040015188606001518960c001518a60a001518b608001518a60405161253697969594939291906001600160a01b03979097168752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b60405180910390a383516001600160a01b039081166000908152600560209081526040808320828901519094168352928152828220608088015183529052908120548415612610576125888160601c90565b6001600160a01b0316336001600160a01b0316146125e85760405162461bcd60e51b815260206004820152601c60248201527f6d67762f7570646174654f666665722f756e617574686f72697a6564000000006044820152606401610a85565b603081901c62ffffff16604882901c62ffffff1601602082901c61ffff16633b9aca00020291505b84158061262a575060a0860151604882901c62ffffff1614155b80612641575060c0860151602082901c61ffff1614155b80612662575061012086015160601c62ffffff16603082901c62ffffff1614155b1561270c5761012086015160009060601c62ffffff1690506126d2338860a00151838a60c0015160201b65ffff000000001660309190911b68ffffff0000000000001660489290921b6bffffff0000000000000000001660609390931b6001600160601b03191692909217171790565b87516001600160a01b039081166000908152600560209081526040808320828d0151909416835292815282822060808c0151835290522055505b5060c08501516101208601516000919060601c62ffffff168760a001510102633b9aca000290508181111561274c5761274733838303611f6e565b612760565b818110156127605761276033828403611ea7565b506101408501516001600160601b03161580612784575061014085015160e01c8314155b1561291057821561280a57608085015185516001600160a01b039081166000908152600460209081526040808320828b01519094168352928152828220878352905220546127d191613b2c565b85516001600160a01b039081166000908152600460209081526040808320828b015190941683529281528282208783529052205561283d565b60808501516101208601516128369160381b63ffffffff60381b1663ffffffff60381b19919091161790565b6101208601525b81156128b457608085015185516001600160a01b039081166000908152600460208181526040808420828c018051871686529083528185208986528352818520548c518716865293835281852090519095168452938152838320878452905291902060e09290921b6001600160e01b039091161790555b8380156128ce57506101408501516001600160601b031615155b1561291057612909856000015186602001516128ef88610140015160e01c90565b61014089015160c01c63ffffffff16896101200151613257565b6101208601525b60408501516060808701516000926001600160601b03909116911b6bffffffffffffffffffffffff60601b1660c085901b63ffffffff60c01b1660e087901b17171786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282206080909a0151825298909852909620959095555050505050565b6129dd6040518060e0016040528060001515815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081525090565b60f882901c1515815260e882901c61ffff166020820152607882901c6001600160701b03166040820152606082811c62ffffff1690820152605882901c60ff1615156080820152603882901c63ffffffff90811660a083015260189290921c90911660c082015290565b60581b60ff60581b1660ff60581b19919091161790565b60008060008087886001600160a01b031614612abc5760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657257616e74732f313630626974730000006044820152606401610a85565b86876001600160a01b031614612b145760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6d4f726465722f74616b657247697665732f313630626974730000006044820152606401610a85565b612b1c61483e565b6001600160a01b03808c1682528a166020820152612b3a8b8b6119d2565b610100830181905260e083019190915260381c63ffffffff1660408083019182526001600160a01b03808e16600090815260046020908152838220928f1682529182528281209351815292905290205460608201526080810189905260a08101889052612ba561489c565b898152602081018990526001600160a01b03871660a082015287151560c082015260e0820151610100830151612bdb91906121cc565b612be9826101000151612180565b610100820151612bfa906001612a47565b82610100018181525050816101000151600260008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020819055507fbc01c241b6c13c2ee496b5103c73ba7c02e7d4bbc77ee637862cc2b152f068b960405160405180910390a1612c8e81836001613b49565b612c9b8160800151613862565b866001600160a01b03168b6001600160a01b03168d6001600160a01b03167ff906db58b0529ffcfdb9bf545bfdbace7ca86906a716bfd1b65f62ff07cdec478460400151856060015186608001518760e00151604051612d14949392919093845260208401929092526040830152606082015260800190565b60405180910390a460408101516060820151608083015160e090930151919e909d50919b509950975050505050505050565b6001600160a01b0380851660009081526007602090815260408083208785168452825280832093861683529281528282203383529052205481811015612dc15760405162461bcd60e51b815260206004820152601060248201526f6d67762f6c6f77416c6c6f77616e636560801b6044820152606401610a85565b6001600160a01b0380861660008181526007602090815260408083208986168085529083528184209589168452948252808320338085529252918290208686039081905591517f6e791f456e6f5034d4928b936c32bf7e650d8228543ce7985d632ab03934837d92612e37928992909190614eaa565b60405180910390a35050505050565b612e716040518060800160405280600081526020016000815260200160008152602001600081525090565b60e082901c815263ffffffff60c083901c1660208201526001600160601b03606083811c8216604084015292169181019190915290565b612edc604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b606082811c8252604883901c62ffffff908116602080850191909152603085901c90911660408401529290921c61ffff169181019190915290565b6000806323b872dd60e01b858585604051602401612f3793929190614eaa565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600080876001600160a01b031683604051612f879190614ef2565b6000604051808303816000865af19150503d8060008114612fc4576040519150601f19603f3d011682016040523d82523d6000602084013e612fc9565b606091505b5091509150818015612ff3575080511580612ff3575080806020019051810190612ff39190614f2d565b98975050505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928391829188169061305d908590614ef2565b6000604051808303816000865af19150503d806000811461309a576040519150601f19603f3d011682016040523d82523d6000602084013e61309f565b606091505b50915091508180156130c95750805115806130c95750808060200190518101906130c99190614f2d565b93505050505b9392505050565b600080636c49c32c60e01b836040516024016130f29190614f4a565b60408051808303601f190181529190526020810180516001600160e01b0319939093166001600160e01b0390931692909217909152905060c0830135604881901c62ffffff169060601c60005a905082604082048203101561319457604080516060810182527f6d67762f6e6f74456e6f756768476173466f724d616b6572547261646500000081526000602082018190529181019190915261319490606081fd5b6000806131a2848688613db1565b915091505a83039650816131e8576131e860405180606001604052806e1b59dd8bdb585ad95c94995d995c9d608a1b81526020018960001b815260200183815250606081fd5b60006132066131fa60208b018b614973565b86308c60800135612f17565b90508061324b5761324b6040518060600160405280741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b81526020018a60001b815260200184815250606081fd5b50505050505050919050565b600083156132ca576001600160a01b0380871660009081526004602090815260408083209389168352928152828220878352905220546132979084613b2c565b6001600160a01b038088166000908152600460209081526040808320938a168352928152828220888352905220556132e7565b63ffffffff60381b19821663ffffffff60381b603885901b161791505b821561332e576001600160a01b038681166000908152600460209081526040808320938916835292815282822086835290522080546001600160e01b031660e086901b1790555b50949350505050565b6001600160601b03198316925080156133575765ffff0000000019821691505b506001600160a01b039485166000818152600460209081526040808320979098168083529681528782208683528152878220949094559081526005835285812094815293825284842092845291905291902055565b60781b6dffffffffffffffffffffffffffff60781b166dffffffffffffffffffffffffffff60781b19919091161790565b60008080805b8481101561385757600060408901819052606089015285858281811061340b5761340b614fdc565b90506080020160006004811061342357613423614fdc565b60209081029190910135604089810191825289516001600160a01b039081166000908152600485528281208c86018051841683529086528382208551835286528382205460608e019081528d518416835260058752848320915190931682528552828120935181529290935290205460c0890152516001600160601b031615806134ef57508585828181106134ba576134ba614fdc565b9050608002016003600481106134d2576134d2614fdc565b60200201356134ed8860c0015162ffffff60489190911c1690565b115b61384f5785858281811061350557613505614fdc565b90506080020160016004811061351d5761351d614fdc565b602002013586868381811061353457613534614fdc565b90506080020160016004811061354c5761354c614fdc565b60200201356001600160601b0316146135a75760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657257616e74732f393662697473000000006044820152606401610a85565b8585828181106135b9576135b9614fdc565b9050608002016002600481106135d1576135d1614fdc565b60200201358686838181106135e8576135e8614fdc565b90506080020160026004811061360057613600614fdc565b60200201356001600160601b03161461365b5760405162461bcd60e51b815260206004820152601c60248201527f6d67762f736e697065732f74616b657247697665732f393662697473000000006044820152606401610a85565b85858281811061366d5761366d614fdc565b90506080020160016004811061368557613685614fdc565b602002013560808801528585828181106136a1576136a1614fdc565b9050608002016002600481106136b9576136b9614fdc565b602002013560a08801526101008701516136d4906001612a47565b610100880181905287516001600160a01b039081166000908152600260209081526040808320828d015190941683529290529081209190915580806137198b8b613ddf565b925092509250806f6d67762f74726164655375636365737360801b03613740576001870196505b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b146137945761378d8a600001518b602001516137748d6060015160e01c90565b60608e015160c01c63ffffffff168e6101000151613257565b6101008b01525b6101008a01516137a5906000612a47565b8a610100018181525050896101000151600260008c600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008c602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055506138138b8b6143df565b806e1b59dd8bdb9bdd115e1958dd5d1959608a1b14613839576138398b8b8585856144e1565b8a60400151860195508a60600151850194505050505b6001016133e3565b509450945094915050565b8015611ea457604051600090339083908381818185875af1925050503d80600081146138aa576040519150601f19603f3d011682016040523d82523d6000602084013e6138af565b606091505b505090508061098b5760405162461bcd60e51b815260206004820152601760248201527f6d67762f73656e6450656e616c747952657665727465640000000000000000006044820152606401610a85565b60008060008060008560e0015190506000866080015182146139555786516001600160a01b039081166000908152600460209081526040808320828c015190941683529281528282208583529052205461395c565b8661014001515b90506001600160601b0381166139b55761012087015160381c63ffffffff1687516001600160a01b039081166000908152600460209081526040808320828d015190941683529281528282208483529052205490925090505b6139c0878284614544565b15613a5a5760005b60c082901c63ffffffff1615613a42575086516001600160a01b039081166000908152600460209081526040808320828c0151909416835292815282822063ffffffff60c086901c1680845291529190205490613a26898383614544565b15613a3657809350819250613a3c565b50613a42565b506139c8565b8260c083901c63ffffffff169095509350613ae39050565b60005b613a678260e01c90565b15613ad0576000613a788360e01c90565b89516001600160a01b039081166000908152600460209081526040808320828f015190941683529281528282208483529052205492509050613abb898383614544565b15613ac65750613ad0565b9250905080613a5d565b613ada8260e01c90565b94509192508291505b86608001518414613af45783613afe565b61014087015160e01c5b87608001518414613b0f5783613b1f565b61014088015160c01c63ffffffff165b9550955050505050915091565b60c01b63ffffffff60c01b1663ffffffff60c01b19919091161790565b808015613b7057508260c00151613b675760008260a0015111613b70565b60008260800151115b8015613b80575060008260400151115b15613d3c5781516001600160a01b03908116600090815260056020908152604080832082870151909416835292815282822083860151835290529081205460c08401528080613bcf8686613ddf565b608088015160a089015160408a015160608b015160c08c015196995094975092955090939092906e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613cc65760408b01518b5111613c22576000613c2b565b60408b01518b51035b60808b015260608b81015160208d01510360a08c01528a015160c01c63ffffffff168a6040018181525050600460008b600001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b602001516001600160a01b03166001600160a01b0316815260200190815260200160002060008b604001518152602001908152602001600020548a60600181815250505b613ce68b8b886e1b59dd8bdb9bdd115e1958dd5d1959608a1b1415613b49565b60408a0183905260808a0185905260a08a0184905260608a0182905260c08a018190526e1b59dd8bdb9bdd115e1958dd5d1959608a1b8614613d2f57613d2f8b8b8a8a8a6144e1565b5050505050505050505050565b613d5b8260000151836020015160008560400151866101000151613257565b6101008301819052613d6e906000612a47565b610100830181905282516001600160a01b0390811660009081526002602090815260408083208288015190941683529290522055613dac83836143df565b505050565b600080613dbc6148ec565b60648185516020870160008a8af192508060448415020151915050935093915050565b600080600080613dff85606001516001600160601b0360609190911c1690565b90506000613e1786606001516001600160601b031690565b608087015160a0880151919250908083028483021115613e575750600095508594506e1b59dd8bdb9bdd115e1958dd5d1959608a1b93506143d892505050565b8860c001518015613e6757508183105b80613e7e57508860c00151158015613e7e57508084105b15613e96576080880183905260a08801849052613f0d565b8860c0015115613ee157838202838181613eb257613eb2614fc6565b0615613ebf576001613ec2565b60005b60ff16848281613ed457613ed4614fc6565b040160a08a015250613f0d565b83600003613ef55760808801839052613f0d565b8381840281613f0657613f06614fc6565b0460808901525b50505050600080306001600160a01b031663aa4dd28260e01b878960a00151604051602401613f3d929190615058565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051613f7b9190614ef2565b6000604051808303816000865af19150503d8060008114613fb8576040519150601f19603f3d011682016040523d82523d6000602084013e613fbd565b606091505b509150915081156141175780806020019051810190613fdc9190615080565b94506f6d67762f74726164655375636365737360801b925085602001516001600160a01b031686600001516001600160a01b03167f1d81940ff2c3ac549c8acefd7c1b2ffb24aacc8b3cfa309c22abc3de79727f9d88604001518a60a001518a608001518b60a0015160405161407494939291909384526001600160a01b039290921660208401526040830152606082015260800190565b60405180910390a360e086015160501c60ff16156140f25760e086015160a088015160405163cac1827160e01b815260609290921c9163cac18271916140bf918a9190600401615058565b600060405180830381600087803b1580156140d957600080fd5b505af11580156140ed573d6000803e3d6000fd5b505050505b6080860151604088018051909101905260a0860151606088018051909101905261439d565b602081015160408201516060830151909650945092506e1b59dd8bdb585ad95c94995d995c9d608a1b831480614164575082741b59dd8bdb585ad95c951c985b9cd9995c91985a5b605a1b145b80614185575082731b59dd8bdb585ad95c949958d95a5d9951985a5b60621b145b156142975785602001516001600160a01b031686600001516001600160a01b03167f1d59c048edb5397821854bd12cbe02242b82101c677f949d076d14eb7bd8343688604001518a60a001518a608001518b60a00151896040516142149594939291909485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b60405180910390a360e086015160501c60ff16156142925760e086015160a0880151604051631159507360e01b815260609290921c9163115950739161425f918a9190600401615058565b600060405180830381600087803b15801561427957600080fd5b505af115801561428d573d6000803e3d6000fd5b505050505b61439d565b827f6d67762f6e6f74456e6f756768476173466f724d616b65725472616465000000036143065760405162461bcd60e51b815260206004820152601d60248201527f6d67762f6e6f74456e6f756768476173466f724d616b657254726164650000006044820152606401610a85565b82741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b036143655760405162461bcd60e51b81526020600482015260156024820152741b59dd8bdd185ad95c951c985b9cd9995c91985a5b605a1b6044820152606401610a85565b60405162461bcd60e51b815260206004820152600d60248201526c36b3bb17b9bbb0b822b93937b960991b6044820152606401610a85565b6143d586600001518760200151886040015189606001518a60c00151886f6d67762f74726164655375636365737360801b1415613337565b50505b9250925092565b6101008101516000906127109060e81c61ffff168460400151028161440657614406614fc6565b049050801561447c57604083018051829003905260e08301819052815160005461443a91906001600160a01b031683612fff565b61447c5760405162461bcd60e51b81526020600482015260136024820152721b59dd8bd99959551c985b9cd9995c91985a5b606a1b6044820152606401610a85565b604083015115613dac5761449d82600001518460a001518560400151612fff565b613dac5760405162461bcd60e51b815260206004820152601560248201527436b3bb17a6b3bb2330b4b62a37a830bcaa30b5b2b960591b6044820152606401610a85565b60c084015160481c62ffffff16808411156144fa578093505b6145088585830385856145ea565b84019350816f6d67762f74726164655375636365737360801b1461453c576145308585614740565b60808701805190910190525b505050505050565b600081600003614556575060016130cf565b60408401516060858101516001600160601b039186901c82169291861691908084028284028082036145dd5789516001600160a01b039081166000908152600560209081526040808320828f015190941683529281528282208b835290529081205460481c62ffffff1660a08c0151940295909302949094101595506130cf945050505050565b1194506130cf9350505050565b600080633d3d130d60e01b8660405180604001604052808781526020018681525060405160240161461c929190615099565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319939093169290921790915260c087015190915060601c60005a90508660408204820310156146b45760405162461bcd60e51b815260206004820181905260248201527f6d67762f6e6f74456e6f756768476173466f724d616b6572506f7374686f6f6b6044820152606401610a85565b6000806146c2848a87613db1565b915091505a83039550816147335789602001516001600160a01b03168a600001516001600160a01b03167f51d5a3ecf332626d83c8207fe9bd22f38801f578c7eb222e2d811cd1b4c629a58c604001518460405161472a929190918252602082015260400190565b60405180910390a35b5050505050949350505050565b60c082015160009062ffffff604882901c81169161ffff602082901c1660309190911c909116820102633b9aca00028184111561477b578193505b61010085015160009060601c62ffffff1660e08701519086019060401c61ffff16633b9aca0002029050818111156147b05750805b6147c96147c18760c0015160601c90565b828403611ea7565b95945050505050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610120016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600081525090565b60405180608001604052806004906020820280368337509192915050565b80356001600160a01b038116811461492157600080fd5b919050565b600080600080600060a0868803121561493e57600080fd5b6149478661490a565b94506149556020870161490a565b94979496505050506040830135926060810135926080909101359150565b60006020828403121561498557600080fd5b6130cf8261490a565b6000602082840312156149a057600080fd5b5035919050565b6000806000606084860312156149bc57600080fd5b6149c58461490a565b92506149d36020850161490a565b9150604084013590509250925092565b60008083601f8401126149f557600080fd5b50813567ffffffffffffffff811115614a0d57600080fd5b6020830191508360208260071b8501011115611ac857600080fd5b8015158114611ea457600080fd5b600080600080600060808688031215614a4e57600080fd5b614a578661490a565b9450614a656020870161490a565b9350604086013567ffffffffffffffff811115614a8157600080fd5b614a8d888289016149e3565b9094509250506060860135614aa181614a28565b809150509295509295909350565b600080600080600080600060e0888a031215614aca57600080fd5b614ad38861490a565b9650614ae16020890161490a565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b60008060008060808587031215614b2357600080fd5b614b2c8561490a565b9350614b3a6020860161490a565b9250614b486040860161490a565b9396929550929360600135925050565b600060208284031215614b6a57600080fd5b81356130cf81614a28565b60008060408385031215614b8857600080fd5b614b918361490a565b9150614b9f6020840161490a565b90509250929050565b600080600080600080600080610100898b031215614bc557600080fd5b614bce8961490a565b9750614bdc60208a0161490a565b979a9799505050506040860135956060810135956080820135955060a0820135945060c0820135935060e0909101359150565b60008060008060008060c08789031215614c2857600080fd5b614c318761490a565b9550614c3f6020880161490a565b945060408701359350606087013592506080870135614c5d81614a28565b9150614c6b60a0880161490a565b90509295509295509295565b600080828403610140811215614c8c57600080fd5b61012080821215614c9c57600080fd5b849350610f7c81860161490a565b60008060008060808587031215614cc057600080fd5b614cc98561490a565b9350614cd76020860161490a565b9250604085013591506060850135614cee81614a28565b939692955090935050565b60008060008060008060008060006101208a8c031215614d1857600080fd5b614d218a61490a565b9850614d2f60208b0161490a565b9750614d3d60408b0161490a565b9650614d4b60608b0161490a565b955060808a0135945060a08a0135935060c08a013560ff81168114614d6f57600080fd5b8093505060e08a013591506101008a013590509295985092959850929598565b60008060008060008060a08789031215614da857600080fd5b614db18761490a565b9550614dbf6020880161490a565b9450604087013567ffffffffffffffff811115614ddb57600080fd5b614de789828a016149e3565b9095509350506060870135614dfb81614a28565b9150614c6b6080880161490a565b60008060008060808587031215614e1f57600080fd5b614e288561490a565b9350614e366020860161490a565b9250614e446040860161490a565b9150614e526060860161490a565b905092959194509250565b600080600080600060a08688031215614e7557600080fd5b614e7e8661490a565b9450614e8c6020870161490a565b935060408601359250606086013591506080860135614aa181614a28565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60008060408385031215614ee157600080fd5b505080516020909101519092909150565b6000825160005b81811015614f135760208186018101518583015201614ef9565b81811115614f22576000828501525b509190910192915050565b600060208284031215614f3f57600080fd5b81516130cf81614a28565b61012081016001600160a01b0380614f618561490a565b16835280614f716020860161490a565b1660208401525060408301356040830152606083013560608301526080830135608083015260a083013560a083015260c083013560c083015260e083013560e083015261010080840135818401525092915050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60018060a01b038082511683528060208301511660208401525060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b61014081016150678285614ff2565b6001600160a01b03929092166101209190910152919050565b60006020828403121561509257600080fd5b5051919050565b61016081016150a88285614ff2565b82516101208301526020830151610140830152939250505056fea2646970667358221220499241dc243bdcb4e833b09a1b7eec4b8948311d5c1950899a510972d4b519f164736f6c634300080e0033608060405234801561001057600080fd5b506040516108d83803806108d883398101604081905261002f91610098565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169390911692909217909155600280546001600160a81b0319169190921617600160a01b1790556100e5565b6001600160a01b038116811461009557600080fd5b50565b6000806000606084860312156100ad57600080fd5b83516100b881610080565b60208501519093506100c981610080565b60408501519092506100da81610080565b809150509250925092565b6107e4806100f46000396000f3fe60806040526004361061004e5760003560e01c80633d3d130d1461005a5780636c49c32c1461007b578063a3cfe14d146100ad578063cda30c3b146100cd578063d3845fea146100ed57600080fd5b3661005557005b600080fd5b34801561006657600080fd5b506100796100753660046105c4565b5050565b005b34801561008757600080fd5b5061009b610096366004610607565b61010d565b60405190815260200160405180910390f35b3480156100b957600080fd5b506100796100c836600461062b565b610156565b3480156100d957600080fd5b506100796100e8366004610663565b6101d2565b3480156100f957600080fd5b50610079610108366004610695565b610551565b600254600354600091600160a01b900460ff1690604084013503610139576002805460ff60a01b191690555b80156101485760009150610150565b6101506106ae565b50919050565b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af11580156101a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cd91906106c4565b505050565b6000805460015460025460405163127db4b760e21b81526001600160a01b03938416946349f6d2dc946102159481169316918a918a918a91908a906004016106e6565b6020604051808303816000875af1158015610234573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102589190610724565b506000805460015460025460405163127db4b760e21b81526001600160a01b03938416946349f6d2dc9461029c9481169316918a918a918a91908a906004016106e6565b6020604051808303816000875af11580156102bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102df9190610724565b506000805460015460025460405163127db4b760e21b81526001600160a01b03938416946349f6d2dc946103239481169316918a918a918a91908a906004016106e6565b6020604051808303816000875af1158015610342573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103669190610724565b506000805460015460025460405163127db4b760e21b81526001600160a01b03938416946349f6d2dc946103aa9481169316918a918a918a91908a906004016106e6565b6020604051808303816000875af11580156103c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ed9190610724565b50600080546001546002546040516365fbae4d60e11b81526001600160a01b039283166004820152908216602482015291169063cbf75c9a906044016040805180830381865afa158015610445573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610469919061073d565b600054600180546002549395506dffffffffffffffffffffffffffff607887901c16945062ffffff606087901c16936001600160a01b03938416936349f6d2dc93928116929116906104be86620186a0610777565b600088116104cd5760016104cf565b875b6104d9919061078f565b620186a06000806040518863ffffffff1660e01b815260040161050297969594939291906106e6565b6020604051808303816000875af1158015610521573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105459190610724565b60035550505050505050565b600080546040516001600160a01b039091169083908381818185875af1925050503d806000811461059e576040519150601f19603f3d011682016040523d82523d6000602084013e6105a3565b606091505b505090508061007557600080fd5b6000610120828403121561015057600080fd5b6000808284036101608112156105d957600080fd5b6105e385856105b1565b9250604061011f19820112156105f857600080fd5b50610120830190509250929050565b6000610120828403121561061a57600080fd5b61062483836105b1565b9392505050565b6000806040838503121561063e57600080fd5b82356001600160a01b038116811461065557600080fd5b946020939093013593505050565b6000806000806080858703121561067957600080fd5b5050823594602084013594506040840135936060013592509050565b6000602082840312156106a757600080fd5b5035919050565b634e487b7160e01b600052600160045260246000fd5b6000602082840312156106d657600080fd5b8151801515811461062457600080fd5b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b60006020828403121561073657600080fd5b5051919050565b6000806040838503121561075057600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b6000821982111561078a5761078a610761565b500190565b60008160001904831182151516156107a9576107a9610761565b50029056fea2646970667358221220bcd41fa8b88b3760c5bd8455cf4f873f598ef8ba07ae3bdf6eec671cbb941b7f64736f6c634300080e0033608060405234801561001057600080fd5b50604051610baf380380610baf83398101604081905261002f91610089565b600080546001600160a01b039485166001600160a01b0319918216179091556001805493851693821693909317909255600280549190931691161790556100d6565b6001600160a01b038116811461008657600080fd5b50565b60008060006060848603121561009e57600080fd5b83516100a981610071565b60208501519093506100ba81610071565b60408501519092506100cb81610071565b809150509250925092565b610aca806100e56000396000f3fe6080604052600436106100955760003560e01c8063a3cfe14d11610059578063a3cfe14d14610198578063aa2cc08b146101b8578063b04220dd146100e4578063e1f21c67146101d8578063ff2e2d33146101f857600080fd5b8063080d7c4d146100a15780631154020b146100c35780632d24c42f146100e45780634d1d2b661461011e578063978b7c021461016857600080fd5b3661009c57005b600080fd5b3480156100ad57600080fd5b506100c16100bc366004610757565b610218565b005b3480156100cf57600080fd5b506100c16100de366004610783565b50505050565b3480156100f057600080fd5b506101046100ff3660046107c9565b6102aa565b604080519283526020830191909152015b60405180910390f35b34801561012a57600080fd5b5061013e6101393660046107c9565b61034d565b6040805195151586526020860194909452928401919091526060830152608082015260a001610115565b34801561017457600080fd5b506101886101833660046107c9565b610444565b6040519015158152602001610115565b3480156101a457600080fd5b506100c16101b3366004610757565b6104bc565b3480156101c457600080fd5b506101046101d33660046107eb565b6104f5565b3480156101e457600080fd5b506100c16101f3366004610846565b610593565b34801561020457600080fd5b50610188610213366004610887565b610606565b60005460015460025460405163167ae91560e21b81526001600160a01b03928316600482015290821660248201528482166044820152606481018490529116906359eba454906084015b6020604051808303816000875af1158015610281573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a5919061090a565b505050565b600080546001805460025460405163fbffe5fd60e01b81526001600160a01b0392831660048201529082166024820152604481018790526064810186905260848101929092528392169063fbffe5fd9060a4016080604051808303816000875af115801561031c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610340919061092c565b5091969095509350505050565b60008060008060008061039560405180608001604052808a81526020018981526020016bffffffffffffffffffffffff8016815260200165ffffffffffff80168152506106c4565b6000805460018054600254604051632370a17d60e11b8152959650939485948594859485946001600160a01b03928316946346e142fa946103e194928316939216918c91600401610962565b60a0604051808303816000875af1158015610400573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042491906109f7565b60019094149e50919c509a50985096505050505050509295509295909350565b60405163268e95b360e11b815260048101839052602481018290526000903090634d1d2b669060440160a0604051808303816000875af115801561048c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b09190610a37565b50929695505050505050565b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b390604401610262565b60405163fbffe5fd60e01b81526001600160a01b0385811660048301528481166024830152604482018490526064820183905260016084830152600091829188169063fbffe5fd9060a4016080604051808303816000875af115801561055f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610583919061092c565b5091999098509650505050505050565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b3906044016020604051808303816000875af11580156105e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100de919061090a565b6000806106326040518060800160405280888152602001878152602001868152602001858152506106c4565b90506000896001600160a01b03166346e142fa8a8a8560016040518563ffffffff1660e01b81526004016106699493929190610962565b60a0604051808303816000875af1158015610688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ac91906109f7565b50506001909214945050505050979650505050505050565b60408051600180825281830190925260609160009190816020015b6106e7610721565b8152602001906001900390816106df579050509050828160008151811061071057610710610a7e565b602090810291909101015292915050565b60405180608001604052806004906020820280368337509192915050565b6001600160a01b038116811461075457600080fd5b50565b6000806040838503121561076a57600080fd5b82356107758161073f565b946020939093013593505050565b6000806000806080858703121561079957600080fd5b84356107a48161073f565b935060208501356107b48161073f565b93969395505050506040820135916060013590565b600080604083850312156107dc57600080fd5b50508035926020909101359150565b600080600080600060a0868803121561080357600080fd5b853561080e8161073f565b9450602086013561081e8161073f565b9350604086013561082e8161073f565b94979396509394606081013594506080013592915050565b60008060006060848603121561085b57600080fd5b83356108668161073f565b925060208401356108768161073f565b929592945050506040919091013590565b600080600080600080600060e0888a0312156108a257600080fd5b87356108ad8161073f565b965060208801356108bd8161073f565b955060408801356108cd8161073f565b969995985095966060810135965060808101359560a0820135955060c0909101359350915050565b8051801515811461090557600080fd5b919050565b60006020828403121561091c57600080fd5b610925826108f5565b9392505050565b6000806000806080858703121561094257600080fd5b505082516020840151604085015160609095015191969095509092509050565b6001600160a01b038581168252841660208083019190915260806040830181905284518382018190526000928681019160a08601919085805b828110156109d857855185835b60048110156109c5578251825291860191908601906001016109a8565b505050948301949386019360010161099b565b50505050851515606086015292506109ee915050565b95945050505050565b600080600080600060a08688031215610a0f57600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b600080600080600060a08688031215610a4f57600080fd5b610a58866108f5565b602087015160408801516060890151608090990151929a91995097965090945092505050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220ee5af508a000963283870ccb1238e226334c277144ecdb6cbe941aa9b871504c64736f6c634300080e0033608060405234801561001057600080fd5b5060405161452138038061452183398101604081905261002f91610092565b600180546001600160a01b0394851661010002610100600160a81b0319909116179055600280549284166001600160a01b0319938416179055600380549190931691161790556100df565b6001600160a01b038116811461008f57600080fd5b50565b6000806000606084860312156100a757600080fd5b83516100b28161007a565b60208501519093506100c38161007a565b60408501519092506100d48161007a565b809150509250925092565b614433806100ee6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631f7b6d32146100515780635686153214610067578063a5e3875114610092578063e9c4a3ac146100a7575b600080fd5b6000546040519081526020015b60405180910390f35b61007a61007536600461047a565b6100af565b6040516001600160a01b03909116815260200161005e565b6100a56100a036600461047a565b6100de565b005b6100a5610320565b60008082815481106100c3576100c3610493565b6000918252602090912001546001600160a01b031692915050565b60015460ff16610311578067ffffffffffffffff811115610101576101016104a9565b60405190808252806020026020018201604052801561012a578160200160208202803683370190505b50805161013f916000916020909101906103f3565b5060005b8181101561030f576001546002546003546040516101009093046001600160a01b03908116939281169291169061017990610458565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f0801580156101b5573d6000803e3d6000fd5b50600082815481106101c9576101c9610493565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506000818154811061020a5761020a610493565b60009182526020909120015460025460405163a3cfe14d60e01b81526001600160a01b039182166004820152678ac7230489e80000602482015291169063a3cfe14d90604401600060405180830381600087803b15801561026a57600080fd5b505af115801561027e573d6000803e3d6000fd5b505050506000818154811061029557610295610493565b600091825260209091200154604051635239cafb60e11b8152821560048201526001600160a01b039091169063a47395f690602401600060405180830381600087803b1580156102e457600080fd5b505af11580156102f8573d6000803e3d6000fd5b505050508080610307906104bf565b915050610143565b505b506001805460ff191681179055565b600080549061032f82476104e6565b90506000811161037b5760405162461bcd60e51b8152602060048201526013602482015272181032ba3432b9103a37903a3930b739b332b960691b604482015260640160405180910390fd5b60005b828110156103ee57600080828154811061039a5761039a610493565b60009182526020822001546040516001600160a01b039091169250829085156108fc0290869084818181858888f193505050509050806103d957600080fd5b505080806103e6906104bf565b91505061037e565b505050565b828054828255906000526020600020908101928215610448579160200282015b8281111561044857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610413565b50610454929150610465565b5090565b613ef58061050983390190565b5b808211156104545760008155600101610466565b60006020828403121561048c57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6000600182016104df57634e487b7160e01b600052601160045260246000fd5b5060010190565b60008261050357634e487b7160e01b600052601260045260246000fd5b50049056fe60806040526000805462ff00ff1916620100011790553480156200002257600080fd5b5060405162003ef538038062003ef58339810160408190526200004591620000a1565b600880546001600160a01b039485166001600160a01b0319918216179091556009805493851693821693909317909255600a8054919093169116179055620000f5565b6001600160a01b03811681146200009e57600080fd5b50565b600080600060608486031215620000b757600080fd5b8351620000c48162000088565b6020850151909350620000d78162000088565b6040850151909250620000ea8162000088565b809150509250925092565b613df080620001056000396000f3fe60806040526004361061026b5760003560e01c8063a3cfe14d11610144578063d3845fea116100b6578063f5537ede1161007a578063f5537ede146107b9578063f8ccbf47146107d9578063fa7626d4146107f9578063fc3816c814610813578063fc8349f214610833578063ffae399e1461085357600080fd5b8063d3845fea14610719578063d82555f114610739578063e67ecda114610759578063e923c65114610779578063e9a79a7b1461079957600080fd5b8063c4c6c87d11610108578063c4c6c87d14610659578063c88a5e6d14610679578063cafffca814610699578063ccfbf94d146106b9578063cda30c3b146106d9578063d06d8229146106f957600080fd5b8063a3cfe14d1461059b578063a47395f6146105bb578063af9bbe5f146105f4578063b9c071b414610614578063ba414fa61461063457600080fd5b806353e575ac116101dd5780636f597075116101a15780636f597075146104cd5780637a943a37146104ed5780637ec95ff3146105265780638b0af9bb1461054657806397754ae91461055b5780639a8325a01461057b57600080fd5b806353e575ac146103f8578063557f49c3146104265780635a4924e81461045f5780636bce989b1461048d5780636c49c32c146104ad57600080fd5b806329ce9dde1161022f57806329ce9dde146103195780632d6c17a31461035657806333ac5efd146103765780633a768463146103965780633bf82db1146103b85780633d3d130d146103d857600080fd5b80630cc9d65614610277578063108554f214610299578063233240ee146102b95780632644c05c146102d957806329a9e300146102f957600080fd5b3661027257005b600080fd5b34801561028357600080fd5b5061029761029236600461333e565b61088c565b005b3480156102a557600080fd5b506102976102b43660046133a3565b6108d5565b3480156102c557600080fd5b506102976102d43660046133cf565b6109a6565b3480156102e557600080fd5b506102976102f43660046133f3565b610a7a565b34801561030557600080fd5b5061029761031436600461342e565b610afb565b34801561032557600080fd5b50610339610334366004613534565b610ba6565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561036257600080fd5b506102976103713660046135ac565b610ccd565b34801561038257600080fd5b506102976103913660046135c5565b610d09565b3480156103a257600080fd5b50610339600080516020613d7b83398151915281565b3480156103c457600080fd5b506102976103d3366004613608565b610d8c565b3480156103e457600080fd5b506102976103f336600461365c565b610e66565b34801561040457600080fd5b506104186104133660046133f3565b610fa2565b60405190815260200161034d565b34801561043257600080fd5b506102976104413660046136ad565b600a8054911515600160a81b0260ff60a81b19909216919091179055565b34801561046b57600080fd5b5061029761047a3660046136ad565b600c805460ff1916911515919091179055565b34801561049957600080fd5b506102976104a8366004613608565b61103a565b3480156104b957600080fd5b506104186104c83660046136ca565b61104c565b3480156104d957600080fd5b506102976104e83660046133cf565b6111b0565b3480156104f957600080fd5b506102976105083660046136ad565b600a8054911515600160b81b0260ff60b81b19909216919091179055565b34801561053257600080fd5b506104186105413660046135c5565b611253565b34801561055257600080fd5b506104186112ec565b34801561056757600080fd5b506102976105763660046136e7565b61135e565b34801561058757600080fd5b5061033961059636600461373a565b61157e565b3480156105a757600080fd5b506102976105b63660046133a3565b611678565b3480156105c757600080fd5b506102976105d63660046136ad565b600a8054911515600160a01b0260ff60a01b19909216919091179055565b34801561060057600080fd5b5061029761060f366004613608565b6116ef565b34801561062057600080fd5b5061029761062f3660046135ac565b611796565b34801561064057600080fd5b506106496117b4565b604051901515815260200161034d565b34801561066557600080fd5b506104186106743660046135ac565b6118d7565b34801561068557600080fd5b506102976106943660046133a3565b61196e565b3480156106a557600080fd5b506104186106b43660046135ac565b6119a1565b3480156106c557600080fd5b506104186106d4366004613777565b6119f3565b3480156106e557600080fd5b506104186106f43660046137d0565b611a73565b34801561070557600080fd5b5061029761071436600461342e565b611b06565b34801561072557600080fd5b506102976107343660046135ac565b611bb1565b34801561074557600080fd5b50610297610754366004613608565b611bf7565b34801561076557600080fd5b506102976107743660046135ac565b600b55565b34801561078557600080fd5b506104186107943660046133f3565b611ce8565b3480156107a557600080fd5b506102976107b43660046133a3565b611d72565b3480156107c557600080fd5b506102976107d4366004613608565b611e11565b3480156107e557600080fd5b506000546106499062010000900460ff1681565b34801561080557600080fd5b506000546106499060ff1681565b34801561081f57600080fd5b5061041861082e366004613802565b611e88565b34801561083f57600080fd5b5061064961084e3660046135ac565b611f16565b34801561085f57600080fd5b5061029761086e3660046136ad565b600a8054911515600160b01b0260ff60b01b19909216919091179055565b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c28686868686866040516108c596959493929190613864565b60405180910390a1505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610908908590859060040161389d565b600060405180830381600087803b15801561092257600080fd5b505af1158015610936573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0385166004820152600080516020613d7b83398151915292506306447d5691506024015b600060405180830381600087803b15801561098a57600080fd5b505af115801561099e573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d906109dd908490600160801b9060040161389d565b600060405180830381600087803b1580156109f757600080fd5b505af1158015610a0b573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0384166004820152600080516020613d7b833981519152925063ca669fa791506024015b600060405180830381600087803b158015610a5f57600080fd5b505af1158015610a73573d6000803e3d6000fd5b5050505050565b600854600954600a54604051636a4f769160e01b81526001600160a01b0393841693636a4f769193610ac293908216929116908a908a908a906000908b908b906004016138b6565b600060405180830381600087803b158015610adc57600080fd5b505af1158015610af0573d6000803e3d6000fd5b505050505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610b32908590600160801b9060040161389d565b600060405180830381600087803b158015610b4c57600080fd5b505af1158015610b60573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808616600483015284166024820152600080516020613d7b83398151915292506347e50cce9150604401610970565b604051638d1cc92560e01b81526000908190600080516020613d7b83398151915290638d1cc92590610bdc908790600401613952565b6000604051808303816000875af1158015610bfb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c239190810190613965565b83604051602001610c359291906139d3565b60405160208183030381529060405290508051602082016000f091506001600160a01b038216610cc65760405162461bcd60e51b815260206004820152603160248201527f54657374206465706c6f79436f646528737472696e672c6279746573293a204460448201527032b83637bcb6b2b73a103330b4b632b21760791b60648201526084015b60405180910390fd5b5092915050565b600080516020613d7b83398151915263e5d6bf02610ceb8342613a18565b6040518263ffffffff1660e01b8152600401610a4591815260200190565b600854600954600a54604051636a4f769160e01b81526001600160a01b0393841693636a4f7691938693610d52939183169216908c908c908c906000908d908d906004016138b6565b6000604051808303818588803b158015610d6b57600080fd5b505af1158015610d7f573d6000803e3d6000fd5b5050505050505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610dbf908690859060040161389d565b600060405180830381600087803b158015610dd957600080fd5b505af1158015610ded573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808716600483015285166024820152600080516020613d7b83398151915292506345b5607891506044015b600060405180830381600087803b158015610e4957600080fd5b505af1158015610e5d573d6000803e3d6000fd5b50505050505050565b600c5460ff1615610ea85760405162461bcd60e51b815260206004820152600c60248201526b1c1bdcdd1a1bdbdad1985a5b60a21b6044820152606401610cbd565b600b5415610ef657610ef68160200135600b546040518060400160405280601881526020017f496e636f727265637420737461747573206d6573736167650000000000000000815250611f86565b600a54600160b81b900460ff1615610f9e576008546001600160a01b0316636a4f7691610f2660208501856133cf565b610f3660408601602087016133cf565b606080870135901c6bffffffffffffffffffffffff166bffffffffffffffffffffffff60608801351660c088013560481c62ffffff16600060608a013560e01c8a604001356040518963ffffffff1660e01b81526004016109709897969594939291906138b6565b5050565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc938793610fed9392831692909116908c908c908c908a908d90600401613a2f565b60206040518083038185885af115801561100b573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906110309190613a6d565b9695505050505050565b611047838383600061135e565b505050565b600a54600090600160b01b900460ff1615611087576040805160208082019092526f1d195cdd13585ad95c8bdc995d995c9d60821b81529081fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c2336110b660208501856133cf565b6110c660408601602087016133cf565b856040013586608001358760a001356040516110e796959493929190613864565b60405180910390a1600a54600160a01b900460ff16156111875761110e60208301836133cf565b60085460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926111429291169060009060040161389d565b6020604051808303816000875af1158015611161573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111859190613a86565b505b600a54600160a81b900460ff16156111a857506418589bdc9d60da1b919050565b506000919050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d906111e7908490600160801b9060040161389d565b600060405180830381600087803b15801561120157600080fd5b505af1158015611215573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0384166004820152600080516020613d7b83398151915292506306447d569150602401610a45565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc93879361129e9392831692909116908d908d908d908d908d90600401613a2f565b60206040518083038185885af11580156112bc573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906112e19190613a6d565b979650505050505050565b6008546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611335573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113599190613a6d565b905090565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b17905291516000928716916113b291613aa3565b6000604051808303816000865af19150503d80600081146113ef576040519150601f19603f3d011682016040523d82523d6000602084013e6113f4565b606091505b5091505060008180602001905181019061140e9190613a6d565b905061147a846114748761144b6370a0823160e01b61142e60018d611fce565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b90611ff3565b821561099e5760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b038916916114c29190613aa3565b6000604051808303816000865af19150503d80600081146114ff576040519150601f19603f3d011682016040523d82523d6000602084013e611504565b606091505b5091505060008180602001905181019061151e9190613a6d565b905082861015611543576115328684613a18565b61153c9082613a18565b905061155a565b61154d8387613a18565b6115579082613abf565b90505b611574816114746318160ddd60e01b61142e60018d611fce565b5050505050505050565b604051638d1cc92560e01b81526000908190600080516020613d7b83398151915290638d1cc925906115b4908690600401613952565b6000604051808303816000875af11580156115d3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115fb9190810190613965565b90508051602082016000f091506001600160a01b0382166116725760405162461bcd60e51b815260206004820152602b60248201527f54657374206465706c6f79436f646528737472696e67293a204465706c6f796d60448201526a32b73a103330b4b632b21760a91b6064820152608401610cbd565b50919050565b60085460405163095ea7b360e01b81526001600160a01b038481169263095ea7b3926116ac9290911690859060040161389d565b6020604051808303816000875af11580156116cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110479190613a86565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90611722908690859060040161389d565b600060405180830381600087803b15801561173c57600080fd5b505af1158015611750573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808716600483015285166024820152600080516020613d7b83398151915292506347e50cce9150604401610e2f565b600080516020613d7b83398151915263e5d6bf02610ceb8342613abf565b60008054610100900460ff16156117d45750600054610100900460ff1690565b6000600080516020613d7b8339815191523b156118d257604051600090600080516020613d7b833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49061183c9083906519985a5b195960d21b9060200161389d565b60408051601f198184030181529082905261185a9291602001613ad7565b60408051601f198184030181529082905261187491613aa3565b6000604051808303816000865af19150503d80600081146118b1576040519150601f19603f3d011682016040523d82523d6000602084013e6118b6565b606091505b50915050808060200190518101906118ce9190613a86565b9150505b919050565b600854600954600a5460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810184905260006064820181905292919091169063ad97db1b906084015b6020604051808303816000875af1158015611944573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119689190613a6d565b92915050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610970908590859060040161389d565b600854600954600a5460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810184905260016064820152600092919091169063ad97db1b90608401611925565b60085460405163127db4b760e21b81526000916001600160a01b0316906349f6d2dc90611a30908a908a908a908a908a9089908b90600401613a2f565b6020604051808303816000875af1158015611a4f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e19190613a6d565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc93611aba939183169216908a908a908a9089908b90600401613a2f565b6020604051808303816000875af1158015611ad9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611afd9190613a6d565b95945050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90611b3d908590600160801b9060040161389d565b600060405180830381600087803b158015611b5757600080fd5b505af1158015611b6b573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808616600483015284166024820152600080516020613d7b83398151915292506345b560789150604401610970565b600854604051630460488160e31b81523060048201526001600160a01b039091169063230244089083906024016000604051808303818588803b15801561098a57600080fd5b7f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583604051611cc2906040808252600790820152665741524e494e4760c81b6060820152608060208201819052605e908201527f546573742074697028616464726573732c616464726573732c75696e7432353660a08201527f293a2054686520607469706020737464636865617420686173206265656e206460c08201527f6570726563617465642e2055736520606465616c6020696e73746561642e000060e08201526101000190565b60405180910390a1611047816114748461144b6370a0823160e01b61142e60018a611fce565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc93611d2f939183169216908b908b908b908b908b90600401613a2f565b6020604051808303816000875af1158015611d4e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110309190613a6d565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90611da5908590859060040161389d565b600060405180830381600087803b158015611dbf57600080fd5b505af1158015611dd3573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0385166004820152600080516020613d7b833981519152925063ca669fa79150602401610970565b60405163a9059cbb60e01b81526001600160a01b0384169063a9059cbb90611e3f908590859060040161389d565b6020604051808303816000875af1158015611e5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e829190613a86565b50505050565b60085460405163127db4b760e21b81526000916001600160a01b0316906349f6d2dc908490611ec7908c908c908c908c908c908a908d90600401613a2f565b60206040518083038185885af1158015611ee5573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611f0a9190613a6d565b98975050505050505050565b600854604051632e1a7d4d60e01b8152600481018390526000916001600160a01b031690632e1a7d4d906024016020604051808303816000875af1158015611f62573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119689190613a86565b818314611047577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051611fbc9190613b08565b60405180910390a16110478383611ffd565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b610f9e8282612127565b808214610f9e577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516120719060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a1610f9e61246b565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b946000939092909183018282801561219857602002820191906000526020600020905b815481526020019060010190808311612184575b505050505090506000836121ab83612564565b6040516020016121bc929190613ad7565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a16835281529281209194509092909161220e918691889101613b37565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166122465761224487612604565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905190918391612285918791899101613b37565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b0316846040516122ca9190613aa3565b600060405180830381855afa9150503d8060008114612305576040519150601f19603f3d011682016040523d82523d6000602084013e61230a565b606091505b50915061232390508161231e886020613b71565b613272565b604051630667f9d760e41b815290925060009150600080516020613d7b8339815191529063667f9d709061235d908b90879060040161389d565b6020604051808303816000875af115801561237c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123a09190613a6d565b90508082146123c15760405162461bcd60e51b8152600401610cbd90613b90565b6040516370ca10bb60e01b8152600080516020613d7b833981519152906370ca10bb906123f6908b9087908e90600401613c2b565b600060405180830381600087803b15801561241057600080fd5b505af1158015612424573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff1916905561245760028b0160006132ef565b896004016000905550505050505050505050565b600080516020613d7b8339815191523b1561255357604051600090600080516020613d7b833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc4906124d49083906519985a5b195960d21b90600190602001613c2b565b60408051601f19818403018152908290526124f29291602001613ad7565b60408051601f198184030181529082905261250c91613aa3565b6000604051808303816000865af19150503d8060008114612549576040519150601f19603f3d011682016040523d82523d6000602084013e61254e565b606091505b505050505b6000805461ff001916610100179055565b60606000825160206125769190613b71565b67ffffffffffffffff81111561258e5761258e613467565b6040519080825280601f01601f1916602001820160405280156125b8576020820181803683370190505b50905060005b8351811015610cc65760008482815181106125db576125db613c4c565b6020026020010151905080826020026020018401525080806125fc90613c62565b9150506125be565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b94938793919290919083018282801561267457602002820191906000526020600020905b815481526020019060010190808311612660575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051959650949193506126be92508591879101613b37565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161561275a576001600160a01b0384166000908152602087815260408083206001600160e01b0319871684528252808320905190929161272a918591879101613b37565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b60008361276683612564565b604051602001612777929190613ad7565b6040516020818303038152906040529050600080516020613d9b83398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156127d457600080fd5b505af11580156127e8573d6000803e3d6000fd5b50505050600080866001600160a01b0316836040516128079190613aa3565b600060405180830381855afa9150503d8060008114612842576040519150601f19603f3d011682016040523d82523d6000602084013e612847565b606091505b50915061285b90508161231e876020613b71565b6040516365bc948160e01b81526001600160a01b038916600482015290925060009150600080516020613d7b833981519152906365bc9481906024016000604051808303816000875af11580156128b6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526128de9190810190613cf0565b5090508051600103612b85576000600080516020613d9b83398151915260001c6001600160a01b031663667f9d70898460008151811061292057612920613c4c565b60200260200101516040518363ffffffff1660e01b815260040161294592919061389d565b6020604051808303816000875af1158015612964573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129889190613a6d565b9050806129e6577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a588836000815181106129c4576129c4613c4c565b602002602001015160001c6040516129dd92919061389d565b60405180910390a15b808314612a055760405162461bcd60e51b8152600401610cbd90613b90565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed88888789604051602001612a3b929190613b37565b6040516020818303038152906040528051906020012085600081518110612a6457612a64613c4c565b602002602001015160001c604051612a7f9493929190613d4a565b60405180910390a181600081518110612a9a57612a9a613c4c565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c1683528452808220905192939092612ae3918a918c9101613b37565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c16855282528284209251909391612b4b918a918c9101613b37565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff1916911515919091179055506130fd565b60018151111561308d5760005b8151811015613087576000600080516020613d9b83398151915260001c6001600160a01b031663667f9d708a858581518110612bd057612bd0613c4c565b60200260200101516040518363ffffffff1660e01b8152600401612bf592919061389d565b6020604051808303816000875af1158015612c14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c389190613a6d565b905080612c95577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a589848481518110612c7357612c73613c4c565b602002602001015160001c604051612c8c92919061389d565b60405180910390a15b600080516020613d9b83398151915260001c6001600160a01b03166370ca10bb8a858581518110612cc857612cc8613c4c565b602002602001015161133760f01b6040518463ffffffff1660e01b8152600401612cf493929190613c2b565b600060405180830381600087803b158015612d0e57600080fd5b505af1158015612d22573d6000803e3d6000fd5b50505050600060608a6001600160a01b031687604051612d429190613aa3565b600060405180830381855afa9150503d8060008114612d7d576040519150601f19603f3d011682016040523d82523d6000602084013e612d82565b606091505b509092509050612d978161231e8b6020613b71565b9550818015612daa575061133760f01b86145b15612fe5577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001612de5929190613b37565b60405160208183030381529060405280519060200120888881518110612e0d57612e0d613c4c565b602002602001015160001c604051612e289493929190613d4a565b60405180910390a1848481518110612e4257612e42613c4c565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f1683528452808220905192939092612e8b918d918f9101613b37565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c604051602001612f16929190613b37565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff021916908315150217905550600080516020613d9b83398151915260001c6001600160a01b03166370ca10bb8c878781518110612f8457612f84613c4c565b6020026020010151866040518463ffffffff1660e01b8152600401612fab93929190613c2b565b600060405180830381600087803b158015612fc557600080fd5b505af1158015612fd9573d6000803e3d6000fd5b50505050505050613087565b600080516020613d9b83398151915260001c6001600160a01b03166370ca10bb8c87878151811061301857613018613c4c565b6020026020010151866040518463ffffffff1660e01b815260040161303f93929190613c2b565b600060405180830381600087803b15801561305957600080fd5b505af115801561306d573d6000803e3d6000fd5b50505050505050808061307f90613c62565b915050612b92565b506130fd565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e6064820152608401610cbd565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905190929161313f9188918a9101613b37565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166131cc5760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b6064820152608401610cbd565b6005890180546001600160a01b031916905560038901805463ffffffff191690556131fb60028a0160006132ef565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a1684528252808320905190929161323f9188918a9101613b37565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b6000806000602085511161328757845161328a565b60205b905060005b818110156132e5576132a2816008613b71565b866132ad8388613abf565b815181106132bd576132bd613c4c565b01602001516001600160f81b031916901c9290921791806132dd81613c62565b91505061328f565b5090949350505050565b508054600082559060005260206000209081019061330d9190613310565b50565b5b808211156133255760008155600101613311565b5090565b6001600160a01b038116811461330d57600080fd5b60008060008060008060c0878903121561335757600080fd5b863561336281613329565b9550602087013561337281613329565b9450604087013561338281613329565b959894975094956060810135955060808101359460a0909101359350915050565b600080604083850312156133b657600080fd5b82356133c181613329565b946020939093013593505050565b6000602082840312156133e157600080fd5b81356133ec81613329565b9392505050565b600080600080600060a0868803121561340b57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b6000806040838503121561344157600080fd5b823561344c81613329565b9150602083013561345c81613329565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156134a6576134a6613467565b604052919050565b600067ffffffffffffffff8211156134c8576134c8613467565b50601f01601f191660200190565b60006134e96134e4846134ae565b61347d565b90508281528383830111156134fd57600080fd5b828260208301376000602084830101529392505050565b600082601f83011261352557600080fd5b6133ec838335602085016134d6565b6000806040838503121561354757600080fd5b823567ffffffffffffffff8082111561355f57600080fd5b61356b86838701613514565b9350602085013591508082111561358157600080fd5b508301601f8101851361359357600080fd5b6135a2858235602084016134d6565b9150509250929050565b6000602082840312156135be57600080fd5b5035919050565b60008060008060008060c087890312156135de57600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b60008060006060848603121561361d57600080fd5b833561362881613329565b9250602084013561363881613329565b929592945050506040919091013590565b6000610120828403121561167257600080fd5b60008082840361016081121561367157600080fd5b61367b8585613649565b9250604061011f198201121561369057600080fd5b50610120830190509250929050565b801515811461330d57600080fd5b6000602082840312156136bf57600080fd5b81356133ec8161369f565b600061012082840312156136dd57600080fd5b6133ec8383613649565b600080600080608085870312156136fd57600080fd5b843561370881613329565b9350602085013561371881613329565b925060408501359150606085013561372f8161369f565b939692955090935050565b60006020828403121561374c57600080fd5b813567ffffffffffffffff81111561376357600080fd5b61376f84828501613514565b949350505050565b60008060008060008060c0878903121561379057600080fd5b863561379b81613329565b955060208701356137ab81613329565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600080600080608085870312156137e657600080fd5b5050823594602084013594506040840135936060013592509050565b600080600080600080600060e0888a03121561381d57600080fd5b873561382881613329565b9650602088013561383881613329565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b60005b838110156139155781810151838201526020016138fd565b83811115611e825750506000910152565b6000815180845261393e8160208601602086016138fa565b601f01601f19169290920160200192915050565b6020815260006133ec6020830184613926565b60006020828403121561397757600080fd5b815167ffffffffffffffff81111561398e57600080fd5b8201601f8101841361399f57600080fd5b80516139ad6134e4826134ae565b8181528560208385010111156139c257600080fd5b611afd8260208301602086016138fa565b600083516139e58184602088016138fa565b8351908301906139f98183602088016138fa565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600082821015613a2a57613a2a613a02565b500390565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b600060208284031215613a7f57600080fd5b5051919050565b600060208284031215613a9857600080fd5b81516133ec8161369f565b60008251613ab58184602087016138fa565b9190910192915050565b60008219821115613ad257613ad2613a02565b500190565b6001600160e01b0319831681528151600090613afa8160048501602087016138fa565b919091016004019392505050565b60408152600560408201526422b93937b960d91b60608201526080602082015260006133ec6080830184613926565b825160009082906020808701845b83811015613b6157815185529382019390820190600101613b45565b5050948252509092019392505050565b6000816000190483118215151615613b8b57613b8b613a02565b500290565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b6001600160a01b039390931683526020830191909152604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060018201613c7457613c74613a02565b5060010190565b600082601f830112613c8c57600080fd5b8151602067ffffffffffffffff821115613ca857613ca8613467565b8160051b613cb782820161347d565b9283528481018201928281019087851115613cd157600080fd5b83870192505b848310156112e157825182529183019190830190613cd7565b60008060408385031215613d0357600080fd5b825167ffffffffffffffff80821115613d1b57600080fd5b613d2786838701613c7b565b93506020850151915080821115613d3d57600080fd5b506135a285828601613c7b565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe0000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220f9422ffe2dc0cea5614cee05acbced5148d638eb509e3a6adff8d2274a16877b64736f6c634300080e0033a264697066735822122015d66ca0797b173b00ee5f4ef88a00f3037e9384fb101d577dd391797849ef3964736f6c634300080e003360806040526000805462ff00ff1916620100011790553480156200002257600080fd5b5060405162003ef538038062003ef58339810160408190526200004591620000a1565b600880546001600160a01b039485166001600160a01b0319918216179091556009805493851693821693909317909255600a8054919093169116179055620000f5565b6001600160a01b03811681146200009e57600080fd5b50565b600080600060608486031215620000b757600080fd5b8351620000c48162000088565b6020850151909350620000d78162000088565b6040850151909250620000ea8162000088565b809150509250925092565b613df080620001056000396000f3fe60806040526004361061026b5760003560e01c8063a3cfe14d11610144578063d3845fea116100b6578063f5537ede1161007a578063f5537ede146107b9578063f8ccbf47146107d9578063fa7626d4146107f9578063fc3816c814610813578063fc8349f214610833578063ffae399e1461085357600080fd5b8063d3845fea14610719578063d82555f114610739578063e67ecda114610759578063e923c65114610779578063e9a79a7b1461079957600080fd5b8063c4c6c87d11610108578063c4c6c87d14610659578063c88a5e6d14610679578063cafffca814610699578063ccfbf94d146106b9578063cda30c3b146106d9578063d06d8229146106f957600080fd5b8063a3cfe14d1461059b578063a47395f6146105bb578063af9bbe5f146105f4578063b9c071b414610614578063ba414fa61461063457600080fd5b806353e575ac116101dd5780636f597075116101a15780636f597075146104cd5780637a943a37146104ed5780637ec95ff3146105265780638b0af9bb1461054657806397754ae91461055b5780639a8325a01461057b57600080fd5b806353e575ac146103f8578063557f49c3146104265780635a4924e81461045f5780636bce989b1461048d5780636c49c32c146104ad57600080fd5b806329ce9dde1161022f57806329ce9dde146103195780632d6c17a31461035657806333ac5efd146103765780633a768463146103965780633bf82db1146103b85780633d3d130d146103d857600080fd5b80630cc9d65614610277578063108554f214610299578063233240ee146102b95780632644c05c146102d957806329a9e300146102f957600080fd5b3661027257005b600080fd5b34801561028357600080fd5b5061029761029236600461333e565b61088c565b005b3480156102a557600080fd5b506102976102b43660046133a3565b6108d5565b3480156102c557600080fd5b506102976102d43660046133cf565b6109a6565b3480156102e557600080fd5b506102976102f43660046133f3565b610a7a565b34801561030557600080fd5b5061029761031436600461342e565b610afb565b34801561032557600080fd5b50610339610334366004613534565b610ba6565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561036257600080fd5b506102976103713660046135ac565b610ccd565b34801561038257600080fd5b506102976103913660046135c5565b610d09565b3480156103a257600080fd5b50610339600080516020613d7b83398151915281565b3480156103c457600080fd5b506102976103d3366004613608565b610d8c565b3480156103e457600080fd5b506102976103f336600461365c565b610e66565b34801561040457600080fd5b506104186104133660046133f3565b610fa2565b60405190815260200161034d565b34801561043257600080fd5b506102976104413660046136ad565b600a8054911515600160a81b0260ff60a81b19909216919091179055565b34801561046b57600080fd5b5061029761047a3660046136ad565b600c805460ff1916911515919091179055565b34801561049957600080fd5b506102976104a8366004613608565b61103a565b3480156104b957600080fd5b506104186104c83660046136ca565b61104c565b3480156104d957600080fd5b506102976104e83660046133cf565b6111b0565b3480156104f957600080fd5b506102976105083660046136ad565b600a8054911515600160b81b0260ff60b81b19909216919091179055565b34801561053257600080fd5b506104186105413660046135c5565b611253565b34801561055257600080fd5b506104186112ec565b34801561056757600080fd5b506102976105763660046136e7565b61135e565b34801561058757600080fd5b5061033961059636600461373a565b61157e565b3480156105a757600080fd5b506102976105b63660046133a3565b611678565b3480156105c757600080fd5b506102976105d63660046136ad565b600a8054911515600160a01b0260ff60a01b19909216919091179055565b34801561060057600080fd5b5061029761060f366004613608565b6116ef565b34801561062057600080fd5b5061029761062f3660046135ac565b611796565b34801561064057600080fd5b506106496117b4565b604051901515815260200161034d565b34801561066557600080fd5b506104186106743660046135ac565b6118d7565b34801561068557600080fd5b506102976106943660046133a3565b61196e565b3480156106a557600080fd5b506104186106b43660046135ac565b6119a1565b3480156106c557600080fd5b506104186106d4366004613777565b6119f3565b3480156106e557600080fd5b506104186106f43660046137d0565b611a73565b34801561070557600080fd5b5061029761071436600461342e565b611b06565b34801561072557600080fd5b506102976107343660046135ac565b611bb1565b34801561074557600080fd5b50610297610754366004613608565b611bf7565b34801561076557600080fd5b506102976107743660046135ac565b600b55565b34801561078557600080fd5b506104186107943660046133f3565b611ce8565b3480156107a557600080fd5b506102976107b43660046133a3565b611d72565b3480156107c557600080fd5b506102976107d4366004613608565b611e11565b3480156107e557600080fd5b506000546106499062010000900460ff1681565b34801561080557600080fd5b506000546106499060ff1681565b34801561081f57600080fd5b5061041861082e366004613802565b611e88565b34801561083f57600080fd5b5061064961084e3660046135ac565b611f16565b34801561085f57600080fd5b5061029761086e3660046136ad565b600a8054911515600160b01b0260ff60b01b19909216919091179055565b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c28686868686866040516108c596959493929190613864565b60405180910390a1505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610908908590859060040161389d565b600060405180830381600087803b15801561092257600080fd5b505af1158015610936573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0385166004820152600080516020613d7b83398151915292506306447d5691506024015b600060405180830381600087803b15801561098a57600080fd5b505af115801561099e573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d906109dd908490600160801b9060040161389d565b600060405180830381600087803b1580156109f757600080fd5b505af1158015610a0b573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0384166004820152600080516020613d7b833981519152925063ca669fa791506024015b600060405180830381600087803b158015610a5f57600080fd5b505af1158015610a73573d6000803e3d6000fd5b5050505050565b600854600954600a54604051636a4f769160e01b81526001600160a01b0393841693636a4f769193610ac293908216929116908a908a908a906000908b908b906004016138b6565b600060405180830381600087803b158015610adc57600080fd5b505af1158015610af0573d6000803e3d6000fd5b505050505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610b32908590600160801b9060040161389d565b600060405180830381600087803b158015610b4c57600080fd5b505af1158015610b60573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808616600483015284166024820152600080516020613d7b83398151915292506347e50cce9150604401610970565b604051638d1cc92560e01b81526000908190600080516020613d7b83398151915290638d1cc92590610bdc908790600401613952565b6000604051808303816000875af1158015610bfb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c239190810190613965565b83604051602001610c359291906139d3565b60405160208183030381529060405290508051602082016000f091506001600160a01b038216610cc65760405162461bcd60e51b815260206004820152603160248201527f54657374206465706c6f79436f646528737472696e672c6279746573293a204460448201527032b83637bcb6b2b73a103330b4b632b21760791b60648201526084015b60405180910390fd5b5092915050565b600080516020613d7b83398151915263e5d6bf02610ceb8342613a18565b6040518263ffffffff1660e01b8152600401610a4591815260200190565b600854600954600a54604051636a4f769160e01b81526001600160a01b0393841693636a4f7691938693610d52939183169216908c908c908c906000908d908d906004016138b6565b6000604051808303818588803b158015610d6b57600080fd5b505af1158015610d7f573d6000803e3d6000fd5b5050505050505050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610dbf908690859060040161389d565b600060405180830381600087803b158015610dd957600080fd5b505af1158015610ded573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808716600483015285166024820152600080516020613d7b83398151915292506345b5607891506044015b600060405180830381600087803b158015610e4957600080fd5b505af1158015610e5d573d6000803e3d6000fd5b50505050505050565b600c5460ff1615610ea85760405162461bcd60e51b815260206004820152600c60248201526b1c1bdcdd1a1bdbdad1985a5b60a21b6044820152606401610cbd565b600b5415610ef657610ef68160200135600b546040518060400160405280601881526020017f496e636f727265637420737461747573206d6573736167650000000000000000815250611f86565b600a54600160b81b900460ff1615610f9e576008546001600160a01b0316636a4f7691610f2660208501856133cf565b610f3660408601602087016133cf565b606080870135901c6bffffffffffffffffffffffff166bffffffffffffffffffffffff60608801351660c088013560481c62ffffff16600060608a013560e01c8a604001356040518963ffffffff1660e01b81526004016109709897969594939291906138b6565b5050565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc938793610fed9392831692909116908c908c908c908a908d90600401613a2f565b60206040518083038185885af115801561100b573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906110309190613a6d565b9695505050505050565b611047838383600061135e565b505050565b600a54600090600160b01b900460ff1615611087576040805160208082019092526f1d195cdd13585ad95c8bdc995d995c9d60821b81529081fd5b7f1d40f406e1d1d9e4f71d0e95a7eaf3dc4b8636e5fa6479de475eaebd4f15c0c2336110b660208501856133cf565b6110c660408601602087016133cf565b856040013586608001358760a001356040516110e796959493929190613864565b60405180910390a1600a54600160a01b900460ff16156111875761110e60208301836133cf565b60085460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926111429291169060009060040161389d565b6020604051808303816000875af1158015611161573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111859190613a86565b505b600a54600160a81b900460ff16156111a857506418589bdc9d60da1b919050565b506000919050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d906111e7908490600160801b9060040161389d565b600060405180830381600087803b15801561120157600080fd5b505af1158015611215573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0384166004820152600080516020613d7b83398151915292506306447d569150602401610a45565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc93879361129e9392831692909116908d908d908d908d908d90600401613a2f565b60206040518083038185885af11580156112bc573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906112e19190613a6d565b979650505050505050565b6008546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611335573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113599190613a6d565b905090565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b17905291516000928716916113b291613aa3565b6000604051808303816000865af19150503d80600081146113ef576040519150601f19603f3d011682016040523d82523d6000602084013e6113f4565b606091505b5091505060008180602001905181019061140e9190613a6d565b905061147a846114748761144b6370a0823160e01b61142e60018d611fce565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b90611ff3565b821561099e5760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b038916916114c29190613aa3565b6000604051808303816000865af19150503d80600081146114ff576040519150601f19603f3d011682016040523d82523d6000602084013e611504565b606091505b5091505060008180602001905181019061151e9190613a6d565b905082861015611543576115328684613a18565b61153c9082613a18565b905061155a565b61154d8387613a18565b6115579082613abf565b90505b611574816114746318160ddd60e01b61142e60018d611fce565b5050505050505050565b604051638d1cc92560e01b81526000908190600080516020613d7b83398151915290638d1cc925906115b4908690600401613952565b6000604051808303816000875af11580156115d3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115fb9190810190613965565b90508051602082016000f091506001600160a01b0382166116725760405162461bcd60e51b815260206004820152602b60248201527f54657374206465706c6f79436f646528737472696e67293a204465706c6f796d60448201526a32b73a103330b4b632b21760a91b6064820152608401610cbd565b50919050565b60085460405163095ea7b360e01b81526001600160a01b038481169263095ea7b3926116ac9290911690859060040161389d565b6020604051808303816000875af11580156116cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110479190613a86565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90611722908690859060040161389d565b600060405180830381600087803b15801561173c57600080fd5b505af1158015611750573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808716600483015285166024820152600080516020613d7b83398151915292506347e50cce9150604401610e2f565b600080516020613d7b83398151915263e5d6bf02610ceb8342613abf565b60008054610100900460ff16156117d45750600054610100900460ff1690565b6000600080516020613d7b8339815191523b156118d257604051600090600080516020613d7b833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49061183c9083906519985a5b195960d21b9060200161389d565b60408051601f198184030181529082905261185a9291602001613ad7565b60408051601f198184030181529082905261187491613aa3565b6000604051808303816000865af19150503d80600081146118b1576040519150601f19603f3d011682016040523d82523d6000602084013e6118b6565b606091505b50915050808060200190518101906118ce9190613a86565b9150505b919050565b600854600954600a5460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810184905260006064820181905292919091169063ad97db1b906084015b6020604051808303816000875af1158015611944573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119689190613a6d565b92915050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90610970908590859060040161389d565b600854600954600a5460405163ad97db1b60e01b81526001600160a01b03928316600482015290821660248201526044810184905260016064820152600092919091169063ad97db1b90608401611925565b60085460405163127db4b760e21b81526000916001600160a01b0316906349f6d2dc90611a30908a908a908a908a908a9089908b90600401613a2f565b6020604051808303816000875af1158015611a4f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e19190613a6d565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc93611aba939183169216908a908a908a9089908b90600401613a2f565b6020604051808303816000875af1158015611ad9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611afd9190613a6d565b95945050505050565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90611b3d908590600160801b9060040161389d565b600060405180830381600087803b158015611b5757600080fd5b505af1158015611b6b573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808616600483015284166024820152600080516020613d7b83398151915292506345b560789150604401610970565b600854604051630460488160e31b81523060048201526001600160a01b039091169063230244089083906024016000604051808303818588803b15801561098a57600080fd5b7f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583604051611cc2906040808252600790820152665741524e494e4760c81b6060820152608060208201819052605e908201527f546573742074697028616464726573732c616464726573732c75696e7432353660a08201527f293a2054686520607469706020737464636865617420686173206265656e206460c08201527f6570726563617465642e2055736520606465616c6020696e73746561642e000060e08201526101000190565b60405180910390a1611047816114748461144b6370a0823160e01b61142e60018a611fce565b600854600954600a5460405163127db4b760e21b81526000936001600160a01b03908116936349f6d2dc93611d2f939183169216908b908b908b908b908b90600401613a2f565b6020604051808303816000875af1158015611d4e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110309190613a6d565b60405163c88a5e6d60e01b8152600080516020613d7b8339815191529063c88a5e6d90611da5908590859060040161389d565b600060405180830381600087803b158015611dbf57600080fd5b505af1158015611dd3573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0385166004820152600080516020613d7b833981519152925063ca669fa79150602401610970565b60405163a9059cbb60e01b81526001600160a01b0384169063a9059cbb90611e3f908590859060040161389d565b6020604051808303816000875af1158015611e5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e829190613a86565b50505050565b60085460405163127db4b760e21b81526000916001600160a01b0316906349f6d2dc908490611ec7908c908c908c908c908c908a908d90600401613a2f565b60206040518083038185885af1158015611ee5573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611f0a9190613a6d565b98975050505050505050565b600854604051632e1a7d4d60e01b8152600481018390526000916001600160a01b031690632e1a7d4d906024016020604051808303816000875af1158015611f62573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119689190613a86565b818314611047577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051611fbc9190613b08565b60405180910390a16110478383611ffd565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b610f9e8282612127565b808214610f9e577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516120719060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999181900360800190a1610f9e61246b565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b946000939092909183018282801561219857602002820191906000526020600020905b815481526020019060010190808311612184575b505050505090506000836121ab83612564565b6040516020016121bc929190613ad7565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a16835281529281209194509092909161220e918691889101613b37565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166122465761224487612604565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905190918391612285918791899101613b37565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b0316846040516122ca9190613aa3565b600060405180830381855afa9150503d8060008114612305576040519150601f19603f3d011682016040523d82523d6000602084013e61230a565b606091505b50915061232390508161231e886020613b71565b613272565b604051630667f9d760e41b815290925060009150600080516020613d7b8339815191529063667f9d709061235d908b90879060040161389d565b6020604051808303816000875af115801561237c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123a09190613a6d565b90508082146123c15760405162461bcd60e51b8152600401610cbd90613b90565b6040516370ca10bb60e01b8152600080516020613d7b833981519152906370ca10bb906123f6908b9087908e90600401613c2b565b600060405180830381600087803b15801561241057600080fd5b505af1158015612424573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff1916905561245760028b0160006132ef565b896004016000905550505050505050505050565b600080516020613d7b8339815191523b1561255357604051600090600080516020613d7b833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc4906124d49083906519985a5b195960d21b90600190602001613c2b565b60408051601f19818403018152908290526124f29291602001613ad7565b60408051601f198184030181529082905261250c91613aa3565b6000604051808303816000865af19150503d8060008114612549576040519150601f19603f3d011682016040523d82523d6000602084013e61254e565b606091505b505050505b6000805461ff001916610100179055565b60606000825160206125769190613b71565b67ffffffffffffffff81111561258e5761258e613467565b6040519080825280601f01601f1916602001820160405280156125b8576020820181803683370190505b50905060005b8351811015610cc65760008482815181106125db576125db613c4c565b6020026020010151905080826020026020018401525080806125fc90613c62565b9150506125be565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b94938793919290919083018282801561267457602002820191906000526020600020905b815481526020019060010190808311612660575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051959650949193506126be92508591879101613b37565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161561275a576001600160a01b0384166000908152602087815260408083206001600160e01b0319871684528252808320905190929161272a918591879101613b37565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b60008361276683612564565b604051602001612777929190613ad7565b6040516020818303038152906040529050600080516020613d9b83398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156127d457600080fd5b505af11580156127e8573d6000803e3d6000fd5b50505050600080866001600160a01b0316836040516128079190613aa3565b600060405180830381855afa9150503d8060008114612842576040519150601f19603f3d011682016040523d82523d6000602084013e612847565b606091505b50915061285b90508161231e876020613b71565b6040516365bc948160e01b81526001600160a01b038916600482015290925060009150600080516020613d7b833981519152906365bc9481906024016000604051808303816000875af11580156128b6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526128de9190810190613cf0565b5090508051600103612b85576000600080516020613d9b83398151915260001c6001600160a01b031663667f9d70898460008151811061292057612920613c4c565b60200260200101516040518363ffffffff1660e01b815260040161294592919061389d565b6020604051808303816000875af1158015612964573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129889190613a6d565b9050806129e6577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a588836000815181106129c4576129c4613c4c565b602002602001015160001c6040516129dd92919061389d565b60405180910390a15b808314612a055760405162461bcd60e51b8152600401610cbd90613b90565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed88888789604051602001612a3b929190613b37565b6040516020818303038152906040528051906020012085600081518110612a6457612a64613c4c565b602002602001015160001c604051612a7f9493929190613d4a565b60405180910390a181600081518110612a9a57612a9a613c4c565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c1683528452808220905192939092612ae3918a918c9101613b37565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c16855282528284209251909391612b4b918a918c9101613b37565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff1916911515919091179055506130fd565b60018151111561308d5760005b8151811015613087576000600080516020613d9b83398151915260001c6001600160a01b031663667f9d708a858581518110612bd057612bd0613c4c565b60200260200101516040518363ffffffff1660e01b8152600401612bf592919061389d565b6020604051808303816000875af1158015612c14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c389190613a6d565b905080612c95577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a589848481518110612c7357612c73613c4c565b602002602001015160001c604051612c8c92919061389d565b60405180910390a15b600080516020613d9b83398151915260001c6001600160a01b03166370ca10bb8a858581518110612cc857612cc8613c4c565b602002602001015161133760f01b6040518463ffffffff1660e01b8152600401612cf493929190613c2b565b600060405180830381600087803b158015612d0e57600080fd5b505af1158015612d22573d6000803e3d6000fd5b50505050600060608a6001600160a01b031687604051612d429190613aa3565b600060405180830381855afa9150503d8060008114612d7d576040519150601f19603f3d011682016040523d82523d6000602084013e612d82565b606091505b509092509050612d978161231e8b6020613b71565b9550818015612daa575061133760f01b86145b15612fe5577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001612de5929190613b37565b60405160208183030381529060405280519060200120888881518110612e0d57612e0d613c4c565b602002602001015160001c604051612e289493929190613d4a565b60405180910390a1848481518110612e4257612e42613c4c565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f1683528452808220905192939092612e8b918d918f9101613b37565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c604051602001612f16929190613b37565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff021916908315150217905550600080516020613d9b83398151915260001c6001600160a01b03166370ca10bb8c878781518110612f8457612f84613c4c565b6020026020010151866040518463ffffffff1660e01b8152600401612fab93929190613c2b565b600060405180830381600087803b158015612fc557600080fd5b505af1158015612fd9573d6000803e3d6000fd5b50505050505050613087565b600080516020613d9b83398151915260001c6001600160a01b03166370ca10bb8c87878151811061301857613018613c4c565b6020026020010151866040518463ffffffff1660e01b815260040161303f93929190613c2b565b600060405180830381600087803b15801561305957600080fd5b505af115801561306d573d6000803e3d6000fd5b50505050505050808061307f90613c62565b915050612b92565b506130fd565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e6064820152608401610cbd565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905190929161313f9188918a9101613b37565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166131cc5760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201526e3a143994903737ba103337bab7321760891b6064820152608401610cbd565b6005890180546001600160a01b031916905560038901805463ffffffff191690556131fb60028a0160006132ef565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a1684528252808320905190929161323f9188918a9101613b37565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b6000806000602085511161328757845161328a565b60205b905060005b818110156132e5576132a2816008613b71565b866132ad8388613abf565b815181106132bd576132bd613c4c565b01602001516001600160f81b031916901c9290921791806132dd81613c62565b91505061328f565b5090949350505050565b508054600082559060005260206000209081019061330d9190613310565b50565b5b808211156133255760008155600101613311565b5090565b6001600160a01b038116811461330d57600080fd5b60008060008060008060c0878903121561335757600080fd5b863561336281613329565b9550602087013561337281613329565b9450604087013561338281613329565b959894975094956060810135955060808101359460a0909101359350915050565b600080604083850312156133b657600080fd5b82356133c181613329565b946020939093013593505050565b6000602082840312156133e157600080fd5b81356133ec81613329565b9392505050565b600080600080600060a0868803121561340b57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b6000806040838503121561344157600080fd5b823561344c81613329565b9150602083013561345c81613329565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156134a6576134a6613467565b604052919050565b600067ffffffffffffffff8211156134c8576134c8613467565b50601f01601f191660200190565b60006134e96134e4846134ae565b61347d565b90508281528383830111156134fd57600080fd5b828260208301376000602084830101529392505050565b600082601f83011261352557600080fd5b6133ec838335602085016134d6565b6000806040838503121561354757600080fd5b823567ffffffffffffffff8082111561355f57600080fd5b61356b86838701613514565b9350602085013591508082111561358157600080fd5b508301601f8101851361359357600080fd5b6135a2858235602084016134d6565b9150509250929050565b6000602082840312156135be57600080fd5b5035919050565b60008060008060008060c087890312156135de57600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b60008060006060848603121561361d57600080fd5b833561362881613329565b9250602084013561363881613329565b929592945050506040919091013590565b6000610120828403121561167257600080fd5b60008082840361016081121561367157600080fd5b61367b8585613649565b9250604061011f198201121561369057600080fd5b50610120830190509250929050565b801515811461330d57600080fd5b6000602082840312156136bf57600080fd5b81356133ec8161369f565b600061012082840312156136dd57600080fd5b6133ec8383613649565b600080600080608085870312156136fd57600080fd5b843561370881613329565b9350602085013561371881613329565b925060408501359150606085013561372f8161369f565b939692955090935050565b60006020828403121561374c57600080fd5b813567ffffffffffffffff81111561376357600080fd5b61376f84828501613514565b949350505050565b60008060008060008060c0878903121561379057600080fd5b863561379b81613329565b955060208701356137ab81613329565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600080600080608085870312156137e657600080fd5b5050823594602084013594506040840135936060013592509050565b600080600080600080600060e0888a03121561381d57600080fd5b873561382881613329565b9650602088013561383881613329565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b6001600160a01b03968716815294861660208601529290941660408401526060830152608082019290925260a081019190915260c00190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b03988916815296909716602087015260408601949094526060850192909252608084015260a083015260c082015260e08101919091526101000190565b60005b838110156139155781810151838201526020016138fd565b83811115611e825750506000910152565b6000815180845261393e8160208601602086016138fa565b601f01601f19169290920160200192915050565b6020815260006133ec6020830184613926565b60006020828403121561397757600080fd5b815167ffffffffffffffff81111561398e57600080fd5b8201601f8101841361399f57600080fd5b80516139ad6134e4826134ae565b8181528560208385010111156139c257600080fd5b611afd8260208301602086016138fa565b600083516139e58184602088016138fa565b8351908301906139f98183602088016138fa565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600082821015613a2a57613a2a613a02565b500390565b6001600160a01b03978816815295909616602086015260408501939093526060840191909152608083015260a082015260c081019190915260e00190565b600060208284031215613a7f57600080fd5b5051919050565b600060208284031215613a9857600080fd5b81516133ec8161369f565b60008251613ab58184602087016138fa565b9190910192915050565b60008219821115613ad257613ad2613a02565b500190565b6001600160e01b0319831681528151600090613afa8160048501602087016138fa565b919091016004019392505050565b60408152600560408201526422b93937b960d91b60608201526080602082015260006133ec6080830184613926565b825160009082906020808701845b83811015613b6157815185529382019390820190600101613b45565b5050948252509092019392505050565b6000816000190483118215151615613b8b57613b8b613a02565b500290565b6020808252606f908201527f73746453746f726167652066696e642853746453746f72616765293a2050616360408201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560608201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960808201526e39b713ba1039bab83837b93a32b21760891b60a082015260c00190565b6001600160a01b039390931683526020830191909152604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060018201613c7457613c74613a02565b5060010190565b600082601f830112613c8c57600080fd5b8151602067ffffffffffffffff821115613ca857613ca8613467565b8160051b613cb782820161347d565b9283528481018201928281019087851115613cd157600080fd5b83870192505b848310156112e157825182529183019190830190613cd7565b60008060408385031215613d0357600080fd5b825167ffffffffffffffff80821115613d1b57600080fd5b613d2786838701613c7b565b93506020850151915080821115613d3d57600080fd5b506135a285828601613c7b565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe0000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220f9422ffe2dc0cea5614cee05acbced5148d638eb509e3a6adff8d2274a16877b64736f6c634300080e00336101406040523480156200001257600080fd5b5060405162001bb838038062001bb88339810160408190526200003591620002c1565b82828180604051806040016040528060018152602001603160f81b815250848481600390805190602001906200006d9291906200014e565b508051620000839060049060208401906200014e565b5050825160208085019190912083518483012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c0019052805194019390932091935091906080523060c05261012052505050506001600160a01b03969096166000908152600860205260409020805460ff19166001179055505060ff1660095550620003a1915050565b8280546200015c9062000365565b90600052602060002090601f016020900481019282620001805760008555620001cb565b82601f106200019b57805160ff1916838001178555620001cb565b82800160010185558215620001cb579182015b82811115620001cb578251825591602001919060010190620001ae565b50620001d9929150620001dd565b5090565b5b80821115620001d95760008155600101620001de565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200021c57600080fd5b81516001600160401b0380821115620002395762000239620001f4565b604051601f8301601f19908116603f01168101908282118183101715620002645762000264620001f4565b816040528381526020925086838588010111156200028157600080fd5b600091505b83821015620002a5578582018301518183018401529082019062000286565b83821115620002b75760008385830101525b9695505050505050565b60008060008060808587031215620002d857600080fd5b84516001600160a01b0381168114620002f057600080fd5b60208601519094506001600160401b03808211156200030e57600080fd5b6200031c888389016200020a565b945060408701519150808211156200033357600080fd5b5062000342878288016200020a565b925050606085015160ff811681146200035a57600080fd5b939692955090935050565b600181811c908216806200037a57607f821691505b6020821081036200039b57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516117c7620003f160003960006109290152600061097801526000610953015260006108ac015260006108d60152600061090001526117c76000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806340c10f19116100c357806395d89b411161007c57806395d89b41146102c45780639dc29fac146102cc578063a457c2d7146102df578063a9059cbb146102f2578063d505accf14610305578063dd62ed3e1461031857600080fd5b806340c10f1914610236578063704802751461024957806370a082311461025c5780637a6d69b4146102855780637ecebe00146102a85780638ea2da7d146102bb57600080fd5b80631e7be210116101155780631e7be210146101cd57806323b872dd146101e057806325db769e146101f3578063313ce567146102065780633644e5151461021b578063395093511461022357600080fd5b806306fdde0314610152578063095ea7b31461017057806316c02129146101935780631785f53c146101a857806318160ddd146101bb575b600080fd5b61015a61032b565b604051610167919061140b565b60405180910390f35b61018361017e36600461147c565b6103bd565b6040519015158152602001610167565b6101a66101a13660046114a6565b610444565b005b6101a66101b63660046114a6565b610477565b6002545b604051908152602001610167565b6101a66101db3660046114a6565b6104a0565b6101836101ee3660046114c8565b6104cd565b6101bf610201366004611504565b610589565b60095460405160ff9091168152602001610167565b6101bf6105af565b61018361023136600461147c565b6105be565b6101a661024436600461147c565b6105ea565b6101a66102573660046114a6565b610600565b6101bf61026a3660046114a6565b6001600160a01b031660009081526020819052604090205490565b6101836102933660046114a6565b60076020526000908152604090205460ff1681565b6101bf6102b63660046114a6565b61062c565b6101bf60095481565b61015a61064a565b6101a66102da36600461147c565b610659565b6101836102ed36600461147c565b61066b565b61018361030036600461147c565b6106f1565b6101a661031336600461151d565b610766565b6101bf610326366004611590565b6107f6565b60606003805461033a906115c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610366906115c3565b80156103b35780601f10610388576101008083540402835291602001916103b3565b820191906000526020600020905b81548152906001019060200180831161039657829003601f168201915b5050505050905090565b6001600160a01b038216600090815260076020526040812054839060ff16156104015760405162461bcd60e51b81526004016103f8906115f7565b60405180910390fd5b3360008181526007602052604090205460ff16156104315760405162461bcd60e51b81526004016103f8906115f7565b61043b8585610821565b95945050505050565b61044c61082f565b610474816001600160a01b03166000908152600760205260409020805460ff19166001179055565b50565b61047f61082f565b6001600160a01b03166000908152600860205260409020805460ff19169055565b6104a861082f565b610474816001600160a01b03166000908152600760205260409020805460ff19169055565b6001600160a01b038316600090815260076020526040812054849060ff16156105085760405162461bcd60e51b81526004016103f8906115f7565b6001600160a01b038416600090815260076020526040902054849060ff16156105435760405162461bcd60e51b81526004016103f8906115f7565b3360008181526007602052604090205460ff16156105735760405162461bcd60e51b81526004016103f8906115f7565b61057e878787610886565b979650505050505050565b600061059460095490565b61059f90600a61171e565b6105a9908361172d565b92915050565b60006105b961089f565b905090565b6000336105e08185856105d183836107f6565b6105db919061174c565b6109c6565b5060019392505050565b6105f261082f565b6105fc8282610aeb565b5050565b61060861082f565b6001600160a01b03166000908152600860205260409020805460ff19166001179055565b6001600160a01b0381166000908152600560205260408120546105a9565b60606004805461033a906115c3565b61066161082f565b6105fc8282610bca565b6000338161067982866107f6565b9050838110156106d95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103f8565b6106e682868684036109c6565b506001949350505050565b6001600160a01b038216600090815260076020526040812054839060ff161561072c5760405162461bcd60e51b81526004016103f8906115f7565b3360008181526007602052604090205460ff161561075c5760405162461bcd60e51b81526004016103f8906115f7565b61043b8585610d10565b6001600160a01b038716600090815260076020526040902054879060ff16156107a15760405162461bcd60e51b81526004016103f8906115f7565b6001600160a01b038716600090815260076020526040902054879060ff16156107dc5760405162461bcd60e51b81526004016103f8906115f7565b6107eb89898989898989610d1e565b505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000336105e08185856109c6565b3360009081526008602052604090205460ff166108845760405162461bcd60e51b815260206004820152601360248201527254657374546f6b656e2f61646d696e4f6e6c7960681b60448201526064016103f8565b565b600033610894858285610e82565b6106e6858585610efc565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156108f857507f000000000000000000000000000000000000000000000000000000000000000046145b1561092257507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6001600160a01b038316610a285760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103f8565b6001600160a01b038216610a895760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103f8565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038216610b415760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103f8565b8060026000828254610b53919061174c565b90915550506001600160a01b03821660009081526020819052604081208054839290610b8090849061174c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610c2a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103f8565b6001600160a01b03821660009081526020819052604090205481811015610c9e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103f8565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610ccd908490611764565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610ade565b6000336105e0818585610efc565b83421115610d6e5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016103f8565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610d9d8c6110ca565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610df8826110f2565b90506000610e0882878787611140565b9050896001600160a01b0316816001600160a01b031614610e6b5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016103f8565b610e768a8a8a6109c6565b50505050505050505050565b6000610e8e84846107f6565b90506000198114610ef65781811015610ee95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103f8565b610ef684848484036109c6565b50505050565b6001600160a01b038316610f605760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103f8565b6001600160a01b038216610fc25760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103f8565b6001600160a01b0383166000908152602081905260409020548181101561103a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103f8565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061107190849061174c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110bd91815260200190565b60405180910390a3610ef6565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b60006105a96110ff61089f565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061115187878787611168565b9150915061115e81611255565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561119f575060009050600361124c565b8460ff16601b141580156111b757508460ff16601c14155b156111c8575060009050600461124c565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561121c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166112455760006001925092505061124c565b9150600090505b94509492505050565b60008160048111156112695761126961177b565b036112715750565b60018160048111156112855761128561177b565b036112d25760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016103f8565b60028160048111156112e6576112e661177b565b036113335760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103f8565b60038160048111156113475761134761177b565b0361139f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016103f8565b60048160048111156113b3576113b361177b565b036104745760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016103f8565b600060208083528351808285015260005b818110156114385785810183015185820160400152820161141c565b8181111561144a576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461147757600080fd5b919050565b6000806040838503121561148f57600080fd5b61149883611460565b946020939093013593505050565b6000602082840312156114b857600080fd5b6114c182611460565b9392505050565b6000806000606084860312156114dd57600080fd5b6114e684611460565b92506114f460208501611460565b9150604084013590509250925092565b60006020828403121561151657600080fd5b5035919050565b600080600080600080600060e0888a03121561153857600080fd5b61154188611460565b965061154f60208901611460565b95506040880135945060608801359350608088013560ff8116811461157357600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156115a357600080fd5b6115ac83611460565b91506115ba60208401611460565b90509250929050565b600181811c908216806115d757607f821691505b6020821081036110ec57634e487b7160e01b600052602260045260246000fd5b602080825260139082015272115490cc8c10930bd09b1858dadb1a5cdd1959606a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561167557816000190482111561165b5761165b611624565b8085161561166857918102915b93841c939080029061163f565b509250929050565b60008261168c575060016105a9565b81611699575060006105a9565b81600181146116af57600281146116b9576116d5565b60019150506105a9565b60ff8411156116ca576116ca611624565b50506001821b6105a9565b5060208310610133831016604e8410600b84101617156116f8575081810a6105a9565b611702838361163a565b806000190482111561171657611716611624565b029392505050565b60006114c160ff84168361167d565b600081600019048311821515161561174757611747611624565b500290565b6000821982111561175f5761175f611624565b500190565b60008282101561177657611776611624565b500390565b634e487b7160e01b600052602160045260246000fdfea26469706673582212209bdbfaec88bd6f48fcba6d4557d696967a35e239ba335fd932eea09261da1b0864736f6c634300080e00330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220cccc36498adbdc36aed3fdc91197e98a3a0903f5c221714eef009ad004fb000b64736f6c634300080e0033",
    "sourceMap": "11075:971:72:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7393:411:76;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;578:32:107;;;560:51;;548:2;533:18;7393:411:76;;;;;;;;11199:585:72;;;:::i;:::-;;8068:243:76;;;;;;:::i;:::-;;:::i;2069:116:103:-;;;;;;:::i;:::-;;:::i;1416:96::-;;;;;;:::i;:::-;;:::i;1630:120::-;;;;;;:::i;:::-;;:::i;5141:455::-;;;;;;:::i;:::-;;:::i;1268:85::-;;;;;;:::i;:::-;;:::i;9298:268:76:-;;;;;;:::i;:::-;;:::i;322:38:102:-;;-1:-1:-1;;;;;;;;;;;322:38:102;;2440:140:103;;;;;;:::i;:::-;;:::i;3051:280:77:-;;;;;;:::i;:::-;;:::i;3369:107:103:-;;;;;;:::i;:::-;;:::i;9947:135:76:-;;;;;;:::i;:::-;;:::i;:::-;;;7773:25:107;;;7761:2;7746:18;9947:135:76;7627:177:107;1957:106:103;;;;;;:::i;:::-;;:::i;7254:97:76:-;;;:::i;3482:915:103:-;;;;;;:::i;:::-;;:::i;5602:406::-;;;;;;:::i;:::-;;:::i;11788:71:72:-;;;:::i;1756:130:103:-;;;;;;:::i;:::-;;:::i;2768:279:77:-;;;;;;:::i;:::-;;:::i;1179:83:103:-;;;;;;:::i;:::-;;:::i;1819:584:101:-;;;:::i;:::-;;;9809:14:107;;9802:22;9784:41;;9772:2;9757:18;1819:584:101;9644:187:107;9126:168:76;;;;;;:::i;:::-;;:::i;8854:268::-;;;;;;:::i;:::-;;:::i;3164:81:103:-;;;;;;:::i;:::-;;:::i;2304:130::-;;;;;;:::i;:::-;;:::i;9665:224:76:-;;;;;;:::i;:::-;;:::i;2732:341:103:-;;;;;;:::i;:::-;;:::i;1518:106::-;;;;;;:::i;:::-;;:::i;7841:173:76:-;;;;;;:::i;:::-;;:::i;171:28:102:-;;;;;;;;;;;;1572:26:101;;;;;;;;;7393:411:76;7447:21;7480:8;7476:272;;;7550:4;7575:2;7595:9;7505:108;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;7498:115;;7476:272;;;7678:4;7703:2;7723:9;7641:100;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;7634:107;;7476:272;-1:-1:-1;;;;;;;;;;;7753:8:76;7764:4;7753:29;;;-1:-1:-1;;;;;;7753:29:76;;;;;;;-1:-1:-1;;;;;11862:32:107;;;7753:29:76;;;11844:51:107;11911:18;;;11904:30;11970:1;11950:18;;;11943:29;-1:-1:-1;;;11988:18:107;;;11981:38;12036:19;;7753:29:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7393:411;;;:::o;11199:585:72:-;11238:13;:11;:13::i;:::-;11276:4;;11263:38;;-1:-1:-1;;;;;11276:4:72;11285:5;;-1:-1:-1;;;;;11285:5:72;11263:38;;;;;;;;;;;;;-1:-1:-1;;;11263:38:72;;;:10;:38::i;:::-;11257:3;:44;;-1:-1:-1;;;;;;11257:44:72;-1:-1:-1;;;;;11257:44:72;;;;;;11315:5;;11308:37;;11315:5;11331:3;;-1:-1:-1;;;;;11331:3:72;11337:7;11308:4;:37::i;:::-;11351:3;;11366:5;;11351:31;;-1:-1:-1;;;11351:31:72;;-1:-1:-1;;;;;11351:3:72;;;;:14;;:31;;11366:5;;;11373:8;;11351:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11388:3:72;;11403:4;;11388:30;;-1:-1:-1;;;11388:30:72;;-1:-1:-1;;;;;11388:3:72;;;;-1:-1:-1;11388:14:72;;-1:-1:-1;11388:30:72;;11403:4;;;;11409:8;;11388:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11454:3:72;;11461:4;;-1:-1:-1;;;;;11454:3:72;;;;-1:-1:-1;11461:4:72;;-1:-1:-1;11470:5:72;;-1:-1:-1;;;;;11470:5:72;11432:45;;;;;:::i;:::-;-1:-1:-1;;;;;12696:15:107;;;12678:34;;12748:15;;;12743:2;12728:18;;12721:43;12800:15;;;12795:2;12780:18;;12773:43;12628:2;12613:18;11432:45:72;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11425:4:72;:52;;-1:-1:-1;;;;;;11425:52:72;-1:-1:-1;;;;;11425:52:72;;;;;;;;;11483:35;;;-1:-1:-1;;;11483:35:72;;;;;13039:51:107;;;;13106:18;;;13099:30;13165:1;13145:18;;;13138:29;-1:-1:-1;;;13183:18:107;;;13176:38;-1:-1:-1;;;;;;;;;;;251:64:102;11483:8:72;;13231:19:107;;11483:35:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11537:4:72;;11524:29;;-1:-1:-1;;;;;;11537:4:72;;-1:-1:-1;11544:8:72;11524:4;:29::i;:::-;11559:4;;:27;;-1:-1:-1;;;11559:27:72;;11577:8;11559:27;;;7773:25:107;-1:-1:-1;;;;;11559:4:72;;;;:17;;7746:18:107;;11559:27:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11599:4:72;;11592:37;;-1:-1:-1;;;;;;11599:4:72;;-1:-1:-1;11614:4:72;;-1:-1:-1;;;;;11614:4:72;11621:7;11592:4;:37::i;:::-;11635:4;;11651;;11635:30;;-1:-1:-1;;;11635:30:72;;-1:-1:-1;;;;;11635:4:72;;;;:15;;:30;;11651:4;;;11657:7;;11635:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11672:4:72;;:107;;-1:-1:-1;;;11672:107:72;;11701:7;11672:107;;;14097:25:107;11723:9:72;14138:18:107;;;14131:34;11748:6:72;14181:18:107;;;14174:34;11672:4:72;14224:18:107;;;14217:34;-1:-1:-1;;;;;11672:4:72;;;;-1:-1:-1;11672:13:72;;-1:-1:-1;14069:19:107;;11672:107:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11199:585::o;8068:243:76:-;8179:21;8215:23;8229:8;8215:13;:23::i;:::-;8208:30;;8244:62;8264:12;8287:11;8301:4;8244:11;:62::i;:::-;8068:243;;;;;:::o;2069:116:103:-;2132:18;;-1:-1:-1;;;2132:18:103;;-1:-1:-1;;;;;;;;;;;251:64:102;2132:7:103;;:18;;2140:3;;2145:4;;2132:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2160:18:103;;-1:-1:-1;;;2160:18:103;;-1:-1:-1;;;;;578:32:107;;2160:18:103;;;560:51:107;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;2160:13:103;;-1:-1:-1;533:18:107;;2160::103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2069:116;;:::o;1416:96::-;1460:22;;-1:-1:-1;;;1460:22:103;;-1:-1:-1;;;;;;;;;;;251:64:102;1460:7:103;;:22;;1468:3;;-1:-1:-1;;;1473:8:103;1460:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1492:13:103;;-1:-1:-1;;;1492:13:103;;-1:-1:-1;;;;;578:32:107;;1492:13:103;;;560:51:107;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;1492:8:103;;-1:-1:-1;533:18:107;;1492:13:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1416:96;:::o;1630:120::-;1690:22;;-1:-1:-1;;;1690:22:103;;-1:-1:-1;;;;;;;;;;;251:64:102;1690:7:103;;:22;;1698:3;;-1:-1:-1;;;1703:8:103;1690:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1722:21:103;;-1:-1:-1;;;1722:21:103;;-1:-1:-1;;;;;15096:15:107;;;1722:21:103;;;15078:34:107;15148:15;;15128:18;;;15121:43;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;1722:8:103;;-1:-1:-1;15013:18:107;;1722:21:103;14866:304:107;5141:455:103;5301:16;;-1:-1:-1;;;5301:16:103;;5232:12;;;;-1:-1:-1;;;;;;;;;;;251:64:102;5301:10:103;;:16;;5312:4;;5301:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5301:16:103;;;;;;;;;;;;:::i;:::-;5319:4;5284:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5260:64;;5445:8;5439:15;5432:4;5422:8;5418:19;5415:1;5408:47;5400:55;-1:-1:-1;;;;;;5496:18:103;;5475:114;;;;-1:-1:-1;;;5475:114:103;;17374:2:107;5475:114:103;;;17356:21:107;17413:2;17393:18;;;17386:30;17452:34;17432:18;;;17425:62;-1:-1:-1;;;17503:18:107;;;17496:47;17560:19;;5475:114:103;;;;;;;;;5250:346;5141:455;;;;:::o;1268:85::-;-1:-1:-1;;;;;;;;;;;1315:7:103;1323:22;1341:4;1323:15;:22;:::i;:::-;1315:31;;;;;;;;;;;;;7773:25:107;;7761:2;7746:18;;7627:177;9298:268:76;9398:9;9415:12;9444:3;;;;;;;;;-1:-1:-1;;;;;9444:3:76;9456:4;9470:3;9430:45;;;;;:::i;:::-;-1:-1:-1;;;;;12696:15:107;;;12678:34;;12748:15;;;12743:2;12728:18;;12721:43;12800:15;;;12795:2;12780:18;;12773:43;12628:2;12613:18;9430:45:76;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9481:31:76;;-1:-1:-1;;;9481:31:76;;9415:60;;-1:-1:-1;;;;;;;;;;;;251:64:102;9481:7:76;;:31;;9415:60;;9502:9;;9481:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9518:28:76;;-1:-1:-1;;;9518:28:76;;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;9518:8:76;;-1:-1:-1;9518:28:76;;9535:2;;9540:5;;9518:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9559:2:76;;9298:268;-1:-1:-1;;;;;;;9298:268:76:o;2440:140:103:-;2519:18;;-1:-1:-1;;;2519:18:103;;-1:-1:-1;;;;;;;;;;;251:64:102;2519:7:103;;:18;;2527:3;;2532:4;;2519:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2547:26:103;;-1:-1:-1;;;2547:26:103;;-1:-1:-1;;;;;15096:15:107;;;2547:26:103;;;15078:34:107;15148:15;;15128:18;;;15121:43;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;2547:13:103;;-1:-1:-1;15013:18:107;;2547:26:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2440:140;;;:::o;3051:280:77:-;3104:20;;;;;;;;;:15;:20;;;3130:176;3151:4;:11;3147:1;:15;3130:176;;;3195:1;3198:23;3212:4;3217:1;3212:7;;;;;;;;:::i;:::-;;;;;;;3198:8;:23::i;:::-;3181:41;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3177:45;;3252:1;3238:4;:11;:15;;;;:::i;:::-;3234:1;:19;3230:70;;;3283:1;3269:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;3265:26;;3230:70;3164:3;;;;:::i;:::-;;;;3130:176;;;;3311:15;3324:1;3311:12;:15::i;:::-;3098:233;3051:280;:::o;3369:107:103:-;3441:28;3446:5;3453:2;3457:4;3463:5;3441:4;:28::i;:::-;3369:107;;;:::o;9947:135:76:-;10031:4;10068:9;10072:5;10068:2;:9;:::i;:::-;10050:15;10055:1;10058:6;10050:4;:15::i;:::-;:27;;;;:::i;:::-;10043:34;9947:135;-1:-1:-1;;;;9947:135:76:o;1957:106:103:-;2006:22;;-1:-1:-1;;;2006:22:103;;-1:-1:-1;;;;;;;;;;;251:64:102;2006:7:103;;:22;;2014:3;;-1:-1:-1;;;2019:8:103;2006:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2038:18:103;;-1:-1:-1;;;2038:18:103;;-1:-1:-1;;;;;578:32:107;;2038:18:103;;;560:51:107;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;2038:13:103;;-1:-1:-1;533:18:107;;2038::103;383:234:107;7254:97:76;7295:16;7326:20;7340:5;7326:13;:20::i;:::-;7319:27;;7254:97;:::o;3482:915:103:-;3636:38;;;-1:-1:-1;;;;;578:32:107;;;3636:38:103;;;;560:51:107;;;;3636:38:103;;;;;;;;;;533:18:107;;;;3636:38:103;;;;;;;-1:-1:-1;;;;;3636:38:103;-1:-1:-1;;;3636:38:103;;;3625:50;;3601:20;;3625:10;;;:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3598:77;;;3685:15;3714:7;3703:30;;;;;;;;;;;;:::i;:::-;3685:48;-1:-1:-1;3770:123:103;3888:4;3770:90;3857:2;3770:64;-1:-1:-1;;;3770:35:103;:8;3799:5;3770:28;:35::i;:::-;:52;19602:9;;;:16;;-1:-1:-1;;19602:16:103;;;;;;;;;;;;:9;19503:143;3770:64;:86;19918:10;;;:47;;;;;;;-1:-1:-1;19918:47:103;;;;;;;-1:-1:-1;;;;;19942:21:103;;;;19918:47;;;:10;19814:179;3770:90;:117;;:123::i;:::-;3938:6;3935:456;;;4000:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4000:34:103;-1:-1:-1;;;4000:34:103;;;3989:46;;3962:23;;-1:-1:-1;;;;;3989:10:103;;;:46;;4000:34;3989:46;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3959:76;;;4049:14;4077:10;4066:33;;;;;;;;;;;;:::i;:::-;4049:50;;4123:7;4116:4;:14;4113:143;;;4161:14;4171:4;4161:7;:14;:::i;:::-;4150:26;;;;:::i;:::-;;;4113:143;;;4226:14;4233:7;4226:4;:14;:::i;:::-;4215:26;;;;:::i;:::-;;;4113:143;4269:111;4373:6;4269:72;-1:-1:-1;;;4269:39:103;:8;4302:5;4269:32;:39::i;:111::-;3945:446;;3557:840;;3482:915;;;;:::o;5602:406::-;5726:16;;-1:-1:-1;;;5726:16:103;;5674:12;;;;-1:-1:-1;;;;;;;;;;;251:64:102;5726:10:103;;:16;;5737:4;;5726:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5726:16:103;;;;;;;;;;;;:::i;:::-;5702:40;;5863:8;5857:15;5850:4;5840:8;5836:19;5833:1;5826:47;5818:55;-1:-1:-1;;;;;;5914:18:103;;5893:108;;;;-1:-1:-1;;;5893:108:103;;22643:2:107;5893:108:103;;;22625:21:107;22682:2;22662:18;;;22655:30;22721:34;22701:18;;;22694:62;-1:-1:-1;;;22772:18:107;;;22765:41;22823:19;;5893:108:103;22441:407:107;5893:108:103;5692:316;5602:406;;;:::o;11788:71:72:-;11838:16;:14;:16::i;:::-;11788:71::o;1756:130:103:-;1830:18;;-1:-1:-1;;;1830:18:103;;-1:-1:-1;;;;;;;;;;;251:64:102;1830:7:103;;:18;;1838:3;;1843:4;;1830:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1858:21:103;;-1:-1:-1;;;1858:21:103;;-1:-1:-1;;;;;15096:15:107;;;1858:21:103;;;15078:34:107;15148:15;;15128:18;;;15121:43;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;1858:8:103;;-1:-1:-1;15013:18:107;;1858:21:103;14866:304:107;2768:279:77;2823:20;;;;;;;;;:15;:20;;;2849:173;2870:5;:12;2866:1;:16;2849:173;;;2915:1;2918:18;2927:5;2933:1;2927:8;;;;;;;;:::i;2918:18::-;2901:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2897:40;;2968:1;2953:5;:12;:16;;;;:::i;:::-;2949:1;:20;2945:71;;;2999:1;2985:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;2981:26;;2945:71;2884:3;;;;:::i;:::-;;;;2849:173;;1179:83:103;-1:-1:-1;;;;;;;;;;;1224:7:103;1232:22;1250:4;1232:15;:22;:::i;1819:584:101:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:101;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2978:55:101;3059:16;1980:374;;2196:43;;2023:20;;-1:-1:-1;;;;;;;;;;;1671:64:101;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:101;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:101;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:101;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:101:o;9126:168:76:-;9236:3;;9205:13;;9228;;-1:-1:-1;;;;;9236:3:76;9228:5;:13::i;:::-;-1:-1:-1;9273:3:76;;9255:33;;-1:-1:-1;;;;;9273:3:76;;;;9278:4;;9284:3;;9255:33;;;:::i;:::-;-1:-1:-1;;;;;12696:15:107;;;12678:34;;12748:15;;;12743:2;12728:18;;12721:43;12800:15;;;12795:2;12780:18;;12773:43;12628:2;12613:18;9255:33:76;;;;;;;;;;;;;;;;;;;;;;;9247:42;;9126:168;;;;;:::o;8854:268::-;8954:9;8971:12;9000:3;;;;;;;;;-1:-1:-1;;;;;9000:3:76;9012:4;9026:3;8986:45;;;;;:::i;3164:81:103:-;3221:17;;-1:-1:-1;;;3221:17:103;;-1:-1:-1;;;;;;;;;;;251:64:102;3221:7:103;;:17;;3229:2;;3233:4;;3221:17;;;:::i;2304:130::-;2369:22;;-1:-1:-1;;;2369:22:103;;-1:-1:-1;;;;;;;;;;;251:64:102;2369:7:103;;:22;;2377:3;;-1:-1:-1;;;2382:8:103;2369:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2401:26:103;;-1:-1:-1;;;2401:26:103;;-1:-1:-1;;;;;15096:15:107;;;2401:26:103;;;15078:34:107;15148:15;;15128:18;;;15121:43;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;2401:13:103;;-1:-1:-1;15013:18:107;;2401:26:103;14866:304:107;9665:224:76;9721:4;9775:13;9791:59;:47;;;;;;;;;;;;;;-1:-1:-1;;;9791:47:76;;;:27;9815:1;9791:8;:15;;:27;;;;:::i;:::-;:31;15575:24:103;;;;;;;19758:9;;;:22;;;;;;;-1:-1:-1;;19758:22:103;;;;;;;;;:9;19652:156;9791:47:76;:57;:59::i;:::-;9775:75;-1:-1:-1;9872:12:76;9775:75;9872:2;:12;:::i;:::-;9863:21;;:6;:21;:::i;2732:341:103:-;2808:125;;;;;24654:2:107;24636:21;;;24693:1;24673:18;;;24666:29;-1:-1:-1;;;24726:2:107;24711:18;;24704:37;24779:3;24772:4;24757:20;;24750:33;;;24820:2;24799:19;;;24792:31;24860:34;24854:3;24839:19;;24832:63;24932:34;24926:3;24911:19;;24904:63;25004:32;24998:3;24983:19;;24976:61;25069:3;25054:19;;24351:728;2808:125:103;;;;;;;;2943:123;3061:4;2943:90;3030:2;2943:64;-1:-1:-1;;;2943:35:103;:8;2972:5;2943:28;:35::i;1518:106::-;1576:18;;-1:-1:-1;;;1576:18:103;;-1:-1:-1;;;;;;;;;;;251:64:102;1576:7:103;;:18;;1584:3;;1589:4;;1576:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1604:13:103;;-1:-1:-1;;;1604:13:103;;-1:-1:-1;;;;;578:32:107;;1604:13:103;;;560:51:107;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;1604:8:103;;-1:-1:-1;533:18:107;;1604:13:103;383:234:107;7841:173:76;7929:16;7962:47;7976:12;7990:11;8003:5;7962:13;:47::i;2279:576::-;2426:21;;2338:115;;2361:4;;2374:12;;2399:19;;2426:21;;;2338:115;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2331:4:76;:122;;-1:-1:-1;;;;;;2331:122:76;-1:-1:-1;;;;;2331:122:76;;;;;;;;;;2490:4;2557:22;;2467:118;;2503:13;;2529:20;;2557:22;;;;;2467:118;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2459:5:76;:126;;-1:-1:-1;;;;;;2459:126:76;-1:-1:-1;;;;;2459:126:76;;;;;;;;;2634:4;;2647:7;:24;2620:52;;2634:4;;;;;2459:126;2647:24;;2620:13;:52::i;:::-;2614:3;:58;;-1:-1:-1;;;;;;2614:58:76;-1:-1:-1;;;;;2614:58:76;;;;;;;;;2719:27;;;-1:-1:-1;;;2719:27:76;;;;:8;;2735;;2719:27;;;;;-1:-1:-1;;2719:27:76;;;;;;;2735:8;2614:58;2719:27;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2771:4:76;;2786:3;;2771:36;;-1:-1:-1;;;2771:36:76;;-1:-1:-1;;;;;2771:4:76;;;;-1:-1:-1;2771:12:76;;-1:-1:-1;2771:36:76;;-1:-1:-1;2786:3:76;;;-1:-1:-1;;2792:14:76;2771:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2813:5:76;;2829:3;;2813:37;;-1:-1:-1;;;2813:37:76;;-1:-1:-1;;;;;2813:5:76;;;;:13;;:37;;2829:3;;;-1:-1:-1;;2835:14:76;2813:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2279:576::o;8315:337::-;8414:9;8420:2;8414:5;:9::i;:::-;;8429;8435:2;8429:5;:9::i;:::-;-1:-1:-1;8466:18:76;;8444:52;;-1:-1:-1;;;8444:52:76;;-1:-1:-1;;;;;27462:15:107;;;8444:52:76;;;27444:34:107;27514:15;;;27494:18;;;27487:43;27546:18;;;27539:34;;;;8486:1:76;27589:18:107;;;27582:34;8489:6:76;27632:19:107;;;27625:35;8444:13:76;;;;;;27378:19:107;;8444:52:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8524:18:76;;8502:52;;-1:-1:-1;;;8502:52:76;;-1:-1:-1;;;;;27462:15:107;;;8502:52:76;;;27444:34:107;27514:15;;;27494:18;;;27487:43;27546:18;;;27539:34;;;;8544:1:76;27589:18:107;;;27582:34;8547:6:76;27632:19:107;;;27625:35;8502:13:76;;;;-1:-1:-1;8502:13:76;;-1:-1:-1;27378:19:107;;8502:52:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;275:37:102;;259:55;;251:64;;-1:-1:-1;;;;;8575:8:76;;8584:2;8595;-1:-1:-1;;;;;8588:17:76;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8588:19:76;;;;;;;;;;;;:::i;:::-;8575:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;275:37:102;;259:55;;251:64;;-1:-1:-1;;;;;8614:8:76;;8623:2;8634;-1:-1:-1;;;;;8627:17:76;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8627:19:76;;;;;;;;;;;;:::i;:::-;8614:33;;;;;;;;;;;;;;;;:::i;319:461:78:-;381:27;440:2;446:1;440:7;436:42;;-1:-1:-1;;459:10:78;;;;;;;;;;;;-1:-1:-1;;;459:10:78;;;;;319:461::o;436:42::-;494:2;485:6;520:56;527:6;;520:56;;545:5;;565:2;560:7;;;;520:56;;;583:17;613:3;603:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;603:14:78;-1:-1:-1;583:34:78;-1:-1:-1;;;634:7:78;;649:94;656:7;;649:94;;711:2;706;:7;700:2;:14;687:29;;675:4;680:3;;;;;;;675:9;;;;;;;;:::i;:::-;;;;:41;-1:-1:-1;;;;;675:41:78;;;;;;;;-1:-1:-1;732:2:78;726:8;;;;649:94;;;-1:-1:-1;764:4:78;319:461;-1:-1:-1;;;;319:461:78:o;6055:121:106:-;6110:59;6165:2;6126:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6126:42:106;;;;;;;;;;;;;;-1:-1:-1;;;;;6126:42:106;-1:-1:-1;;;6126:42:106;;;6110:15;:59::i;19341:156:103:-;19447:12;;;:22;;-1:-1:-1;;;;;;19447:22:103;-1:-1:-1;;;;;19447:22:103;;;;;;;;;;:12;19341:156::o;20625:120::-;20705:33;20719:4;20733:3;20705:13;:33::i;11863:181:72:-;11904:3;;:59;;-1:-1:-1;;;11904:59:72;;11936:8;11904:59;;;28362:25:107;11953:8:72;28403:18:107;;;28396:34;-1:-1:-1;;;;;11904:3:72;;;;:23;;28335:18:107;;11904:59:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;11992:4:72;;11969:70;;11980:28;;-1:-1:-1;;;;;11992:4:72;12001:5;;-1:-1:-1;;;;;12001:5:72;11980:9;:28::i;:::-;11969:70;;;;;;;;;;;;;;;;;:10;:70::i;1901:226:77:-;1945:4;-1:-1:-1;;;;;1961:15:77;;1957:136;;1991:37;;;;;28893:2:107;28875:21;;;28932:2;28912:18;;;28905:30;28971:32;28966:2;28951:18;;28944:60;29036:2;29021:18;;28691:354;1991:37:77;;;;;;;;2041:31;;;29262:21:107;;;29319:1;29299:18;;;29292:29;-1:-1:-1;;;29352:2:107;29337:18;;29330:37;-1:-1:-1;;;;;29441:32:107;;29434:4;29419:20;;29412:62;2041:31:77;;;;;;;29399:3:107;2041:31:77;;;2080:6;:4;:6::i;:::-;-1:-1:-1;;;;;;2106:15:77;;;;1901:226::o;22844:128:103:-;22906:7;22943:10;22948:4;22943;:10::i;:::-;22932:33;;;;;;;;;;;;:::i;631:333:106:-;725:14;;581:42;855:2;842:16;;701:21;;725:14;842:16;581:42;891:5;880:68;871:77;;808:150;;631:333;:::o;20979:1089:103:-;21095:12;;;;21131:9;;;;21172:11;;;;21216:10;;;21193:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21095:12:103;;;;21131:9;;;;;;21081:11;;21193:33;;21216:10;;21193:33;;21216:10;21193:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21237:17;21274:4;21280:12;21288:3;21280:7;:12::i;:::-;21257:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;21257:36:103;;;;;;;;;-1:-1:-1;;;;;21308:15:103;;;;;;:10;;;21257:36;21308:15;;;;;;-1:-1:-1;;;;;;21308:21:103;;;;;;;;;21257:36;;-1:-1:-1;21308:21:103;;:15;;21340:34;;21357:3;;21362:11;;21340:34;;:::i;:::-;;;;-1:-1:-1;;21340:34:103;;;;;;;;;21330:45;;21340:34;21330:45;;;;21308:68;;;;;;;;;;-1:-1:-1;21308:68:103;;;;21303:110;;21392:10;21397:4;21392;:10::i;:::-;;21303:110;-1:-1:-1;;;;;21445:15:103;;21422:12;21445:15;;;;;;;;;;;-1:-1:-1;;;;;;21445:21:103;;;;;;;;;21477:34;;21445:21;;21422:12;;21477:34;;21494:3;;21499:11;;21477:34;;:::i;:::-;;;;;;;;;;;;;21467:45;;;;;;21445:68;;;;;;;;;;;;21437:77;;21422:92;;21525:12;21564:17;21585:3;-1:-1:-1;;;;;21585:14:103;21600:4;21585:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21561:44:103;-1:-1:-1;21626:36:103;;-1:-1:-1;21561:44:103;21647:14;21650:11;21647:2;:14;:::i;:::-;21626;:36::i;:::-;21697:28;;-1:-1:-1;;;21697:28:103;;21619:43;;-1:-1:-1;21682:12:103;;-1:-1:-1;;;;;;;;;;;;21697:17:103;;;:28;;21715:3;;21720:4;;21697:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21682:43;;21748:4;21740;:12;21736:172;;21768:129;;-1:-1:-1;;;21768:129:103;;;;;;;:::i;:::-;21917:34;;-1:-1:-1;;;21917:34:103;;-1:-1:-1;;;;;;;;;;;21917:18:103;;;:34;;21936:3;;21941:4;;21947:3;;21917:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21968:12:103;;;21961:19;;-1:-1:-1;;;;;;21961:19:103;;;-1:-1:-1;21997:9:103;;;21990:16;;-1:-1:-1;;21990:16:103;;;22016:17;-1:-1:-1;22023:10:103;;21968:12;22016:17;:::i;:::-;22050:4;:11;;22043:18;;;21071:997;;;;;;;;20979:1089;;:::o;6015:117:76:-;6103:3;;:19;;-1:-1:-1;;;6103:19:76;;-1:-1:-1;;;;;15096:15:107;;;6103:19:76;;;15078:34:107;15148:15;;;15128:18;;;15121:43;6084:4:76;;6103:3;;:8;;15013:18:107;;6103:19:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:24;;6015:117;-1:-1:-1;;;6015:117:76:o;3418:191:101:-;3497:9;3492:111;;3527:30;3553:3;3527:30;;;;;;:::i;:::-;;;;;;;;3571:21;3582:9;3571:10;:21::i;2410:424::-;-1:-1:-1;;;;;;;;;;;2978:55:101;3059:16;2445:359;;2645:67;;2482:11;;-1:-1:-1;;;;;;;;;;;1671:64:101;2579:43;;2645:67;;1671:64;;-1:-1:-1;;;2670:17:101;2705:4;;2645:67;;;:::i;:::-;;;;-1:-1:-1;;2645:67:101;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:101;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:101;2813:7;:14;;-1:-1:-1;;2813:14:101;;;;;2410:424::o;22074:204:103:-;22166:12;;;;22130;;-1:-1:-1;;;;;22166:12:103;22154:9;22200:10;22166:4;22200;:10::i;:::-;22238:32;;-1:-1:-1;;;22238:32:103;;22188:22;;-1:-1:-1;;;;;;;;;;;;22238:17:103;;;:32;;22256:1;;22188:22;;22238:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22227:44;;;;;;7773:25:107;;7761:2;7746:18;;7627:177;22227:44:103;;;;;;;;;;;;;22220:51;;;;22074:204;;;:::o;23412:397::-;23471:12;23499:19;23531:1;:8;23542:2;23531:13;;;;:::i;:::-;23521:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23521:24:103;;23499:46;;23560:9;23555:224;23579:1;:8;23575:1;:12;23555:224;;;23608:9;23620:1;23622;23620:4;;;;;;;;:::i;:::-;;;;;;;23608:16;;23753:1;23747;23743:2;23739:10;23735:2;23731:19;23723:6;23719:32;23712:43;23694:75;23589:3;;;;;:::i;:::-;;;;23555:224;;16121:3214;16245:12;;;;16281:9;;;;16322:11;;;;16366:10;;;16343:33;;;;;;;;;;;;;;;;;;;16208:7;;-1:-1:-1;;;;;16245:12:103;;16281:9;;;16322:11;16208:7;;16343:33;;16366:10;;16343:33;;;16366:10;16343:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;16427:15:103;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;16427:21:103;;;;;;;;;16459:34;;16343:33;;-1:-1:-1;16427:21:103;:15;;-1:-1:-1;16459:34:103;;-1:-1:-1;16343:33:103;;16481:11;;16459:34;;:::i;:::-;;;;-1:-1:-1;;16459:34:103;;;;;;;;;16449:45;;16459:34;16449:45;;;;16427:68;;;;;;;;;;-1:-1:-1;16427:68:103;;;;16423:174;;;-1:-1:-1;;;;;16518:15:103;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;16518:21:103;;;;;;;;;16550:34;;16518:21;;:10;16550:34;;16567:3;;16572:11;;16550:34;;:::i;:::-;;;;;;;;;;;;;16540:45;;;;;;16518:68;;;;;;;;;;;;16511:75;;;;;;16121:3214;;;:::o;16423:174::-;16606:17;16643:4;16649:12;16657:3;16649:7;:12::i;:::-;16626:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16606:56;;-1:-1:-1;;;;;;;;;;;15395:37:103;;-1:-1:-1;;;;;16672:19:103;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16703:12;16742:17;16763:3;-1:-1:-1;;;;;16763:14:103;16778:4;16763:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16739:44:103;-1:-1:-1;16804:36:103;;-1:-1:-1;16739:44:103;16825:14;16828:11;16825:2;:14;:::i;16804:36::-;16890:35;;-1:-1:-1;;;16890:35:103;;-1:-1:-1;;;;;578:32:107;;16890:35:103;;;560:51:107;16797:43:103;;-1:-1:-1;16862:22:103;;-1:-1:-1;;;;;;;;;;;;16890:21:103;;;533:18:107;;16890:35:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16890:35:103;;;;;;;;;;;;:::i;:::-;16861:64;;;16939:5;:12;16955:1;16939:17;16935:2058;;16972:12;-1:-1:-1;;;;;;;;;;;15395:37:103;;-1:-1:-1;;;;;16987:17:103;;17005:3;17010:5;17016:1;17010:8;;;;;;;;:::i;:::-;;;;;;;16987:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16972:47;-1:-1:-1;16972:47:103;17033:106;;17080:44;17101:3;17114:5;17120:1;17114:8;;;;;;;;:::i;:::-;;;;;;;17106:17;;17080:44;;;;;;;:::i;:::-;;;;;;;;17033:106;17164:4;17156;:12;17152:180;;17188:129;;-1:-1:-1;;;17188:129:103;;;;;;;:::i;:::-;17350:86;17360:3;17365:4;17398:3;17403:11;17381:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17371:45;;;;;;17426:5;17432:1;17426:8;;;;;;;;:::i;:::-;;;;;;;17418:17;;17350:86;;;;;;;;;:::i;:::-;;;;;;;;17529:5;17535:1;17529:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;17450:15:103;;17521:17;17450:15;;;;;;;;;;-1:-1:-1;;;;;;17450:21:103;;;;;;;;;17482:34;;17529:8;;17450:21;;17482:34;;17499:3;;17504:11;;17482:34;;:::i;:::-;;;;-1:-1:-1;;17482:34:103;;;;;;;;;17472:45;;17482:34;17472:45;;;;17450:68;;;;;;;;;;;;-1:-1:-1;17450:68:103;;;:88;;;;-1:-1:-1;;;;;17552:15:103;;;;17623:4;17552:10;;;:15;;;;;-1:-1:-1;;;;;;17552:21:103;;;;;;;;;17584:34;;17623:4;;-1:-1:-1;17584:34:103;;17601:3;;17606:11;;17584:34;;:::i;:::-;;;;;;;-1:-1:-1;;17584:34:103;;;;;;17574:45;;17584:34;17574:45;;;;17552:68;;;;;;;;;;-1:-1:-1;17552:68:103;:75;;-1:-1:-1;;17552:75:103;;;;;;;;;;-1:-1:-1;16935:2058:103;;;17663:1;17648:5;:12;:16;17644:1349;;;17685:9;17680:1190;17704:5;:12;17700:1;:16;17680:1190;;;17741:12;-1:-1:-1;;;;;;;;;;;15395:37:103;;-1:-1:-1;;;;;17756:17:103;;17774:3;17779:5;17785:1;17779:8;;;;;;;;:::i;:::-;;;;;;;17756:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17741:47;-1:-1:-1;17741:47:103;17806:114;;17857:44;17878:3;17891:5;17897:1;17891:8;;;;;;;;:::i;:::-;;;;;;;17883:17;;17857:44;;;;;;;:::i;:::-;;;;;;;;17806:114;-1:-1:-1;;;;;;;;;;;15395:37:103;;-1:-1:-1;;;;;17962:18:103;;17981:3;17986:5;17992:1;17986:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;17962:53:103;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18033:12;18063:17;18138:3;-1:-1:-1;;;;;18138:14:103;18153:4;18138:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18120:38:103;;-1:-1:-1;18120:38:103;-1:-1:-1;18187:36:103;18120:38;18208:14;18211:11;18208:2;:14;:::i;18187:36::-;18180:43;;18264:7;:37;;;;;-1:-1:-1;;;18275:4:103;:26;18264:37;18260:539;;;18399:86;18409:3;18414:4;18447:3;18452:11;18430:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18420:45;;;;;;18475:5;18481:1;18475:8;;;;;;;;:::i;:::-;;;;;;;18467:17;;18399:86;;;;;;;;;:::i;:::-;;;;;;;;18586:5;18592:1;18586:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;18507:15:103;;18578:17;18507:15;;;;;;;;;;-1:-1:-1;;;;;;18507:21:103;;;;;;;;;18539:34;;18586:8;;18507:21;;18539:34;;18556:3;;18561:11;;18539:34;;:::i;:::-;;;;;;;;;;;;;18529:45;;;;;;18507:68;;;;;;;;;;;:88;;;;18688:4;18617;:10;;:15;18628:3;-1:-1:-1;;;;;18617:15:103;-1:-1:-1;;;;;18617:15:103;;;;;;;;;;;;:21;18633:4;-1:-1:-1;;;;;18617:21:103;;-1:-1:-1;;;;;18617:21:103;;;;;;;;;;;;;:68;18666:3;18671:11;18649:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18639:45;;;;;;18617:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;15395:37:103;;-1:-1:-1;;;;;18714:18:103;;18733:3;18738:5;18744:1;18738:8;;;;;;;;:::i;:::-;;;;;;;18748:4;18714:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18775:5;;;;;18260:539;-1:-1:-1;;;;;;;;;;;15395:37:103;;-1:-1:-1;;;;;18816:18:103;;18835:3;18840:5;18846:1;18840:8;;;;;;;;:::i;:::-;;;;;;;18850:4;18816:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17723:1147;;;17718:3;;;;;:::i;:::-;;;;17680:1190;;;;17644:1349;;;18900:82;;;-1:-1:-1;;;18900:82:103;;33764:2:107;18900:82:103;;;33746:21:107;33783:18;;;33776:30;;;;33842:34;33822:18;;;33815:62;33913:34;33893:18;;;33886:62;33965:19;;18900:82:103;33562:428:107;18900:82:103;-1:-1:-1;;;;;19011:15:103;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;19011:21:103;;;;;;;;;19043:34;;19011:21;;:15;19043:34;;19060:3;;19065:11;;19043:34;;:::i;:::-;;;;-1:-1:-1;;19043:34:103;;;;;;;;;19033:45;;19043:34;19033:45;;;;19011:68;;;;;;;;;;-1:-1:-1;19011:68:103;;;;19003:128;;;;-1:-1:-1;;;19003:128:103;;34197:2:107;19003:128:103;;;34179:21:107;34236:2;34216:18;;;34209:30;34275:34;34255:18;;;34248:62;-1:-1:-1;;;34326:18:107;;;34319:45;34381:19;;19003:128:103;33995:411:107;19003:128:103;19149:12;;;19142:19;;-1:-1:-1;;;;;;19142:19:103;;;19178:9;;;19171:16;;-1:-1:-1;;19171:16:103;;;19197:17;-1:-1:-1;19204:10:103;;19149:12;19197:17;:::i;:::-;19224:18;19231:11;;;19224:18;;;-1:-1:-1;;;;;19260:15:103;;;;;;;;;;;;-1:-1:-1;;;;;;19260:21:103;;;;;;;;;19292:34;;19260:21;;19224:18;19292:34;;19309:3;;19314:11;;19292:34;;:::i;:::-;;;;;;;;;;;;;19282:45;;;;;;19260:68;;;;;;;;;;;;19253:75;;;;;;;;;16121:3214;;;:::o;23109:297::-;23183:7;23202:11;23224;23249:2;23238:1;:8;:13;:29;;23259:1;:8;23238:29;;;23254:2;23238:29;23224:43;;23282:6;23277:103;23298:3;23294:1;:7;23277:103;;;23363:5;:1;23367;23363:5;:::i;:::-;23337:1;23339:10;23348:1;23339:6;:10;:::i;:::-;23337:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;23337:13:103;23329:40;;23322:47;;;;;23303:3;;;;:::i;:::-;;;;23277:103;;;-1:-1:-1;23396:3:103;;23109:297;-1:-1:-1;;;;23109:297:103:o;3255:157:101:-;3315:9;3310:96;;3345:30;;;;;34613:2:107;34595:21;;;34652:2;34632:18;;;34625:30;34691:25;34686:2;34671:18;;34664:53;34749:2;34734:18;;34411:347;3345:30:101;;;;;;;;3389:6;:4;:6::i;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:118:107:-;100:5;93:13;86:21;79:5;76:32;66:60;;122:1;119;112:12;137:241;193:6;246:2;234:9;225:7;221:23;217:32;214:52;;;262:1;259;252:12;214:52;301:9;288:23;320:28;342:5;320:28;:::i;622:139::-;-1:-1:-1;;;;;705:31:107;;695:42;;685:70;;751:1;748;741:12;766:569;870:6;878;886;939:2;927:9;918:7;914:23;910:32;907:52;;;955:1;952;945:12;907:52;994:9;981:23;1013:39;1046:5;1013:39;:::i;:::-;1071:5;-1:-1:-1;1128:2:107;1113:18;;1100:32;1141:41;1100:32;1141:41;:::i;:::-;1201:7;-1:-1:-1;1260:2:107;1245:18;;1232:32;1273:30;1232:32;1273:30;:::i;:::-;1322:7;1312:17;;;766:569;;;;;:::o;1340:323::-;1408:6;1416;1469:2;1457:9;1448:7;1444:23;1440:32;1437:52;;;1485:1;1482;1475:12;1437:52;1524:9;1511:23;1543:39;1576:5;1543:39;:::i;:::-;1601:5;1653:2;1638:18;;;;1625:32;;-1:-1:-1;;;1340:323:107:o;1668:255::-;1727:6;1780:2;1768:9;1759:7;1755:23;1751:32;1748:52;;;1796:1;1793;1786:12;1748:52;1835:9;1822:23;1854:39;1887:5;1854:39;:::i;1928:404::-;1996:6;2004;2057:2;2045:9;2036:7;2032:23;2028:32;2025:52;;;2073:1;2070;2063:12;2025:52;2112:9;2099:23;2131:39;2164:5;2131:39;:::i;:::-;2189:5;-1:-1:-1;2246:2:107;2231:18;;2218:32;2259:41;2218:32;2259:41;:::i;:::-;2319:7;2309:17;;;1928:404;;;;;:::o;2337:127::-;2398:10;2393:3;2389:20;2386:1;2379:31;2429:4;2426:1;2419:15;2453:4;2450:1;2443:15;2469:275;2540:2;2534:9;2605:2;2586:13;;-1:-1:-1;;2582:27:107;2570:40;;2640:18;2625:34;;2661:22;;;2622:62;2619:88;;;2687:18;;:::i;:::-;2723:2;2716:22;2469:275;;-1:-1:-1;2469:275:107:o;2749:187::-;2798:4;2831:18;2823:6;2820:30;2817:56;;;2853:18;;:::i;:::-;-1:-1:-1;2919:2:107;2898:15;-1:-1:-1;;2894:29:107;2925:4;2890:40;;2749:187::o;2941:338::-;3006:5;3035:53;3051:36;3080:6;3051:36;:::i;:::-;3035:53;:::i;:::-;3026:62;;3111:6;3104:5;3097:21;3151:3;3142:6;3137:3;3133:16;3130:25;3127:45;;;3168:1;3165;3158:12;3127:45;3217:6;3212:3;3205:4;3198:5;3194:16;3181:43;3271:1;3264:4;3255:6;3248:5;3244:18;3240:29;3233:40;2941:338;;;;;:::o;3284:222::-;3327:5;3380:3;3373:4;3365:6;3361:17;3357:27;3347:55;;3398:1;3395;3388:12;3347:55;3420:80;3496:3;3487:6;3474:20;3467:4;3459:6;3455:17;3420:80;:::i;3511:671::-;3598:6;3606;3659:2;3647:9;3638:7;3634:23;3630:32;3627:52;;;3675:1;3672;3665:12;3627:52;3715:9;3702:23;3744:18;3785:2;3777:6;3774:14;3771:34;;;3801:1;3798;3791:12;3771:34;3824:50;3866:7;3857:6;3846:9;3842:22;3824:50;:::i;:::-;3814:60;;3927:2;3916:9;3912:18;3899:32;3883:48;;3956:2;3946:8;3943:16;3940:36;;;3972:1;3969;3962:12;3940:36;-1:-1:-1;3995:24:107;;4050:4;4042:13;;4038:27;-1:-1:-1;4028:55:107;;4079:1;4076;4069:12;4028:55;4102:74;4168:7;4163:2;4150:16;4145:2;4141;4137:11;4102:74;:::i;:::-;4092:84;;;3511:671;;;;;:::o;4395:180::-;4454:6;4507:2;4495:9;4486:7;4482:23;4478:32;4475:52;;;4523:1;4520;4513:12;4475:52;-1:-1:-1;4546:23:107;;4395:180;-1:-1:-1;4395:180:107:o;4580:614::-;4667:6;4675;4683;4736:2;4724:9;4715:7;4711:23;4707:32;4704:52;;;4752:1;4749;4742:12;4704:52;4791:9;4778:23;4810:39;4843:5;4810:39;:::i;:::-;4868:5;-1:-1:-1;4925:2:107;4910:18;;4897:32;4938:41;4897:32;4938:41;:::i;:::-;4998:7;-1:-1:-1;5056:2:107;5041:18;;5028:32;5083:18;5072:30;;5069:50;;;5115:1;5112;5105:12;5069:50;5138;5180:7;5171:6;5160:9;5156:22;5138:50;:::i;:::-;5128:60;;;4580:614;;;;;:::o;5654:472::-;5731:6;5739;5747;5800:2;5788:9;5779:7;5775:23;5771:32;5768:52;;;5816:1;5813;5806:12;5768:52;5855:9;5842:23;5874:39;5907:5;5874:39;:::i;:::-;5932:5;-1:-1:-1;5989:2:107;5974:18;;5961:32;6002:41;5961:32;6002:41;:::i;:::-;5654:472;;6062:7;;-1:-1:-1;;;6116:2:107;6101:18;;;;6088:32;;5654:472::o;6131:182::-;6190:4;6223:18;6215:6;6212:30;6209:56;;;6245:18;;:::i;:::-;-1:-1:-1;6290:1:107;6286:14;6302:4;6282:25;;6131:182::o;6318:889::-;6401:6;6432:2;6475;6463:9;6454:7;6450:23;6446:32;6443:52;;;6491:1;6488;6481:12;6443:52;6531:9;6518:23;6564:18;6556:6;6553:30;6550:50;;;6596:1;6593;6586:12;6550:50;6619:22;;6672:4;6664:13;;6660:27;-1:-1:-1;6650:55:107;;6701:1;6698;6691:12;6650:55;6737:2;6724:16;6760:59;6776:42;6815:2;6776:42;:::i;6760:59::-;6853:15;;;6935:1;6931:10;;;;6923:19;;6919:28;;;6884:12;;;;6959:19;;;6956:39;;;6991:1;6988;6981:12;6956:39;7015:11;;;;7035:142;7051:6;7046:3;7043:15;7035:142;;;7117:17;;7105:30;;7068:12;;;;7155;;;;7035:142;;;7196:5;6318:889;-1:-1:-1;;;;;;;6318:889:107:o;7212:410::-;7308:6;7316;7324;7377:2;7365:9;7356:7;7352:23;7348:32;7345:52;;;7393:1;7390;7383:12;7345:52;7432:9;7419:23;7451:39;7484:5;7451:39;:::i;:::-;7509:5;7561:2;7546:18;;7533:32;;-1:-1:-1;7612:2:107;7597:18;;;7584:32;;7212:410;-1:-1:-1;;;7212:410:107:o;7809:608::-;7892:6;7900;7908;7916;7969:3;7957:9;7948:7;7944:23;7940:33;7937:53;;;7986:1;7983;7976:12;7937:53;8025:9;8012:23;8044:39;8077:5;8044:39;:::i;:::-;8102:5;-1:-1:-1;8159:2:107;8144:18;;8131:32;8172:41;8131:32;8172:41;:::i;:::-;8232:7;-1:-1:-1;8286:2:107;8271:18;;8258:32;;-1:-1:-1;8342:2:107;8327:18;;8314:32;8355:30;8314:32;8355:30;:::i;:::-;7809:608;;;;-1:-1:-1;7809:608:107;;-1:-1:-1;;7809:608:107:o;8422:322::-;8491:6;8544:2;8532:9;8523:7;8519:23;8515:32;8512:52;;;8560:1;8557;8550:12;8512:52;8600:9;8587:23;8633:18;8625:6;8622:30;8619:50;;;8665:1;8662;8655:12;8619:50;8688;8730:7;8721:6;8710:9;8706:22;8688:50;:::i;11088:376::-;-1:-1:-1;;;;;11339:32:107;;;;11321:51;;11403:2;11388:18;;11381:34;;;;11446:2;11431:18;;11424:34;11309:2;11294:18;;11088:376::o;12066:320::-;-1:-1:-1;;;;;12304:32:107;;;;12286:51;;12368:2;12353:18;;12346:34;12274:2;12259:18;;12066:320::o;15175:258::-;15247:1;15257:113;15271:6;15268:1;15265:13;15257:113;;;15347:11;;;15341:18;15328:11;;;15321:39;15293:2;15286:10;15257:113;;;15388:6;15385:1;15382:13;15379:48;;;-1:-1:-1;;15423:1:107;15405:16;;15398:27;15175:258::o;15438:::-;15480:3;15518:5;15512:12;15545:6;15540:3;15533:19;15561:63;15617:6;15610:4;15605:3;15601:14;15594:4;15587:5;15583:16;15561:63;:::i;:::-;15678:2;15657:15;-1:-1:-1;;15653:29:107;15644:39;;;;15685:4;15640:50;;15438:258;-1:-1:-1;;15438:258:107:o;15701:220::-;15850:2;15839:9;15832:21;15813:4;15870:45;15911:2;15900:9;15896:18;15888:6;15870:45;:::i;15926:308::-;16001:5;16030:53;16046:36;16075:6;16046:36;:::i;16030:53::-;16021:62;;16106:6;16099:5;16092:21;16146:3;16137:6;16132:3;16128:16;16125:25;16122:45;;;16163:1;16160;16153:12;16122:45;16176:52;16221:6;16214:4;16207:5;16203:16;16198:3;16176:52;:::i;16239:457::-;16318:6;16371:2;16359:9;16350:7;16346:23;16342:32;16339:52;;;16387:1;16384;16377:12;16339:52;16420:9;16414:16;16453:18;16445:6;16442:30;16439:50;;;16485:1;16482;16475:12;16439:50;16508:22;;16561:4;16553:13;;16549:27;-1:-1:-1;16539:55:107;;16590:1;16587;16580:12;16539:55;16613:77;16682:7;16677:2;16671:9;16666:2;16662;16658:11;16613:77;:::i;16701:466::-;16876:3;16914:6;16908:13;16930:53;16976:6;16971:3;16964:4;16956:6;16952:17;16930:53;:::i;:::-;17046:13;;17005:16;;;;17068:57;17046:13;17005:16;17102:4;17090:17;;17068:57;:::i;:::-;17141:20;;16701:466;-1:-1:-1;;;;16701:466:107:o;17590:127::-;17651:10;17646:3;17642:20;17639:1;17632:31;17682:4;17679:1;17672:15;17706:4;17703:1;17696:15;17722:125;17762:4;17790:1;17787;17784:8;17781:34;;;17795:18;;:::i;:::-;-1:-1:-1;17832:9:107;;17722:125::o;18609:317::-;-1:-1:-1;;;;;18786:32:107;;18768:51;;18855:2;18850;18835:18;;18828:30;;;-1:-1:-1;;18875:45:107;;18901:18;;18893:6;18875:45;:::i;18931:127::-;18992:10;18987:3;18983:20;18980:1;18973:31;19023:4;19020:1;19013:15;19047:4;19044:1;19037:15;19538:429;19759:3;19797:6;19791:13;19813:53;19859:6;19854:3;19847:4;19839:6;19835:17;19813:53;:::i;:::-;-1:-1:-1;;;19888:16:107;;19913:19;;;-1:-1:-1;19959:1:107;19948:13;;19538:429;-1:-1:-1;19538:429:107:o;19972:135::-;20011:3;20032:17;;;20029:43;;20052:18;;:::i;:::-;-1:-1:-1;20099:1:107;20088:13;;19972:135::o;20112:422::-;20201:1;20244:5;20201:1;20258:270;20279:7;20269:8;20266:21;20258:270;;;20338:4;20334:1;20330:6;20326:17;20320:4;20317:27;20314:53;;;20347:18;;:::i;:::-;20397:7;20387:8;20383:22;20380:55;;;20417:16;;;;20380:55;20496:22;;;;20456:15;;;;20258:270;;;20262:3;20112:422;;;;;:::o;20539:806::-;20588:5;20618:8;20608:80;;-1:-1:-1;20659:1:107;20673:5;;20608:80;20707:4;20697:76;;-1:-1:-1;20744:1:107;20758:5;;20697:76;20789:4;20807:1;20802:59;;;;20875:1;20870:130;;;;20782:218;;20802:59;20832:1;20823:10;;20846:5;;;20870:130;20907:3;20897:8;20894:17;20891:43;;;20914:18;;:::i;:::-;-1:-1:-1;;20970:1:107;20956:16;;20985:5;;20782:218;;21084:2;21074:8;21071:16;21065:3;21059:4;21056:13;21052:36;21046:2;21036:8;21033:16;21028:2;21022:4;21019:12;21015:35;21012:77;21009:159;;;-1:-1:-1;21121:19:107;;;21153:5;;21009:159;21200:34;21225:8;21219:4;21200:34;:::i;:::-;21270:6;21266:1;21262:6;21258:19;21249:7;21246:32;21243:58;;;21281:18;;:::i;:::-;21319:20;;20539:806;-1:-1:-1;;;20539:806:107:o;21350:131::-;21410:5;21439:36;21466:8;21460:4;21439:36;:::i;21618:217::-;21658:1;21684;21674:132;;21728:10;21723:3;21719:20;21716:1;21709:31;21763:4;21760:1;21753:15;21791:4;21788:1;21781:15;21674:132;-1:-1:-1;21820:9:107;;21618:217::o;21840:274::-;21969:3;22007:6;22001:13;22023:53;22069:6;22064:3;22057:4;22049:6;22045:17;22023:53;:::i;:::-;22092:16;;;;;21840:274;-1:-1:-1;;21840:274:107:o;22119:184::-;22189:6;22242:2;22230:9;22221:7;22217:23;22213:32;22210:52;;;22258:1;22255;22248:12;22210:52;-1:-1:-1;22281:16:107;;22119:184;-1:-1:-1;22119:184:107:o;22308:128::-;22348:3;22379:1;22375:6;22372:1;22369:13;22366:39;;;22385:18;;:::i;:::-;-1:-1:-1;22421:9:107;;22308:128::o;23132:371::-;-1:-1:-1;;;;;;23317:33:107;;23305:46;;23374:13;;23287:3;;23396:61;23374:13;23446:1;23437:11;;23430:4;23418:17;;23396:61;:::i;:::-;23477:16;;;;23495:1;23473:24;;23132:371;-1:-1:-1;;;23132:371:107:o;23508:245::-;23575:6;23628:2;23616:9;23607:7;23603:23;23599:32;23596:52;;;23644:1;23641;23634:12;23596:52;23676:9;23670:16;23695:28;23717:5;23695:28;:::i;24178:168::-;24218:7;24284:1;24280;24276:6;24272:14;24269:1;24266:21;24261:1;24254:9;24247:17;24243:45;24240:71;;;24291:18;;:::i;:::-;-1:-1:-1;24331:9:107;;24178:168::o;25210:1042::-;25295:12;;25260:3;;25350:1;25370:18;;;;25423;;;;25450:61;;25504:4;25496:6;25492:17;25482:27;;25450:61;25530:2;25578;25570:6;25567:14;25547:18;25544:38;25541:161;;25624:10;25619:3;25615:20;25612:1;25605:31;25659:4;25656:1;25649:15;25687:4;25684:1;25677:15;25541:161;11556:19;;;11608:4;11599:14;;25788:18;25815:104;;;;25933:1;25928:318;;;;25781:465;;25815:104;-1:-1:-1;;25850:24:107;;25836:39;;25895:14;;;;-1:-1:-1;25815:104:107;;25928:318;25157:1;25150:14;;;25194:4;25181:18;;26022:1;26036:167;26050:6;26047:1;26044:13;26036:167;;;26130:14;;26115:13;;;26108:37;26173:16;;;;26065:10;;26036:167;;;26223:13;;;-1:-1:-1;;25781:465:107;;;;;;;;25210:1042;;;;:::o;26257:578::-;-1:-1:-1;;;;;26508:32:107;;26490:51;;26577:3;26572:2;26557:18;;26550:31;;;-1:-1:-1;;26604:54:107;;26638:19;;26630:6;26604:54;:::i;:::-;26706:9;26698:6;26694:22;26689:2;26678:9;26674:18;26667:50;26734:41;26768:6;26760;26734:41;:::i;:::-;26726:49;;;26823:4;26815:6;26811:17;26806:2;26795:9;26791:18;26784:45;26257:578;;;;;;;:::o;28441:245::-;28520:6;28528;28581:2;28569:9;28560:7;28556:23;28552:32;28549:52;;;28597:1;28594;28587:12;28549:52;-1:-1:-1;;28620:16:107;;28676:2;28661:18;;;28655:25;28620:16;;28655:25;;-1:-1:-1;28441:245:107:o;29485:610::-;29731:13;;29674:3;;29705;;29784:4;29811:15;;;29674:3;29854:175;29868:6;29865:1;29862:13;29854:175;;;29931:13;;29917:28;;29967:14;;;;30004:15;;;;29890:1;29883:9;29854:175;;;-1:-1:-1;;30038:21:107;;;-1:-1:-1;30075:14:107;;;;;-1:-1:-1;;;29485:610:107:o;30289:556::-;30491:2;30473:21;;;30530:3;30510:18;;;30503:31;30570:34;30565:2;30550:18;;30543:62;30641:34;30636:2;30621:18;;30614:62;30713:34;30707:3;30692:19;;30685:63;-1:-1:-1;;;30779:3:107;30764:19;;30757:46;30835:3;30820:19;;30289:556::o;31200:446::-;31450:2;31439:9;31432:21;31489:1;31484:2;31473:9;31469:18;31462:29;-1:-1:-1;;;31522:2:107;31511:9;31507:18;31500:35;31573:3;31566:4;31555:9;31551:20;31544:33;31413:4;31594:46;31635:3;31624:9;31620:19;31612:6;31594:46;:::i;31833:658::-;31898:5;31951:3;31944:4;31936:6;31932:17;31928:27;31918:55;;31969:1;31966;31959:12;31918:55;31998:6;31992:13;32024:4;32048:59;32064:42;32103:2;32064:42;:::i;32048:59::-;32141:15;;;32227:1;32223:10;;;;32211:23;;32207:32;;;32172:12;;;;32251:15;;;32248:35;;;32279:1;32276;32269:12;32248:35;32315:2;32307:6;32303:15;32327:135;32343:6;32338:3;32335:15;32327:135;;;32409:10;;32397:23;;32440:12;;;;32360;;32327:135;;;-1:-1:-1;32480:5:107;31833:658;-1:-1:-1;;;;;;31833:658:107:o;32496:614::-;32625:6;32633;32686:2;32674:9;32665:7;32661:23;32657:32;32654:52;;;32702:1;32699;32692:12;32654:52;32735:9;32729:16;32764:18;32805:2;32797:6;32794:14;32791:34;;;32821:1;32818;32811:12;32791:34;32844:72;32908:7;32899:6;32888:9;32884:22;32844:72;:::i;:::-;32834:82;;32962:2;32951:9;32947:18;32941:25;32925:41;;32991:2;32981:8;32978:16;32975:36;;;33007:1;33004;32997:12;32975:36;;33030:74;33096:7;33085:8;33074:9;33070:24;33030:74;:::i;33115:442::-;-1:-1:-1;;;;;33362:32:107;;;;33344:51;;-1:-1:-1;;;;;;33431:33:107;;;;33426:2;33411:18;;33404:61;33496:2;33481:18;;33474:34;33539:2;33524:18;;33517:34;33331:3;33316:19;;33115:442::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "cash(address,uint256)": "d56a22f0",
    "cash(address,uint256,uint256)": "6cc12a24",
    "deal(address,address,uint256)": "6bce989b",
    "deal(address,address,uint256,bool)": "97754ae9",
    "deal(address,uint256)": "c88a5e6d",
    "deployCode(string)": "9a8325a0",
    "deployCode(string,bytes)": "29ce9dde",
    "failed()": "ba414fa6",
    "hoax(address)": "233240ee",
    "hoax(address,address)": "29a9e300",
    "hoax(address,address,uint256)": "af9bbe5f",
    "hoax(address,uint256)": "e9a79a7b",
    "logary(int256[])": "521606d2",
    "logary(uint256[])": "b84e3eda",
    "rewind(uint256)": "2d6c17a3",
    "setUp()": "0a9254e4",
    "setupMaker(address,address,string)": "bfdc3588",
    "setupMakerDeployer(address,address)": "bbab0fac",
    "setupMangrove()": "8c004832",
    "setupMangrove(address,address)": "ea14b5c3",
    "setupMangrove(address,address,bool)": "0b3d8c42",
    "setupMangrove(bool)": "0645f2be",
    "setupTaker(address,address,string)": "3336a63f",
    "skip(uint256)": "b9c071b4",
    "startHoax(address)": "6f597075",
    "startHoax(address,address)": "d06d8229",
    "startHoax(address,address,uint256)": "3bf82db1",
    "startHoax(address,uint256)": "108554f2",
    "test_market_with_failures()": "a6b23bdb",
    "tip(address,address,uint256)": "d82555f1",
    "vm()": "3a768463"
  },
  "ast": {
    "absolutePath": "packages/mangrove-solidity/contracts/test/core/Scenarii.t.sol",
    "id": 41280,
    "exportedSymbols": {
      "AbstractMangrove": [37],
      "AccessControlled": [20247],
      "DSTest": [60744],
      "DeepCollectTest": [41279],
      "HasMgvEvents": [1914],
      "IERC20": [2050],
      "IMaker": [1932],
      "IMgvMonitor": [1972],
      "ITaker": [1944],
      "InvertedMangrove": [780],
      "MakerDeployer": [48825],
      "Mangrove": [906],
      "MangroveTest": [47059],
      "MgvLib": [1739],
      "P": [1710],
      "ScenariiTest": [41128],
      "Script": [60776],
      "StdStorage": [62193],
      "Test": [62095],
      "Test2": [47434],
      "TestMaker": [49499],
      "TestMoriartyMaker": [49748],
      "TestTaker": [50091],
      "TestToken": [52050],
      "TrivialTestMaker": [48862],
      "Utilities": [48626],
      "Vm": [63864],
      "console": [71928],
      "console2": [79992],
      "csl": [79992],
      "stdError": [62165],
      "stdMath": [63442],
      "stdStorage": [63295]
    },
    "nodeType": "SourceUnit",
    "src": "38:12009:72",
    "nodes": [
      {
        "id": 39683,
        "nodeType": "PragmaDirective",
        "src": "38:24:72",
        "literals": ["solidity", "^", "0.8", ".10"]
      },
      {
        "id": 39684,
        "nodeType": "ImportDirective",
        "src": "64:39:72",
        "absolutePath": "packages/mangrove-solidity/contracts/test/lib/MangroveTest.sol",
        "file": "mgv_test/lib/MangroveTest.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41280,
        "sourceUnit": 47060,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 41128,
        "nodeType": "ContractDefinition",
        "src": "105:10968:72",
        "nodes": [
          {
            "id": 39689,
            "nodeType": "VariableDeclaration",
            "src": "147:15:72",
            "constant": false,
            "mutability": "mutable",
            "name": "taker",
            "nameLocation": "157:5:72",
            "scope": 41128,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestTaker_$50091",
              "typeString": "contract TestTaker"
            },
            "typeName": {
              "id": 39688,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 39687,
                "name": "TestTaker",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 50091,
                "src": "147:9:72"
              },
              "referencedDeclaration": 50091,
              "src": "147:9:72",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestTaker_$50091",
                "typeString": "contract TestTaker"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 39692,
            "nodeType": "VariableDeclaration",
            "src": "166:20:72",
            "constant": false,
            "mutability": "mutable",
            "name": "makers",
            "nameLocation": "180:6:72",
            "scope": 41128,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MakerDeployer_$48825",
              "typeString": "contract MakerDeployer"
            },
            "typeName": {
              "id": 39691,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 39690,
                "name": "MakerDeployer",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 48825,
                "src": "166:13:72"
              },
              "referencedDeclaration": 48825,
              "src": "166:13:72",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                "typeString": "contract MakerDeployer"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 39695,
            "nodeType": "VariableDeclaration",
            "src": "190:17:72",
            "constant": false,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "199:8:72",
            "scope": 41128,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Balances_$46375_storage",
              "typeString": "struct MangroveTest.Balances"
            },
            "typeName": {
              "id": 39694,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 39693,
                "name": "Balances",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46375,
                "src": "190:8:72"
              },
              "referencedDeclaration": 46375,
              "src": "190:8:72",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Balances_$46375_storage_ptr",
                "typeString": "struct MangroveTest.Balances"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 39698,
            "nodeType": "VariableDeclaration",
            "src": "211:27:72",
            "constant": true,
            "mutability": "constant",
            "name": "testFee",
            "nameLocation": "225:7:72",
            "scope": 41128,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 39696,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "211:4:72",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "333030",
              "id": 39697,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "235:3:72",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_300_by_1",
                "typeString": "int_const 300"
              },
              "value": "300"
            },
            "visibility": "internal"
          },
          {
            "id": 39701,
            "nodeType": "VariableDeclaration",
            "src": "242:14:72",
            "constant": false,
            "mutability": "mutable",
            "name": "offerOf",
            "nameLocation": "249:7:72",
            "scope": 41128,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 39699,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "242:4:72",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 39700,
              "nodeType": "ArrayTypeName",
              "src": "242:6:72",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 39708,
            "nodeType": "VariableDeclaration",
            "src": "261:45:72",
            "constant": false,
            "mutability": "mutable",
            "name": "offers",
            "nameLocation": "300:6:72",
            "scope": 41128,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$46382_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
            },
            "typeName": {
              "id": 39707,
              "keyType": {
                "id": 39702,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "269:4:72",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "261:38:72",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$46382_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
              },
              "valueType": {
                "id": 39706,
                "keyType": {
                  "id": 39704,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 39703,
                    "name": "Info",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 46382,
                    "src": "285:4:72"
                  },
                  "referencedDeclaration": 46382,
                  "src": "285:4:72",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Info_$46382",
                    "typeString": "enum MangroveTest.Info"
                  }
                },
                "nodeType": "Mapping",
                "src": "277:21:72",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_enum$_Info_$46382_$_t_uint256_$",
                  "typeString": "mapping(enum MangroveTest.Info => uint256)"
                },
                "valueType": {
                  "id": 39705,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "293:4:72",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 39783,
            "nodeType": "FunctionDefinition",
            "src": "346:439:72",
            "body": {
              "id": 39782,
              "nodeType": "Block",
              "src": "377:408:72",
              "statements": [
                {
                  "assignments": [39712],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39712,
                      "mutability": "mutable",
                      "name": "offerId",
                      "nameLocation": "388:7:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 39782,
                      "src": "383:12:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 39711,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "383:4:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39722,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 39716,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "409:4:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 39715,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "407:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 39717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "407:7:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 39719,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "418:5:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 39718,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "416:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 39720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "416:8:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 39713,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "398:3:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 39714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "best",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1444,
                      "src": "398:8:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 39721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "398:27:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "383:42:72"
                },
                {
                  "body": {
                    "id": 39780,
                    "nodeType": "Block",
                    "src": "452:329:72",
                    "statements": [
                      {
                        "assignments": [39730, 39733],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 39730,
                            "mutability": "mutable",
                            "name": "offer",
                            "nameLocation": "482:5:72",
                            "nodeType": "VariableDeclaration",
                            "scope": 39780,
                            "src": "461:26:72",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OfferStruct_$10521_memory_ptr",
                              "typeString": "struct OfferStruct"
                            },
                            "typeName": {
                              "id": 39729,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 39728,
                                "name": "P.OfferStruct",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 10521,
                                "src": "461:13:72"
                              },
                              "referencedDeclaration": 10521,
                              "src": "461:13:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferStruct_$10521_storage_ptr",
                                "typeString": "struct OfferStruct"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 39733,
                            "mutability": "mutable",
                            "name": "offerDetail",
                            "nameLocation": "516:11:72",
                            "nodeType": "VariableDeclaration",
                            "scope": 39780,
                            "src": "489:38:72",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OfferDetailStruct_$10530_memory_ptr",
                              "typeString": "struct OfferDetailStruct"
                            },
                            "typeName": {
                              "id": 39732,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 39731,
                                "name": "P.OfferDetailStruct",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 10530,
                                "src": "489:19:72"
                              },
                              "referencedDeclaration": 10530,
                              "src": "489:19:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferDetailStruct_$10530_storage_ptr",
                                "typeString": "struct OfferDetailStruct"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 39744,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 39737,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45878,
                                  "src": "556:4:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 39736,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "554:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 39738,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "554:7:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 39740,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45881,
                                  "src": "565:5:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 39739,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "563:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 39741,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "563:8:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 39742,
                              "name": "offerId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39712,
                              "src": "573:7:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 39734,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45875,
                              "src": "531:3:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 39735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "offerInfo",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1501,
                            "src": "531:22:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_struct$_OfferStruct_$10521_memory_ptr_$_t_struct$_OfferDetailStruct_$10530_memory_ptr_$",
                              "typeString": "function (address,address,uint256) view external returns (struct OfferStruct memory,struct OfferDetailStruct memory)"
                            }
                          },
                          "id": 39743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "531:50:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_struct$_OfferStruct_$10521_memory_ptr_$_t_struct$_OfferDetailStruct_$10530_memory_ptr_$",
                            "typeString": "tuple(struct OfferStruct memory,struct OfferDetailStruct memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "460:121:72"
                      },
                      {
                        "expression": {
                          "id": 39753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 39745,
                                "name": "offers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39708,
                                "src": "589:6:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$46382_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                }
                              },
                              "id": 39749,
                              "indexExpression": {
                                "id": 39746,
                                "name": "offerId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39712,
                                "src": "596:7:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "589:15:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Info_$46382_$_t_uint256_$",
                                "typeString": "mapping(enum MangroveTest.Info => uint256)"
                              }
                            },
                            "id": 39750,
                            "indexExpression": {
                              "expression": {
                                "id": 39747,
                                "name": "Info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46382,
                                "src": "605:4:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Info_$46382_$",
                                  "typeString": "type(enum MangroveTest.Info)"
                                }
                              },
                              "id": 39748,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "makerWants",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46376,
                              "src": "605:15:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Info_$46382",
                                "typeString": "enum MangroveTest.Info"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "589:32:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 39751,
                              "name": "offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39730,
                              "src": "624:5:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferStruct_$10521_memory_ptr",
                                "typeString": "struct OfferStruct memory"
                              }
                            },
                            "id": 39752,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "wants",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10518,
                            "src": "624:11:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "589:46:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 39754,
                        "nodeType": "ExpressionStatement",
                        "src": "589:46:72"
                      },
                      {
                        "expression": {
                          "id": 39763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 39755,
                                "name": "offers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39708,
                                "src": "643:6:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$46382_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                }
                              },
                              "id": 39759,
                              "indexExpression": {
                                "id": 39756,
                                "name": "offerId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39712,
                                "src": "650:7:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "643:15:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Info_$46382_$_t_uint256_$",
                                "typeString": "mapping(enum MangroveTest.Info => uint256)"
                              }
                            },
                            "id": 39760,
                            "indexExpression": {
                              "expression": {
                                "id": 39757,
                                "name": "Info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46382,
                                "src": "659:4:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Info_$46382_$",
                                  "typeString": "type(enum MangroveTest.Info)"
                                }
                              },
                              "id": 39758,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "makerGives",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46377,
                              "src": "659:15:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Info_$46382",
                                "typeString": "enum MangroveTest.Info"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "643:32:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 39761,
                              "name": "offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39730,
                              "src": "678:5:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferStruct_$10521_memory_ptr",
                                "typeString": "struct OfferStruct memory"
                              }
                            },
                            "id": 39762,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "gives",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10520,
                            "src": "678:11:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "643:46:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 39764,
                        "nodeType": "ExpressionStatement",
                        "src": "643:46:72"
                      },
                      {
                        "expression": {
                          "id": 39773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 39765,
                                "name": "offers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39708,
                                "src": "697:6:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$46382_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                }
                              },
                              "id": 39769,
                              "indexExpression": {
                                "id": 39766,
                                "name": "offerId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39712,
                                "src": "704:7:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "697:15:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Info_$46382_$_t_uint256_$",
                                "typeString": "mapping(enum MangroveTest.Info => uint256)"
                              }
                            },
                            "id": 39770,
                            "indexExpression": {
                              "expression": {
                                "id": 39767,
                                "name": "Info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46382,
                                "src": "713:4:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Info_$46382_$",
                                  "typeString": "type(enum MangroveTest.Info)"
                                }
                              },
                              "id": 39768,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "gasreq",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46381,
                              "src": "713:11:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Info_$46382",
                                "typeString": "enum MangroveTest.Info"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "697:28:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 39771,
                              "name": "offerDetail",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39733,
                              "src": "728:11:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferDetailStruct_$10530_memory_ptr",
                                "typeString": "struct OfferDetailStruct memory"
                              }
                            },
                            "id": 39772,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "gasreq",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10525,
                            "src": "728:18:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "697:49:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 39774,
                        "nodeType": "ExpressionStatement",
                        "src": "697:49:72"
                      },
                      {
                        "expression": {
                          "id": 39778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 39775,
                            "name": "offerId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39712,
                            "src": "754:7:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 39776,
                              "name": "offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39730,
                              "src": "764:5:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferStruct_$10521_memory_ptr",
                                "typeString": "struct OfferStruct memory"
                              }
                            },
                            "id": 39777,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "next",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10516,
                            "src": "764:10:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "754:20:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 39779,
                        "nodeType": "ExpressionStatement",
                        "src": "754:20:72"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 39725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 39723,
                      "name": "offerId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39712,
                      "src": "438:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 39724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "449:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "438:12:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39781,
                  "nodeType": "WhileStatement",
                  "src": "431:350:72"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "saveOffers",
            "nameLocation": "355:10:72",
            "parameters": {
              "id": 39709,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "365:2:72"
            },
            "returnParameters": {
              "id": 39710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "377:0:72"
            },
            "scope": 41128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 39924,
            "nodeType": "FunctionDefinition",
            "src": "789:817:72",
            "body": {
              "id": 39923,
              "nodeType": "Block",
              "src": "822:784:72",
              "statements": [
                {
                  "assignments": [39790],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39790,
                      "mutability": "mutable",
                      "name": "balA",
                      "nameLocation": "842:4:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 39923,
                      "src": "828:18:72",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 39788,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "828:4:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 39789,
                        "nodeType": "ArrayTypeName",
                        "src": "828:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39798,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 39794,
                            "name": "makers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39692,
                            "src": "860:6:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                              "typeString": "contract MakerDeployer"
                            }
                          },
                          "id": 39795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48730,
                          "src": "860:13:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 39796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "860:15:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 39793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "849:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 39791,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "853:4:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 39792,
                        "nodeType": "ArrayTypeName",
                        "src": "853:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 39797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "849:27:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "828:48:72"
                },
                {
                  "assignments": [39803],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39803,
                      "mutability": "mutable",
                      "name": "balB",
                      "nameLocation": "896:4:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 39923,
                      "src": "882:18:72",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 39801,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "882:4:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 39802,
                        "nodeType": "ArrayTypeName",
                        "src": "882:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39811,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 39807,
                            "name": "makers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39692,
                            "src": "914:6:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                              "typeString": "contract MakerDeployer"
                            }
                          },
                          "id": 39808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48730,
                          "src": "914:13:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 39809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "914:15:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 39806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "903:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 39804,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "907:4:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 39805,
                        "nodeType": "ArrayTypeName",
                        "src": "907:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 39810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "903:27:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "882:48:72"
                },
                {
                  "assignments": [39816],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39816,
                      "mutability": "mutable",
                      "name": "balWei",
                      "nameLocation": "950:6:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 39923,
                      "src": "936:20:72",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 39814,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "936:4:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 39815,
                        "nodeType": "ArrayTypeName",
                        "src": "936:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39824,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 39820,
                            "name": "makers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39692,
                            "src": "970:6:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                              "typeString": "contract MakerDeployer"
                            }
                          },
                          "id": 39821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48730,
                          "src": "970:13:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 39822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "970:15:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 39819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "959:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 39817,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "963:4:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 39818,
                        "nodeType": "ArrayTypeName",
                        "src": "963:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 39823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "959:27:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "936:50:72"
                },
                {
                  "body": {
                    "id": 39882,
                    "nodeType": "Block",
                    "src": "1035:192:72",
                    "statements": [
                      {
                        "expression": {
                          "id": 39850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 39837,
                              "name": "balA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39790,
                              "src": "1043:4:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 39839,
                            "indexExpression": {
                              "id": 39838,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39826,
                              "src": "1048:1:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1043:7:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 39846,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 39826,
                                        "src": "1092:1:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 39844,
                                        "name": "makers",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 39692,
                                        "src": "1076:6:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                                          "typeString": "contract MakerDeployer"
                                        }
                                      },
                                      "id": 39845,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "getMaker",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 48745,
                                      "src": "1076:15:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$49499_$",
                                        "typeString": "function (uint256) view external returns (contract TestMaker)"
                                      }
                                    },
                                    "id": 39847,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1076:18:72",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestMaker_$49499",
                                      "typeString": "contract TestMaker"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestMaker_$49499",
                                      "typeString": "contract TestMaker"
                                    }
                                  ],
                                  "id": 39843,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1068:7:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 39842,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1068:7:72",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 39848,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1068:27:72",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 39840,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45878,
                                "src": "1053:4:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              },
                              "id": 39841,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50187,
                              "src": "1053:14:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 39849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1053:43:72",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1043:53:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 39851,
                        "nodeType": "ExpressionStatement",
                        "src": "1043:53:72"
                      },
                      {
                        "expression": {
                          "id": 39865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 39852,
                              "name": "balB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39803,
                              "src": "1104:4:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 39854,
                            "indexExpression": {
                              "id": 39853,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39826,
                              "src": "1109:1:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1104:7:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 39861,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 39826,
                                        "src": "1154:1:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 39859,
                                        "name": "makers",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 39692,
                                        "src": "1138:6:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                                          "typeString": "contract MakerDeployer"
                                        }
                                      },
                                      "id": 39860,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "getMaker",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 48745,
                                      "src": "1138:15:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$49499_$",
                                        "typeString": "function (uint256) view external returns (contract TestMaker)"
                                      }
                                    },
                                    "id": 39862,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1138:18:72",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestMaker_$49499",
                                      "typeString": "contract TestMaker"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestMaker_$49499",
                                      "typeString": "contract TestMaker"
                                    }
                                  ],
                                  "id": 39858,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1130:7:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 39857,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1130:7:72",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 39863,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1130:27:72",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 39855,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45881,
                                "src": "1114:5:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              },
                              "id": 39856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50187,
                              "src": "1114:15:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 39864,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1114:44:72",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1104:54:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 39866,
                        "nodeType": "ExpressionStatement",
                        "src": "1104:54:72"
                      },
                      {
                        "expression": {
                          "id": 39880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 39867,
                              "name": "balWei",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39816,
                              "src": "1166:6:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 39869,
                            "indexExpression": {
                              "id": 39868,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39826,
                              "src": "1173:1:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1166:9:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 39876,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 39826,
                                        "src": "1216:1:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 39874,
                                        "name": "makers",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 39692,
                                        "src": "1200:6:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                                          "typeString": "contract MakerDeployer"
                                        }
                                      },
                                      "id": 39875,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "getMaker",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 48745,
                                      "src": "1200:15:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$49499_$",
                                        "typeString": "function (uint256) view external returns (contract TestMaker)"
                                      }
                                    },
                                    "id": 39877,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1200:18:72",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestMaker_$49499",
                                      "typeString": "contract TestMaker"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestMaker_$49499",
                                      "typeString": "contract TestMaker"
                                    }
                                  ],
                                  "id": 39873,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1192:7:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 39872,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1192:7:72",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 39878,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1192:27:72",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 39870,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45875,
                                "src": "1178:3:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                  "typeString": "contract AbstractMangrove"
                                }
                              },
                              "id": 39871,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1417,
                              "src": "1178:13:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 39879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1178:42:72",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1166:54:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 39881,
                        "nodeType": "ExpressionStatement",
                        "src": "1166:54:72"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 39833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 39829,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39826,
                      "src": "1009:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 39830,
                          "name": "makers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39692,
                          "src": "1013:6:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                            "typeString": "contract MakerDeployer"
                          }
                        },
                        "id": 39831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48730,
                        "src": "1013:13:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 39832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1013:15:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1009:19:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39883,
                  "initializationExpression": {
                    "assignments": [39826],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 39826,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1002:1:72",
                        "nodeType": "VariableDeclaration",
                        "scope": 39883,
                        "src": "997:6:72",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 39825,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "997:4:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 39828,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 39827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1006:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "997:10:72"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 39835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1030:3:72",
                      "subExpression": {
                        "id": 39834,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39826,
                        "src": "1030:1:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 39836,
                    "nodeType": "ExpressionStatement",
                    "src": "1030:3:72"
                  },
                  "nodeType": "ForStatement",
                  "src": "992:235:72"
                },
                {
                  "expression": {
                    "id": 39921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39884,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39695,
                      "src": "1232:8:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Balances_$46375_storage",
                        "typeString": "struct MangroveTest.Balances storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 39887,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45875,
                                "src": "1277:3:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                  "typeString": "contract AbstractMangrove"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                  "typeString": "contract AbstractMangrove"
                                }
                              ],
                              "id": 39886,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 46990,
                              "src": "1275:1:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                                "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                              }
                            },
                            "id": 39888,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1275:6:72",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 39889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1275:14:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 39892,
                                  "name": "mgv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45875,
                                  "src": "1328:3:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                    "typeString": "contract AbstractMangrove"
                                  }
                                },
                                "id": 39893,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "governance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 918,
                                "src": "1328:14:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 39894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1328:16:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 39890,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45878,
                              "src": "1313:4:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 39891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50187,
                            "src": "1313:14:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 39895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1313:32:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 39900,
                                  "name": "taker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39689,
                                  "src": "1391:5:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestTaker_$50091",
                                    "typeString": "contract TestTaker"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestTaker_$50091",
                                    "typeString": "contract TestTaker"
                                  }
                                ],
                                "id": 39899,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1383:7:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 39898,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1383:7:72",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 39901,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1383:14:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 39896,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45878,
                              "src": "1368:4:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 39897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50187,
                            "src": "1368:14:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 39902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1368:30:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 39907,
                                  "name": "taker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39689,
                                  "src": "1445:5:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestTaker_$50091",
                                    "typeString": "contract TestTaker"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestTaker_$50091",
                                    "typeString": "contract TestTaker"
                                  }
                                ],
                                "id": 39906,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1437:7:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 39905,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1437:7:72",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 39908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1437:14:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 39903,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45881,
                              "src": "1421:5:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            },
                            "id": 39904,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50187,
                            "src": "1421:15:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 39909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1421:31:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 39914,
                                  "name": "taker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39689,
                                  "src": "1499:5:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestTaker_$50091",
                                    "typeString": "contract TestTaker"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestTaker_$50091",
                                    "typeString": "contract TestTaker"
                                  }
                                ],
                                "id": 39913,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1491:7:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 39912,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1491:7:72",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 39915,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1491:14:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 39910,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45875,
                              "src": "1477:3:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 39911,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1417,
                            "src": "1477:13:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 39916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1477:29:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 39917,
                          "name": "balA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39790,
                          "src": "1530:4:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 39918,
                          "name": "balB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39803,
                          "src": "1558:4:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 39919,
                          "name": "balWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39816,
                          "src": "1588:6:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        ],
                        "id": 39885,
                        "name": "Balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46375,
                        "src": "1243:8:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Balances_$46375_storage_ptr_$",
                          "typeString": "type(struct MangroveTest.Balances storage pointer)"
                        }
                      },
                      "id": 39920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "mgvBalanceWei",
                        "mgvBalanceFees",
                        "takerBalanceA",
                        "takerBalanceB",
                        "takerBalanceWei",
                        "makersBalanceA",
                        "makersBalanceB",
                        "makersBalanceWei"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1243:358:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Balances_$46375_memory_ptr",
                        "typeString": "struct MangroveTest.Balances memory"
                      }
                    },
                    "src": "1232:369:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Balances_$46375_storage",
                      "typeString": "struct MangroveTest.Balances storage ref"
                    }
                  },
                  "id": 39922,
                  "nodeType": "ExpressionStatement",
                  "src": "1232:369:72"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "saveBalances",
            "nameLocation": "798:12:72",
            "parameters": {
              "id": 39784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "810:2:72"
            },
            "returnParameters": {
              "id": 39785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "822:0:72"
            },
            "scope": 41128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 40101,
            "nodeType": "FunctionDefinition",
            "src": "1610:825:72",
            "body": {
              "id": 40100,
              "nodeType": "Block",
              "src": "1643:792:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 39928,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1649:5:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ScenariiTest_$41128_$",
                          "typeString": "type(contract super ScenariiTest)"
                        }
                      },
                      "id": 39930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46003,
                      "src": "1649:11:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 39931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1649:13:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39932,
                  "nodeType": "ExpressionStatement",
                  "src": "1649:13:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 39937,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "1682:4:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 39936,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "1680:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 39938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1680:7:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 39940,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "1691:5:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 39939,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "1689:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 39941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1689:8:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 39942,
                        "name": "testFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39698,
                        "src": "1699:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 39933,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "1669:3:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 39935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1109,
                      "src": "1669:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 39943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1669:38:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39944,
                  "nodeType": "ExpressionStatement",
                  "src": "1669:38:72"
                },
                {
                  "expression": {
                    "id": 39954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39945,
                      "name": "makers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39692,
                      "src": "1714:6:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                        "typeString": "contract MakerDeployer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 39948,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45878,
                              "src": "1744:4:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 39947,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "1742:1:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 39949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1742:7:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 39951,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45881,
                              "src": "1753:5:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 39950,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "1751:1:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 39952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1751:8:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 39946,
                        "name": "setupMakerDeployer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46869,
                        "src": "1723:18:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$_t_contract$_MakerDeployer_$48825_$",
                          "typeString": "function (address,address) returns (contract MakerDeployer)"
                        }
                      },
                      "id": 39953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1723:37:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                        "typeString": "contract MakerDeployer"
                      }
                    },
                    "src": "1714:46:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                      "typeString": "contract MakerDeployer"
                    }
                  },
                  "id": 39955,
                  "nodeType": "ExpressionStatement",
                  "src": "1714:46:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "34",
                        "id": 39959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1780:1:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "expression": {
                        "id": 39956,
                        "name": "makers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39692,
                        "src": "1766:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                          "typeString": "contract MakerDeployer"
                        }
                      },
                      "id": 39958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deploy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48824,
                      "src": "1766:13:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 39960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1766:16:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39961,
                  "nodeType": "ExpressionStatement",
                  "src": "1766:16:72"
                },
                {
                  "body": {
                    "id": 39994,
                    "nodeType": "Block",
                    "src": "1831:114:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 39981,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 39963,
                                      "src": "1881:1:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 39979,
                                      "name": "makers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 39692,
                                      "src": "1865:6:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                                        "typeString": "contract MakerDeployer"
                                      }
                                    },
                                    "id": 39980,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "getMaker",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 48745,
                                    "src": "1865:15:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$49499_$",
                                      "typeString": "function (uint256) view external returns (contract TestMaker)"
                                    }
                                  },
                                  "id": 39982,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1865:18:72",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestMaker_$49499",
                                    "typeString": "contract TestMaker"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestMaker_$49499",
                                    "typeString": "contract TestMaker"
                                  }
                                ],
                                "id": 39978,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1857:7:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 39977,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1857:7:72",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 39983,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1857:27:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "6d616b65722d",
                                  "id": 39987,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1908:8:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_421ac23044cd52abd40239c07a2539bd175b00e0b2528db2ffb9723cdcdd2892",
                                    "typeString": "literal_string \"maker-\""
                                  },
                                  "value": "maker-"
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 39989,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 39963,
                                      "src": "1927:1:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 39988,
                                    "name": "uint2str",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 47518,
                                    "src": "1918:8:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (string memory)"
                                    }
                                  },
                                  "id": 39990,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1918:11:72",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_421ac23044cd52abd40239c07a2539bd175b00e0b2528db2ffb9723cdcdd2892",
                                    "typeString": "literal_string \"maker-\""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 39985,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1894:6:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 39984,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1894:6:72",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 39986,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "concat",
                                "nodeType": "MemberAccess",
                                "src": "1894:13:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure returns (string memory)"
                                }
                              },
                              "id": 39991,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1894:36:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 39974,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60775,
                              "src": "1839:2:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$63864",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 39976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "label",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 63796,
                            "src": "1839:8:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (address,string memory) external"
                            }
                          },
                          "id": 39992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1839:99:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 39993,
                        "nodeType": "ExpressionStatement",
                        "src": "1839:99:72"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 39970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 39966,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39963,
                      "src": "1805:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 39967,
                          "name": "makers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39692,
                          "src": "1809:6:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                            "typeString": "contract MakerDeployer"
                          }
                        },
                        "id": 39968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48730,
                        "src": "1809:13:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 39969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1809:15:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1805:19:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39995,
                  "initializationExpression": {
                    "assignments": [39963],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 39963,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1798:1:72",
                        "nodeType": "VariableDeclaration",
                        "scope": 39995,
                        "src": "1793:6:72",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 39962,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1793:4:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 39965,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 39964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1802:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1793:10:72"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 39972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1826:3:72",
                      "subExpression": {
                        "id": 39971,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39963,
                        "src": "1826:1:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 39973,
                    "nodeType": "ExpressionStatement",
                    "src": "1826:3:72"
                  },
                  "nodeType": "ForStatement",
                  "src": "1788:157:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 40003,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1983:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "expression": {
                                "id": 40001,
                                "name": "makers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39692,
                                "src": "1967:6:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                                  "typeString": "contract MakerDeployer"
                                }
                              },
                              "id": 40002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getMaker",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 48745,
                              "src": "1967:15:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$49499_$",
                                "typeString": "function (uint256) view external returns (contract TestMaker)"
                              }
                            },
                            "id": 40004,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1967:18:72",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 40000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1959:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 39999,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1959:7:72",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1959:27:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "6661696c6572",
                        "id": 40006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1988:8:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6332b323dff570935a476794d83f85ef6631eead32d79d93dde9b7eaf5c91c76",
                          "typeString": "literal_string \"failer\""
                        },
                        "value": "failer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6332b323dff570935a476794d83f85ef6631eead32d79d93dde9b7eaf5c91c76",
                          "typeString": "literal_string \"failer\""
                        }
                      ],
                      "expression": {
                        "id": 39996,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "1950:2:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 39998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63796,
                      "src": "1950:8:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 40007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1950:47:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40008,
                  "nodeType": "ExpressionStatement",
                  "src": "1950:47:72"
                },
                {
                  "expression": {
                    "id": 40019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40009,
                      "name": "taker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39689,
                      "src": "2003:5:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestTaker_$50091",
                        "typeString": "contract TestTaker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 40012,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45878,
                              "src": "2024:4:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 40011,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "2022:1:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 40013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2022:7:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 40015,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45881,
                              "src": "2033:5:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 40014,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "2031:1:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 40016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2031:8:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "74616b6572",
                          "id": 40017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2041:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_dabc31545dc394527fa3167263fd61e7c7bb9eb939a344961942003782d7e47d",
                            "typeString": "literal_string \"taker\""
                          },
                          "value": "taker"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_dabc31545dc394527fa3167263fd61e7c7bb9eb939a344961942003782d7e47d",
                            "typeString": "literal_string \"taker\""
                          }
                        ],
                        "id": 40010,
                        "name": "setupTaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46919,
                        "src": "2011:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_TestTaker_$50091_$",
                          "typeString": "function (address,address,string memory) returns (contract TestTaker)"
                        }
                      },
                      "id": 40018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2011:38:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestTaker_$50091",
                        "typeString": "contract TestTaker"
                      }
                    },
                    "src": "2003:46:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestTaker_$50091",
                      "typeString": "contract TestTaker"
                    }
                  },
                  "id": 40020,
                  "nodeType": "ExpressionStatement",
                  "src": "2003:46:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40024,
                            "name": "makers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39692,
                            "src": "2069:6:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                              "typeString": "contract MakerDeployer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                              "typeString": "contract MakerDeployer"
                            }
                          ],
                          "id": 40023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2061:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40022,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2061:7:72",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2061:15:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3830",
                        "id": 40026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2078:8:72",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_80000000000000000000_by_1",
                          "typeString": "int_const 80000000000000000000"
                        },
                        "value": "80"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_80000000000000000000_by_1",
                          "typeString": "int_const 80000000000000000000"
                        }
                      ],
                      "id": 40021,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [61102, 61119, 61222],
                      "referencedDeclaration": 61102,
                      "src": "2056:4:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 40027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2056:31:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40028,
                  "nodeType": "ExpressionStatement",
                  "src": "2056:31:72"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 40029,
                        "name": "makers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39692,
                        "src": "2093:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                          "typeString": "contract MakerDeployer"
                        }
                      },
                      "id": 40031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "dispatch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48721,
                      "src": "2093:15:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 40032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2093:17:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40033,
                  "nodeType": "ExpressionStatement",
                  "src": "2093:17:72"
                },
                {
                  "body": {
                    "id": 40071,
                    "nodeType": "Block",
                    "src": "2160:133:72",
                    "statements": [
                      {
                        "assignments": [40048],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 40048,
                            "mutability": "mutable",
                            "name": "maker",
                            "nameLocation": "2178:5:72",
                            "nodeType": "VariableDeclaration",
                            "scope": 40071,
                            "src": "2168:15:72",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            },
                            "typeName": {
                              "id": 40047,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 40046,
                                "name": "TestMaker",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 49499,
                                "src": "2168:9:72"
                              },
                              "referencedDeclaration": 49499,
                              "src": "2168:9:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestMaker_$49499",
                                "typeString": "contract TestMaker"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 40053,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 40051,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40035,
                              "src": "2202:1:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 40049,
                              "name": "makers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39692,
                              "src": "2186:6:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                                "typeString": "contract MakerDeployer"
                              }
                            },
                            "id": 40050,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getMaker",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48745,
                            "src": "2186:15:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$49499_$",
                              "typeString": "function (uint256) view external returns (contract TestMaker)"
                            }
                          },
                          "id": 40052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2186:18:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestMaker_$49499",
                            "typeString": "contract TestMaker"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2168:36:72"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "3130",
                              "id": 40057,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2231:8:72",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000"
                              },
                              "value": "10"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000"
                              }
                            ],
                            "expression": {
                              "id": 40054,
                              "name": "maker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40048,
                              "src": "2212:5:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestMaker_$49499",
                                "typeString": "contract TestMaker"
                              }
                            },
                            "id": 40056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "provisionMgv",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49471,
                            "src": "2212:18:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 40058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2212:28:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 40059,
                        "nodeType": "ExpressionStatement",
                        "src": "2212:28:72"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 40062,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45878,
                                  "src": "2255:4:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 40061,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "2253:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 40063,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2253:7:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 40066,
                                  "name": "maker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40048,
                                  "src": "2270:5:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestMaker_$49499",
                                    "typeString": "contract TestMaker"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestMaker_$49499",
                                    "typeString": "contract TestMaker"
                                  }
                                ],
                                "id": 40065,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2262:7:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 40064,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2262:7:72",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 40067,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2262:14:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "35",
                              "id": 40068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2278:7:72",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5000000000000000000_by_1",
                                "typeString": "int_const 5000000000000000000"
                              },
                              "value": "5"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_5000000000000000000_by_1",
                                "typeString": "int_const 5000000000000000000"
                              }
                            ],
                            "id": 40060,
                            "name": "deal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [61102, 61119, 61222],
                            "referencedDeclaration": 61119,
                            "src": "2248:4:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 40069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2248:38:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 40070,
                        "nodeType": "ExpressionStatement",
                        "src": "2248:38:72"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 40042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 40038,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40035,
                      "src": "2134:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 40039,
                          "name": "makers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39692,
                          "src": "2138:6:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                            "typeString": "contract MakerDeployer"
                          }
                        },
                        "id": 40040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48730,
                        "src": "2138:13:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 40041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2138:15:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2134:19:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 40072,
                  "initializationExpression": {
                    "assignments": [40035],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 40035,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2127:1:72",
                        "nodeType": "VariableDeclaration",
                        "scope": 40072,
                        "src": "2122:6:72",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 40034,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2122:4:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 40037,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 40036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2131:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2122:10:72"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 40044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2155:3:72",
                      "subExpression": {
                        "id": 40043,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40035,
                        "src": "2155:1:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 40045,
                    "nodeType": "ExpressionStatement",
                    "src": "2155:3:72"
                  },
                  "nodeType": "ForStatement",
                  "src": "2117:176:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40078,
                            "name": "taker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39689,
                            "src": "2318:5:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          ],
                          "id": 40077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2310:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40076,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2310:7:72",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2310:14:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 40080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2326:7:72",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 40073,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "2299:5:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      "id": 40075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52007,
                      "src": "2299:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 40081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2299:35:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40082,
                  "nodeType": "ExpressionStatement",
                  "src": "2299:35:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40086,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "2357:5:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 40087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2364:7:72",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 40083,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39689,
                        "src": "2340:5:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$50091",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 40085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49823,
                      "src": "2340:16:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$2050_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 40088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2340:32:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40089,
                  "nodeType": "ExpressionStatement",
                  "src": "2340:32:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40093,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "2395:4:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "3530",
                        "id": 40094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2401:8:72",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        },
                        "value": "50"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 40090,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39689,
                        "src": "2378:5:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$50091",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 40092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49823,
                      "src": "2378:16:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$2050_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 40095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2378:32:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40096,
                  "nodeType": "ExpressionStatement",
                  "src": "2378:32:72"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 40097,
                      "name": "saveBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39924,
                      "src": "2416:12:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 40098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2416:14:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40099,
                  "nodeType": "ExpressionStatement",
                  "src": "2416:14:72"
                }
              ]
            },
            "baseFunctions": [46003],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1619:5:72",
            "overrides": {
              "id": 39926,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1634:8:72"
            },
            "parameters": {
              "id": 39925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1624:2:72"
            },
            "returnParameters": {
              "id": 39927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1643:0:72"
            },
            "scope": 41128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 40235,
            "nodeType": "FunctionDefinition",
            "src": "2439:962:72",
            "body": {
              "id": 40234,
              "nodeType": "Block",
              "src": "2484:917:72",
              "statements": [
                {
                  "expression": {
                    "id": 40107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40104,
                      "name": "offerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39701,
                      "src": "2490:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 40105,
                        "name": "insert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40606,
                        "src": "2500:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function () returns (uint256[] memory)"
                        }
                      },
                      "id": 40106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2500:8:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "2490:18:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 40108,
                  "nodeType": "ExpressionStatement",
                  "src": "2490:18:72"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 40109,
                      "name": "saveBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39924,
                      "src": "2515:12:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 40110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2515:14:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40111,
                  "nodeType": "ExpressionStatement",
                  "src": "2515:14:72"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 40112,
                      "name": "saveOffers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39783,
                      "src": "2535:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 40113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2535:12:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40114,
                  "nodeType": "ExpressionStatement",
                  "src": "2535:12:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40117,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "2566:3:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 40116,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "2564:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 40118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2564:6:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 40115,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "2553:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 40119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2553:18:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40120,
                  "nodeType": "ExpressionStatement",
                  "src": "2553:18:72"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 40121,
                      "name": "OrderStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1815,
                      "src": "2582:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 40122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2582:12:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40123,
                  "nodeType": "EmitStatement",
                  "src": "2577:17:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40126,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "2613:3:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 40125,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "2611:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 40127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2611:6:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 40124,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "2600:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 40128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2600:18:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40129,
                  "nodeType": "ExpressionStatement",
                  "src": "2600:18:72"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40132,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "2652:4:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 40131,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "2650:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 40133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2650:7:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 40135,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "2667:5:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 40134,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "2665:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 40136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2665:8:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 40139,
                            "name": "taker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39689,
                            "src": "2689:5:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          ],
                          "id": 40138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2681:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40137,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2681:7:72",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2681:14:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "302e323931",
                        "id": 40141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2703:11:72",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_291000000000000000_by_1",
                          "typeString": "int_const 291000000000000000"
                        },
                        "value": "0.291"
                      },
                      {
                        "hexValue": "302e333735",
                        "id": 40142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2749:11:72",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_375000000000000000_by_1",
                          "typeString": "int_const 375000000000000000"
                        },
                        "value": "0.375"
                      },
                      {
                        "hexValue": "30",
                        "id": 40143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2795:1:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "302e303039",
                        "id": 40144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2804:11:72",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_9000000000000000_by_1",
                          "typeString": "int_const 9000000000000000"
                        },
                        "value": "0.009"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_291000000000000000_by_1",
                          "typeString": "int_const 291000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_375000000000000000_by_1",
                          "typeString": "int_const 375000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_9000000000000000_by_1",
                          "typeString": "int_const 9000000000000000"
                        }
                      ],
                      "id": 40130,
                      "name": "OrderComplete",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1831,
                      "src": "2629:13:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 40145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2629:219:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40146,
                  "nodeType": "EmitStatement",
                  "src": "2624:224:72"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 40147,
                      "name": "snipe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41127,
                      "src": "2855:5:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function () returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 40148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2855:7:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "id": 40149,
                  "nodeType": "ExpressionStatement",
                  "src": "2855:7:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40152,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "2883:4:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 40151,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "2881:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 40153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2881:7:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 40155,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "2892:5:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 40154,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "2890:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 40156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2890:8:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "34",
                        "id": 40157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2900:1:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "id": 40150,
                      "name": "logOfferBook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46197,
                      "src": "2868:12:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 40158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2868:34:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40159,
                  "nodeType": "ExpressionStatement",
                  "src": "2868:34:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_625000000000000000_by_1",
                          "typeString": "int_const 625000000000000000"
                        },
                        "id": 40168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31",
                          "id": 40166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3024:7:72",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "302e333735",
                          "id": 40167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3034:11:72",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_375000000000000000_by_1",
                            "typeString": "int_const 375000000000000000"
                          },
                          "value": "0.375"
                        },
                        "src": "3024:21:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_625000000000000000_by_1",
                          "typeString": "int_const 625000000000000000"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "id": 40171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "302e38",
                          "id": 40169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3053:9:72",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_800000000000000000_by_1",
                            "typeString": "int_const 800000000000000000"
                          },
                          "value": "0.8"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "302e33",
                          "id": 40170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3065:9:72",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_300000000000000000_by_1",
                            "typeString": "int_const 300000000000000000"
                          },
                          "value": "0.3"
                        },
                        "src": "3053:21:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        }
                      },
                      {
                        "hexValue": "38305f303030",
                        "id": 40172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3082:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_80000_by_1",
                          "typeString": "int_const 80000"
                        },
                        "value": "80_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 40173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3096:1:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "32",
                        "id": 40174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3105:1:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_625000000000000000_by_1",
                          "typeString": "int_const 625000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_80000_by_1",
                          "typeString": "int_const 80000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 40163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3002:1:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "expression": {
                            "id": 40160,
                            "name": "makers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39692,
                            "src": "2986:6:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                              "typeString": "contract MakerDeployer"
                            }
                          },
                          "id": 40162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getMaker",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48745,
                          "src": "2986:15:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$49499_$",
                            "typeString": "function (uint256) view external returns (contract TestMaker)"
                          }
                        },
                        "id": 40164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2986:18:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 40165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49391,
                      "src": "2986:30:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 40175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2986:126:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40176,
                  "nodeType": "ExpressionStatement",
                  "src": "2986:126:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40179,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "3134:4:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 40178,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "3132:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 40180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3132:7:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 40182,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "3143:5:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 40181,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "3141:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 40183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3141:8:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "34",
                        "id": 40184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3151:1:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "id": 40177,
                      "name": "logOfferBook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46197,
                      "src": "3119:12:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 40185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3119:34:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40186,
                  "nodeType": "ExpressionStatement",
                  "src": "3119:34:72"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 40187,
                      "name": "saveBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39924,
                      "src": "3160:12:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 40188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3160:14:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40189,
                  "nodeType": "ExpressionStatement",
                  "src": "3160:14:72"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 40190,
                      "name": "saveOffers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39783,
                      "src": "3180:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 40191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3180:12:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40192,
                  "nodeType": "ExpressionStatement",
                  "src": "3180:12:72"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 40193,
                      "name": "mo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40885,
                      "src": "3198:2:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 40194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3198:4:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40195,
                  "nodeType": "ExpressionStatement",
                  "src": "3198:4:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40198,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "3223:4:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 40197,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "3221:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 40199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3221:7:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 40201,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "3232:5:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 40200,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "3230:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 40202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3230:8:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "34",
                        "id": 40203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3240:1:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "id": 40196,
                      "name": "logOfferBook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46197,
                      "src": "3208:12:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 40204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3208:34:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40205,
                  "nodeType": "ExpressionStatement",
                  "src": "3208:34:72"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 40206,
                      "name": "saveBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39924,
                      "src": "3249:12:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 40207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3249:14:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40208,
                  "nodeType": "ExpressionStatement",
                  "src": "3249:14:72"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 40209,
                      "name": "saveOffers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39783,
                      "src": "3269:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 40210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3269:12:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40211,
                  "nodeType": "ExpressionStatement",
                  "src": "3269:12:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 40213,
                          "name": "offerOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39701,
                          "src": "3307:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 40215,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 40214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3315:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3307:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 40212,
                      "name": "collectFailingOffer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40366,
                      "src": "3287:19:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 40216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3287:31:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40217,
                  "nodeType": "ExpressionStatement",
                  "src": "3287:31:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40220,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "3339:4:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 40219,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "3337:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 40221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3337:7:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 40223,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "3348:5:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 40222,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "3346:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 40224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3346:8:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "34",
                        "id": 40225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3356:1:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "id": 40218,
                      "name": "logOfferBook",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46197,
                      "src": "3324:12:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 40226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3324:34:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40227,
                  "nodeType": "ExpressionStatement",
                  "src": "3324:34:72"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 40228,
                      "name": "saveBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39924,
                      "src": "3364:12:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 40229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3364:14:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40230,
                  "nodeType": "ExpressionStatement",
                  "src": "3364:14:72"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 40231,
                      "name": "saveOffers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39783,
                      "src": "3384:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 40232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3384:12:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40233,
                  "nodeType": "ExpressionStatement",
                  "src": "3384:12:72"
                }
              ]
            },
            "functionSelector": "3d8713cc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_insert_and_fail",
            "nameLocation": "2448:26:72",
            "parameters": {
              "id": 40102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2474:2:72"
            },
            "returnParameters": {
              "id": 40103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2484:0:72"
            },
            "scope": 41128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 40366,
            "nodeType": "FunctionDefinition",
            "src": "3459:1239:72",
            "body": {
              "id": 40365,
              "nodeType": "Block",
              "src": "3518:1180:72",
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 40343,
                        "nodeType": "Block",
                        "src": "3707:874:72",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 40258,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "!",
                                  "prefix": true,
                                  "src": "3770:8:72",
                                  "subExpression": {
                                    "id": 40257,
                                    "name": "success",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 40246,
                                    "src": "3771:7:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "4661696c65722073686f756c64206661696c",
                                  "id": 40259,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3780:20:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_6c1182b301516fbe0cc55b25e2c7018d3e42904db6d949e8ac5bbee4af423551",
                                    "typeString": "literal_string \"Failer should fail\""
                                  },
                                  "value": "Failer should fail"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_6c1182b301516fbe0cc55b25e2c7018d3e42904db6d949e8ac5bbee4af423551",
                                    "typeString": "literal_string \"Failer should fail\""
                                  }
                                ],
                                "id": 40256,
                                "name": "assertTrue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [59227, 59248],
                                "referencedDeclaration": 59248,
                                "src": "3759:10:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory)"
                                }
                              },
                              "id": 40260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3759:42:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 40261,
                            "nodeType": "ExpressionStatement",
                            "src": "3759:42:72"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 40263,
                                  "name": "takerGot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40248,
                                  "src": "3818:8:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 40264,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3828:1:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "hexValue": "4661696c6564206f666665722073686f756c64206465636c61726520302074616b6572476f74",
                                  "id": 40265,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3831:40:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_74d4b5e84827d8b8f1588ae8601b548bd6c3ff2cf224c73bd0604f5bee4340c8",
                                    "typeString": "literal_string \"Failed offer should declare 0 takerGot\""
                                  },
                                  "value": "Failed offer should declare 0 takerGot"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_74d4b5e84827d8b8f1588ae8601b548bd6c3ff2cf224c73bd0604f5bee4340c8",
                                    "typeString": "literal_string \"Failed offer should declare 0 takerGot\""
                                  }
                                ],
                                "id": 40262,
                                "name": "assertEq",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  61419, 61444, 61457, 61473, 61515, 61557,
                                  61599, 61636, 61673, 61710, 59278, 59303,
                                  59333, 59358, 59417, 59442, 59472, 59497,
                                  60597, 60632
                                ],
                                "referencedDeclaration": 59497,
                                "src": "3809:8:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (uint256,uint256,string memory)"
                                }
                              },
                              "id": 40266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3809:63:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 40267,
                            "nodeType": "ExpressionStatement",
                            "src": "3809:63:72"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 40269,
                                  "name": "takerGave",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40250,
                                  "src": "3889:9:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 40270,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3900:1:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "hexValue": "4661696c6564206f666665722073686f756c64206465636c61726520302074616b657247617665",
                                  "id": 40271,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3903:41:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_07dc68ab398cabc9198cd441cec34ce3abcb2bc5a4eca621b078354905032844",
                                    "typeString": "literal_string \"Failed offer should declare 0 takerGave\""
                                  },
                                  "value": "Failed offer should declare 0 takerGave"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_07dc68ab398cabc9198cd441cec34ce3abcb2bc5a4eca621b078354905032844",
                                    "typeString": "literal_string \"Failed offer should declare 0 takerGave\""
                                  }
                                ],
                                "id": 40268,
                                "name": "assertEq",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  61419, 61444, 61457, 61473, 61515, 61557,
                                  61599, 61636, 61673, 61710, 59278, 59303,
                                  59333, 59358, 59417, 59442, 59472, 59497,
                                  60597, 60632
                                ],
                                "referencedDeclaration": 59497,
                                "src": "3880:8:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (uint256,uint256,string memory)"
                                }
                              },
                              "id": 40272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3880:65:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 40273,
                            "nodeType": "ExpressionStatement",
                            "src": "3880:65:72"
                          },
                          {
                            "id": 40292,
                            "nodeType": "Block",
                            "src": "4009:170:72",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 40288,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "!",
                                      "prefix": true,
                                      "src": "4041:58:72",
                                      "subExpression": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "id": 40280,
                                                    "name": "base",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 45878,
                                                    "src": "4066:4:72",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_TestToken_$52050",
                                                      "typeString": "contract TestToken"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_contract$_TestToken_$52050",
                                                      "typeString": "contract TestToken"
                                                    }
                                                  ],
                                                  "id": 40279,
                                                  "name": "$",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [
                                                    46990, 47007, 47024, 47041,
                                                    47058
                                                  ],
                                                  "referencedDeclaration": 47058,
                                                  "src": "4064:1:72",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                                  }
                                                },
                                                "id": 40281,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4064:7:72",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                                }
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "id": 40283,
                                                    "name": "quote",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 45881,
                                                    "src": "4075:5:72",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_TestToken_$52050",
                                                      "typeString": "contract TestToken"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_contract$_TestToken_$52050",
                                                      "typeString": "contract TestToken"
                                                    }
                                                  ],
                                                  "id": 40282,
                                                  "name": "$",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [
                                                    46990, 47007, 47024, 47041,
                                                    47058
                                                  ],
                                                  "referencedDeclaration": 47058,
                                                  "src": "4073:1:72",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                                  }
                                                },
                                                "id": 40284,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4073:8:72",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                                }
                                              },
                                              {
                                                "id": 40285,
                                                "name": "failingOfferId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 40237,
                                                "src": "4083:14:72",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                                },
                                                {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "expression": {
                                                "id": 40277,
                                                "name": "mgv",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 45875,
                                                "src": "4053:3:72",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                                  "typeString": "contract AbstractMangrove"
                                                }
                                              },
                                              "id": 40278,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "offers",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1404,
                                              "src": "4053:10:72",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$9363_$",
                                                "typeString": "function (address,address,uint256) view external returns (t)"
                                              }
                                            },
                                            "id": 40286,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4053:45:72",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                                              "typeString": "t"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                                              "typeString": "t"
                                            }
                                          ],
                                          "expression": {
                                            "id": 40275,
                                            "name": "mgv",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 45875,
                                            "src": "4042:3:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                              "typeString": "contract AbstractMangrove"
                                            }
                                          },
                                          "id": 40276,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "isLive",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1705,
                                          "src": "4042:10:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_pure$_t_userDefinedValueType$_t_$9363_$returns$_t_bool_$",
                                            "typeString": "function (t) pure external returns (bool)"
                                          }
                                        },
                                        "id": 40287,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4042:57:72",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    {
                                      "hexValue": "4661696c696e67206f666665722073686f756c642068617665206265656e2072656d6f7665642066726f6d204d6776",
                                      "id": 40289,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4111:49:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_b913f0c0b1026aa2dfec533e1d73de423b2833a4703c52154bb77cdf213feca7",
                                        "typeString": "literal_string \"Failing offer should have been removed from Mgv\""
                                      },
                                      "value": "Failing offer should have been removed from Mgv"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      {
                                        "typeIdentifier": "t_stringliteral_b913f0c0b1026aa2dfec533e1d73de423b2833a4703c52154bb77cdf213feca7",
                                        "typeString": "literal_string \"Failing offer should have been removed from Mgv\""
                                      }
                                    ],
                                    "id": 40274,
                                    "name": "assertTrue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [59227, 59248],
                                    "referencedDeclaration": 59248,
                                    "src": "4019:10:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                      "typeString": "function (bool,string memory)"
                                    }
                                  },
                                  "id": 40290,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4019:151:72",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 40291,
                                "nodeType": "ExpressionStatement",
                                "src": "4019:151:72"
                              }
                            ]
                          },
                          {
                            "assignments": [40294],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 40294,
                                "mutability": "mutable",
                                "name": "provision",
                                "nameLocation": "4191:9:72",
                                "nodeType": "VariableDeclaration",
                                "scope": 40343,
                                "src": "4186:14:72",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 40293,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4186:4:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 40309,
                            "initialValue": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 40297,
                                      "name": "base",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45878,
                                      "src": "4227:4:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 40296,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      46990, 47007, 47024, 47041, 47058
                                    ],
                                    "referencedDeclaration": 47058,
                                    "src": "4225:1:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 40298,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4225:7:72",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 40300,
                                      "name": "quote",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45881,
                                      "src": "4244:5:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 40299,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      46990, 47007, 47024, 47041, 47058
                                    ],
                                    "referencedDeclaration": 47058,
                                    "src": "4242:1:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 40301,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4242:8:72",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 40302,
                                      "name": "offers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 39708,
                                      "src": "4260:6:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$46382_$_t_uint256_$_$",
                                        "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                      }
                                    },
                                    "id": 40304,
                                    "indexExpression": {
                                      "id": 40303,
                                      "name": "failingOfferId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 40237,
                                      "src": "4267:14:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4260:22:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_enum$_Info_$46382_$_t_uint256_$",
                                      "typeString": "mapping(enum MangroveTest.Info => uint256)"
                                    }
                                  },
                                  "id": 40307,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 40305,
                                      "name": "Info",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46382,
                                      "src": "4283:4:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Info_$46382_$",
                                        "typeString": "type(enum MangroveTest.Info)"
                                      }
                                    },
                                    "id": 40306,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "gasreq",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 46381,
                                    "src": "4283:11:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Info_$46382",
                                      "typeString": "enum MangroveTest.Info"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4260:35:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 40295,
                                "name": "getProvision",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [46516, 46583],
                                "referencedDeclaration": 46516,
                                "src": "4203:12:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (address,address,uint256) view returns (uint256)"
                                }
                              },
                              "id": 40308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4203:100:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "4186:117:72"
                          },
                          {
                            "assignments": [40311],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 40311,
                                "mutability": "mutable",
                                "name": "returned",
                                "nameLocation": "4316:8:72",
                                "nodeType": "VariableDeclaration",
                                "scope": 40343,
                                "src": "4311:13:72",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 40310,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4311:4:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 40327,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 40326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "hexValue": "30",
                                            "id": 40318,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "4365:1:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "expression": {
                                            "id": 40316,
                                            "name": "makers",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 39692,
                                            "src": "4349:6:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                                              "typeString": "contract MakerDeployer"
                                            }
                                          },
                                          "id": 40317,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "getMaker",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 48745,
                                          "src": "4349:15:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$49499_$",
                                            "typeString": "function (uint256) view external returns (contract TestMaker)"
                                          }
                                        },
                                        "id": 40319,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4349:18:72",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                                          "typeString": "contract TestMaker"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                                          "typeString": "contract TestMaker"
                                        }
                                      ],
                                      "id": 40315,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4341:7:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 40314,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4341:7:72",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 40320,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4341:27:72",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 40312,
                                    "name": "mgv",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45875,
                                    "src": "4327:3:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                      "typeString": "contract AbstractMangrove"
                                    }
                                  },
                                  "id": 40313,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1417,
                                  "src": "4327:13:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 40321,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4327:42:72",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 40322,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 39695,
                                    "src": "4380:8:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Balances_$46375_storage",
                                      "typeString": "struct MangroveTest.Balances storage ref"
                                    }
                                  },
                                  "id": 40323,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "makersBalanceWei",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46374,
                                  "src": "4380:25:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                    "typeString": "uint256[] storage ref"
                                  }
                                },
                                "id": 40325,
                                "indexExpression": {
                                  "hexValue": "30",
                                  "id": 40324,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4406:1:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4380:28:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4327:81:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "4311:97:72"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 40330,
                                        "name": "mgv",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 45875,
                                        "src": "4436:3:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                          "typeString": "contract AbstractMangrove"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                          "typeString": "contract AbstractMangrove"
                                        }
                                      ],
                                      "id": 40329,
                                      "name": "$",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        46990, 47007, 47024, 47041, 47058
                                      ],
                                      "referencedDeclaration": 46990,
                                      "src": "4434:1:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                                        "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                                      }
                                    },
                                    "id": 40331,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4434:6:72",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 40332,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "4434:14:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 40339,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 40333,
                                      "name": "balances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 39695,
                                      "src": "4458:8:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Balances_$46375_storage",
                                        "typeString": "struct MangroveTest.Balances storage ref"
                                      }
                                    },
                                    "id": 40334,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mgvBalanceWei",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 46357,
                                    "src": "4458:22:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 40337,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 40335,
                                          "name": "provision",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 40294,
                                          "src": "4484:9:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 40336,
                                          "name": "returned",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 40311,
                                          "src": "4496:8:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "4484:20:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 40338,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "4483:22:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4458:47:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "hexValue": "4d616e67726f766520686173206e6f742073656e642074686520636f727265637420616d6f756e7420746f2074616b6572",
                                  "id": 40340,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4515:51:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_5a21ac61bad4123393ba670ae37c9d7905415950f6fdb2b86af49974425c12a5",
                                    "typeString": "literal_string \"Mangrove has not send the correct amount to taker\""
                                  },
                                  "value": "Mangrove has not send the correct amount to taker"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_5a21ac61bad4123393ba670ae37c9d7905415950f6fdb2b86af49974425c12a5",
                                    "typeString": "literal_string \"Mangrove has not send the correct amount to taker\""
                                  }
                                ],
                                "id": 40328,
                                "name": "assertEq",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  61419, 61444, 61457, 61473, 61515, 61557,
                                  61599, 61636, 61673, 61710, 59278, 59303,
                                  59333, 59358, 59417, 59442, 59472, 59497,
                                  60597, 60632
                                ],
                                "referencedDeclaration": 59497,
                                "src": "4416:8:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (uint256,uint256,string memory)"
                                }
                              },
                              "id": 40341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4416:158:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 40342,
                            "nodeType": "ExpressionStatement",
                            "src": "4416:158:72"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 40344,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 40255,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 40246,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "3626:7:72",
                            "nodeType": "VariableDeclaration",
                            "scope": 40344,
                            "src": "3621:12:72",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 40245,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3621:4:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 40248,
                            "mutability": "mutable",
                            "name": "takerGot",
                            "nameLocation": "3646:8:72",
                            "nodeType": "VariableDeclaration",
                            "scope": 40344,
                            "src": "3641:13:72",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 40247,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3641:4:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 40250,
                            "mutability": "mutable",
                            "name": "takerGave",
                            "nameLocation": "3667:9:72",
                            "nodeType": "VariableDeclaration",
                            "scope": 40344,
                            "src": "3662:14:72",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 40249,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3662:4:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 40252,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 40344,
                            "src": "3684:4:72",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 40251,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3684:4:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 40254,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 40344,
                            "src": "3696:4:72",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 40253,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3696:4:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "3613:93:72"
                      },
                      "src": "3605:976:72"
                    },
                    {
                      "block": {
                        "id": 40362,
                        "nodeType": "Block",
                        "src": "4612:82:72",
                        "statements": [
                          {
                            "assignments": [40349],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 40349,
                                "mutability": "mutable",
                                "name": "err",
                                "nameLocation": "4634:3:72",
                                "nodeType": "VariableDeclaration",
                                "scope": 40362,
                                "src": "4620:17:72",
                                "stateVariable": false,
                                "storageLocation": "memory",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string"
                                },
                                "typeName": {
                                  "id": 40348,
                                  "name": "string",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4620:6:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage_ptr",
                                    "typeString": "string"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 40357,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 40352,
                                  "name": "errorMsg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40346,
                                  "src": "4651:8:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 40354,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4662:6:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                        "typeString": "type(string storage pointer)"
                                      },
                                      "typeName": {
                                        "id": 40353,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4662:6:72",
                                        "typeDescriptions": {}
                                      }
                                    }
                                  ],
                                  "id": 40355,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4661:8:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  }
                                ],
                                "expression": {
                                  "id": 40350,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4640:3:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 40351,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "decode",
                                "nodeType": "MemberAccess",
                                "src": "4640:10:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 40356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4640:30:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "4620:50:72"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 40359,
                                  "name": "err",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40349,
                                  "src": "4683:3:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 40358,
                                "name": "fail",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [61358, 59174],
                                "referencedDeclaration": 61358,
                                "src": "4678:4:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory)"
                                }
                              },
                              "id": 40360,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4678:9:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 40361,
                            "nodeType": "ExpressionStatement",
                            "src": "4678:9:72"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 40363,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 40347,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 40346,
                            "mutability": "mutable",
                            "name": "errorMsg",
                            "nameLocation": "4602:8:72",
                            "nodeType": "VariableDeclaration",
                            "scope": 40363,
                            "src": "4589:21:72",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 40345,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "4589:5:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "4588:23:72"
                      },
                      "src": "4582:112:72"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 40242,
                        "name": "failingOfferId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40237,
                        "src": "3578:14:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e35",
                        "id": 40243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3594:9:72",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 40240,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39689,
                        "src": "3559:5:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$50091",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 40241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "takeWithInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49945,
                      "src": "3559:18:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (bool,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 40244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3559:45:72",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 40364,
                  "nodeType": "TryStatement",
                  "src": "3555:1139:72"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collectFailingOffer",
            "nameLocation": "3468:19:72",
            "parameters": {
              "id": 40238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40237,
                  "mutability": "mutable",
                  "name": "failingOfferId",
                  "nameLocation": "3493:14:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40366,
                  "src": "3488:19:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40236,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3488:4:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3487:21:72"
            },
            "returnParameters": {
              "id": 40239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3518:0:72"
            },
            "scope": 41128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 40606,
            "nodeType": "FunctionDefinition",
            "src": "4702:1860:72",
            "body": {
              "id": 40605,
              "nodeType": "Block",
              "src": "4751:1811:72",
              "statements": [
                {
                  "assignments": [40376],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40376,
                      "mutability": "mutable",
                      "name": "_offerOf",
                      "nameLocation": "4808:8:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 40605,
                      "src": "4794:22:72",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 40374,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4794:4:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 40375,
                        "nodeType": "ArrayTypeName",
                        "src": "4794:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40384,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 40380,
                            "name": "makers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39692,
                            "src": "4830:6:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                              "typeString": "contract MakerDeployer"
                            }
                          },
                          "id": 40381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48730,
                          "src": "4830:13:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 40382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4830:15:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 40379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4819:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 40377,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4823:4:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 40378,
                        "nodeType": "ArrayTypeName",
                        "src": "4823:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 40383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4819:27:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4794:52:72"
                },
                {
                  "expression": {
                    "id": 40398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 40385,
                        "name": "_offerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40376,
                        "src": "4852:8:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 40387,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 40386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4861:1:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4852:11:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 40393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4920:7:72",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "302e35",
                          "id": 40394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4942:9:72",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_500000000000000000_by_1",
                            "typeString": "int_const 500000000000000000"
                          },
                          "value": "0.5"
                        },
                        {
                          "hexValue": "35305f303030",
                          "id": 40395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4967:6:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50000_by_1",
                            "typeString": "int_const 50000"
                          },
                          "value": "50_000"
                        },
                        {
                          "hexValue": "30",
                          "id": 40396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4990:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_500000000000000000_by_1",
                            "typeString": "int_const 500000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_50000_by_1",
                            "typeString": "int_const 50000"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 40390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4882:1:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 40388,
                              "name": "makers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39692,
                              "src": "4866:6:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                                "typeString": "contract MakerDeployer"
                              }
                            },
                            "id": 40389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getMaker",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48745,
                            "src": "4866:15:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$49499_$",
                              "typeString": "function (uint256) view external returns (contract TestMaker)"
                            }
                          },
                          "id": 40391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4866:18:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestMaker_$49499",
                            "typeString": "contract TestMaker"
                          }
                        },
                        "id": 40392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49210,
                        "src": "4866:27:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                        }
                      },
                      "id": 40397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": ["wants", "gives", "gasreq", "pivotId"],
                      "nodeType": "FunctionCall",
                      "src": "4866:132:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4852:146:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40399,
                  "nodeType": "ExpressionStatement",
                  "src": "4852:146:72"
                },
                {
                  "expression": {
                    "id": 40413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 40400,
                        "name": "_offerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40376,
                        "src": "5004:8:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 40402,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 40401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5013:1:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5004:11:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 40408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5072:7:72",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "302e38",
                          "id": 40409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5094:9:72",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_800000000000000000_by_1",
                            "typeString": "int_const 800000000000000000"
                          },
                          "value": "0.8"
                        },
                        {
                          "hexValue": "38305f303030",
                          "id": 40410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5119:6:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_80000_by_1",
                            "typeString": "int_const 80000"
                          },
                          "value": "80_000"
                        },
                        {
                          "hexValue": "31",
                          "id": 40411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5142:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_800000000000000000_by_1",
                            "typeString": "int_const 800000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_80000_by_1",
                            "typeString": "int_const 80000"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "32",
                              "id": 40405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5034:1:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "id": 40403,
                              "name": "makers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39692,
                              "src": "5018:6:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                                "typeString": "contract MakerDeployer"
                              }
                            },
                            "id": 40404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getMaker",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48745,
                            "src": "5018:15:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$49499_$",
                              "typeString": "function (uint256) view external returns (contract TestMaker)"
                            }
                          },
                          "id": 40406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5018:18:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestMaker_$49499",
                            "typeString": "contract TestMaker"
                          }
                        },
                        "id": 40407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49210,
                        "src": "5018:27:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                        }
                      },
                      "id": 40412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": ["wants", "gives", "gasreq", "pivotId"],
                      "nodeType": "FunctionCall",
                      "src": "5018:132:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5004:146:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40414,
                  "nodeType": "ExpressionStatement",
                  "src": "5004:146:72"
                },
                {
                  "expression": {
                    "id": 40428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 40415,
                        "name": "_offerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40376,
                        "src": "5156:8:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 40417,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 40416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5165:1:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5156:11:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "302e35",
                          "id": 40423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5224:9:72",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_500000000000000000_by_1",
                            "typeString": "int_const 500000000000000000"
                          },
                          "value": "0.5"
                        },
                        {
                          "hexValue": "31",
                          "id": 40424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5248:7:72",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "39305f303030",
                          "id": 40425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5271:6:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_90000_by_1",
                            "typeString": "int_const 90000"
                          },
                          "value": "90_000"
                        },
                        {
                          "hexValue": "3732",
                          "id": 40426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5294:2:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_72_by_1",
                            "typeString": "int_const 72"
                          },
                          "value": "72"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_500000000000000000_by_1",
                            "typeString": "int_const 500000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_90000_by_1",
                            "typeString": "int_const 90000"
                          },
                          {
                            "typeIdentifier": "t_rational_72_by_1",
                            "typeString": "int_const 72"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "33",
                              "id": 40420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5186:1:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              }
                            ],
                            "expression": {
                              "id": 40418,
                              "name": "makers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39692,
                              "src": "5170:6:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                                "typeString": "contract MakerDeployer"
                              }
                            },
                            "id": 40419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getMaker",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48745,
                            "src": "5170:15:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$49499_$",
                              "typeString": "function (uint256) view external returns (contract TestMaker)"
                            }
                          },
                          "id": 40421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5170:18:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestMaker_$49499",
                            "typeString": "contract TestMaker"
                          }
                        },
                        "id": 40422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49210,
                        "src": "5170:27:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                        }
                      },
                      "id": 40427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": ["wants", "gives", "gasreq", "pivotId"],
                      "nodeType": "FunctionCall",
                      "src": "5170:133:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5156:147:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40429,
                  "nodeType": "ExpressionStatement",
                  "src": "5156:147:72"
                },
                {
                  "assignments": [40435, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40435,
                      "mutability": "mutable",
                      "name": "cfg",
                      "nameLocation": "5321:3:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 40605,
                      "src": "5310:14:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$7552",
                        "typeString": "t"
                      },
                      "typeName": {
                        "id": 40434,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 40433,
                          "name": "P.Global.t",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7552,
                          "src": "5310:10:72"
                        },
                        "referencedDeclaration": 7552,
                        "src": "5310:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$7552",
                          "typeString": "t"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 40445,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40439,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "5343:4:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 40438,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "5341:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 40440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5341:7:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 40442,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "5352:5:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 40441,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "5350:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 40443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5350:8:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 40436,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "5330:3:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 40437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "config",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5799,
                      "src": "5330:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_userDefinedValueType$_t_$7552_$_t_userDefinedValueType$_t_$8421_$",
                        "typeString": "function (address,address) view external returns (t,t)"
                      }
                    },
                    "id": 40444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5330:29:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_userDefinedValueType$_t_$7552_$_t_userDefinedValueType$_t_$8421_$",
                      "typeString": "tuple(t,t)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5309:50:72"
                },
                {
                  "expression": {
                    "id": 40461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 40446,
                        "name": "_offerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40376,
                        "src": "5365:8:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 40448,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 40447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5374:1:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5365:11:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "3230",
                          "id": 40454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5439:8:72",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20000000000000000000_by_1",
                            "typeString": "int_const 20000000000000000000"
                          },
                          "value": "20"
                        },
                        {
                          "hexValue": "3130",
                          "id": 40455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5462:8:72",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 40456,
                              "name": "cfg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40435,
                              "src": "5486:3:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_t_$7552",
                                "typeString": "t"
                              }
                            },
                            "id": 40457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "gasmax",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8181,
                            "src": "5486:10:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$7552_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$7552_$",
                              "typeString": "function (t) pure returns (uint256)"
                            }
                          },
                          "id": 40458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5486:12:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 40459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5515:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_20000000000000000000_by_1",
                            "typeString": "int_const 20000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 40451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5395:1:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 40449,
                              "name": "makers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39692,
                              "src": "5379:6:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                                "typeString": "contract MakerDeployer"
                              }
                            },
                            "id": 40450,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getMaker",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48745,
                            "src": "5379:15:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$49499_$",
                              "typeString": "function (uint256) view external returns (contract TestMaker)"
                            }
                          },
                          "id": 40452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5379:18:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestMaker_$49499",
                            "typeString": "contract TestMaker"
                          }
                        },
                        "id": 40453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "newOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49210,
                        "src": "5379:27:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                        }
                      },
                      "id": 40460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": ["wants", "gives", "gasreq", "pivotId"],
                      "nodeType": "FunctionCall",
                      "src": "5379:144:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5365:158:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40462,
                  "nodeType": "ExpressionStatement",
                  "src": "5365:158:72"
                },
                {
                  "body": {
                    "id": 40531,
                    "nodeType": "Block",
                    "src": "5633:356:72",
                    "statements": [
                      {
                        "assignments": [40476],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 40476,
                            "mutability": "mutable",
                            "name": "gasreq_i",
                            "nameLocation": "5646:8:72",
                            "nodeType": "VariableDeclaration",
                            "scope": 40531,
                            "src": "5641:13:72",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 40475,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5641:4:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 40491,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 40480,
                                      "name": "base",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45878,
                                      "src": "5676:4:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 40479,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      46990, 47007, 47024, 47041, 47058
                                    ],
                                    "referencedDeclaration": 47058,
                                    "src": "5674:1:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 40481,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5674:7:72",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 40483,
                                      "name": "quote",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45881,
                                      "src": "5685:5:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 40482,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      46990, 47007, 47024, 47041, 47058
                                    ],
                                    "referencedDeclaration": 47058,
                                    "src": "5683:1:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 40484,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5683:8:72",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "id": 40485,
                                    "name": "_offerOf",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 40376,
                                    "src": "5693:8:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 40487,
                                  "indexExpression": {
                                    "id": 40486,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 40464,
                                    "src": "5702:1:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5693:11:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 40477,
                                  "name": "mgv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45875,
                                  "src": "5657:3:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                    "typeString": "contract AbstractMangrove"
                                  }
                                },
                                "id": 40478,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "offerDetails",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1413,
                                "src": "5657:16:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$9916_$",
                                  "typeString": "function (address,address,uint256) view external returns (t)"
                                }
                              },
                              "id": 40488,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5657:48:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_t_$9916",
                                "typeString": "t"
                              }
                            },
                            "id": 40489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "gasreq",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10245,
                            "src": "5657:55:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$9916_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$9916_$",
                              "typeString": "function (t) pure returns (uint256)"
                            }
                          },
                          "id": 40490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5657:57:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5641:73:72"
                      },
                      {
                        "assignments": [40493],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 40493,
                            "mutability": "mutable",
                            "name": "provision_i",
                            "nameLocation": "5727:11:72",
                            "nodeType": "VariableDeclaration",
                            "scope": 40531,
                            "src": "5722:16:72",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 40492,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5722:4:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 40503,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 40496,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45878,
                                  "src": "5756:4:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 40495,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "5754:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 40497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5754:7:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 40499,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45881,
                                  "src": "5765:5:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 40498,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "5763:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 40500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5763:8:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 40501,
                              "name": "gasreq_i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40476,
                              "src": "5773:8:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 40494,
                            "name": "getProvision",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [46516, 46583],
                            "referencedDeclaration": 46516,
                            "src": "5741:12:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 40502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5741:41:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5722:60:72"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 40511,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 40464,
                                          "src": "5846:1:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 40509,
                                          "name": "makers",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 39692,
                                          "src": "5830:6:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                                            "typeString": "contract MakerDeployer"
                                          }
                                        },
                                        "id": 40510,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getMaker",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 48745,
                                        "src": "5830:15:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$49499_$",
                                          "typeString": "function (uint256) view external returns (contract TestMaker)"
                                        }
                                      },
                                      "id": 40512,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5830:18:72",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestMaker_$49499",
                                        "typeString": "contract TestMaker"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestMaker_$49499",
                                        "typeString": "contract TestMaker"
                                      }
                                    ],
                                    "id": 40508,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5822:7:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 40507,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5822:7:72",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 40513,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5822:27:72",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 40505,
                                  "name": "mgv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45875,
                                  "src": "5808:3:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                    "typeString": "contract AbstractMangrove"
                                  }
                                },
                                "id": 40506,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1417,
                                "src": "5808:13:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 40514,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5808:42:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 40520,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 40515,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 39695,
                                    "src": "5860:8:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Balances_$46375_storage",
                                      "typeString": "struct MangroveTest.Balances storage ref"
                                    }
                                  },
                                  "id": 40516,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "makersBalanceWei",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46374,
                                  "src": "5860:25:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                    "typeString": "uint256[] storage ref"
                                  }
                                },
                                "id": 40518,
                                "indexExpression": {
                                  "id": 40517,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40464,
                                  "src": "5886:1:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5860:28:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 40519,
                                "name": "provision_i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40493,
                                "src": "5891:11:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5860:42:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "496e636f7272656374207765692062616c616e636520666f72206d616b657220",
                                  "id": 40524,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5926:34:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_da5fd56319adf0e6c775bd50897c890dfad90104946a8f672e3c2cd9adfa7191",
                                    "typeString": "literal_string \"Incorrect wei balance for maker \""
                                  },
                                  "value": "Incorrect wei balance for maker "
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 40526,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 40464,
                                      "src": "5971:1:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 40525,
                                    "name": "uint2str",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 47518,
                                    "src": "5962:8:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (string memory)"
                                    }
                                  },
                                  "id": 40527,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5962:11:72",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_da5fd56319adf0e6c775bd50897c890dfad90104946a8f672e3c2cd9adfa7191",
                                    "typeString": "literal_string \"Incorrect wei balance for maker \""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 40522,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5912:6:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 40521,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5912:6:72",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 40523,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "concat",
                                "nodeType": "MemberAccess",
                                "src": "5912:13:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure returns (string memory)"
                                }
                              },
                              "id": 40528,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5912:62:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 40504,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              61419, 61444, 61457, 61473, 61515, 61557, 61599,
                              61636, 61673, 61710, 59278, 59303, 59333, 59358,
                              59417, 59442, 59472, 59497, 60597, 60632
                            ],
                            "referencedDeclaration": 59497,
                            "src": "5790:8:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 40529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5790:192:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 40530,
                        "nodeType": "ExpressionStatement",
                        "src": "5790:192:72"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 40471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 40467,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40464,
                      "src": "5607:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 40468,
                          "name": "makers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39692,
                          "src": "5611:6:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                            "typeString": "contract MakerDeployer"
                          }
                        },
                        "id": 40469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48730,
                        "src": "5611:13:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 40470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5611:15:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5607:19:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 40532,
                  "initializationExpression": {
                    "assignments": [40464],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 40464,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5600:1:72",
                        "nodeType": "VariableDeclaration",
                        "scope": 40532,
                        "src": "5595:6:72",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 40463,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5595:4:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 40466,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 40465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5604:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5595:10:72"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 40473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5628:3:72",
                      "subExpression": {
                        "id": 40472,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40464,
                        "src": "5628:1:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 40474,
                    "nodeType": "ExpressionStatement",
                    "src": "5628:3:72"
                  },
                  "nodeType": "ForStatement",
                  "src": "5590:399:72"
                },
                {
                  "assignments": [40534],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40534,
                      "mutability": "mutable",
                      "name": "offerId",
                      "nameLocation": "6062:7:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 40605,
                      "src": "6057:12:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 40533,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6057:4:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40544,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40538,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "6083:4:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 40537,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "6081:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 40539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6081:7:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 40541,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "6092:5:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 40540,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "6090:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 40542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6090:8:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 40535,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "6072:3:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 40536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "best",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1444,
                      "src": "6072:8:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 40543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6072:27:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6057:42:72"
                },
                {
                  "assignments": [40546],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40546,
                      "mutability": "mutable",
                      "name": "expected_maker",
                      "nameLocation": "6110:14:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 40605,
                      "src": "6105:19:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 40545,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6105:4:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40548,
                  "initialValue": {
                    "hexValue": "33",
                    "id": 40547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6127:1:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_3_by_1",
                      "typeString": "int_const 3"
                    },
                    "value": "3"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6105:23:72"
                },
                {
                  "body": {
                    "id": 40601,
                    "nodeType": "Block",
                    "src": "6155:382:72",
                    "statements": [
                      {
                        "assignments": [40556, 40559],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 40556,
                            "mutability": "mutable",
                            "name": "offer",
                            "nameLocation": "6185:5:72",
                            "nodeType": "VariableDeclaration",
                            "scope": 40601,
                            "src": "6164:26:72",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OfferStruct_$10521_memory_ptr",
                              "typeString": "struct OfferStruct"
                            },
                            "typeName": {
                              "id": 40555,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 40554,
                                "name": "P.OfferStruct",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 10521,
                                "src": "6164:13:72"
                              },
                              "referencedDeclaration": 10521,
                              "src": "6164:13:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferStruct_$10521_storage_ptr",
                                "typeString": "struct OfferStruct"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 40559,
                            "mutability": "mutable",
                            "name": "od",
                            "nameLocation": "6219:2:72",
                            "nodeType": "VariableDeclaration",
                            "scope": 40601,
                            "src": "6192:29:72",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OfferDetailStruct_$10530_memory_ptr",
                              "typeString": "struct OfferDetailStruct"
                            },
                            "typeName": {
                              "id": 40558,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 40557,
                                "name": "P.OfferDetailStruct",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 10530,
                                "src": "6192:19:72"
                              },
                              "referencedDeclaration": 10530,
                              "src": "6192:19:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferDetailStruct_$10530_storage_ptr",
                                "typeString": "struct OfferDetailStruct"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 40570,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 40563,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45878,
                                  "src": "6250:4:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 40562,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "6248:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 40564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6248:7:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 40566,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45881,
                                  "src": "6259:5:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 40565,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "6257:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 40567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6257:8:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 40568,
                              "name": "offerId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40534,
                              "src": "6267:7:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 40560,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45875,
                              "src": "6225:3:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 40561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "offerInfo",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1501,
                            "src": "6225:22:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_struct$_OfferStruct_$10521_memory_ptr_$_t_struct$_OfferDetailStruct_$10530_memory_ptr_$",
                              "typeString": "function (address,address,uint256) view external returns (struct OfferStruct memory,struct OfferDetailStruct memory)"
                            }
                          },
                          "id": 40569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6225:50:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_struct$_OfferStruct_$10521_memory_ptr_$_t_struct$_OfferDetailStruct_$10530_memory_ptr_$",
                            "typeString": "tuple(struct OfferStruct memory,struct OfferDetailStruct memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6163:112:72"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 40572,
                                "name": "od",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40559,
                                "src": "6301:2:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OfferDetailStruct_$10530_memory_ptr",
                                  "typeString": "struct OfferDetailStruct memory"
                                }
                              },
                              "id": 40573,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "maker",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10523,
                              "src": "6301:8:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 40578,
                                      "name": "expected_maker",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 40546,
                                      "src": "6343:14:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 40576,
                                      "name": "makers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 39692,
                                      "src": "6327:6:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                                        "typeString": "contract MakerDeployer"
                                      }
                                    },
                                    "id": 40577,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "getMaker",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 48745,
                                    "src": "6327:15:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$49499_$",
                                      "typeString": "function (uint256) view external returns (contract TestMaker)"
                                    }
                                  },
                                  "id": 40579,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6327:31:72",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestMaker_$49499",
                                    "typeString": "contract TestMaker"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestMaker_$49499",
                                    "typeString": "contract TestMaker"
                                  }
                                ],
                                "id": 40575,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6319:7:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 40574,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6319:7:72",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 40580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6319:40:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "496e636f7272656374206d616b65722061646472657373206174206f6666657220",
                                  "id": 40584,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6383:35:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_1078dbf9b56925c3760a51df4a2db52e66b5e9b61586c44ba365bdcae37fe335",
                                    "typeString": "literal_string \"Incorrect maker address at offer \""
                                  },
                                  "value": "Incorrect maker address at offer "
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 40586,
                                      "name": "offerId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 40534,
                                      "src": "6429:7:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 40585,
                                    "name": "uint2str",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 47518,
                                    "src": "6420:8:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (string memory)"
                                    }
                                  },
                                  "id": 40587,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6420:17:72",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_1078dbf9b56925c3760a51df4a2db52e66b5e9b61586c44ba365bdcae37fe335",
                                    "typeString": "literal_string \"Incorrect maker address at offer \""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 40582,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6369:6:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 40581,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6369:6:72",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 40583,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "concat",
                                "nodeType": "MemberAccess",
                                "src": "6369:13:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure returns (string memory)"
                                }
                              },
                              "id": 40588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6369:69:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 40571,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              61419, 61444, 61457, 61473, 61515, 61557, 61599,
                              61636, 61673, 61710, 59278, 59303, 59333, 59358,
                              59417, 59442, 59472, 59497, 60597, 60632
                            ],
                            "referencedDeclaration": 59303,
                            "src": "6283:8:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,string memory)"
                            }
                          },
                          "id": 40589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6283:163:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 40590,
                        "nodeType": "ExpressionStatement",
                        "src": "6283:163:72"
                      },
                      {
                        "id": 40595,
                        "nodeType": "UncheckedBlock",
                        "src": "6455:48:72",
                        "statements": [
                          {
                            "expression": {
                              "id": 40593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 40591,
                                "name": "expected_maker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40546,
                                "src": "6475:14:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "-=",
                              "rightHandSide": {
                                "hexValue": "31",
                                "id": 40592,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6493:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "6475:19:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 40594,
                            "nodeType": "ExpressionStatement",
                            "src": "6475:19:72"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "id": 40599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 40596,
                            "name": "offerId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40534,
                            "src": "6510:7:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 40597,
                              "name": "offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40556,
                              "src": "6520:5:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferStruct_$10521_memory_ptr",
                                "typeString": "struct OfferStruct memory"
                              }
                            },
                            "id": 40598,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "next",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10516,
                            "src": "6520:10:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6510:20:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 40600,
                        "nodeType": "ExpressionStatement",
                        "src": "6510:20:72"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 40551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 40549,
                      "name": "offerId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40534,
                      "src": "6141:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 40550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6152:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6141:12:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 40602,
                  "nodeType": "WhileStatement",
                  "src": "6134:403:72"
                },
                {
                  "expression": {
                    "id": 40603,
                    "name": "_offerOf",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40376,
                    "src": "6549:8:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 40371,
                  "id": 40604,
                  "nodeType": "Return",
                  "src": "6542:15:72"
                }
              ]
            },
            "functionSelector": "25f7b1de",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "insert",
            "nameLocation": "4711:6:72",
            "parameters": {
              "id": 40367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4717:2:72"
            },
            "returnParameters": {
              "id": 40371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40370,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40606,
                  "src": "4736:13:72",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 40368,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "4736:4:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 40369,
                    "nodeType": "ArrayTypeName",
                    "src": "4736:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4735:15:72"
            },
            "scope": 41128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 40885,
            "nodeType": "FunctionDefinition",
            "src": "6566:2234:72",
            "body": {
              "id": 40884,
              "nodeType": "Block",
              "src": "6589:2211:72",
              "statements": [
                {
                  "assignments": [40610],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40610,
                      "mutability": "mutable",
                      "name": "takerWants",
                      "nameLocation": "6600:10:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 40884,
                      "src": "6595:15:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 40609,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6595:4:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40612,
                  "initialValue": {
                    "hexValue": "312e36",
                    "id": 40611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6613:9:72",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1600000000000000000_by_1",
                      "typeString": "int_const 1600000000000000000"
                    },
                    "value": "1.6"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6595:27:72"
                },
                {
                  "assignments": [40614],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40614,
                      "mutability": "mutable",
                      "name": "takerGives",
                      "nameLocation": "6647:10:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 40884,
                      "src": "6642:15:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 40613,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6642:4:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40616,
                  "initialValue": {
                    "hexValue": "32",
                    "id": 40615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6660:7:72",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2000000000000000000_by_1",
                      "typeString": "int_const 2000000000000000000"
                    },
                    "value": "2"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6642:25:72"
                },
                {
                  "assignments": [40618, 40620],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40618,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "6694:8:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 40884,
                      "src": "6689:13:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 40617,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6689:4:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 40620,
                      "mutability": "mutable",
                      "name": "takerGave",
                      "nameLocation": "6709:9:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 40884,
                      "src": "6704:14:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 40619,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6704:4:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40626,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 40623,
                        "name": "takerWants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40610,
                        "src": "6740:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 40624,
                        "name": "takerGives",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40614,
                        "src": "6752:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 40621,
                        "name": "taker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39689,
                        "src": "6722:5:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$50091",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 40622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50033,
                      "src": "6722:17:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (uint256,uint256)"
                      }
                    },
                    "id": 40625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6722:41:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6688:75:72"
                },
                {
                  "body": {
                    "id": 40701,
                    "nodeType": "Block",
                    "src": "6831:479:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 40644,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 40628,
                                          "src": "6943:1:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 40642,
                                          "name": "makers",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 39692,
                                          "src": "6927:6:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                                            "typeString": "contract MakerDeployer"
                                          }
                                        },
                                        "id": 40643,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getMaker",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 48745,
                                        "src": "6927:15:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$49499_$",
                                          "typeString": "function (uint256) view external returns (contract TestMaker)"
                                        }
                                      },
                                      "id": 40645,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6927:18:72",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestMaker_$49499",
                                        "typeString": "contract TestMaker"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestMaker_$49499",
                                        "typeString": "contract TestMaker"
                                      }
                                    ],
                                    "id": 40641,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6919:7:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 40640,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6919:7:72",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 40646,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6919:27:72",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 40638,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45878,
                                  "src": "6904:4:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                },
                                "id": 40639,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 50187,
                                "src": "6904:14:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 40647,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6904:43:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 40658,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 40648,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 39695,
                                    "src": "6957:8:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Balances_$46375_storage",
                                      "typeString": "struct MangroveTest.Balances storage ref"
                                    }
                                  },
                                  "id": 40649,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "makersBalanceA",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46368,
                                  "src": "6957:23:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                    "typeString": "uint256[] storage ref"
                                  }
                                },
                                "id": 40651,
                                "indexExpression": {
                                  "id": 40650,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40628,
                                  "src": "6981:1:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6957:26:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 40652,
                                    "name": "offers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 39708,
                                    "src": "6986:6:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$46382_$_t_uint256_$_$",
                                      "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                    }
                                  },
                                  "id": 40654,
                                  "indexExpression": {
                                    "id": 40653,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 40628,
                                    "src": "6993:1:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6986:9:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_enum$_Info_$46382_$_t_uint256_$",
                                    "typeString": "mapping(enum MangroveTest.Info => uint256)"
                                  }
                                },
                                "id": 40657,
                                "indexExpression": {
                                  "expression": {
                                    "id": 40655,
                                    "name": "Info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46382,
                                    "src": "6996:4:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Info_$46382_$",
                                      "typeString": "type(enum MangroveTest.Info)"
                                    }
                                  },
                                  "id": 40656,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "makerGives",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46377,
                                  "src": "6996:15:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Info_$46382",
                                    "typeString": "enum MangroveTest.Info"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6986:26:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6957:55:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "496e636f727265637420412062616c616e636520666f72206d616b657220",
                                  "id": 40662,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7036:32:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_44ae4cbe4e62f2f73c321db199c55a99fa253b9dc01e388e0dcdd3046cbf8019",
                                    "typeString": "literal_string \"Incorrect A balance for maker \""
                                  },
                                  "value": "Incorrect A balance for maker "
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 40664,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 40628,
                                      "src": "7079:1:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 40663,
                                    "name": "uint2str",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 47518,
                                    "src": "7070:8:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (string memory)"
                                    }
                                  },
                                  "id": 40665,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7070:11:72",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_44ae4cbe4e62f2f73c321db199c55a99fa253b9dc01e388e0dcdd3046cbf8019",
                                    "typeString": "literal_string \"Incorrect A balance for maker \""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 40660,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7022:6:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 40659,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7022:6:72",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 40661,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "concat",
                                "nodeType": "MemberAccess",
                                "src": "7022:13:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure returns (string memory)"
                                }
                              },
                              "id": 40666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7022:60:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 40637,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              61419, 61444, 61457, 61473, 61515, 61557, 61599,
                              61636, 61673, 61710, 59278, 59303, 59333, 59358,
                              59417, 59442, 59472, 59497, 60597, 60632
                            ],
                            "referencedDeclaration": 59497,
                            "src": "6886:8:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 40667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6886:204:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 40668,
                        "nodeType": "ExpressionStatement",
                        "src": "6886:204:72"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 40676,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 40628,
                                          "src": "7156:1:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 40674,
                                          "name": "makers",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 39692,
                                          "src": "7140:6:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                                            "typeString": "contract MakerDeployer"
                                          }
                                        },
                                        "id": 40675,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "getMaker",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 48745,
                                        "src": "7140:15:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$49499_$",
                                          "typeString": "function (uint256) view external returns (contract TestMaker)"
                                        }
                                      },
                                      "id": 40677,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7140:18:72",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestMaker_$49499",
                                        "typeString": "contract TestMaker"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestMaker_$49499",
                                        "typeString": "contract TestMaker"
                                      }
                                    ],
                                    "id": 40673,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7132:7:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 40672,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7132:7:72",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 40678,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7132:27:72",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 40670,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45881,
                                  "src": "7116:5:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                },
                                "id": 40671,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 50187,
                                "src": "7116:15:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 40679,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7116:44:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 40690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 40680,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 39695,
                                    "src": "7170:8:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Balances_$46375_storage",
                                      "typeString": "struct MangroveTest.Balances storage ref"
                                    }
                                  },
                                  "id": 40681,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "makersBalanceB",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46371,
                                  "src": "7170:23:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                    "typeString": "uint256[] storage ref"
                                  }
                                },
                                "id": 40683,
                                "indexExpression": {
                                  "id": 40682,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40628,
                                  "src": "7194:1:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7170:26:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 40684,
                                    "name": "offers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 39708,
                                    "src": "7199:6:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$46382_$_t_uint256_$_$",
                                      "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                    }
                                  },
                                  "id": 40686,
                                  "indexExpression": {
                                    "id": 40685,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 40628,
                                    "src": "7206:1:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7199:9:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_enum$_Info_$46382_$_t_uint256_$",
                                    "typeString": "mapping(enum MangroveTest.Info => uint256)"
                                  }
                                },
                                "id": 40689,
                                "indexExpression": {
                                  "expression": {
                                    "id": 40687,
                                    "name": "Info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46382,
                                    "src": "7209:4:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Info_$46382_$",
                                      "typeString": "type(enum MangroveTest.Info)"
                                    }
                                  },
                                  "id": 40688,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "makerWants",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46376,
                                  "src": "7209:15:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Info_$46382",
                                    "typeString": "enum MangroveTest.Info"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7199:26:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7170:55:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "496e636f727265637420422062616c616e636520666f72206d616b657220",
                                  "id": 40694,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7249:32:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_98205ed21505c0e42ede344dd5860176344595a30b45779dfe0fedd2b57780fd",
                                    "typeString": "literal_string \"Incorrect B balance for maker \""
                                  },
                                  "value": "Incorrect B balance for maker "
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 40696,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 40628,
                                      "src": "7292:1:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 40695,
                                    "name": "uint2str",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 47518,
                                    "src": "7283:8:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (string memory)"
                                    }
                                  },
                                  "id": 40697,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7283:11:72",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_98205ed21505c0e42ede344dd5860176344595a30b45779dfe0fedd2b57780fd",
                                    "typeString": "literal_string \"Incorrect B balance for maker \""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 40692,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7235:6:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 40691,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7235:6:72",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 40693,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "concat",
                                "nodeType": "MemberAccess",
                                "src": "7235:13:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure returns (string memory)"
                                }
                              },
                              "id": 40698,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7235:60:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 40669,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              61419, 61444, 61457, 61473, 61515, 61557, 61599,
                              61636, 61673, 61710, 59278, 59303, 59333, 59358,
                              59417, 59442, 59472, 59497, 60597, 60632
                            ],
                            "referencedDeclaration": 59497,
                            "src": "7098:8:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 40699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7098:205:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 40700,
                        "nodeType": "ExpressionStatement",
                        "src": "7098:205:72"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 40633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 40631,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40628,
                      "src": "6819:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "34",
                      "id": 40632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6823:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "src": "6819:5:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 40702,
                  "initializationExpression": {
                    "assignments": [40628],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 40628,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6812:1:72",
                        "nodeType": "VariableDeclaration",
                        "scope": 40702,
                        "src": "6807:6:72",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 40627,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6807:4:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 40630,
                    "initialValue": {
                      "hexValue": "32",
                      "id": 40629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6816:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6807:10:72"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 40635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6826:3:72",
                      "subExpression": {
                        "id": 40634,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40628,
                        "src": "6826:1:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 40636,
                    "nodeType": "ExpressionStatement",
                    "src": "6826:3:72"
                  },
                  "nodeType": "ForStatement",
                  "src": "6802:508:72"
                },
                {
                  "assignments": [40704],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40704,
                      "mutability": "mutable",
                      "name": "leftMkrWants",
                      "nameLocation": "7320:12:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 40884,
                      "src": "7315:17:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 40703,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7315:4:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40705,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7315:17:72"
                },
                {
                  "id": 40764,
                  "nodeType": "Block",
                  "src": "7338:397:72",
                  "statements": [
                    {
                      "assignments": [40707],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 40707,
                          "mutability": "mutable",
                          "name": "leftTkrWants",
                          "nameLocation": "7351:12:72",
                          "nodeType": "VariableDeclaration",
                          "scope": 40764,
                          "src": "7346:17:72",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 40706,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "7346:4:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 40724,
                      "initialValue": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 40723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 40708,
                          "name": "takerWants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40610,
                          "src": "7366:10:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 40721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 40709,
                                    "name": "offers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 39708,
                                    "src": "7388:6:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$46382_$_t_uint256_$_$",
                                      "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                    }
                                  },
                                  "id": 40711,
                                  "indexExpression": {
                                    "hexValue": "32",
                                    "id": 40710,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7395:1:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7388:9:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_enum$_Info_$46382_$_t_uint256_$",
                                    "typeString": "mapping(enum MangroveTest.Info => uint256)"
                                  }
                                },
                                "id": 40714,
                                "indexExpression": {
                                  "expression": {
                                    "id": 40712,
                                    "name": "Info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46382,
                                    "src": "7398:4:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Info_$46382_$",
                                      "typeString": "type(enum MangroveTest.Info)"
                                    }
                                  },
                                  "id": 40713,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "makerGives",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46377,
                                  "src": "7398:15:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Info_$46382",
                                    "typeString": "enum MangroveTest.Info"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7388:26:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 40715,
                                    "name": "offers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 39708,
                                    "src": "7417:6:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$46382_$_t_uint256_$_$",
                                      "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                    }
                                  },
                                  "id": 40717,
                                  "indexExpression": {
                                    "hexValue": "33",
                                    "id": 40716,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7424:1:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    "value": "3"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7417:9:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_enum$_Info_$46382_$_t_uint256_$",
                                    "typeString": "mapping(enum MangroveTest.Info => uint256)"
                                  }
                                },
                                "id": 40720,
                                "indexExpression": {
                                  "expression": {
                                    "id": 40718,
                                    "name": "Info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46382,
                                    "src": "7427:4:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Info_$46382_$",
                                      "typeString": "type(enum MangroveTest.Info)"
                                    }
                                  },
                                  "id": 40719,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "makerGives",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46377,
                                  "src": "7427:15:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Info_$46382",
                                    "typeString": "enum MangroveTest.Info"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7417:26:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7388:55:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 40722,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7387:57:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7366:78:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "7346:98:72"
                    },
                    {
                      "expression": {
                        "id": 40742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 40725,
                          "name": "leftMkrWants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40704,
                          "src": "7453:12:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 40741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 40733,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 40726,
                                      "name": "offers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 39708,
                                      "src": "7477:6:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$46382_$_t_uint256_$_$",
                                        "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                      }
                                    },
                                    "id": 40728,
                                    "indexExpression": {
                                      "hexValue": "31",
                                      "id": 40727,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7484:1:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7477:9:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_enum$_Info_$46382_$_t_uint256_$",
                                      "typeString": "mapping(enum MangroveTest.Info => uint256)"
                                    }
                                  },
                                  "id": 40731,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 40729,
                                      "name": "Info",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46382,
                                      "src": "7487:4:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Info_$46382_$",
                                        "typeString": "type(enum MangroveTest.Info)"
                                      }
                                    },
                                    "id": 40730,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "makerWants",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 46376,
                                    "src": "7487:15:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Info_$46382",
                                      "typeString": "enum MangroveTest.Info"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7477:26:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 40732,
                                  "name": "leftTkrWants",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40707,
                                  "src": "7506:12:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7477:41:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 40734,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7476:43:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 40735,
                                "name": "offers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39708,
                                "src": "7530:6:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$46382_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                }
                              },
                              "id": 40737,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 40736,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7537:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7530:9:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Info_$46382_$_t_uint256_$",
                                "typeString": "mapping(enum MangroveTest.Info => uint256)"
                              }
                            },
                            "id": 40740,
                            "indexExpression": {
                              "expression": {
                                "id": 40738,
                                "name": "Info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46382,
                                "src": "7540:4:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Info_$46382_$",
                                  "typeString": "type(enum MangroveTest.Info)"
                                }
                              },
                              "id": 40739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "makerGives",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46377,
                              "src": "7540:15:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Info_$46382",
                                "typeString": "enum MangroveTest.Info"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7530:26:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7476:80:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7453:103:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 40743,
                      "nodeType": "ExpressionStatement",
                      "src": "7453:103:72"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "31",
                                        "id": 40751,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7622:1:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        }
                                      ],
                                      "expression": {
                                        "id": 40749,
                                        "name": "makers",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 39692,
                                        "src": "7606:6:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                                          "typeString": "contract MakerDeployer"
                                        }
                                      },
                                      "id": 40750,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "getMaker",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 48745,
                                      "src": "7606:15:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$49499_$",
                                        "typeString": "function (uint256) view external returns (contract TestMaker)"
                                      }
                                    },
                                    "id": 40752,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7606:18:72",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestMaker_$49499",
                                      "typeString": "contract TestMaker"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestMaker_$49499",
                                      "typeString": "contract TestMaker"
                                    }
                                  ],
                                  "id": 40748,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7598:7:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 40747,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7598:7:72",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 40753,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7598:27:72",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 40745,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45878,
                                "src": "7583:4:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              },
                              "id": 40746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50187,
                              "src": "7583:14:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 40754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7583:43:72",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 40760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 40755,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 39695,
                                  "src": "7636:8:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Balances_$46375_storage",
                                    "typeString": "struct MangroveTest.Balances storage ref"
                                  }
                                },
                                "id": 40756,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "makersBalanceA",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 46368,
                                "src": "7636:23:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 40758,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 40757,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7660:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7636:26:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 40759,
                              "name": "leftTkrWants",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40707,
                              "src": "7665:12:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7636:41:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "496e636f727265637420412062616c616e636520666f72206d616b65722031",
                            "id": 40761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7687:33:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_8cff1a4633f9f0254b2fd5fa4690a1962ef3d953e9ed7f8b6668dcf7e99b5444",
                              "typeString": "literal_string \"Incorrect A balance for maker 1\""
                            },
                            "value": "Incorrect A balance for maker 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_8cff1a4633f9f0254b2fd5fa4690a1962ef3d953e9ed7f8b6668dcf7e99b5444",
                              "typeString": "literal_string \"Incorrect A balance for maker 1\""
                            }
                          ],
                          "id": 40744,
                          "name": "assertEq",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            61419, 61444, 61457, 61473, 61515, 61557, 61599,
                            61636, 61673, 61710, 59278, 59303, 59333, 59358,
                            59417, 59442, 59472, 59497, 60597, 60632
                          ],
                          "referencedDeclaration": 59497,
                          "src": "7565:8:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (uint256,uint256,string memory)"
                          }
                        },
                        "id": 40762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7565:163:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 40763,
                      "nodeType": "ExpressionStatement",
                      "src": "7565:163:72"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 40772,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7797:1:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "expression": {
                                    "id": 40770,
                                    "name": "makers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 39692,
                                    "src": "7781:6:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                                      "typeString": "contract MakerDeployer"
                                    }
                                  },
                                  "id": 40771,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getMaker",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 48745,
                                  "src": "7781:15:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$49499_$",
                                    "typeString": "function (uint256) view external returns (contract TestMaker)"
                                  }
                                },
                                "id": 40773,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7781:18:72",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestMaker_$49499",
                                  "typeString": "contract TestMaker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestMaker_$49499",
                                  "typeString": "contract TestMaker"
                                }
                              ],
                              "id": 40769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7773:7:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 40768,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7773:7:72",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 40774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7773:27:72",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 40766,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "7757:5:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 40767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50187,
                          "src": "7757:15:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 40775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7757:44:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 40781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 40776,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39695,
                              "src": "7809:8:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Balances_$46375_storage",
                                "typeString": "struct MangroveTest.Balances storage ref"
                              }
                            },
                            "id": 40777,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "makersBalanceB",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46371,
                            "src": "7809:23:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 40779,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 40778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7833:1:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7809:26:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 40780,
                          "name": "leftMkrWants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40704,
                          "src": "7838:12:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7809:41:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f727265637420422062616c616e636520666f72206d616b65722031",
                        "id": 40782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7858:33:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_235f0e0e0872a21da2d3c27ce7b1df09d914383c6c84fdd0d41dac9c3f42887d",
                          "typeString": "literal_string \"Incorrect B balance for maker 1\""
                        },
                        "value": "Incorrect B balance for maker 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_235f0e0e0872a21da2d3c27ce7b1df09d914383c6c84fdd0d41dac9c3f42887d",
                          "typeString": "literal_string \"Incorrect B balance for maker 1\""
                        }
                      ],
                      "id": 40765,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "7741:8:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 40783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7741:156:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40784,
                  "nodeType": "ExpressionStatement",
                  "src": "7741:156:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 40790,
                                "name": "taker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39689,
                                "src": "7973:5:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestTaker_$50091",
                                  "typeString": "contract TestTaker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestTaker_$50091",
                                  "typeString": "contract TestTaker"
                                }
                              ],
                              "id": 40789,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7965:7:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 40788,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7965:7:72",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 40791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7965:14:72",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 40786,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "7950:4:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 40787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50187,
                          "src": "7950:14:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 40792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7950:30:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 40804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 40793,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39695,
                            "src": "7998:8:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Balances_$46375_storage",
                              "typeString": "struct MangroveTest.Balances storage ref"
                            }
                          },
                          "id": 40794,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "takerBalanceA",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46361,
                          "src": "7998:22:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 40797,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45878,
                                  "src": "8034:4:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 40796,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "8032:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 40798,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8032:7:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 40800,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45881,
                                  "src": "8043:5:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 40799,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "8041:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 40801,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8041:8:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 40802,
                              "name": "takerWants",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40610,
                              "src": "8051:10:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 40795,
                            "name": "minusFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46470,
                            "src": "8023:8:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 40803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8023:39:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7998:64:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "696e636f72726563742074616b657220412062616c616e6365",
                        "id": 40805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8082:27:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5c569c41b5fe27249b124191fbf4638883199ec2dc4ccd37fcb4adb33cd9768a",
                          "typeString": "literal_string \"incorrect taker A balance\""
                        },
                        "value": "incorrect taker A balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5c569c41b5fe27249b124191fbf4638883199ec2dc4ccd37fcb4adb33cd9768a",
                          "typeString": "literal_string \"incorrect taker A balance\""
                        }
                      ],
                      "id": 40785,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "7934:8:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 40806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7934:181:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40807,
                  "nodeType": "ExpressionStatement",
                  "src": "7934:181:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40809,
                        "name": "takerGot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40618,
                        "src": "8138:8:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 40812,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45878,
                                "src": "8165:4:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 40811,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "8163:1:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 40813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8163:7:72",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 40815,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45881,
                                "src": "8174:5:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 40814,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "8172:1:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 40816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8172:8:72",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 40817,
                            "name": "takerWants",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40610,
                            "src": "8182:10:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 40810,
                          "name": "minusFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46470,
                          "src": "8154:8:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256) view returns (uint256)"
                          }
                        },
                        "id": 40818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8154:39:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c617265642074616b6572476f74",
                        "id": 40819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8201:29:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f68c2ba2186afef81ab40a004659c59e2396aa7cbcb23984026d7e64e999e2d",
                          "typeString": "literal_string \"Incorrect declared takerGot\""
                        },
                        "value": "Incorrect declared takerGot"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0f68c2ba2186afef81ab40a004659c59e2396aa7cbcb23984026d7e64e999e2d",
                          "typeString": "literal_string \"Incorrect declared takerGot\""
                        }
                      ],
                      "id": 40808,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "8122:8:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 40820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8122:114:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40821,
                  "nodeType": "ExpressionStatement",
                  "src": "8122:114:72"
                },
                {
                  "assignments": [40823],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40823,
                      "mutability": "mutable",
                      "name": "shouldGive",
                      "nameLocation": "8248:10:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 40884,
                      "src": "8243:15:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 40822,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8243:4:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40840,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 40838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 40836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 40824,
                                "name": "offers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39708,
                                "src": "8262:6:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$46382_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                }
                              },
                              "id": 40826,
                              "indexExpression": {
                                "hexValue": "33",
                                "id": 40825,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8269:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8262:9:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Info_$46382_$_t_uint256_$",
                                "typeString": "mapping(enum MangroveTest.Info => uint256)"
                              }
                            },
                            "id": 40829,
                            "indexExpression": {
                              "expression": {
                                "id": 40827,
                                "name": "Info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46382,
                                "src": "8272:4:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Info_$46382_$",
                                  "typeString": "type(enum MangroveTest.Info)"
                                }
                              },
                              "id": 40828,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "makerWants",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46376,
                              "src": "8272:15:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Info_$46382",
                                "typeString": "enum MangroveTest.Info"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8262:26:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 40830,
                                "name": "offers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39708,
                                "src": "8297:6:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$46382_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                }
                              },
                              "id": 40832,
                              "indexExpression": {
                                "hexValue": "32",
                                "id": 40831,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8304:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8297:9:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Info_$46382_$_t_uint256_$",
                                "typeString": "mapping(enum MangroveTest.Info => uint256)"
                              }
                            },
                            "id": 40835,
                            "indexExpression": {
                              "expression": {
                                "id": 40833,
                                "name": "Info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46382,
                                "src": "8307:4:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Info_$46382_$",
                                  "typeString": "type(enum MangroveTest.Info)"
                                }
                              },
                              "id": 40834,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "makerWants",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46376,
                              "src": "8307:15:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Info_$46382",
                                "typeString": "enum MangroveTest.Info"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8297:26:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8262:61:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 40837,
                          "name": "leftMkrWants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40704,
                          "src": "8332:12:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8262:82:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 40839,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8261:84:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8243:102:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 40846,
                                "name": "taker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39689,
                                "src": "8391:5:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestTaker_$50091",
                                  "typeString": "contract TestTaker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestTaker_$50091",
                                  "typeString": "contract TestTaker"
                                }
                              ],
                              "id": 40845,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8383:7:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 40844,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8383:7:72",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 40847,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8383:14:72",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 40842,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "8367:5:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 40843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50187,
                          "src": "8367:15:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 40848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8367:31:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 40852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 40849,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39695,
                            "src": "8416:8:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Balances_$46375_storage",
                              "typeString": "struct MangroveTest.Balances storage ref"
                            }
                          },
                          "id": 40850,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "takerBalanceB",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46363,
                          "src": "8416:22:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 40851,
                          "name": "shouldGive",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40823,
                          "src": "8441:10:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8416:35:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "696e636f72726563742074616b657220422062616c616e6365",
                        "id": 40853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8471:27:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e8a3f68e11186b36c1f4a509a0143a7d6d50db10bc8af0782b7d557f0652c87f",
                          "typeString": "literal_string \"incorrect taker B balance\""
                        },
                        "value": "incorrect taker B balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e8a3f68e11186b36c1f4a509a0143a7d6d50db10bc8af0782b7d557f0652c87f",
                          "typeString": "literal_string \"incorrect taker B balance\""
                        }
                      ],
                      "id": 40841,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "8351:8:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 40854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8351:153:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40855,
                  "nodeType": "ExpressionStatement",
                  "src": "8351:153:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40857,
                        "name": "takerGave",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40620,
                        "src": "8520:9:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 40858,
                        "name": "shouldGive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40823,
                        "src": "8531:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374206465636c617265642074616b657247617665",
                        "id": 40859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8543:30:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3d66e7962fa2429dd024e289e57f534fed1835305a3daf43e8498e67d41b9bc5",
                          "typeString": "literal_string \"Incorrect declared takerGave\""
                        },
                        "value": "Incorrect declared takerGave"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3d66e7962fa2429dd024e289e57f534fed1835305a3daf43e8498e67d41b9bc5",
                          "typeString": "literal_string \"Incorrect declared takerGave\""
                        }
                      ],
                      "id": 40856,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "8511:8:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 40860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8511:63:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40861,
                  "nodeType": "ExpressionStatement",
                  "src": "8511:63:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 40865,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45875,
                                "src": "8644:3:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                  "typeString": "contract AbstractMangrove"
                                }
                              },
                              "id": 40866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "governance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 918,
                              "src": "8644:14:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 40867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8644:16:72",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 40863,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "8629:4:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 40864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50187,
                          "src": "8629:14:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 40868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8629:32:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 40880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 40869,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39695,
                            "src": "8678:8:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Balances_$46375_storage",
                              "typeString": "struct MangroveTest.Balances storage ref"
                            }
                          },
                          "id": 40870,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mgvBalanceFees",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46359,
                          "src": "8678:23:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 40873,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45878,
                                  "src": "8713:4:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 40872,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "8711:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 40874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8711:7:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 40876,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45881,
                                  "src": "8722:5:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 40875,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "8720:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 40877,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8720:8:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 40878,
                              "name": "takerWants",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40610,
                              "src": "8730:10:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 40871,
                            "name": "getFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46434,
                            "src": "8704:6:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 40879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8704:37:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8678:63:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "696e636f7272656374204d616e67726f76652062616c616e636573",
                        "id": 40881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8760:29:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a87256afa19bd14c9782e82b28c86949f236f4fc2b86e5ed43b5c54d891e90bd",
                          "typeString": "literal_string \"incorrect Mangrove balances\""
                        },
                        "value": "incorrect Mangrove balances"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a87256afa19bd14c9782e82b28c86949f236f4fc2b86e5ed43b5c54d891e90bd",
                          "typeString": "literal_string \"incorrect Mangrove balances\""
                        }
                      ],
                      "id": 40862,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "8613:8:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 40882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8613:182:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40883,
                  "nodeType": "ExpressionStatement",
                  "src": "8613:182:72"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mo",
            "nameLocation": "6575:2:72",
            "parameters": {
              "id": 40607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6577:2:72"
            },
            "returnParameters": {
              "id": 40608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6589:0:72"
            },
            "scope": 41128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 40892,
            "nodeType": "StructDefinition",
            "src": "8804:79:72",
            "canonicalName": "ScenariiTest.Bag",
            "members": [
              {
                "constant": false,
                "id": 40887,
                "mutability": "mutable",
                "name": "orderAmount",
                "nameLocation": "8826:11:72",
                "nodeType": "VariableDeclaration",
                "scope": 40892,
                "src": "8821:16:72",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40886,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "8821:4:72",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40889,
                "mutability": "mutable",
                "name": "snipedId",
                "nameLocation": "8848:8:72",
                "nodeType": "VariableDeclaration",
                "scope": 40892,
                "src": "8843:13:72",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40888,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "8843:4:72",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40891,
                "mutability": "mutable",
                "name": "expectedFee",
                "nameLocation": "8867:11:72",
                "nodeType": "VariableDeclaration",
                "scope": 40892,
                "src": "8862:16:72",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40890,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "8862:4:72",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Bag",
            "nameLocation": "8811:3:72",
            "scope": 41128,
            "visibility": "public"
          },
          {
            "id": 41127,
            "nodeType": "FunctionDefinition",
            "src": "8887:2184:72",
            "body": {
              "id": 41126,
              "nodeType": "Block",
              "src": "9005:2066:72",
              "statements": [
                {
                  "assignments": [40903],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40903,
                      "mutability": "mutable",
                      "name": "bag",
                      "nameLocation": "9022:3:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 41126,
                      "src": "9011:14:72",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bag_$40892_memory_ptr",
                        "typeString": "struct ScenariiTest.Bag"
                      },
                      "typeName": {
                        "id": 40902,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 40901,
                          "name": "Bag",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 40892,
                          "src": "9011:3:72"
                        },
                        "referencedDeclaration": 40892,
                        "src": "9011:3:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bag_$40892_storage_ptr",
                          "typeString": "struct ScenariiTest.Bag"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40904,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9011:14:72"
                },
                {
                  "expression": {
                    "id": 40909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 40905,
                        "name": "bag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40903,
                        "src": "9031:3:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bag_$40892_memory_ptr",
                          "typeString": "struct ScenariiTest.Bag memory"
                        }
                      },
                      "id": 40907,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "orderAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40887,
                      "src": "9031:15:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "302e33",
                      "id": 40908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9049:9:72",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_300000000000000000_by_1",
                        "typeString": "int_const 300000000000000000"
                      },
                      "value": "0.3"
                    },
                    "src": "9031:27:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40910,
                  "nodeType": "ExpressionStatement",
                  "src": "9031:27:72"
                },
                {
                  "expression": {
                    "id": 40915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 40911,
                        "name": "bag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40903,
                        "src": "9064:3:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bag_$40892_memory_ptr",
                          "typeString": "struct ScenariiTest.Bag memory"
                        }
                      },
                      "id": 40913,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "snipedId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40889,
                      "src": "9064:12:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 40914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9079:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "9064:16:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40916,
                  "nodeType": "ExpressionStatement",
                  "src": "9064:16:72"
                },
                {
                  "expression": {
                    "id": 40928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40917,
                      "name": "expectedFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40899,
                      "src": "9149:11:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 40920,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45878,
                              "src": "9172:4:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 40919,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "9170:1:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 40921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9170:7:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 40923,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45881,
                              "src": "9181:5:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 40922,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "9179:1:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 40924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9179:8:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "expression": {
                            "id": 40925,
                            "name": "bag",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40903,
                            "src": "9189:3:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Bag_$40892_memory_ptr",
                              "typeString": "struct ScenariiTest.Bag memory"
                            }
                          },
                          "id": 40926,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "orderAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40887,
                          "src": "9189:15:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 40918,
                        "name": "getFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46434,
                        "src": "9163:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,address,uint256) view returns (uint256)"
                        }
                      },
                      "id": 40927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9163:42:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9149:56:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40929,
                  "nodeType": "ExpressionStatement",
                  "src": "9149:56:72"
                },
                {
                  "assignments": [40932],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40932,
                      "mutability": "mutable",
                      "name": "maker",
                      "nameLocation": "9221:5:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 41126,
                      "src": "9211:15:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$49499",
                        "typeString": "contract TestMaker"
                      },
                      "typeName": {
                        "id": 40931,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 40930,
                          "name": "TestMaker",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 49499,
                          "src": "9211:9:72"
                        },
                        "referencedDeclaration": 49499,
                        "src": "9211:9:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40938,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 40935,
                          "name": "bag",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40903,
                          "src": "9245:3:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bag_$40892_memory_ptr",
                            "typeString": "struct ScenariiTest.Bag memory"
                          }
                        },
                        "id": 40936,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "snipedId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40889,
                        "src": "9245:12:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 40933,
                        "name": "makers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39692,
                        "src": "9229:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MakerDeployer_$48825",
                          "typeString": "contract MakerDeployer"
                        }
                      },
                      "id": 40934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getMaker",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48745,
                      "src": "9229:15:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_TestMaker_$49499_$",
                        "typeString": "function (uint256) view external returns (contract TestMaker)"
                      }
                    },
                    "id": 40937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9229:29:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestMaker_$49499",
                      "typeString": "contract TestMaker"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9211:47:72"
                },
                {
                  "id": 40960,
                  "nodeType": "Block",
                  "src": "9423:214:72",
                  "statements": [
                    {
                      "assignments": [40940],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 40940,
                          "mutability": "mutable",
                          "name": "takeSuccess",
                          "nameLocation": "9436:11:72",
                          "nodeType": "VariableDeclaration",
                          "scope": 40960,
                          "src": "9431:16:72",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 40939,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "9431:4:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 40941,
                      "nodeType": "VariableDeclarationStatement",
                      "src": "9431:16:72"
                    },
                    {
                      "expression": {
                        "id": 40953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "components": [
                            {
                              "id": 40942,
                              "name": "takeSuccess",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40940,
                              "src": "9456:11:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 40943,
                              "name": "takerGot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40895,
                              "src": "9469:8:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 40944,
                              "name": "takerGave",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40897,
                              "src": "9479:9:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            null,
                            null
                          ],
                          "id": 40945,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "TupleExpression",
                          "src": "9455:38:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$__$__$",
                            "typeString": "tuple(bool,uint256,uint256,,)"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 40948,
                                "name": "bag",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40903,
                                "src": "9524:3:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Bag_$40892_memory_ptr",
                                  "typeString": "struct ScenariiTest.Bag memory"
                                }
                              },
                              "id": 40949,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "snipedId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40889,
                              "src": "9524:12:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 40950,
                                "name": "bag",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40903,
                                "src": "9546:3:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Bag_$40892_memory_ptr",
                                  "typeString": "struct ScenariiTest.Bag memory"
                                }
                              },
                              "id": 40951,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "orderAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40887,
                              "src": "9546:15:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 40946,
                              "name": "taker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39689,
                              "src": "9496:5:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestTaker_$50091",
                                "typeString": "contract TestTaker"
                              }
                            },
                            "id": 40947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "takeWithInfo",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49945,
                            "src": "9496:18:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                              "typeString": "function (uint256,uint256) external returns (bool,uint256,uint256,uint256,uint256)"
                            }
                          },
                          "id": 40952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9496:73:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(bool,uint256,uint256,uint256,uint256)"
                          }
                        },
                        "src": "9455:114:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 40954,
                      "nodeType": "ExpressionStatement",
                      "src": "9455:114:72"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 40956,
                            "name": "takeSuccess",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40940,
                            "src": "9589:11:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "736e6970652073686f756c6420626520612073756363657373",
                            "id": 40957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9602:27:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_26a19faa10754c4ac40a87b70305c2cde6cceb5214c5ebab61c3b0338263a61f",
                              "typeString": "literal_string \"snipe should be a success\""
                            },
                            "value": "snipe should be a success"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_26a19faa10754c4ac40a87b70305c2cde6cceb5214c5ebab61c3b0338263a61f",
                              "typeString": "literal_string \"snipe should be a success\""
                            }
                          ],
                          "id": 40955,
                          "name": "assertTrue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [59227, 59248],
                          "referencedDeclaration": 59248,
                          "src": "9578:10:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory)"
                          }
                        },
                        "id": 40958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9578:52:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 40959,
                      "nodeType": "ExpressionStatement",
                      "src": "9578:52:72"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 40964,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45875,
                                "src": "9673:3:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                  "typeString": "contract AbstractMangrove"
                                }
                              },
                              "id": 40965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "governance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 918,
                              "src": "9673:14:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 40966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9673:16:72",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 40962,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "9658:4:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 40963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50187,
                          "src": "9658:14:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 40967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9658:32:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 40971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 40968,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39695,
                            "src": "9707:8:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Balances_$46375_storage",
                              "typeString": "struct MangroveTest.Balances storage ref"
                            }
                          },
                          "id": 40969,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mgvBalanceFees",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46359,
                          "src": "9707:23:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 40970,
                          "name": "expectedFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40899,
                          "src": "9733:11:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9707:37:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "696e636f7272656374204d616e67726f766520412062616c616e6365",
                        "id": 40972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9764:30:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dafc0377726e37e0b8b2466d6d366024830e7928ca47acd67121d784d7df2966",
                          "typeString": "literal_string \"incorrect Mangrove A balance\""
                        },
                        "value": "incorrect Mangrove A balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dafc0377726e37e0b8b2466d6d366024830e7928ca47acd67121d784d7df2966",
                          "typeString": "literal_string \"incorrect Mangrove A balance\""
                        }
                      ],
                      "id": 40961,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "9642:8:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 40973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9642:158:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40974,
                  "nodeType": "ExpressionStatement",
                  "src": "9642:158:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 40980,
                                "name": "taker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39689,
                                "src": "9845:5:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestTaker_$50091",
                                  "typeString": "contract TestTaker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestTaker_$50091",
                                  "typeString": "contract TestTaker"
                                }
                              ],
                              "id": 40979,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9837:7:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 40978,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9837:7:72",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 40981,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9837:14:72",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 40976,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "9822:4:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 40977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50187,
                          "src": "9822:14:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 40982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9822:30:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 40989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 40987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 40983,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39695,
                              "src": "9870:8:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Balances_$46375_storage",
                                "typeString": "struct MangroveTest.Balances storage ref"
                              }
                            },
                            "id": 40984,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "takerBalanceA",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46361,
                            "src": "9870:22:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "id": 40985,
                              "name": "bag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40903,
                              "src": "9895:3:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bag_$40892_memory_ptr",
                                "typeString": "struct ScenariiTest.Bag memory"
                              }
                            },
                            "id": 40986,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "orderAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40887,
                            "src": "9895:15:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9870:40:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 40988,
                          "name": "expectedFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40899,
                          "src": "9913:11:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9870:54:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "696e636f72726563742074616b657220412062616c616e6365",
                        "id": 40990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9944:27:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5c569c41b5fe27249b124191fbf4638883199ec2dc4ccd37fcb4adb33cd9768a",
                          "typeString": "literal_string \"incorrect taker A balance\""
                        },
                        "value": "incorrect taker A balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5c569c41b5fe27249b124191fbf4638883199ec2dc4ccd37fcb4adb33cd9768a",
                          "typeString": "literal_string \"incorrect taker A balance\""
                        }
                      ],
                      "id": 40975,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "9806:8:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 40991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9806:171:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40992,
                  "nodeType": "ExpressionStatement",
                  "src": "9806:171:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40994,
                        "name": "takerGot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40895,
                        "src": "9999:8:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 40998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 40995,
                            "name": "bag",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40903,
                            "src": "10015:3:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Bag_$40892_memory_ptr",
                              "typeString": "struct ScenariiTest.Bag memory"
                            }
                          },
                          "id": 40996,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "orderAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40887,
                          "src": "10015:15:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 40997,
                          "name": "expectedFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40899,
                          "src": "10033:11:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10015:29:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "496e636f72726563742074616b6572476f74",
                        "id": 40999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10064:20:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a84bb6540eccb0b2fe8d392b105ee483bcaf767a459aa82ab8b4132ac7ae0ac",
                          "typeString": "literal_string \"Incorrect takerGot\""
                        },
                        "value": "Incorrect takerGot"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a84bb6540eccb0b2fe8d392b105ee483bcaf767a459aa82ab8b4132ac7ae0ac",
                          "typeString": "literal_string \"Incorrect takerGot\""
                        }
                      ],
                      "id": 40993,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "9983:8:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 41000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9983:107:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41001,
                  "nodeType": "ExpressionStatement",
                  "src": "9983:107:72"
                },
                {
                  "id": 41045,
                  "nodeType": "Block",
                  "src": "10096:355:72",
                  "statements": [
                    {
                      "assignments": [41003],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 41003,
                          "mutability": "mutable",
                          "name": "shouldGive",
                          "nameLocation": "10109:10:72",
                          "nodeType": "VariableDeclaration",
                          "scope": 41045,
                          "src": "10104:15:72",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 41002,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "10104:4:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 41023,
                      "initialValue": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 41022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 41013,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 41004,
                                  "name": "bag",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40903,
                                  "src": "10123:3:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Bag_$40892_memory_ptr",
                                    "typeString": "struct ScenariiTest.Bag memory"
                                  }
                                },
                                "id": 41005,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "orderAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 40887,
                                "src": "10123:15:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 41006,
                                    "name": "offers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 39708,
                                    "src": "10149:6:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$46382_$_t_uint256_$_$",
                                      "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                    }
                                  },
                                  "id": 41009,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 41007,
                                      "name": "bag",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 40903,
                                      "src": "10156:3:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Bag_$40892_memory_ptr",
                                        "typeString": "struct ScenariiTest.Bag memory"
                                      }
                                    },
                                    "id": 41008,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "snipedId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 40889,
                                    "src": "10156:12:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10149:20:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_enum$_Info_$46382_$_t_uint256_$",
                                    "typeString": "mapping(enum MangroveTest.Info => uint256)"
                                  }
                                },
                                "id": 41012,
                                "indexExpression": {
                                  "expression": {
                                    "id": 41010,
                                    "name": "Info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46382,
                                    "src": "10170:4:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Info_$46382_$",
                                      "typeString": "type(enum MangroveTest.Info)"
                                    }
                                  },
                                  "id": 41011,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "makerWants",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46376,
                                  "src": "10170:15:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Info_$46382",
                                    "typeString": "enum MangroveTest.Info"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10149:37:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10123:63:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 41014,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "10122:65:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 41015,
                              "name": "offers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39708,
                              "src": "10198:6:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$46382_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                              }
                            },
                            "id": 41018,
                            "indexExpression": {
                              "expression": {
                                "id": 41016,
                                "name": "bag",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40903,
                                "src": "10205:3:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Bag_$40892_memory_ptr",
                                  "typeString": "struct ScenariiTest.Bag memory"
                                }
                              },
                              "id": 41017,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "snipedId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40889,
                              "src": "10205:12:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10198:20:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_enum$_Info_$46382_$_t_uint256_$",
                              "typeString": "mapping(enum MangroveTest.Info => uint256)"
                            }
                          },
                          "id": 41021,
                          "indexExpression": {
                            "expression": {
                              "id": 41019,
                              "name": "Info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46382,
                              "src": "10219:4:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Info_$46382_$",
                                "typeString": "type(enum MangroveTest.Info)"
                              }
                            },
                            "id": 41020,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "makerGives",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46377,
                            "src": "10219:15:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Info_$46382",
                              "typeString": "enum MangroveTest.Info"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10198:37:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10122:113:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "10104:131:72"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 41029,
                                    "name": "taker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 39689,
                                    "src": "10285:5:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestTaker_$50091",
                                      "typeString": "contract TestTaker"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestTaker_$50091",
                                      "typeString": "contract TestTaker"
                                    }
                                  ],
                                  "id": 41028,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10277:7:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 41027,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10277:7:72",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 41030,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10277:14:72",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 41025,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45881,
                                "src": "10261:5:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              },
                              "id": 41026,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50187,
                              "src": "10261:15:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 41031,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10261:31:72",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 41035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 41032,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39695,
                                "src": "10302:8:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Balances_$46375_storage",
                                  "typeString": "struct MangroveTest.Balances storage ref"
                                }
                              },
                              "id": 41033,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "takerBalanceB",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46363,
                              "src": "10302:22:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 41034,
                              "name": "shouldGive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41003,
                              "src": "10327:10:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10302:35:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "696e636f72726563742074616b657220422062616c616e6365",
                            "id": 41036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10347:27:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_e8a3f68e11186b36c1f4a509a0143a7d6d50db10bc8af0782b7d557f0652c87f",
                              "typeString": "literal_string \"incorrect taker B balance\""
                            },
                            "value": "incorrect taker B balance"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_e8a3f68e11186b36c1f4a509a0143a7d6d50db10bc8af0782b7d557f0652c87f",
                              "typeString": "literal_string \"incorrect taker B balance\""
                            }
                          ],
                          "id": 41024,
                          "name": "assertEq",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            61419, 61444, 61457, 61473, 61515, 61557, 61599,
                            61636, 61673, 61710, 59278, 59303, 59333, 59358,
                            59417, 59442, 59472, 59497, 60597, 60632
                          ],
                          "referencedDeclaration": 59497,
                          "src": "10243:8:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (uint256,uint256,string memory)"
                          }
                        },
                        "id": 41037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10243:139:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 41038,
                      "nodeType": "ExpressionStatement",
                      "src": "10243:139:72"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 41040,
                            "name": "takerGave",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40897,
                            "src": "10399:9:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 41041,
                            "name": "shouldGive",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41003,
                            "src": "10410:10:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "496e636f72726563742074616b657247617665",
                            "id": 41042,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10422:21:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_fad10ff5558a4deffa43dc56612017ff9d61af162ea026f978381f7618325464",
                              "typeString": "literal_string \"Incorrect takerGave\""
                            },
                            "value": "Incorrect takerGave"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_fad10ff5558a4deffa43dc56612017ff9d61af162ea026f978381f7618325464",
                              "typeString": "literal_string \"Incorrect takerGave\""
                            }
                          ],
                          "id": 41039,
                          "name": "assertEq",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            61419, 61444, 61457, 61473, 61515, 61557, 61599,
                            61636, 61673, 61710, 59278, 59303, 59333, 59358,
                            59417, 59442, 59472, 59497, 60597, 60632
                          ],
                          "referencedDeclaration": 59497,
                          "src": "10390:8:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (uint256,uint256,string memory)"
                          }
                        },
                        "id": 41043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10390:54:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 41044,
                      "nodeType": "ExpressionStatement",
                      "src": "10390:54:72"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 41051,
                                "name": "maker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40932,
                                "src": "10495:5:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestMaker_$49499",
                                  "typeString": "contract TestMaker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestMaker_$49499",
                                  "typeString": "contract TestMaker"
                                }
                              ],
                              "id": 41050,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10487:7:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 41049,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10487:7:72",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 41052,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10487:14:72",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 41047,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "10472:4:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 41048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50187,
                          "src": "10472:14:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 41053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10472:30:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 41061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 41054,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39695,
                              "src": "10510:8:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Balances_$46375_storage",
                                "typeString": "struct MangroveTest.Balances storage ref"
                              }
                            },
                            "id": 41055,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "makersBalanceA",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46368,
                            "src": "10510:23:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 41058,
                          "indexExpression": {
                            "expression": {
                              "id": 41056,
                              "name": "bag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40903,
                              "src": "10534:3:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bag_$40892_memory_ptr",
                                "typeString": "struct ScenariiTest.Bag memory"
                              }
                            },
                            "id": 41057,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "snipedId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40889,
                            "src": "10534:12:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10510:37:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "id": 41059,
                            "name": "bag",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40903,
                            "src": "10550:3:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Bag_$40892_memory_ptr",
                              "typeString": "struct ScenariiTest.Bag memory"
                            }
                          },
                          "id": 41060,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "orderAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40887,
                          "src": "10550:15:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10510:55:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "696e636f7272656374206d616b657220412062616c616e6365",
                        "id": 41062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10573:27:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d3e20773acb2e3934c6c9e639b5489a7aa73d773b10aa4083dc25cac66b6cf4",
                          "typeString": "literal_string \"incorrect maker A balance\""
                        },
                        "value": "incorrect maker A balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d3e20773acb2e3934c6c9e639b5489a7aa73d773b10aa4083dc25cac66b6cf4",
                          "typeString": "literal_string \"incorrect maker A balance\""
                        }
                      ],
                      "id": 41046,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "10456:8:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 41063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10456:150:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41064,
                  "nodeType": "ExpressionStatement",
                  "src": "10456:150:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 41070,
                                "name": "maker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40932,
                                "src": "10652:5:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestMaker_$49499",
                                  "typeString": "contract TestMaker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestMaker_$49499",
                                  "typeString": "contract TestMaker"
                                }
                              ],
                              "id": 41069,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10644:7:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 41068,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10644:7:72",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 41071,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10644:14:72",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 41066,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "10628:5:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          },
                          "id": 41067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50187,
                          "src": "10628:15:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 41072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10628:31:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 41097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 41073,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39695,
                              "src": "10667:8:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Balances_$46375_storage",
                                "typeString": "struct MangroveTest.Balances storage ref"
                              }
                            },
                            "id": 41074,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "makersBalanceB",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46371,
                            "src": "10667:23:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 41077,
                          "indexExpression": {
                            "expression": {
                              "id": 41075,
                              "name": "bag",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40903,
                              "src": "10691:3:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bag_$40892_memory_ptr",
                                "typeString": "struct ScenariiTest.Bag memory"
                              }
                            },
                            "id": 41076,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "snipedId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40889,
                            "src": "10691:12:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10667:37:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 41096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 41087,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 41078,
                                    "name": "bag",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 40903,
                                    "src": "10716:3:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bag_$40892_memory_ptr",
                                      "typeString": "struct ScenariiTest.Bag memory"
                                    }
                                  },
                                  "id": 41079,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "orderAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40887,
                                  "src": "10716:15:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 41080,
                                      "name": "offers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 39708,
                                      "src": "10734:6:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$46382_$_t_uint256_$_$",
                                        "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                      }
                                    },
                                    "id": 41083,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 41081,
                                        "name": "bag",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 40903,
                                        "src": "10741:3:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Bag_$40892_memory_ptr",
                                          "typeString": "struct ScenariiTest.Bag memory"
                                        }
                                      },
                                      "id": 41082,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "snipedId",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 40889,
                                      "src": "10741:12:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10734:20:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_enum$_Info_$46382_$_t_uint256_$",
                                      "typeString": "mapping(enum MangroveTest.Info => uint256)"
                                    }
                                  },
                                  "id": 41086,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 41084,
                                      "name": "Info",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46382,
                                      "src": "10755:4:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Info_$46382_$",
                                        "typeString": "type(enum MangroveTest.Info)"
                                      }
                                    },
                                    "id": 41085,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "makerWants",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 46376,
                                    "src": "10755:15:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Info_$46382",
                                      "typeString": "enum MangroveTest.Info"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10734:37:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10716:55:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 41088,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "10715:57:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 41089,
                                "name": "offers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39708,
                                "src": "10783:6:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_enum$_Info_$46382_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(enum MangroveTest.Info => uint256))"
                                }
                              },
                              "id": 41092,
                              "indexExpression": {
                                "expression": {
                                  "id": 41090,
                                  "name": "bag",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40903,
                                  "src": "10790:3:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Bag_$40892_memory_ptr",
                                    "typeString": "struct ScenariiTest.Bag memory"
                                  }
                                },
                                "id": 41091,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "snipedId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 40889,
                                "src": "10790:12:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10783:20:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Info_$46382_$_t_uint256_$",
                                "typeString": "mapping(enum MangroveTest.Info => uint256)"
                              }
                            },
                            "id": 41095,
                            "indexExpression": {
                              "expression": {
                                "id": 41093,
                                "name": "Info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46382,
                                "src": "10804:4:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Info_$46382_$",
                                  "typeString": "type(enum MangroveTest.Info)"
                                }
                              },
                              "id": 41094,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "makerGives",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46377,
                              "src": "10804:15:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Info_$46382",
                                "typeString": "enum MangroveTest.Info"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10783:37:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10715:105:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10667:153:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "696e636f7272656374206d616b657220422062616c616e6365",
                        "id": 41098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10828:27:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_448e49f69b2afa5125645b307c804e9e48e55306e205e9dda60af2a3aa11abb5",
                          "typeString": "literal_string \"incorrect maker B balance\""
                        },
                        "value": "incorrect maker B balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_448e49f69b2afa5125645b307c804e9e48e55306e205e9dda60af2a3aa11abb5",
                          "typeString": "literal_string \"incorrect maker B balance\""
                        }
                      ],
                      "id": 41065,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "10612:8:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 41099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10612:249:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41100,
                  "nodeType": "ExpressionStatement",
                  "src": "10612:249:72"
                },
                {
                  "assignments": [41105, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41105,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "10919:3:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 41126,
                      "src": "10898:24:72",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OfferStruct_$10521_memory_ptr",
                        "typeString": "struct OfferStruct"
                      },
                      "typeName": {
                        "id": 41104,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41103,
                          "name": "P.OfferStruct",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10521,
                          "src": "10898:13:72"
                        },
                        "referencedDeclaration": 10521,
                        "src": "10898:13:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferStruct_$10521_storage_ptr",
                          "typeString": "struct OfferStruct"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 41117,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41109,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "10951:4:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 41108,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "10949:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 41110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10949:7:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 41112,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "10966:5:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 41111,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "10964:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 41113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10964:8:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 41114,
                          "name": "bag",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40903,
                          "src": "10980:3:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bag_$40892_memory_ptr",
                            "typeString": "struct ScenariiTest.Bag memory"
                          }
                        },
                        "id": 41115,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "snipedId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40889,
                        "src": "10980:12:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 41106,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "10928:3:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 41107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offerInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1501,
                      "src": "10928:13:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_struct$_OfferStruct_$10521_memory_ptr_$_t_struct$_OfferDetailStruct_$10530_memory_ptr_$",
                        "typeString": "function (address,address,uint256) view external returns (struct OfferStruct memory,struct OfferDetailStruct memory)"
                      }
                    },
                    "id": 41116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10928:70:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_OfferStruct_$10521_memory_ptr_$_t_struct$_OfferDetailStruct_$10530_memory_ptr_$",
                      "typeString": "tuple(struct OfferStruct memory,struct OfferDetailStruct memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10897:101:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 41122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 41119,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41105,
                            "src": "11015:3:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OfferStruct_$10521_memory_ptr",
                              "typeString": "struct OfferStruct memory"
                            }
                          },
                          "id": 41120,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "gives",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10520,
                          "src": "11015:9:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 41121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11028:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11015:14:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f666665722073686f756c64206e6f742068617665206120726573696475616c",
                        "id": 41123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11031:34:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d4e5b3d86a23138802c2c400062e0d8844afbba98545b2125e3931e80f72af8",
                          "typeString": "literal_string \"Offer should not have a residual\""
                        },
                        "value": "Offer should not have a residual"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d4e5b3d86a23138802c2c400062e0d8844afbba98545b2125e3931e80f72af8",
                          "typeString": "literal_string \"Offer should not have a residual\""
                        }
                      ],
                      "id": 41118,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "11004:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 41124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11004:62:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41125,
                  "nodeType": "ExpressionStatement",
                  "src": "11004:62:72"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "snipe",
            "nameLocation": "8896:5:72",
            "parameters": {
              "id": 40893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8901:2:72"
            },
            "returnParameters": {
              "id": 40900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40895,
                  "mutability": "mutable",
                  "name": "takerGot",
                  "nameLocation": "8942:8:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41127,
                  "src": "8937:13:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40894,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8937:4:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40897,
                  "mutability": "mutable",
                  "name": "takerGave",
                  "nameLocation": "8963:9:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41127,
                  "src": "8958:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40896,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8958:4:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40899,
                  "mutability": "mutable",
                  "name": "expectedFee",
                  "nameLocation": "8985:11:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41127,
                  "src": "8980:16:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40898,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8980:4:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8929:73:72"
            },
            "scope": 41128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 39685,
              "name": "MangroveTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47059,
              "src": "130:12:72"
            },
            "id": 39686,
            "nodeType": "InheritanceSpecifier",
            "src": "130:12:72"
          }
        ],
        "canonicalName": "ScenariiTest",
        "contractDependencies": [780, 906, 48825, 49499, 50091, 52050],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          41128, 47059, 1914, 47434, 48626, 62095, 60776, 60744
        ],
        "name": "ScenariiTest",
        "nameLocation": "114:12:72",
        "scope": 41280,
        "usedErrors": []
      },
      {
        "id": 41279,
        "nodeType": "ContractDefinition",
        "src": "11075:971:72",
        "nodes": [
          {
            "id": 41133,
            "nodeType": "VariableDeclaration",
            "src": "11120:13:72",
            "constant": false,
            "mutability": "mutable",
            "name": "tkr",
            "nameLocation": "11130:3:72",
            "scope": 41279,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestTaker_$50091",
              "typeString": "contract TestTaker"
            },
            "typeName": {
              "id": 41132,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 41131,
                "name": "TestTaker",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 50091,
                "src": "11120:9:72"
              },
              "referencedDeclaration": 50091,
              "src": "11120:9:72",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestTaker_$50091",
                "typeString": "contract TestTaker"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 41136,
            "nodeType": "VariableDeclaration",
            "src": "11137:22:72",
            "constant": false,
            "mutability": "mutable",
            "name": "evil",
            "nameLocation": "11155:4:72",
            "scope": 41279,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestMoriartyMaker_$49748",
              "typeString": "contract TestMoriartyMaker"
            },
            "typeName": {
              "id": 41135,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 41134,
                "name": "TestMoriartyMaker",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49748,
                "src": "11137:17:72"
              },
              "referencedDeclaration": 49748,
              "src": "11137:17:72",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestMoriartyMaker_$49748",
                "typeString": "contract TestMoriartyMaker"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 41248,
            "nodeType": "FunctionDefinition",
            "src": "11199:585:72",
            "body": {
              "id": 41247,
              "nodeType": "Block",
              "src": "11232:552:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 41140,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "11238:5:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_DeepCollectTest_$41279_$",
                          "typeString": "type(contract super DeepCollectTest)"
                        }
                      },
                      "id": 41142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46003,
                      "src": "11238:11:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 41143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11238:13:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41144,
                  "nodeType": "ExpressionStatement",
                  "src": "11238:13:72"
                },
                {
                  "expression": {
                    "id": 41155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41145,
                      "name": "tkr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41133,
                      "src": "11257:3:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestTaker_$50091",
                        "typeString": "contract TestTaker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 41148,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45878,
                              "src": "11276:4:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 41147,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "11274:1:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 41149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11274:7:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 41151,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45881,
                              "src": "11285:5:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 41150,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "11283:1:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 41152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11283:8:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "74616b6572",
                          "id": 41153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11293:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_dabc31545dc394527fa3167263fd61e7c7bb9eb939a344961942003782d7e47d",
                            "typeString": "literal_string \"taker\""
                          },
                          "value": "taker"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_dabc31545dc394527fa3167263fd61e7c7bb9eb939a344961942003782d7e47d",
                            "typeString": "literal_string \"taker\""
                          }
                        ],
                        "id": 41146,
                        "name": "setupTaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46919,
                        "src": "11263:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_TestTaker_$50091_$",
                          "typeString": "function (address,address,string memory) returns (contract TestTaker)"
                        }
                      },
                      "id": 41154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11263:38:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestTaker_$50091",
                        "typeString": "contract TestTaker"
                      }
                    },
                    "src": "11257:44:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestTaker_$50091",
                      "typeString": "contract TestTaker"
                    }
                  },
                  "id": 41156,
                  "nodeType": "ExpressionStatement",
                  "src": "11257:44:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41159,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "11315:5:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 41158,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "11313:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 41160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11313:8:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 41163,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41133,
                            "src": "11331:3:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          ],
                          "id": 41162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11323:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 41161,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11323:7:72",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11323:12:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 41165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11337:7:72",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "id": 41157,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [61102, 61119, 61222],
                      "referencedDeclaration": 61119,
                      "src": "11308:4:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 41166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11308:37:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41167,
                  "nodeType": "ExpressionStatement",
                  "src": "11308:37:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41171,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "11366:5:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "3230",
                        "id": 41172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11373:8:72",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000"
                        },
                        "value": "20"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 41168,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41133,
                        "src": "11351:3:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$50091",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 41170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49823,
                      "src": "11351:14:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$2050_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 41173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11351:31:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41174,
                  "nodeType": "ExpressionStatement",
                  "src": "11351:31:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41178,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "11403:4:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "3230",
                        "id": 41179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11409:8:72",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000"
                        },
                        "value": "20"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 41175,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41133,
                        "src": "11388:3:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$50091",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 41177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49823,
                      "src": "11388:14:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$2050_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 41180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11388:30:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41181,
                  "nodeType": "ExpressionStatement",
                  "src": "11388:30:72"
                },
                {
                  "expression": {
                    "id": 41194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41182,
                      "name": "evil",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41136,
                      "src": "11425:4:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMoriartyMaker_$49748",
                        "typeString": "contract TestMoriartyMaker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 41186,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45875,
                          "src": "11454:3:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 41188,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45878,
                              "src": "11461:4:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 41187,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "11459:1:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 41189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11459:7:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 41191,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45881,
                              "src": "11470:5:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 41190,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "11468:1:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 41192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11468:8:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                            "typeString": "contract AbstractMangrove"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 41185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "11432:21:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_AbstractMangrove_$37_$_t_address_$_t_address_$returns$_t_contract$_TestMoriartyMaker_$49748_$",
                          "typeString": "function (contract AbstractMangrove,address,address) returns (contract TestMoriartyMaker)"
                        },
                        "typeName": {
                          "id": 41184,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 41183,
                            "name": "TestMoriartyMaker",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 49748,
                            "src": "11436:17:72"
                          },
                          "referencedDeclaration": 49748,
                          "src": "11436:17:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestMoriartyMaker_$49748",
                            "typeString": "contract TestMoriartyMaker"
                          }
                        }
                      },
                      "id": 41193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11432:45:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMoriartyMaker_$49748",
                        "typeString": "contract TestMoriartyMaker"
                      }
                    },
                    "src": "11425:52:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestMoriartyMaker_$49748",
                      "typeString": "contract TestMoriartyMaker"
                    }
                  },
                  "id": 41195,
                  "nodeType": "ExpressionStatement",
                  "src": "11425:52:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41201,
                            "name": "evil",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41136,
                            "src": "11500:4:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMoriartyMaker_$49748",
                              "typeString": "contract TestMoriartyMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMoriartyMaker_$49748",
                              "typeString": "contract TestMoriartyMaker"
                            }
                          ],
                          "id": 41200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11492:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 41199,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11492:7:72",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11492:13:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4d6f726961727479",
                        "id": 41203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11507:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6b6cae4db7d7f32a78b3675b2abbe0a48a5dbc6edd8de1fb107ab496ccc9330",
                          "typeString": "literal_string \"Moriarty\""
                        },
                        "value": "Moriarty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f6b6cae4db7d7f32a78b3675b2abbe0a48a5dbc6edd8de1fb107ab496ccc9330",
                          "typeString": "literal_string \"Moriarty\""
                        }
                      ],
                      "expression": {
                        "id": 41196,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "11483:2:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 41198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63796,
                      "src": "11483:8:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 41204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11483:35:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41205,
                  "nodeType": "ExpressionStatement",
                  "src": "11483:35:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41209,
                            "name": "evil",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41136,
                            "src": "11537:4:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMoriartyMaker_$49748",
                              "typeString": "contract TestMoriartyMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMoriartyMaker_$49748",
                              "typeString": "contract TestMoriartyMaker"
                            }
                          ],
                          "id": 41208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11529:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 41207,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11529:7:72",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11529:13:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3230",
                        "id": 41211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11544:8:72",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000"
                        },
                        "value": "20"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000"
                        }
                      ],
                      "id": 41206,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [61102, 61119, 61222],
                      "referencedDeclaration": 61102,
                      "src": "11524:4:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 41212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11524:29:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41213,
                  "nodeType": "ExpressionStatement",
                  "src": "11524:29:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130",
                        "id": 41217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11577:8:72",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 41214,
                        "name": "evil",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41136,
                        "src": "11559:4:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMoriartyMaker_$49748",
                          "typeString": "contract TestMoriartyMaker"
                        }
                      },
                      "id": 41216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "provisionMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49724,
                      "src": "11559:17:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 41218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11559:27:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41219,
                  "nodeType": "ExpressionStatement",
                  "src": "11559:27:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41222,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "11599:4:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 41221,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "11597:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 41223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11597:7:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 41226,
                            "name": "evil",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41136,
                            "src": "11614:4:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMoriartyMaker_$49748",
                              "typeString": "contract TestMoriartyMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMoriartyMaker_$49748",
                              "typeString": "contract TestMoriartyMaker"
                            }
                          ],
                          "id": 41225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11606:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 41224,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11606:7:72",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11606:13:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 41228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11621:7:72",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "id": 41220,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [61102, 61119, 61222],
                      "referencedDeclaration": 61119,
                      "src": "11592:4:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 41229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11592:37:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41230,
                  "nodeType": "ExpressionStatement",
                  "src": "11592:37:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41234,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "11651:4:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 41235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11657:7:72",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 41231,
                        "name": "evil",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41136,
                        "src": "11635:4:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMoriartyMaker_$49748",
                          "typeString": "contract TestMoriartyMaker"
                        }
                      },
                      "id": 41233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49743,
                      "src": "11635:15:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$2050_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 41236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11635:30:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41237,
                  "nodeType": "ExpressionStatement",
                  "src": "11635:30:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 41241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11701:7:72",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "302e35",
                        "id": 41242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11723:9:72",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      },
                      {
                        "hexValue": "313030303030",
                        "id": 41243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11748:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100000"
                      },
                      {
                        "hexValue": "30",
                        "id": 41244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11771:1:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 41238,
                        "name": "evil",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41136,
                        "src": "11672:4:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMoriartyMaker_$49748",
                          "typeString": "contract TestMoriartyMaker"
                        }
                      },
                      "id": 41240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49702,
                      "src": "11672:13:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 41245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": ["wants", "gives", "gasreq", "pivotId"],
                    "nodeType": "FunctionCall",
                    "src": "11672:107:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41246,
                  "nodeType": "ExpressionStatement",
                  "src": "11672:107:72"
                }
              ]
            },
            "baseFunctions": [46003],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "11208:5:72",
            "overrides": {
              "id": 41138,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11223:8:72"
            },
            "parameters": {
              "id": 41137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11213:2:72"
            },
            "returnParameters": {
              "id": 41139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11232:0:72"
            },
            "scope": 41279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41255,
            "nodeType": "FunctionDefinition",
            "src": "11788:71:72",
            "body": {
              "id": 41254,
              "nodeType": "Block",
              "src": "11832:27:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 41251,
                      "name": "moWithFailures",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41278,
                      "src": "11838:14:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 41252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11838:16:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41253,
                  "nodeType": "ExpressionStatement",
                  "src": "11838:16:72"
                }
              ]
            },
            "functionSelector": "a6b23bdb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_market_with_failures",
            "nameLocation": "11797:25:72",
            "parameters": {
              "id": 41249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11822:2:72"
            },
            "returnParameters": {
              "id": 41250,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11832:0:72"
            },
            "scope": 41279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41278,
            "nodeType": "FunctionDefinition",
            "src": "11863:181:72",
            "body": {
              "id": 41277,
              "nodeType": "Block",
              "src": "11898:146:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130",
                        "id": 41261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11936:8:72",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3330",
                        "id": 41262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11953:8:72",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30000000000000000000_by_1",
                          "typeString": "int_const 30000000000000000000"
                        },
                        "value": "30"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_30000000000000000000_by_1",
                          "typeString": "int_const 30000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 41258,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41133,
                        "src": "11904:3:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$50091",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 41260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrderWithFail",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50090,
                      "src": "11904:23:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (uint256,uint256)"
                      }
                    },
                    "id": 41263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": ["wants", "gives"],
                    "nodeType": "FunctionCall",
                    "src": "11904:59:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 41264,
                  "nodeType": "ExpressionStatement",
                  "src": "11904:59:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 41268,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45878,
                                "src": "11992:4:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 41267,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "11990:1:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 41269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11990:7:72",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 41271,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45881,
                                "src": "12001:5:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 41270,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "11999:1:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 41272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11999:8:72",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 41266,
                          "name": "isEmptyOB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46400,
                          "src": "11980:9:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 41273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11980:28:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6666657220626f6f6b2073686f756c6420626520656d707479",
                        "id": 41274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12010:28:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e3890716062db0abece1876ab45a8e6e15f11b0b70d4e2b7cabed69bfac90e",
                          "typeString": "literal_string \"Offer book should be empty\""
                        },
                        "value": "Offer book should be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37e3890716062db0abece1876ab45a8e6e15f11b0b70d4e2b7cabed69bfac90e",
                          "typeString": "literal_string \"Offer book should be empty\""
                        }
                      ],
                      "id": 41265,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "11969:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 41275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11969:70:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41276,
                  "nodeType": "ExpressionStatement",
                  "src": "11969:70:72"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "moWithFailures",
            "nameLocation": "11872:14:72",
            "parameters": {
              "id": 41256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11886:2:72"
            },
            "returnParameters": {
              "id": 41257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11898:0:72"
            },
            "scope": 41279,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 41129,
              "name": "MangroveTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47059,
              "src": "11103:12:72"
            },
            "id": 41130,
            "nodeType": "InheritanceSpecifier",
            "src": "11103:12:72"
          }
        ],
        "canonicalName": "DeepCollectTest",
        "contractDependencies": [780, 906, 48825, 49499, 49748, 50091, 52050],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          41279, 47059, 1914, 47434, 48626, 62095, 60776, 60744
        ],
        "name": "DeepCollectTest",
        "nameLocation": "11084:15:72",
        "scope": 41280,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0"
  },
  "id": 72
}
