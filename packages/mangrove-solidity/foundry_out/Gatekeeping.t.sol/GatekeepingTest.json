{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Credit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Debit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "callname",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "GasCost",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Kill",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "NewMgv",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "base",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "quote",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "offerIds",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "wants",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "gives",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "makerAddr",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "gasreqs",
          "type": "uint256[]"
        }
      ],
      "name": "OBState",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "mgvData",
          "type": "bytes32"
        }
      ],
      "name": "OfferFail",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "OfferRetract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGives",
          "type": "uint256"
        }
      ],
      "name": "OfferSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasprice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prev",
          "type": "uint256"
        }
      ],
      "name": "OfferWrite",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGot",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGave",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "penalty",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feePaid",
          "type": "uint256"
        }
      ],
      "name": "OrderComplete",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "OrderStart",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "posthookData",
          "type": "bytes32"
        }
      ],
      "name": "PosthookFail",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetActive",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetDensity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offer_gasbase",
          "type": "uint256"
        }
      ],
      "name": "SetGasbase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasmax",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasprice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetGovernance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetMonitor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetNotify",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetUseOracle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetVault",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "outbound",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "inbound",
          "type": "address"
        }
      ],
      "name": "offers_head",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        }
      ],
      "name": "offers_line",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract TestToken",
          "name": "t",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "power",
          "type": "uint256"
        }
      ],
      "name": "cash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract TestToken",
          "name": "t",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "cash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "adjust",
          "type": "bool"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "args",
          "type": "bytes"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256[]",
          "name": "ints",
          "type": "int256[]"
        }
      ],
      "name": "logary",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "uints",
          "type": "uint256[]"
        }
      ],
      "name": "logary",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "t",
              "name": "offer",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "wants",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gives",
              "type": "uint256"
            },
            {
              "internalType": "t",
              "name": "offerDetail",
              "type": "uint256"
            },
            {
              "internalType": "t",
              "name": "global",
              "type": "uint256"
            },
            {
              "internalType": "t",
              "name": "local",
              "type": "uint256"
            }
          ],
          "internalType": "struct MgvLib.SingleOrder",
          "name": "",
          "type": "tuple"
        }
      ],
      "name": "makerExecute",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "ret",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "t",
              "name": "offer",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "wants",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gives",
              "type": "uint256"
            },
            {
              "internalType": "t",
              "name": "offerDetail",
              "type": "uint256"
            },
            {
              "internalType": "t",
              "name": "global",
              "type": "uint256"
            },
            {
              "internalType": "t",
              "name": "local",
              "type": "uint256"
            }
          ],
          "internalType": "struct MgvLib.SingleOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "makerData",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "mgvData",
              "type": "bytes32"
            }
          ],
          "internalType": "struct MgvLib.OrderResult",
          "name": "result",
          "type": "tuple"
        }
      ],
      "name": "makerPosthook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketOrderKO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_base",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_quote",
          "type": "address"
        }
      ],
      "name": "marketOrderOK",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newOfferKO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_base",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_quote",
          "type": "address"
        }
      ],
      "name": "newOfferOK",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "retractOfferKO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_base",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_quote",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "retractOfferOK",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "rewind",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        }
      ],
      "name": "setupMaker",
      "outputs": [
        {
          "internalType": "contract TestMaker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        }
      ],
      "name": "setupMakerDeployer",
      "outputs": [
        {
          "internalType": "contract MakerDeployer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "inverted",
          "type": "bool"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "_mgv",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "inverted",
          "type": "bool"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "_mgv",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "inbound_tkn",
          "type": "address"
        }
      ],
      "name": "setupMangrove",
      "outputs": [
        {
          "internalType": "contract AbstractMangrove",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "$out",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "$in",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "label",
          "type": "string"
        }
      ],
      "name": "setupTaker",
      "outputs": [
        {
          "internalType": "contract TestTaker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "skip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "snipesKO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_base",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_quote",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "snipesOK",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_activation_emits_events_in_order",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_can_marketOrderFor_for_with_allowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_cannot_marketOrderFor_for_without_allowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_cannot_snipesFor_for_without_allowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_empty_mgv_ok",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_gov_can_transfer_rights",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_gov_cant_be_zero",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_gov_is_not_sender",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_initial_allowance_is_zero",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_kill_is_idempotent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_killing_updates_config",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_makerGasprice_wider_than_16_bits_fails_newOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_makerGasreq_at_density_suceeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_makerGasreq_at_gasmax_succeeds_newOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_makerGasreq_bigger_than_gasmax_fails_newOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_makerGasreq_lower_than_density_fails_newOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_makerGasreq_wider_than_24_bits_fails_newOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_makerGives_wider_than_96_bits_fails_newOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_makerWants_wider_than_96_bits_fails_newOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_marketOrder_on_closed_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_marketOrder_on_posthook_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_marketOrder_on_reentrancy_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_marketOrder_on_reentrancy_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_newOffer_on_closed_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_newOffer_on_inactive_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_newOffer_on_posthook_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_newOffer_on_reentrancy_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_newOffer_on_reentrancy_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_only_gov_can_kill",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_only_gov_can_set_active",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_only_gov_can_set_density",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_only_gov_can_set_fee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_only_gov_can_set_gasbase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_only_gov_can_set_gasmax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_only_gov_can_set_gasprice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_only_gov_can_set_monitor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_only_gov_can_set_vault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_receive_on_closed_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_retractOffer_on_closed_ok",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_retractOffer_on_posthook_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_retractOffer_on_reentrancy_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_retractOffer_on_reentrancy_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_retractOffer_wrong_owner_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_set_density_ceiling",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_set_fee_ceiling",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_set_gasbase_ceiling",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_set_gasmax_ceiling",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_set_gasprice_ceiling",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_set_zero_density",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_set_zero_gasbase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_on_closed_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipe_on_reentrancy_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipes_on_posthook_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_snipes_on_reentrancy_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_take_on_closed_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_takerGives_above_96bits_fails_snipes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_takerWants_above_96bits_fails_snipes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_takerWants_wider_than_160_bits_fails_marketOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_updateOffer_on_closed_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_updateOffer_on_inactive_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_updateOffer_on_posthook_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_updateOffer_on_reentrancy_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_updateOffer_on_reentrancy_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_withdraw_on_closed_ok",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "tip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ofr",
          "type": "uint256"
        }
      ],
      "name": "updateOfferKO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_base",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_quote",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "ofr",
          "type": "uint256"
        }
      ],
      "name": "updateOfferOK",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1572:26:101:-:0;;;-1:-1:-1;;171:28:102;;;;;-1:-1:-1;624:20:77;;;;2159:34;;186:22037:66;1763:237:76;;;1828:64;;;;;-1:-1:-1;;;1828:64:76;;;;1572:26:101;1828:64:76;;;;;;;;-1:-1:-1;;;1828:64:76;;;;1888:2;-1:-1:-1;1828:64:76;;;-1:-1:-1;1763:237:76;;;1907:65;;;;;-1:-1:-1;;;1907:65:76;;1828:64;1907:65;;;;-1:-1:-1;1907:65:76;;;;;-1:-1:-1;;;1907:65:76;;-1:-1:-1;1907:65:76;;;;-1:-1:-1;1907:65:76;-1:-1:-1;1763:237:76;-1:-1:-1;1763:237:76;;;;1729:271;;;-1:-1:-1;;1729:271:76;;;186:22037:66;;1572:26:101;;1729:271:76;;;;;;1828:64;1729:271;:::i;:::-;-1:-1:-1;1729:271:76;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1729:271:76;;;;;;;;;;;;-1:-1:-1;;1729:271:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1729:271:76;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1729:271:76;;;;;;;;;;;;-1:-1:-1;;1729:271:76;;;;;;;;;;;;;;;;;;;;;;186:22037:66;;;;;;;;;-1:-1:-1;2055:32:76;;;-1:-1:-1;;;2055:32:76;;2064:9;2055:32;;;226:51:107;293:18;;;286:30;;;;352:1;332:18;;;325:29;-1:-1:-1;;;370:18:107;;;363:39;251:64:102;;2055:8:76;;419:19:107;;2055:32:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2093:32:76;;;-1:-1:-1;;;2093:32:76;;2104:4;2093:32;;;669:51:107;736:18;;;729:30;;;795:2;775:18;;;768:30;-1:-1:-1;;;814:18:107;;;807:41;2093:32:76;;251:64:102;;-1:-1:-1;2093:8:76;;-1:-1:-1;865:19:107;;;;;-1:-1:-1;;2093:32:76;;;;;;;-1:-1:-1;251:64:102;2093:32:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;186:22037:66;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;186:22037:66;;;-1:-1:-1;186:22037:66;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;895:380:107;974:1;970:12;;;;1017;;;1038:61;;1092:4;1084:6;1080:17;1070:27;;1038:61;1145:2;1137:6;1134:14;1114:18;1111:38;1108:161;;1191:10;1186:3;1182:20;1179:1;1172:31;1226:4;1223:1;1216:15;1254:4;1251:1;1244:15;1108:161;;895:380;;;:::o;:::-;186:22037:66;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMapi;:::-;;7393:411:76;;;;;;;;;;-1:-1:-1;7393:411:76;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;578:32:107;;;560:51;;548:2;533:18;7393:411:76;;;;;;;;5505:162:66;;;;;;;;;;;;;:::i;349:555::-;;;;;;;;;;;;;:::i;8068:243:76:-;;;;;;;;;;-1:-1:-1;8068:243:76;;;;;:::i;:::-;;:::i;8011:353:66:-;;;;;;;;;;;;;:::i;17002:461::-;;;;;;;;;;;;;:::i;3219:147::-;;;;;;;;;;;;;:::i;2069:116:103:-;;;;;;;;;;-1:-1:-1;2069:116:103;;;;;:::i;:::-;;:::i;6921:747:66:-;;;;;;;;;;;;;:::i;3686:139::-;;;;;;;;;;;;;:::i;3539:143::-;;;;;;;;;;;;;:::i;14490:144::-;;;;;;;;;;-1:-1:-1;14490:144:66;;;;;:::i;:::-;;:::i;20936:95::-;;;;;;;;;;;;;:::i;4198:167::-;;;;;;;;;;;;;:::i;1416:96:103:-;;;;;;;;;;-1:-1:-1;1416:96:103;;;;;:::i;:::-;;:::i;11245:267:66:-;;;;;;;;;;;;;:::i;1630:120:103:-;;;;;;;;;;-1:-1:-1;1630:120:103;;;;;:::i;:::-;;:::i;5141:455::-;;;;;;;;;;-1:-1:-1;5141:455:103;;;;;:::i;:::-;;:::i;16557:275:66:-;;;;;;;;;;;;;:::i;1268:85:103:-;;;;;;;;;;-1:-1:-1;1268:85:103;;;;;:::i;:::-;;:::i;18274:266:66:-;;;;;;;;;;;;;:::i;12550:169::-;;;;;;;;;;-1:-1:-1;12550:169:66;;;;;:::i;:::-;;:::i;9298:268:76:-;;;;;;;;;;-1:-1:-1;9298:268:76;;;;;:::i;:::-;;:::i;16401:152:66:-;;;;;;;;;;;;;:::i;19286:441::-;;;;;;;;;;;;;:::i;21493:373::-;;;;;;;;;;;;;:::i;5109:224::-;;;;;;;;;;;;;:::i;13256:600::-;;;;;;;;;;;;;:::i;322:38:102:-;;;;;;;;;;-1:-1:-1;322:38:102;-1:-1:-1;;;;;;;;;;;322:38:102;;18026:244:66;;;;;;;;;;-1:-1:-1;18026:244:66;;;;;:::i;:::-;;:::i;2440:140:103:-;;;;;;;;;;-1:-1:-1;2440:140:103;;;;;:::i;:::-;;:::i;10622:416:66:-;;;;;;;;;;-1:-1:-1;10622:416:66;;;;;:::i;:::-;;:::i;11729:393::-;;;;;;;;;;;;;:::i;9629:546::-;;;;;;;;;;;;;:::i;20143:195::-;;;;;;;;;;;;;:::i;13860:596::-;;;;;;;;;;;;;:::i;3051:280:77:-;;;;;;;;;;-1:-1:-1;3051:280:77;;;;;:::i;:::-;;:::i;12126:390:66:-;;;;;;;;;;;;;:::i;14950:275::-;;;;;;;;;;-1:-1:-1;14950:275:66;;;;;:::i;:::-;;:::i;14638:278::-;;;;;;;;;;;;;:::i;1262:349::-;;;;;;;;;;;;;:::i;5671:229::-;;;;;;;;;;;;;:::i;3369:107:103:-;;;;;;;;;;-1:-1:-1;3369:107:103;;;;;:::i;:::-;;:::i;10286:332:66:-;;;;;;;;;;-1:-1:-1;10286:332:66;;;;;:::i;:::-;;:::i;:::-;;;8189:25:107;;;8177:2;8162:18;10286:332:66;8043:177:107;9947:135:76;;;;;;;;;;-1:-1:-1;9947:135:76;;;;;:::i;:::-;;:::i;3072:143:66:-;;;;;;;;;;;;;:::i;1957:106:103:-;;;;;;;;;;-1:-1:-1;1957:106:103;;;;;:::i;:::-;;:::i;4613:171:66:-;;;;;;;;;;;;;:::i;20807:125::-;;;;;;;;;;;;;:::i;5904:673::-;;;;;;;;;;;;;:::i;1935:154::-;;;;;;;;;;;;;:::i;1134:124::-;;;;;;;;;;;;;:::i;4065:129::-;;;;;;;;;;;;;:::i;2093:127::-;;;;;;;;;;;;;:::i;21870:351::-;;;;;;;;;;;;;:::i;7254:97:76:-;;;;;;;;;;;;;:::i;2224:338:66:-;;;;;;;;;;;;;:::i;3482:915:103:-;;;;;;;;;;-1:-1:-1;3482:915:103;;;;;:::i;:::-;;:::i;5602:406::-;;;;;;;;;;-1:-1:-1;5602:406:103;;;;;:::i;:::-;;:::i;8915:387:66:-;;;;;;;;;;;;;:::i;5337:164::-;;;;;;;;;;;;;:::i;16866:132::-;;;;;;;;;;-1:-1:-1;16866:132:66;;;;;:::i;:::-;;:::i;4522:87::-;;;;;;;;;;;;;:::i;7844:163::-;;;;;;;;;;;;;:::i;931:199::-;;;;;;;;;;;;;:::i;19937:202::-;;;;;;;;;;;;;:::i;3993:68::-;;;;;;;;;;;;;:::i;18813:469::-;;;;;;;;;;;;;:::i;6581:336::-;;;;;;;;;;;;;:::i;1756:130:103:-;;;;;;;;;;-1:-1:-1;1756:130:103;;;;;:::i;:::-;;:::i;11091:150:66:-;;;;;;;;;;;;;:::i;20342:313::-;;;;;;;;;;;;;:::i;3829:160::-;;;;;;;;;;;;;:::i;2768:279:77:-;;;;;;;;;;-1:-1:-1;2768:279:77;;;;;:::i;:::-;;:::i;1179:83:103:-;;;;;;;;;;-1:-1:-1;1179:83:103;;;;;:::i;:::-;;:::i;4369:149:66:-;;;;;;;;;;;;;:::i;1819:584:101:-;;;;;;;;;;;;;:::i;:::-;;;10822:14:107;;10815:22;10797:41;;10785:2;10770:18;1819:584:101;10657:187:107;9126:168:76;;;;;;;;;;-1:-1:-1;9126:168:76;;;;;:::i;:::-;;:::i;21035:198:66:-;;;;;;;;;;;;;:::i;8854:268:76:-;;;;;;;;;;-1:-1:-1;8854:268:76;;;;;:::i;:::-;;:::i;7672:168:66:-;;;;;;;;;;;;;:::i;4788:143::-;;;;;;;;;;;;;:::i;13085:167::-;;;;;;;;;;-1:-1:-1;13085:167:66;;;;;:::i;:::-;;:::i;3164:81:103:-;;;;;;;;;;-1:-1:-1;3164:81:103;;;;;:::i;:::-;;:::i;15229:568:66:-;;;;;;;;;;;;;:::i;15801:566::-;;;;;;;;;;;;;:::i;3370:165::-;;;;;;;;;;;;;:::i;2304:130:103:-;;;;;;;;;;-1:-1:-1;2304:130:103;;;;;:::i;:::-;;:::i;8725:186:66:-;;;;;;;;;;;;;:::i;18567:242::-;;;;;;;;;;-1:-1:-1;18567:242:66;;;;;:::i;:::-;;:::i;9665:224:76:-;;;;;;;;;;-1:-1:-1;9665:224:76;;;;;:::i;:::-;;:::i;12723:276:66:-;;;;;;;;;;;;;:::i;20659:144::-;;;;;;;;;;;;;:::i;2566:502::-;;;;;;;;;;;;;:::i;2732:341:103:-;;;;;;;;;;-1:-1:-1;2732:341:103;;;;;:::i;:::-;;:::i;11595:130:66:-;;;;;;;;;;-1:-1:-1;11595:130:66;;;;;:::i;:::-;;:::i;1771:160::-;;;;;;;;;;;;;:::i;8368:353::-;;;;;;;;;;;;;:::i;1518:106:103:-;;;;;;;;;;-1:-1:-1;1518:106:103;;;;;:::i;:::-;;:::i;7841:173:76:-;;;;;;;;;;-1:-1:-1;7841:173:76;;;;;:::i;:::-;;:::i;4935:170:66:-;;;;;;;;;;;;;:::i;21237:252::-;;;;;;;;;;;;;:::i;17467:532::-;;;;;;;;;;;;;:::i;171:28:102:-;;;;;;;;;;-1:-1:-1;171:28:102;;;;;;;;;;;1572:26:101;;;;;;;;;;-1:-1:-1;1572:26:101;;;;;;;;9306:319:66;;;;;;;;;;;;;:::i;19731:166::-;;;;;;;;;;;;;:::i;1615:152::-;1665:35;;-1:-1:-1;;;1665:35:66;;-1:-1:-1;;;;;;;;;;;251:64:102;1665:15:66;;:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1715:8:66;;1706:18;;-1:-1:-1;;;1706:18:66;;-1:-1:-1;;;;;1715:8:66;;;1706:18;;;560:51:107;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;1706:8:66;;-1:-1:-1;533:18:107;;1706::66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1730:3:66;;1743:4;;-1:-1:-1;;;;;1730:3:66;;;;-1:-1:-1;1730:10:66;;-1:-1:-1;1743:4:66;1741:7;1752:5;;-1:-1:-1;;;;;1752:5:66;1760:1;1730:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1615:152::o;7393:411:76:-;7447:21;7480:8;7476:272;;;7550:4;7575:2;7595:9;7505:108;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;7498:115;;7476:272;;;7678:4;7703:2;7723:9;7641:100;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;7634:107;;7476:272;-1:-1:-1;;;;;;;;;;;7753:8:76;7764:4;7753:29;;;-1:-1:-1;;;;;;7753:29:76;;;;;;;-1:-1:-1;;;;;13468:32:107;;;7753:29:76;;;13450:51:107;13517:18;;;13510:30;13576:1;13556:18;;;13549:29;-1:-1:-1;;;13594:18:107;;;13587:38;13642:19;;7753:29:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7393:411;;;:::o;5505:162:66:-;5580:48;;-1:-1:-1;;;5580:48:66;;13873:2:107;5580:48:66;;;13855:21:107;13912:2;13892:18;;;13885:30;13951:31;13931:18;;;13924:59;-1:-1:-1;;;;;;;;;;;251:64:102;5580:15:66;;14000:18:107;;5580:48:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5634:3:66;;:28;;-1:-1:-1;;;5634:28:66;;:3;:28;;;14299:25:107;;;14340:18;;;14333:34;5653:5:66;14383:18:107;;;14376:34;5634:3:66;14426:18:107;;;14419:34;-1:-1:-1;;;;;5634:3:66;;;;-1:-1:-1;5634:12:66;;-1:-1:-1;14271:19:107;;5634:28:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5505:162::o;349:555::-;388:13;:11;:13::i;:::-;414:4;;407:32;;-1:-1:-1;;;;;414:4:66;423;430:8;407:4;:32::i;:::-;465:4;;452:49;;-1:-1:-1;;;;;465:4:66;474:5;;-1:-1:-1;;;;;474:5:66;452:49;;;;;;;;;;;;;-1:-1:-1;;;452:49:66;;;:10;:49::i;:::-;446:3;:55;;-1:-1:-1;;;;;;446:55:66;-1:-1:-1;;;;;446:55:66;;;;;;526:4;;513:49;;526:4;535:5;;-1:-1:-1;;;;;535:5:66;513:49;;;;;;;;;;;;;-1:-1:-1;;;513:49:66;;;:10;:49::i;:::-;507:3;:55;;-1:-1:-1;;;;;;507:55:66;-1:-1:-1;;;;;507:55:66;;;;;;592:5;;579:49;;592:5;602:4;;-1:-1:-1;;;;;602:4:66;579:49;;;;;;;;;;;;;-1:-1:-1;;;579:49:66;;;:10;:49::i;:::-;568:8;:60;;-1:-1:-1;;;;;;568:60:66;-1:-1:-1;;;;;568:60:66;;;;;;635:3;;:25;;-1:-1:-1;;;635:25:66;;652:7;635:25;;;8189::107;635:3:66;;;:16;;8162:18:107;;635:25:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;666:8:66;;:30;;-1:-1:-1;;;666:30:66;;688:7;666:30;;;8189:25:107;-1:-1:-1;;;;;666:8:66;;;;-1:-1:-1;666:21:66;;-1:-1:-1;8162:18:107;;666:30:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;710:5:66;;703:37;;-1:-1:-1;;;;;;710:5:66;;-1:-1:-1;726:3:66;;-1:-1:-1;;;;;726:3:66;732:7;703:4;:37::i;:::-;753:5;;746:37;;-1:-1:-1;;;;;753:5:66;751:8;769:3;;-1:-1:-1;;;;;769:3:66;775:7;746:4;:37::i;:::-;796:4;;789:41;;-1:-1:-1;;;;;796:4:66;811:8;;-1:-1:-1;;;;;811:8:66;822:7;789:4;:41::i;:::-;837:3;;852:5;;837:30;;-1:-1:-1;;;837:30:66;;-1:-1:-1;;;;;837:3:66;;;;:14;;:30;;852:5;;;859:7;;837:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;885:14;:12;:14::i;:::-;874:8;:25;;-1:-1:-1;;;;;;874:25:66;-1:-1:-1;;;;;874:25:66;;;;;;;;;;349:555::o;8068:243:76:-;8179:21;8215:23;8229:8;8215:13;:23::i;:::-;8208:30;;8244:62;8264:12;8287:11;8301:4;8244:11;:62::i;:::-;8068:243;;;;;:::o;8011:353:66:-;8088:3;;:42;;-1:-1:-1;;;8088:42:66;;8101:7;8088:42;;;14299:25:107;;;14340:18;;;14333:34;8119:7:66;14383:18:107;;;14376:34;8077:8:66;14426:18:107;;;14419:34;;;8077:8:66;-1:-1:-1;;;;;8088:3:66;;:12;;14271:19:107;;8088:42:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8077:53;;8136:24;8163:93;;;;;;;;;8184:3;8163:93;;;;-1:-1:-1;;;;;8189:22:66;;8214:1;8189:26;;;;:::i;:::-;8163:93;;-1:-1:-1;;;;;8163:93:66;;;;-1:-1:-1;;8163:93:66;;;;;:12;:93::i;:::-;8262:47;;-1:-1:-1;;;8262:47:66;;16120:2:107;8262:47:66;;;16102:21:107;16159:2;16139:18;;;16132:30;16198;16178:18;;;16171:58;8136:120:66;;-1:-1:-1;;;;;;;;;;;;251:64:102;8262:15:66;;16246:18:107;;8262:47:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8315:3:66;;8328:4;;-1:-1:-1;;;;;8315:3:66;;;;-1:-1:-1;8315:10:66;;-1:-1:-1;8328:4:66;8337:5;;-1:-1:-1;;;;;8337:5:66;8345:7;8354:4;8315:44;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;8071:293;;8011:353::o;17002:461::-;17066:8;;:50;;-1:-1:-1;;;17066:50:66;;17084:9;17066:50;;;14299:25:107;;;14340:18;;;14333:34;17106:6:66;14383:18:107;;;14376:34;17066:8:66;14426:18:107;;;14419:34;-1:-1:-1;;;;;17066:8:66;;;;:17;;14271:19:107;;17066:50:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;17133:3:66;;17148:4;;17157:5;;17133:64;;-1:-1:-1;;;17133:64:66;;17122:8;;-1:-1:-1;;;;;17133:3:66;;;;:12;;:64;;17148:4;;;;17157:5;;17165:7;;;;17183;;17122:8;;;;17133:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17252:5;;17122:75;;-1:-1:-1;17229:4:66;;:18;;-1:-1:-1;;;;;17252:5:66;17262:4;;-1:-1:-1;;;;;17262:4:66;17214:55;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;17214:55:66;;;;;;;;;;;;;;-1:-1:-1;;;;;17214:55:66;;;;;;;;;;;;17203:66;;;-1:-1:-1;17203:8:66;;17214:55;17203:66;:::i;:::-;-1:-1:-1;17286:3:66;;:24;;-1:-1:-1;;;17286:24:66;;;;;19880:25:107;;;17300:9:66;19921:18:107;;;19914:34;17275:73:66;;-1:-1:-1;;;;;17286:3:66;;:8;;19853:18:107;;17286:24:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17275:73;;;;;;;;;;;;;;;;;:10;:73::i;:::-;17372:3;;17383:5;;17354:104;;-1:-1:-1;;;;;17372:3:66;;;;:8;;17383:5;17393:4;;-1:-1:-1;;;;;17393:4:66;17391:7;17372:27;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17403:1;17372:32;17354:104;;;;;;;;;;;;;;;;;:10;:104::i;3219:147::-;3273:35;;-1:-1:-1;;;3273:35:66;;-1:-1:-1;;;;;;;;;;;251:64:102;3273:15:66;;:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3323:8:66;;3314:18;;-1:-1:-1;;;3314:18:66;;-1:-1:-1;;;;;3323:8:66;;;3314:18;;;560:51:107;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;3314:8:66;;-1:-1:-1;533:18:107;;3314::66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3338:3:66;;-1:-1:-1;;;;;3338:3:66;;-1:-1:-1;3338:14:66;;-1:-1:-1;3355:4:66;3353:7;3338:23;;-1:-1:-1;;;;;;3338:23:66;;;;;;;-1:-1:-1;;;;;578:32:107;;;3338:23:66;;;560:51:107;533:18;;3338:23:66;383:234:107;2069:116:103;2132:18;;-1:-1:-1;;;2132:18:103;;-1:-1:-1;;;;;;;;;;;251:64:102;2132:7:103;;:18;;2140:3;;2145:4;;2132:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2160:18:103;;-1:-1:-1;;;2160:18:103;;-1:-1:-1;;;;;578:32:107;;2160:18:103;;;560:51:107;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;2160:13:103;;-1:-1:-1;533:18:107;;2160::103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2069:116;;:::o;6921:747:66:-;6981:3;;6998:4;;7007:5;;6981:38;;-1:-1:-1;;;6981:38:66;;-1:-1:-1;;;;;6981:3:66;;;;:14;;:38;;6998:4;;;;7007:5;;;7015:3;;6981:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7060:3:66;;7073:4;;7082:5;;7060:29;;-1:-1:-1;;;7060:29:66;;7026:15;;-1:-1:-1;7026:15:66;;-1:-1:-1;;;;;;7060:3:66;;;;:10;;:29;;7073:4;;;;7082:5;;;7060:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7025:64;;-1:-1:-1;7025:64:66;-1:-1:-1;7095:11:66;-1:-1:-1;;;;;5482:60:17;;;;;7110:23:66;5847:72:17;;;;;;7110:1:66;:23;:::i;:::-;7109:41;;;;:::i;:::-;7190:3;;7095:55;;-1:-1:-1;7177:18:66;;-1:-1:-1;;;;;7190:3:66;7177:10;:18::i;:::-;7241:5;;-1:-1:-1;;;;;7241:5:66;7226:4;;-1:-1:-1;;;;;7206:196:66;;;;7226:4;7263:3;;-1:-1:-1;;;;;7206:196:66;;;;;;7263:3;7275:6;;5534:62:16;;;;;;7352:1:66;7370;7387;7206:196;;;;;;;;;;;;:::i;:::-;;;;;;;;7421:3;;7408:18;;-1:-1:-1;;;;;7421:3:66;7177:10;:18::i;7408:::-;7451:3;;7472:4;;-1:-1:-1;;;;;7451:3:66;;;;7437:58;;7457:37;;7472:4;7481:5;;-1:-1:-1;;;;;7481:5:66;7489:1;7492;7457:12;:37::i;:::-;7437:58;;8189:25:107;;;8177:2;8162:18;7437:58:66;;;;;;;7512:3;;:34;;-1:-1:-1;;;7512:34:66;;;;;14299:25:107;;;14340:18;;;14333:34;;;7512:3:66;14383:18:107;;;14376:34;7501:8:66;14426:18:107;;;14419:34;;;7501:8:66;-1:-1:-1;;;;;7512:3:66;;:12;;14271:19:107;;7512:34:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7570:3;;7594:4;;7501:45;;-1:-1:-1;7552:111:66;;-1:-1:-1;;;;;7570:3:66;;;;:10;;:3;;7581:10;;7594:4;7592:7;7603:5;;-1:-1:-1;;;;;7603:5:66;7611:3;7581:34;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7570:46;;;;;;;;;;;;;8189:25:107;;8177:2;8162:18;;8043:177;7570:46:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7552:111;;;;;;;;;;;;;;;;;:10;:111::i;3686:139::-;3739:35;;-1:-1:-1;;;3739:35:66;;-1:-1:-1;;;;;;;;;;;251:64:102;3739:15:66;;:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3789:8:66;;3780:18;;-1:-1:-1;;;3780:18:66;;-1:-1:-1;;;;;3789:8:66;;;3780:18;;;560:51:107;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;3780:8:66;;-1:-1:-1;533:18:107;;3780::66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3804:3:66;;:16;;-1:-1:-1;;;3804:16:66;;:3;:16;;;8189:25:107;-1:-1:-1;;;;;3804:3:66;;;;-1:-1:-1;3804:13:66;;-1:-1:-1;8162:18:107;;3804:16:66;8043:177:107;3539:143:66;3594:35;;-1:-1:-1;;;3594:35:66;;-1:-1:-1;;;;;;;;;;;251:64:102;3594:15:66;;:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3644:8:66;;3635:18;;-1:-1:-1;;;3635:18:66;;-1:-1:-1;;;;;3644:8:66;;;3635:18;;;560:51:107;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;3635:8:66;;-1:-1:-1;533:18:107;;3635::66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3659:3:66;;:18;;-1:-1:-1;;;3659:18:66;;:3;:18;;;8189:25:107;-1:-1:-1;;;;;3659:3:66;;;;-1:-1:-1;3659:15:66;;-1:-1:-1;8162:18:107;;3659::66;8043:177:107;14490:144:66;14538:39;;-1:-1:-1;;;14538:39:66;;-1:-1:-1;;;;;;;;;;;251:64:102;14538:15:66;;:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14583:3:66;;14602:4;;14611:5;;14583:46;;-1:-1:-1;;;14583:46:66;;-1:-1:-1;;;;;14602:4:66;;;14583:46;;;24279:34:107;14611:5:66;;;24329:18:107;;;24322:43;24381:18;;;24374:34;;;-1:-1:-1;24424:18:107;;;24417:50;14583:3:66;;;-1:-1:-1;14583:16:66;;-1:-1:-1;24213:19:107;;14583:46:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14490:144;:::o;20936:95::-;20987:3;;;;;;;;;-1:-1:-1;;;;;20987:3:66;-1:-1:-1;;;;;20987:8:66;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21003:3:66;;:23;;-1:-1:-1;;;21003:23:66;;21016:9;21003:23;;;8189:25:107;-1:-1:-1;;;;;21003:3:66;;;;-1:-1:-1;21003:12:66;;-1:-1:-1;8162:18:107;;21003:23:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4198:167::-;4247:45;;-1:-1:-1;;;4247:45:66;;24886:2:107;4247:45:66;;;24868:21:107;24925:2;24905:18;;;24898:30;24964:28;24944:18;;;24937:56;-1:-1:-1;;;;;;;;;;;251:64:102;4247:15:66;;25010:18:107;;4247:45:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4298:3:66;;4315:4;;-1:-1:-1;;;;;4298:3:66;;;;-1:-1:-1;4298:14:66;;-1:-1:-1;4315:4:66;4324:5;;-1:-1:-1;;;;;4324:5:66;4332:27;-1:-1:-1;;;;;4358:1:66;4332:27;:::i;:::-;4298:62;;;;;;;;;;;;;;;;;:::i;1416:96:103:-;1460:22;;-1:-1:-1;;;1460:22:103;;-1:-1:-1;;;;;;;;;;;251:64:102;1460:7:103;;:22;;1468:3;;-1:-1:-1;;;1473:8:103;1460:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1492:13:103;;-1:-1:-1;;;1492:13:103;;-1:-1:-1;;;;;578:32:107;;1492:13:103;;;560:51:107;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;1492:8:103;;-1:-1:-1;533:18:107;;1492:13:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1416:96;:::o;11245:267:66:-;11314:3;;11329:4;;11338:5;;11314:64;;-1:-1:-1;;;11314:64:66;;11303:8;;-1:-1:-1;;;;;11314:3:66;;;;:12;;:64;;11329:4;;;;11338:5;;11346:7;;;;11364;;11303:8;;;;11314:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11395:35;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11395:35:66;-1:-1:-1;;;11395:35:66;;;11384:46;;11303:75;;-1:-1:-1;11384:46:66;;:8;;11395:35;11384:46;:::i;:::-;-1:-1:-1;11447:3:66;;:22;;-1:-1:-1;;;11447:22:66;;;;;19880:25:107;;;11461:7:66;19921:18:107;;;19914:34;11436:71:66;;-1:-1:-1;;;;;11447:3:66;;:8;;19853:18:107;;11447:22:66;19681:273:107;1630:120:103;1690:22;;-1:-1:-1;;;1690:22:103;;-1:-1:-1;;;;;;;;;;;251:64:102;1690:7:103;;:22;;1698:3;;-1:-1:-1;;;1703:8:103;1690:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1722:21:103;;-1:-1:-1;;;1722:21:103;;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;1722:8:103;;-1:-1:-1;1722:21:103;;1731:3;;1736:6;;1722:21;;;:::i;5141:455::-;5301:16;;-1:-1:-1;;;5301:16:103;;5232:12;;;;-1:-1:-1;;;;;;;;;;;251:64:102;5301:10:103;;:16;;5312:4;;5301:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5301:16:103;;;;;;;;;;;;:::i;:::-;5319:4;5284:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5260:64;;5445:8;5439:15;5432:4;5422:8;5418:19;5415:1;5408:47;5400:55;-1:-1:-1;;;;;;5496:18:103;;5475:114;;;;-1:-1:-1;;;5475:114:103;;28916:2:107;5475:114:103;;;28898:21:107;28955:2;28935:18;;;28928:30;28994:34;28974:18;;;28967:62;-1:-1:-1;;;29045:18:107;;;29038:47;29102:19;;5475:114:103;;;;;;;;;5250:346;5141:455;;;;:::o;16557:275:66:-;16629:3;;16644:4;;16653:5;;16629:64;;-1:-1:-1;;;16629:64:66;;16618:8;;-1:-1:-1;;;;;16629:3:66;;;;:12;;:64;;16644:4;;;;16653:5;;16661:7;;;;16679;;16618:8;;;;16629:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16710:38;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16710:38:66;-1:-1:-1;;;16710:38:66;;;16699:49;;16618:75;;-1:-1:-1;16699:49:66;;:8;;16710:38;16699:49;:::i;:::-;-1:-1:-1;16765:3:66;;:24;;-1:-1:-1;;;16765:24:66;;;;;19880:25:107;;;16779:9:66;19921:18:107;;;19914:34;16754:73:66;;-1:-1:-1;;;;;16765:3:66;;:8;;19853:18:107;;16765:24:66;19681:273:107;1268:85:103;-1:-1:-1;;;;;;;;;;;1315:7:103;1323:22;1341:4;1323:15;:22;:::i;:::-;1315:31;;;;;;;;;;;;;8189:25:107;;8177:2;8162:18;;8043:177;18274:266:66;18340:3;;18355:4;;18364:5;;18340:63;;-1:-1:-1;;;18340:63:66;;18329:8;;-1:-1:-1;;;;;18340:3:66;;;;:12;;:63;;18355:4;;;;18364:5;;18372:7;;;;18390:6;;18329:8;;;;18340:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18329:74;;18435:4;-1:-1:-1;;;;;18435:13:66;;18451:3;18420:36;;;;;;8189:25:107;;8177:2;8162:18;;8043:177;18420:36:66;;;;-1:-1:-1;;18420:36:66;;;;;;;;;;;;;;-1:-1:-1;;;;;18420:36:66;;;;;;;;;;;;18409:47;;;-1:-1:-1;18409:8:66;;18420:36;18409:47;:::i;12550:169::-;12598:39;;-1:-1:-1;;;12598:39:66;;-1:-1:-1;;;;;;;;;;;251:64:102;12598:15:66;;:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12643:3:66;;12661:4;;-1:-1:-1;;;;;12643:3:66;;;;-1:-1:-1;12643:15:66;;-1:-1:-1;12661:4:66;12670:5;;-1:-1:-1;;;;;12670:5:66;12678:7;12687;12696:6;12704:1;12707;12710:3;12643:71;;;;;;;;;;;;;;;;;;;;;;:::i;9298:268:76:-;9398:9;9415:12;9444:3;;;;;;;;;-1:-1:-1;;;;;9444:3:76;9456:4;9470:3;9430:45;;;;;:::i;:::-;-1:-1:-1;;;;;31181:15:107;;;31163:34;;31233:15;;;31228:2;31213:18;;31206:43;31285:15;;;31280:2;31265:18;;31258:43;31113:2;31098:18;9430:45:76;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9481:31:76;;-1:-1:-1;;;9481:31:76;;9415:60;;-1:-1:-1;;;;;;;;;;;;251:64:102;9481:7:76;;:31;;9415:60;;9502:9;;9481:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9518:28:76;;-1:-1:-1;;;9518:28:76;;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;9518:8:76;;-1:-1:-1;9518:28:76;;9535:2;;9540:5;;9518:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9559:2:76;;9298:268;-1:-1:-1;;;;;;;9298:268:76:o;16401:152:66:-;16441:39;;-1:-1:-1;;;16441:39:66;;-1:-1:-1;;;;;;;;;;;251:64:102;16441:15:66;;:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16486:3:66;;16504:4;;16513:5;;16486:62;;-1:-1:-1;;;16486:62:66;;-1:-1:-1;;;;;16504:4:66;;;16486:62;;;32298:34:107;16513:5:66;;;32348:18:107;;;32341:43;16521:9:66;32400:18:107;;;32393:34;;;32443:18;;;32436:34;16543:4:66;32486:19:107;;;32479:51;16486:3:66;;;-1:-1:-1;16486:15:66;;-1:-1:-1;32232:19:107;;16486:62:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;19286:441::-;19360:3;;:41;;-1:-1:-1;;;19360:41:66;;19373:7;19360:41;;;14299:25:107;;;14340:18;;;14333:34;19391:6:66;14383:18:107;;;14376:34;19343:14:66;14426:18:107;;;14419:34;;;19343:14:66;-1:-1:-1;;;;;19360:3:66;;:12;;14271:19:107;;19360:41:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19454:4;;19343:58;;-1:-1:-1;19436:4:66;;:13;;-1:-1:-1;;;;;19454:4:66;19463:5;;-1:-1:-1;;;;;19463:5:66;19471:9;19421:61;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;19421:61:66;;;;;;;;;;;;;;-1:-1:-1;;;;;19421:61:66;;;;;;;;;;;;19407:75;;;-1:-1:-1;19407:11:66;;19421:61;19407:75;:::i;:::-;-1:-1:-1;19500:3:66;;19515:4;;19524:5;;19500:64;;-1:-1:-1;;;19500:64:66;;19489:8;;-1:-1:-1;;;;;19500:3:66;;;;:12;;:64;;19515:4;;;;19524:5;;19532:7;;;;19550;;19489:8;;;;19500:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19581:3;;:22;;-1:-1:-1;;;19581:22:66;;;;;19880:25:107;;;19595:7:66;19921:18:107;;;19914:34;19489:75:66;;-1:-1:-1;19570:71:66;;-1:-1:-1;;;;;19581:3:66;;;;:8;;19853:18:107;;19581:22:66;19681:273:107;19570:71:66;19658:3;;19669:4;;19678:5;;19658:27;;-1:-1:-1;;;19658:27:66;;19647:75;;-1:-1:-1;;;;;19658:3:66;;;;:8;;:27;;19669:4;;;;19678:5;;19658:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19689:1;19658:32;19647:75;;;;;;;;;;;;;;;;;:10;:75::i;21493:373::-;21568:3;;21555:18;;-1:-1:-1;;;;;21568:3:66;7177:10;:18::i;21555:::-;21606:4;;21596:5;;21584:34;;21613:4;10797:41:107;;-1:-1:-1;;;;;21606:4:66;;;;21596:5;;;;21584:34;;10785:2:107;10770:18;21584:34:66;;;;;;;21637:3;;21624:18;;-1:-1:-1;;;;;21637:3:66;7177:10;:18::i;21624:::-;21672:4;;21662:5;;21653:28;;21679:1;8189:25:107;;-1:-1:-1;;;;;21672:4:66;;;;21662:5;;;;21653:28;;8177:2:107;8162:18;21653:28:66;;;;;;;21700:3;;21687:18;;-1:-1:-1;;;;;21700:3:66;7177:10;:18::i;21687:::-;21739:4;;21729:5;;21716:32;;21746:1;8189:25:107;;-1:-1:-1;;;;;21739:4:66;;;;21729:5;;;;21716:32;;8177:2:107;8162:18;21716:32:66;;;;;;;21767:3;;21754:18;;-1:-1:-1;;;;;21767:3:66;7177:10;:18::i;21754:::-;21806:4;;21796:5;;21783:32;;21813:1;8189:25:107;;-1:-1:-1;;;;;21806:4:66;;;;21796:5;;;;21783:32;;8177:2:107;8162:18;21783:32:66;;;;;;;21821:3;;21836:5;;21846:4;;21821:40;;-1:-1:-1;;;21821:40:66;;-1:-1:-1;;;;;21821:3:66;;;;:12;;:40;;21836:5;;;;21846:4;;;21853:1;;21856;;21859;;21821:40;;;:::i;5109:224::-;5180:3;;:41;;-1:-1:-1;;;5180:41:66;;5193:7;5180:41;;;14299:25:107;;;14340:18;;;14333:34;5211:6:66;14383:18:107;;;14376:34;5169:8:66;14426:18:107;;;14419:34;;;5169:8:66;-1:-1:-1;;;;;5180:3:66;;:12;;14271:19:107;;5180:41:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5227:48;;-1:-1:-1;;;5227:48:66;;35760:2:107;5227:48:66;;;35742:21:107;35799:2;35779:18;;;35772:30;35838:31;35818:18;;;35811:59;5169:52:66;;-1:-1:-1;;;;;;;;;;;;251:64:102;5227:15:66;;35887:18:107;;5227:48:66;35559:352:107;13256:600:66;13337:3;;13359:5;;13375:4;;13337:112;;-1:-1:-1;;;13337:112:66;;13320:14;;-1:-1:-1;;;;;13337:3:66;;;;:12;;:112;;13359:5;;;;13375:4;;13388:7;;;;13418;;13320:14;;;;13337:112;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13518:5;;13320:129;;-1:-1:-1;13489:4:66;;:18;;-1:-1:-1;;;;;13518:5:66;13528:4;;-1:-1:-1;;;;;13528:4:66;13535:9;13467:84;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;13467:84:66;;;;;;;;;;;;;;-1:-1:-1;;;;;13467:84:66;;;;;;;;;;;;13456:95;;;-1:-1:-1;13456:8:66;;13467:84;13456:95;:::i;:::-;-1:-1:-1;13568:3:66;;13583:4;;13592:5;;13568:64;;-1:-1:-1;;;13568:64:66;;13557:8;;-1:-1:-1;;;;;13568:3:66;;;;:12;;:64;;13583:4;;;;13592:5;;13600:7;;;;13618;;13557:8;;;;13568:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13649:3;;:22;;-1:-1:-1;;;13649:22:66;;;;;19880:25:107;;;13663:7:66;19921:18:107;;;19914:34;13557:75:66;;-1:-1:-1;13638:71:66;;-1:-1:-1;;;;;13649:3:66;;;;:8;;19853:18:107;;13649:22:66;19681:273:107;13638:71:66;13733:3;;13752:5;;13715:136;;13733:55;;-1:-1:-1;;;;;13733:3:66;;;;:16;;13752:5;13762:4;;-1:-1:-1;;;;;13762:4:66;13760:7;13769:9;13733:46;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4071:58:19;;;;;3990:145;13733:55:66;13792:6;13733:65;13715:136;;;;;;;;;;;;;;;;;:10;:136::i;18026:244::-;18068:24;18095:75;;;;;;;;;18116:2;18095:75;;;;18120:7;18095:75;;;;-1:-1:-1;;;;;18095:75:66;;;;;;18147:16;18095:75;;;;;:12;:75::i;:::-;18176:39;;-1:-1:-1;;;18176:39:66;;18068:102;;-1:-1:-1;;;;;;;;;;;;251:64:102;18176:15:66;;:39;;;;;:::i;2440:140:103:-;2519:18;;-1:-1:-1;;;2519:18:103;;-1:-1:-1;;;;;;;;;;;251:64:102;2519:7:103;;:18;;2527:3;;2532:4;;2519:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2547:26:103;;-1:-1:-1;;;2547:26:103;;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;2547:13:103;;-1:-1:-1;2547:26:103;;2561:3;;2566:6;;2547:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10622:416:66;10752:12;10834:1;10813:11;:18;;;;;:::i;:::-;;;:22;10809:225;;;10859:25;;10861:4;;10859:25;;10872:11;;10859:25;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10845:39;;;;;10892:16;10912:6;:14;;;-1:-1:-1;;;10912:36:66;10892:57;;10957:70;10979:11;10968:22;;:7;:22;;;10957:70;;;;;;;;;;;;;;;;;:10;:70::i;10809:225::-;10746:292;10622:416;;:::o;11729:393::-;11801:3;;11816:4;;11825:5;;11801:64;;-1:-1:-1;;;11801:64:66;;11790:8;;-1:-1:-1;;;;;11801:3:66;;;;:12;;:64;;11816:4;;;;11825:5;;11833:7;;;;11851;;11790:8;;;;11801:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11917:5;;11790:75;;-1:-1:-1;11897:4:66;;:15;;-1:-1:-1;;;;;11917:5:66;11927:4;;-1:-1:-1;;;;;11927:4:66;11882:52;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11882:52:66;;;;;;;;;;;;;;-1:-1:-1;;;;;11882:52:66;;;;;;;;;;;;11871:63;;;-1:-1:-1;11871:8:66;;11882:52;11871:63;:::i;:::-;-1:-1:-1;11951:3:66;;:22;;-1:-1:-1;;;11951:22:66;;;;;19880:25:107;;;11965:7:66;19921:18:107;;;19914:34;11940:71:66;;-1:-1:-1;;;;;11951:3:66;;:8;;19853:18:107;;11951:22:66;19681:273:107;11940:71:66;12035:3;;12046:5;;12056:4;;12035:27;;-1:-1:-1;;;12035:27:66;;12017:100;;-1:-1:-1;;;;;12035:3:66;;;;:8;;:27;;12046:5;;;;12056:4;;12035:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12066:1;12035:32;12017:100;;;;;;;;;;;;;;;;;:10;:100::i;9629:546::-;9703:4;;9696:36;;-1:-1:-1;;;;;9703:4:66;9701:7;10557:98:76;9696:36:66;9738:3;;9753:4;;9738:29;;-1:-1:-1;;;9738:29:66;;-1:-1:-1;;;;;9738:3:66;;;;:14;;:29;;9753:4;;;9759:7;;9738:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9773:3:66;;:42;;-1:-1:-1;;;9773:42:66;;9786:7;9773:42;;;14299:25:107;;;14340:18;;;14333:34;9804:7:66;14383:18:107;;;14376:34;9773:3:66;14426:18:107;;;14419:34;-1:-1:-1;;;;;9773:3:66;;;;-1:-1:-1;9773:12:66;;-1:-1:-1;14271:19:107;;9773:42:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9821:3:66;;-1:-1:-1;;;;;9821:3:66;:18;9842:4;9849:9;9821:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9903:3:66;;9931:4;;9946:5;;10010:3;;9903:117;;-1:-1:-1;;;9903:117:66;;9865:13;;-1:-1:-1;;;;;;9903:3:66;;;;-1:-1:-1;9903:18:66;;:117;;9931:4;;;9946:5;;;9960:7;;;;9990:4;;10010:3;;9903:117;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;10042:3:66;;10059:4;;10068:5;;10084:3;;10042:56;;;-1:-1:-1;;;10042:56:66;;-1:-1:-1;;;;;10059:4:66;;;10042:56;;;40147:34:107;10068:5:66;;;40197:18:107;;;40190:43;10084:3:66;;;40249:18:107;;;40242:43;10092:4:66;40301:18:107;;;40294:43;10042:56:66;9884:136;;-1:-1:-1;10026:144:66;;10042:3;;;;;-1:-1:-1;10042:14:66;;40081:19:107;;;;;10042:56:66;;;;;;;;;;:3;:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10106:9;10026:144;;;;;;;;;;;;;;;;;:8;:144::i;20143:195::-;20199:3;;20216:4;;20225:5;;20199:33;;-1:-1:-1;;;20199:33:66;;-1:-1:-1;;;;;20199:3:66;;;;:14;;:33;;20216:4;;;;20225:5;;;20199:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20238:31:66;;-1:-1:-1;;;20238:31:66;;40549:2:107;20238:31:66;;;40531:21:107;40588:2;40568:18;;;40561:30;-1:-1:-1;;;40607:18:107;;;40600:42;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;20238:15:66;;-1:-1:-1;40659:18:107;;20238:31:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20275:3:66;;20290:4;;-1:-1:-1;;;;;20275:3:66;;;;-1:-1:-1;20275:12:66;;-1:-1:-1;20290:4:66;20299:5;;-1:-1:-1;;;;;20299:5:66;20307:7;20316;20325:1;20328;20331;20275:58;;;;;;;;;;;;;;;;;;;;;:::i;13860:596::-;13939:3;;13961:4;;13976:5;;13939:112;;-1:-1:-1;;;13939:112:66;;13922:14;;-1:-1:-1;;;;;13939:3:66;;;;:12;;:112;;13961:4;;;;13976:5;;13990:7;;;;14020;;13922:14;;;;13939:112;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14122:4;;13922:129;;-1:-1:-1;14093:4:66;;:18;;-1:-1:-1;;;;;14122:4:66;14131:5;;-1:-1:-1;;;;;14131:5:66;14139:9;14071:84;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;14071:84:66;;;;;;;;;;;;;;-1:-1:-1;;;;;14071:84:66;;;;;;;;;;;;14057:98;;;-1:-1:-1;14057:11:66;;14071:84;14057:98;:::i;:::-;-1:-1:-1;14172:3:66;;14187:4;;14196:5;;14172:64;;-1:-1:-1;;;14172:64:66;;14161:8;;-1:-1:-1;;;;;14172:3:66;;;;:12;;:64;;14187:4;;;;14196:5;;14204:7;;;;14222;;14161:8;;;;14172:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14253:3;;:22;;-1:-1:-1;;;14253:22:66;;;;;19880:25:107;;;14267:7:66;19921:18:107;;;19914:34;14161:75:66;;-1:-1:-1;14242:71:66;;-1:-1:-1;;;;;14253:3:66;;;;:8;;19853:18:107;;14253:22:66;19681:273:107;14242:71:66;14337:3;;14356:4;;14319:132;;14337:55;;-1:-1:-1;;;;;14337:3:66;;;;:16;;14356:4;14365:5;;-1:-1:-1;;;;;14365:5:66;14363:8;10557:98:76;14337:55:66;14396:6;14337:65;14319:132;;;;;;;;;;;;;;;;;:10;:132::i;3051:280:77:-;3104:20;;;;;;;;;:15;:20;;;3130:176;3151:4;:11;3147:1;:15;3130:176;;;3195:1;3198:23;3212:4;3217:1;3212:7;;;;;;;;:::i;:::-;;;;;;;3198:8;:23::i;:::-;3181:41;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3177:45;;3252:1;3238:4;:11;:15;;;;:::i;:::-;3234:1;:19;3230:70;;;3283:1;3269:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;3265:26;;3230:70;3164:3;;;;:::i;:::-;;;;3130:176;;;;3311:15;3324:1;3311:12;:15::i;12126:390:66:-;12196:3;;12211:4;;12220:5;;12196:64;;-1:-1:-1;;;12196:64:66;;12185:8;;-1:-1:-1;;;;;12196:3:66;;;;:12;;:64;;12211:4;;;;12220:5;;12228:7;;;;12246;;12185:8;;;;12196:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12315:4;;12185:75;;-1:-1:-1;12295:4:66;;:15;;-1:-1:-1;;;;;12315:4:66;12324:5;;-1:-1:-1;;;;;12324:5:66;12280:52;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12280:52:66;;;;;;;;;;;;;;-1:-1:-1;;;;;12280:52:66;;;;;;;;;;;;12266:66;;;-1:-1:-1;12266:11:66;;12280:52;12266:66;:::i;:::-;-1:-1:-1;12349:3:66;;:22;;-1:-1:-1;;;12349:22:66;;;;;19880:25:107;;;12363:7:66;19921:18:107;;;19914:34;12338:71:66;;-1:-1:-1;;;;;12349:3:66;;:8;;19853:18:107;;12349:22:66;19681:273:107;12338:71:66;12433:3;;12444:4;;12453:5;;12433:27;;-1:-1:-1;;;12433:27:66;;12415:96;;-1:-1:-1;;;;;12433:3:66;;;;:8;;:27;;12444:4;;;;12453:5;;12433:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12464:1;12433:32;12415:96;;;;;;;;;;;;;;;;;:10;:96::i;14950:275::-;15062:3;;:42;;-1:-1:-1;;;15062:42:66;;-1:-1:-1;;;;;24297:15:107;;;15062:42:66;;;24279:34:107;24349:15;;;24329:18;;;24322:43;24381:18;;;24374:34;;;15045:14:66;24424:18:107;;;24417:50;;;15045:14:66;15062:3;;:16;;24213:19:107;;15062:42:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15045:59;;15110:110;15126:9;15143:1;15110:110;;;;;;;;;;;;;;;;;:8;:110::i;14638:278::-;14711:3;;14726:4;;14735:5;;14711:64;;-1:-1:-1;;;14711:64:66;;14700:8;;-1:-1:-1;;;;;14711:3:66;;;;:12;;:64;;14726:4;;;;14735:5;;14743:7;;;;14761;;14700:8;;;;14711:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14700:75;;14807:4;-1:-1:-1;;;;;14807:19:66;;14829:3;14792:42;;;;;;8189:25:107;;8177:2;8162:18;;8043:177;14792:42:66;;;;-1:-1:-1;;14792:42:66;;;;;;;;;;;;;;-1:-1:-1;;;;;14792:42:66;;;;;;;;;;;;14781:53;;;-1:-1:-1;14781:8:66;;14792:42;14781:53;:::i;1262:349::-;1328:3;;1315:18;;-1:-1:-1;;;;;1328:3:66;7177:10;:18::i;1315:::-;1358:8;;1344:23;;-1:-1:-1;;;;;1358:8:66;;;560:51:107;;1344:23:66;;548:2:107;533:18;1344:23:66;;;;;;;1373:3;;1391:8;;1373:27;;-1:-1:-1;;;1373:27:66;;-1:-1:-1;;;;;1391:8:66;;;1373:27;;;560:51:107;1373:3:66;;;:17;;533:18:107;;1373:27:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1407:35:66;;-1:-1:-1;;;1407:35:66;;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;1407:15:66;;-1:-1:-1;1407:35:66;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1448:3:66;;1461:4;;-1:-1:-1;;;;;1448:3:66;;;;-1:-1:-1;1448:10:66;;-1:-1:-1;1461:4:66;1470:5;;-1:-1:-1;;;;;1470:5:66;1478:1;1448:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1500:3:66;;1487:18;;-1:-1:-1;;;;;;1500:3:66;;-1:-1:-1;7177:10:66;:18::i;1487:::-;1534:5;;1525:4;;1516:28;;1542:1;8189:25:107;;-1:-1:-1;;;;;1534:5:66;;;;1525:4;;;;1516:28;;8177:2:107;8162:18;1516:28:66;;;;;;;1559:8;;1550:18;;-1:-1:-1;;;1550:18:66;;-1:-1:-1;;;;;1559:8:66;;;1550:18;;;560:51:107;-1:-1:-1;;;;;;;;;;;251:64:102;1550:8:66;;533:18:107;;1550::66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1574:3:66;;1587:4;;-1:-1:-1;;;;;1574:3:66;;;;-1:-1:-1;1574:10:66;;-1:-1:-1;1587:4:66;1596:5;;-1:-1:-1;;;;;1596:5:66;1604:1;1574:32;;;;;;;;;;;;;;;;;:::i;5671:229::-;5767:3;;5780:4;;5789:5;;5767:29;;-1:-1:-1;;;5767:29:66;;5747:14;;-1:-1:-1;;;;;5767:3:66;;;;:10;;:29;;5780:4;;;;5789:5;;5767:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5802:48:66;;-1:-1:-1;;;5802:48:66;;13873:2:107;5802:48:66;;;13855:21:107;13912:2;13892:18;;;13885:30;13951:31;13931:18;;;13924:59;5746:50:66;;-1:-1:-1;;;;;;;;;;;;251:64:102;5802:15:66;;14000:18:107;;5802:48:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5856:3:66;;-1:-1:-1;;;;;5856:3:66;;-1:-1:-1;5856:12:66;;-1:-1:-1;5856:3:66;;5875:16;5898:58:16;;;;;;5856:3:66;5875:16;:::i;:::-;5856:39;;-1:-1:-1;;;;;;5856:39:66;;;;;;;;;;14299:25:107;;;;14340:18;;;14333:34;;;;14383:18;;;14376:34;5893:1:66;14426:18:107;;;14419:34;14271:19;;5856:39:66;14029:430:107;3369:107:103;3441:28;3446:5;3453:2;3457:4;3463:5;3441:4;:28::i;10286:332:66:-;10376:11;10443:12;10483:1;10465:8;:15;;;;;:::i;:::-;;;:19;10461:138;;;10508:22;;10510:4;;10508:22;;10521:8;;10508:22;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10494:36;;;;;10538:54;10549:7;10538:54;;;;;;;;;;;;;;;;;:10;:54::i;:::-;-1:-1:-1;10604:9:66;;10286:332;-1:-1:-1;;10286:332:66:o;9947:135:76:-;10031:4;10068:9;10072:5;10068:2;:9;:::i;:::-;10050:15;10055:1;10058:6;10050:4;:15::i;:::-;:27;;;;:::i;:::-;10043:34;9947:135;-1:-1:-1;;;;9947:135:76:o;3072:143:66:-;3124:35;;-1:-1:-1;;;3124:35:66;;-1:-1:-1;;;;;;;;;;;251:64:102;3124:15:66;;:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3174:8:66;;3165:18;;-1:-1:-1;;;3165:18:66;;-1:-1:-1;;;;;3174:8:66;;;3165:18;;;560:51:107;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;3165:8:66;;-1:-1:-1;533:18:107;;3165::66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3189:3:66;;-1:-1:-1;;;;;3189:3:66;;-1:-1:-1;3189:12:66;;-1:-1:-1;3204:4:66;3202:7;10557:98:76;1957:106:103;2006:22;;-1:-1:-1;;;2006:22:103;;-1:-1:-1;;;;;;;;;;;251:64:102;2006:7:103;;:22;;2014:3;;-1:-1:-1;;;2019:8:103;2006:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2038:18:103;;-1:-1:-1;;;2038:18:103;;-1:-1:-1;;;;;578:32:107;;2038:18:103;;;560:51:107;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;2038:13:103;;-1:-1:-1;533:18:107;;2038::103;383:234:107;4613:171:66;4662:50;;-1:-1:-1;;;4662:50:66;;46799:2:107;4662:50:66;;;46781:21:107;46838:2;46818:18;;;46811:30;46877:33;46857:18;;;46850:61;-1:-1:-1;;;;;;;;;;;251:64:102;4662:15:66;;46928:18:107;;4662:50:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4718:3:66;;4735:4;;-1:-1:-1;;;;;4718:3:66;;;;-1:-1:-1;4718:14:66;;-1:-1:-1;4735:4:66;4744:5;;-1:-1:-1;;;;;4744:5:66;4752:26;4757:16;4777:1;4752:26;:::i;20807:125::-;20858:3;;;;;;;;;-1:-1:-1;;;;;20858:3:66;-1:-1:-1;;;;;20858:8:66;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20874:27:66;;-1:-1:-1;;;20874:27:66;;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;20874:15:66;;-1:-1:-1;20874:27:66;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20907:3:66;;:20;;-1:-1:-1;;;20907:20:66;;:3;:20;;;19880:25:107;20919:7:66;19921:18:107;;;19914:34;-1:-1:-1;;;;;20907:3:66;;;;-1:-1:-1;20907:8:66;;-1:-1:-1;19853:18:107;;20907:20:66;19681:273:107;5904:673:66;5994:3;;6007:4;;6016:5;;5994:29;;-1:-1:-1;;;5994:29:66;;5974:14;;-1:-1:-1;;;;;5994:3:66;;;;:10;;:29;;6007:4;;;;6016:5;;5994:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6063:3:66;;5973:50;;-1:-1:-1;6050:18:66;;-1:-1:-1;;;;;6063:3:66;7177:10;:18::i;6050:::-;6114:5;;-1:-1:-1;;;;;6114:5:66;6099:4;;-1:-1:-1;;;;;6079:208:66;;;;6099:4;6136:3;;-1:-1:-1;;;;;6079:208:66;;;;;;6136:3;6148:7;;5534:62:16;;;;;;5898:58;;;;;;6255:1:66;6272;6079:208;;;;;;;;;;;;:::i;:::-;;;;;;;;6306:3;;6293:18;;-1:-1:-1;;;;;6306:3:66;7177:10;:18::i;6293:::-;6336:3;;6357:4;;-1:-1:-1;;;;;6336:3:66;;;;6322:69;;6342:48;;6357:4;6366:5;;-1:-1:-1;;;;;6366:5:66;5898:58:16;;;;;;6388:1:66;6342:12;:48::i;:::-;6322:69;;8189:25:107;;;8177:2;8162:18;6322:69:66;;;;;;;6408:3;;6397:8;;-1:-1:-1;;;;;6408:3:66;:12;6421:7;;5898:58:16;;;;;;6408:47:66;;-1:-1:-1;;;;;;6408:47:66;;;;;;;;;;14299:25:107;;;;14340:18;;;14333:34;;;;14383:18;;;14376:34;6453:1:66;14426:18:107;;;14419:34;14271:19;;6408:47:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6479:3;;6503:4;;6397:58;;-1:-1:-1;6461:111:66;;-1:-1:-1;;;;;6479:3:66;;;;:10;;:3;;6490:10;;6503:4;6501:7;10557:98:76;1935:154:66;1994:3;;1981:18;;-1:-1:-1;;;;;1994:3:66;7177:10;:18::i;1981:::-;2032:5;;2023:4;;2010:32;;2040:1;8189:25:107;;-1:-1:-1;;;;;2032:5:66;;;;2023:4;;;;2010:32;;8177:2:107;8162:18;2010:32:66;;;;;;;2048:3;;2065:4;;-1:-1:-1;;;;;2048:3:66;;;;:14;;2065:4;2063:7;10557:98:76;1134:124:66;1180:38;;-1:-1:-1;;;1180:38:66;;48942:2:107;1180:38:66;;;48924:21:107;48981:2;48961:18;;;48954:30;-1:-1:-1;;;49000:18:107;;;48993:49;-1:-1:-1;;;;;;;;;;;251:64:102;1180:15:66;;49059:18:107;;1180:38:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1224:3:66;;:29;;-1:-1:-1;;;1224:29:66;;:3;:29;;;560:51:107;-1:-1:-1;;;;;1224:3:66;;;;-1:-1:-1;1224:17:66;;-1:-1:-1;533:18:107;;1224:29:66;383:234:107;4065:129:66;4110:39;;-1:-1:-1;;;4110:39:66;;49289:2:107;4110:39:66;;;49271:21:107;49328:2;49308:18;;;49301:30;-1:-1:-1;;;49347:18:107;;;49340:50;-1:-1:-1;;;;;;;;;;;251:64:102;4110:15:66;;49407:18:107;;4110:39:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4155:3:66;;4168:4;;-1:-1:-1;;;;;4155:3:66;;;;-1:-1:-1;4155:10:66;;-1:-1:-1;4168:4:66;4177:5;;-1:-1:-1;;;;;4177:5:66;4185:3;4155:34;;;;;;;;;;;;;;;;;:::i;2093:127::-;2140:35;;-1:-1:-1;;;2140:35:66;;-1:-1:-1;;;;;;;;;;;251:64:102;2140:15:66;;:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2190:8:66;;2181:18;;-1:-1:-1;;;2181:18:66;;-1:-1:-1;;;;;2190:8:66;;;2181:18;;;560:51:107;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;2181:8:66;;-1:-1:-1;533:18:107;;2181::66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2205:3;;;;;;;;;-1:-1:-1;;;;;2205:3:66;-1:-1:-1;;;;;2205:8:66;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21870:351;21940:3;;21955:4;;21964:5;;21940:58;;-1:-1:-1;;;21940:58:66;;21929:8;;-1:-1:-1;;;;;21940:3:66;;;;:12;;:58;;21955:4;;;;21964:5;;21972:7;;;;21929:8;;;;;;21940:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22017:3;;21929:69;;-1:-1:-1;22004:18:66;;-1:-1:-1;;;;;22017:3:66;7177:10;:18::i;22004:::-;22054:5;;22045:4;;22033:35;;22062:5;10797:41:107;;-1:-1:-1;;;;;22054:5:66;;;;22045:4;;;;22033:35;;10785:2:107;10770:18;22033:35:66;;;;;;;22074:3;;22091:4;;22100:5;;22074:33;;-1:-1:-1;;;22074:33:66;;-1:-1:-1;;;;;22074:3:66;;;;:14;;:33;;22091:4;;;;22100:5;;;22074:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22113:31:66;;-1:-1:-1;;;22113:31:66;;40549:2:107;22113:31:66;;;40531:21:107;40588:2;40568:18;;;40561:30;-1:-1:-1;;;40607:18:107;;;40600:42;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;22113:15:66;;-1:-1:-1;40659:18:107;;22113:31:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22150:3:66;;22168:4;;-1:-1:-1;;;;;22150:3:66;;;;-1:-1:-1;22150:15:66;;-1:-1:-1;22168:4:66;22177:5;;-1:-1:-1;;;;;22177:5:66;22185:7;22194;22203:1;22206;22209;22212:3;22150:66;;;;;;;;;;;;;;;;;;;;;;:::i;7254:97:76:-;7295:16;7326:20;7340:5;7326:13;:20::i;:::-;7319:27;;7254:97;:::o;2224:338:66:-;2300:3;;:34;;-1:-1:-1;;;2300:34:66;;2277:17;;-1:-1:-1;;;;;2300:3:66;;:10;;:34;;2277:17;;;;2300:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2276:58:66;-1:-1:-1;2340:53:66;6250:54:16;;;;;;6249:60;;2352:13:66;2351:14;2340:53;;;;;;;;;;;;;;;;;:10;:53::i;:::-;2412:3;;2399:18;;-1:-1:-1;;;;;2412:3:66;7177:10;:18::i;2399:::-;2428:6;;;;;;;2440:3;;;;;;;;;-1:-1:-1;;;;;2440:3:66;-1:-1:-1;;;;;2440:8:66;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2469:3:66;;:34;;-1:-1:-1;;;2469:34:66;;-1:-1:-1;;;;;2469:3:66;;;;-1:-1:-1;2469:10:66;;-1:-1:-1;2469:34:66;;:3;;;;:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2456:47:66;-1:-1:-1;2509:48:66;6250:54:16;;;;;;6249:60;;2509:48:66;;;;;;;;;;;;;-1:-1:-1;;;2509:48:66;;;:10;:48::i;3482:915:103:-;3636:38;;;-1:-1:-1;;;;;578:32:107;;;3636:38:103;;;;560:51:107;;;;3636:38:103;;;;;;;;;;533:18:107;;;;3636:38:103;;;;;;;-1:-1:-1;;;;;3636:38:103;-1:-1:-1;;;3636:38:103;;;3625:50;;3601:20;;3625:10;;;:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3598:77;;;3685:15;3714:7;3703:30;;;;;;;;;;;;:::i;:::-;3685:48;-1:-1:-1;3770:123:103;3888:4;3770:90;3857:2;3770:64;-1:-1:-1;;;3770:35:103;:8;3799:5;3770:28;:35::i;:::-;:52;19602:9;;;:16;;-1:-1:-1;;19602:16:103;;;;;;;;;;;;:9;19503:143;3770:64;:86;19918:10;;;:47;;;;;;;-1:-1:-1;19918:47:103;;;;;;;-1:-1:-1;;;;;19942:21:103;;;;19918:47;;;:10;19814:179;3770:90;:117;;:123::i;:::-;3938:6;3935:456;;;4000:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4000:34:103;-1:-1:-1;;;4000:34:103;;;3989:46;;3962:23;;-1:-1:-1;;;;;3989:10:103;;;:46;;4000:34;3989:46;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3959:76;;;4049:14;4077:10;4066:33;;;;;;;;;;;;:::i;:::-;4049:50;;4123:7;4116:4;:14;4113:143;;;4161:14;4171:4;4161:7;:14;:::i;:::-;4150:26;;;;:::i;:::-;;;4113:143;;;4226:14;4233:7;4226:4;:14;:::i;:::-;4215:26;;;;:::i;:::-;;;4113:143;4269:111;4373:6;4269:72;-1:-1:-1;;;4269:39:103;:8;4302:5;4269:32;:39::i;:111::-;3945:446;;3557:840;;3482:915;;;;:::o;5602:406::-;5726:16;;-1:-1:-1;;;5726:16:103;;5674:12;;;;-1:-1:-1;;;;;;;;;;;251:64:102;5726:10:103;;:16;;5737:4;;5726:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5726:16:103;;;;;;;;;;;;:::i;:::-;5702:40;;5863:8;5857:15;5850:4;5840:8;5836:19;5833:1;5826:47;5818:55;-1:-1:-1;;;;;;5914:18:103;;5893:108;;;;-1:-1:-1;;;5893:108:103;;51155:2:107;5893:108:103;;;51137:21:107;51194:2;51174:18;;;51167:30;51233:34;51213:18;;;51206:62;-1:-1:-1;;;51284:18:107;;;51277:41;51335:19;;5893:108:103;50953:407:107;5893:108:103;5692:316;5602:406;;;:::o;8915:387:66:-;8990:4;;8983:36;;-1:-1:-1;;;;;8990:4:66;8988:7;10557:98:76;8983:36:66;9025:3;;9040:4;;9025:29;;-1:-1:-1;;;9025:29:66;;-1:-1:-1;;;;;9025:3:66;;;;:14;;:29;;9040:4;;;9046:7;;9025:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9071:3:66;;:42;;-1:-1:-1;;;9071:42:66;;9084:7;9071:42;;;14299:25:107;;;14340:18;;;14333:34;9102:7:66;14383:18:107;;;14376:34;9060:8:66;14426:18:107;;;14419:34;;;9060:8:66;-1:-1:-1;;;;;;9071:3:66;;;;-1:-1:-1;9071:12:66;;14271:19:107;;9071:42:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9120:35;;-1:-1:-1;;;9120:35:66;;51566:2:107;9120:35:66;;;51548:21:107;51605:2;51585:18;;;51578:30;-1:-1:-1;;;51624:18:107;;;51617:46;9060:53:66;;-1:-1:-1;;;;;;;;;;;;251:64:102;9120:15:66;;51680:18:107;;9120:35:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9161:3:66;;9184:4;;-1:-1:-1;;;;;9161:3:66;;;;-1:-1:-1;9161:13:66;;-1:-1:-1;9184:4:66;9199:5;;-1:-1:-1;;;;;9199:5:66;9213:46;;;;;;;;;9227:3;9213:46;;;;9232:7;9213:46;;;;9241:7;9213:46;;;;9250:7;9213:46;;;:12;:46::i;:::-;9287:3;;9161:136;;-1:-1:-1;;;;;;9161:136:66;;;;;;;;;;;;9267:4;;-1:-1:-1;;;;;9287:3:66;;;;9161:136;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5337:164::-;5411:46;;-1:-1:-1;;;5411:46:66;;52606:2:107;5411:46:66;;;52588:21:107;52645:2;52625:18;;;52618:30;52684:29;52664:18;;;52657:57;-1:-1:-1;;;;;;;;;;;251:64:102;5411:15:66;;52731:18:107;;5411:46:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5463:3:66;;:33;;-1:-1:-1;;;5463:33:66;;:3;:33;;;14299:25:107;-1:-1:-1;;;14340:18:107;;;14333:34;5486:6:66;14383:18:107;;;14376:34;5463:3:66;14426:18:107;;;14419:34;-1:-1:-1;;;;;5463:3:66;;;;-1:-1:-1;5463:12:66;;-1:-1:-1;14271:19:107;;5463:33:66;14029:430:107;16866:132:66;16935:3;;:58;;-1:-1:-1;;;16935:58:66;;-1:-1:-1;;;;;32316:15:107;;;16935:58:66;;;32298:34:107;32368:15;;;32348:18;;;32341:43;16966:9:66;32400:18:107;;;32393:34;;;32443:18;;;32436:34;16935:3:66;32486:19:107;;;32479:51;16935:3:66;;;;:15;;32232:19:107;;16935:58:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4522:87::-;4568:3;;4585:4;;-1:-1:-1;;;;;4568:3:66;;;;:14;;4585:4;4583:7;10557:98:76;7844:163:66;7922:48;;-1:-1:-1;;;7922:48:66;;54005:2:107;7922:48:66;;;53987:21:107;54044:2;54024:18;;;54017:30;54083:31;54063:18;;;54056:59;-1:-1:-1;;;;;;;;;;;251:64:102;7922:15:66;;54132:18:107;;7922:48:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7976:3:66;;:26;;-1:-1:-1;;;7976:26:66;;-1:-1:-1;;;7976:26:66;;;19880:25:107;7976:3:66;19921:18:107;;;19914:34;-1:-1:-1;;;;;7976:3:66;;;;-1:-1:-1;7976:15:66;;-1:-1:-1;19853:18:107;;7976:26:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;931:199::-;1010:8;;984:60;;-1:-1:-1;;;;;1010:8:66;;;;;;;;984:60;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;978:3:66;:66;;-1:-1:-1;;;;;;978:66:66;-1:-1:-1;;;;;978:66:66;;;;;;;;;1059:16;;;-1:-1:-1;;;1059:16:66;;;;1050:75;;978:66;1059:14;;:16;;;;;;;;;;;;;;978:66;1059:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1077:8;;1050:75;;;;;;;;;;;;;-1:-1:-1;;;;;1077:8:66;;;;1050:75;;;;;:8;:75::i;:::-;931:199::o;19937:202::-;19998:3;;20013:4;;20022:5;;19998:58;;-1:-1:-1;;;19998:58:66;;19987:8;;-1:-1:-1;;;;;19998:3:66;;;;:12;;:58;;20013:4;;;;20022:5;;20030:7;;;;19987:8;;;;;;19998:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19987:69;;20063:3;;;;;;;;;-1:-1:-1;;;;;20063:3:66;-1:-1:-1;;;;;20063:8:66;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20079:27:66;;-1:-1:-1;;;20079:27:66;;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;20079:15:66;;-1:-1:-1;20079:27:66;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20112:3:66;;:22;;-1:-1:-1;;;20112:22:66;;;;;19880:25:107;;;20126:7:66;19921:18:107;;;19914:34;-1:-1:-1;;;;;20112:3:66;;;;-1:-1:-1;20112:8:66;;-1:-1:-1;19853:18:107;;20112:22:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3993:68::-;4035:3;;:21;;-1:-1:-1;;;4035:21:66;;:3;:21;;;19880:25:107;;;19921:18;;;19914:34;-1:-1:-1;;;;;4035:3:66;;;;:15;;19853:18:107;;4035:21:66;19681:273:107;18813:469:66;18889:8;;:46;;-1:-1:-1;;;18889:46:66;;18907:7;18889:46;;;14299:25:107;;;14340:18;;;14333:34;18925:6:66;14383:18:107;;;14376:34;18872:14:66;14426:18:107;;;14419:34;;;18872:14:66;-1:-1:-1;;;;;18889:8:66;;:17;;14271:19:107;;18889:46:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18985:5;;18872:63;;-1:-1:-1;18967:4:66;;:13;;-1:-1:-1;;;;;18985:5:66;18995:4;;-1:-1:-1;;;;;18995:4:66;19002:9;18952:61;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;18952:61:66;;;;;;;;;;;;;;-1:-1:-1;;;;;18952:61:66;;;;;;;;;;;;18941:72;;;-1:-1:-1;18941:8:66;;18952:61;18941:72;:::i;:::-;-1:-1:-1;19031:3:66;;19046:4;;19055:5;;19031:64;;-1:-1:-1;;;19031:64:66;;19020:8;;-1:-1:-1;;;;;19031:3:66;;;;:12;;:64;;19046:4;;;;19055:5;;19063:7;;;;19081;;19020:8;;;;19031:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19112:3;;:24;;-1:-1:-1;;;19112:24:66;;;;;19880:25:107;;;19126:9:66;19921:18:107;;;19914:34;19020:75:66;;-1:-1:-1;19101:73:66;;-1:-1:-1;;;;;19112:3:66;;;;:8;;19853:18:107;;19112:24:66;19681:273:107;19101:73:66;19198:3;;19209:5;;19219:4;;19198:27;;-1:-1:-1;;;19198:27:66;;19180:97;;-1:-1:-1;;;;;19198:3:66;;;;:8;;:27;;19209:5;;;;19219:4;;19198:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19229:1;19198:32;19180:97;;;;;;;;;;;;;;;;;:10;:97::i;6581:336::-;6656:3;;6673:4;;6682:5;;6656:38;;-1:-1:-1;;;6656:38:66;;-1:-1:-1;;;;;6656:3:66;;;;:14;;:38;;6673:4;;;;6682:5;;;6690:3;;6656:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6720:3:66;;6733:4;;6742:5;;6720:29;;-1:-1:-1;;;6720:29:66;;6703:13;;-1:-1:-1;;;;;;6720:3:66;;;;-1:-1:-1;6720:10:66;;:29;;6733:4;;;6742:5;;6720:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6700:49;-1:-1:-1;6755:11:66;;-1:-1:-1;;;;;;5482:60:17;;;;;6770:23:66;5847:72:17;;;;;;6770:1:66;:23;:::i;:::-;6769:41;;;;:::i;:::-;6816:48;;-1:-1:-1;;;6816:48:66;;55828:2:107;6816:48:66;;;55810:21:107;55867:2;55847:18;;;55840:30;55906:31;55886:18;;;55879:59;6755:55:66;;-1:-1:-1;;;;;;;;;;;;251:64:102;6816:15:66;;55955:18:107;;6816:48:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6870:3:66;;-1:-1:-1;;;;;6870:3:66;;-1:-1:-1;6870:12:66;;-1:-1:-1;6883:10:66;6870:3;6883:6;:10;:::i;:::-;6895;6904:1;6895:6;:10;:::i;:::-;6870:42;;-1:-1:-1;;;;;;6870:42:66;;;;;;;;;;14299:25:107;;;;14340:18;;;14333:34;6907:1:66;14383:18:107;;;14376:34;6910:1:66;14426:18:107;;;14419:34;14271:19;;6870:42:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1756:130:103:-;1830:18;;-1:-1:-1;;;1830:18:103;;-1:-1:-1;;;;;;;;;;;251:64:102;1830:7:103;;:18;;1838:3;;1843:4;;1830:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1858:21:103;;-1:-1:-1;;;1858:21:103;;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;1858:8:103;;-1:-1:-1;1858:21:103;;1867:3;;1872:6;;1858:21;;;:::i;11091:150:66:-;11128:39;;-1:-1:-1;;;11128:39:66;;-1:-1:-1;;;;;;;;;;;251:64:102;11128:15:66;;:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11173:3:66;;11188:4;;-1:-1:-1;;;;;11173:3:66;;;;-1:-1:-1;11173:12:66;;-1:-1:-1;11188:4:66;11197:5;;-1:-1:-1;;;;;11197:5:66;11205:7;11214;11223:6;11231:1;11234;11173:63;;;;;;;;;;;;;;;;;;;;;:::i;20342:313::-;20395:3;;;;;;;;;-1:-1:-1;;;;;20395:3:66;-1:-1:-1;;;;;20395:8:66;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20453:3:66;;20451:32;;20413:12;;-1:-1:-1;20413:12:66;;-1:-1:-1;;;;;;20453:3:66;;;;20470:8;;20413:12;20451:32;20413:12;20451:32;20470:8;20453:3;20451:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20412:71;;;;20493:7;20489:162;;;20510:46;;;;;;;;;;;;;;;;;;:4;:46::i;20489:162::-;20577:15;20595:18;20605:7;20595:9;:18::i;:::-;20577:36;;20621:23;20630:1;20621:23;;;;;;;;;;;;;-1:-1:-1;;;20621:23:66;;;:8;:23::i;3829:160::-;3883:35;;-1:-1:-1;;;3883:35:66;;-1:-1:-1;;;;;;;;;;;251:64:102;3883:15:66;;:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3933:8:66;;3924:18;;-1:-1:-1;;;3924:18:66;;-1:-1:-1;;;;;3933:8:66;;;3924:18;;;560:51:107;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;3924:8:66;;-1:-1:-1;533:18:107;;3924::66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3948:3:66;;3965:4;;-1:-1:-1;;;;;3948:3:66;;;;-1:-1:-1;3948:14:66;;-1:-1:-1;3965:4:66;3963:7;10557:98:76;2768:279:77;2823:20;;;;;;;;;:15;:20;;;2849:173;2870:5;:12;2866:1;:16;2849:173;;;2915:1;2918:18;2927:5;2933:1;2927:8;;;;;;;;:::i;2918:18::-;2901:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2897:40;;2968:1;2953:5;:12;:16;;;;:::i;:::-;2949:1;:20;2945:71;;;2999:1;2985:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;2981:26;;2945:71;2884:3;;;;:::i;:::-;;;;2849:173;;1179:83:103;-1:-1:-1;;;;;;;;;;;1224:7:103;1232:22;1250:4;1232:15;:22;:::i;4369:149:66:-;4419:45;;-1:-1:-1;;;4419:45:66;;57159:2:107;4419:45:66;;;57141:21:107;57198:2;57178:18;;;57171:30;57237:28;57217:18;;;57210:56;-1:-1:-1;;;;;;;;;;;251:64:102;4419:15:66;;57283:18:107;;4419:45:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4470:3:66;;-1:-1:-1;;;;;4470:3:66;;-1:-1:-1;4470:15:66;;-1:-1:-1;4486:26:66;4491:16;4470:3;4486:26;:::i;:::-;4470:43;;;;;;;;;;;;;8189:25:107;;8177:2;8162:18;;8043:177;1819:584:101;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:101;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2978:55:101;3059:16;1980:374;;2196:43;;2023:20;;-1:-1:-1;;;;;;;;;;;1671:64:101;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:101;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:101;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:101;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:101:o;9126:168:76:-;9236:3;;9205:13;;9228;;-1:-1:-1;;;;;9236:3:76;9228:5;:13::i;:::-;-1:-1:-1;9273:3:76;;9255:33;;-1:-1:-1;;;;;9273:3:76;;;;9278:4;;9284:3;;9255:33;;;:::i;:::-;-1:-1:-1;;;;;31181:15:107;;;31163:34;;31233:15;;;31228:2;31213:18;;31206:43;31285:15;;;31280:2;31265:18;;31258:43;31113:2;31098:18;9255:33:76;;;;;;;;;;;;;;;;;;;;;;;9247:42;;9126:168;;;;;:::o;21035:198:66:-;21101:3;;21116:4;;21125:5;;21101:58;;-1:-1:-1;;;21101:58:66;;21090:8;;-1:-1:-1;;;;;21101:3:66;;;;:12;;:58;;21116:4;;;;21125:5;;21133:7;;;;21090:8;;;;;;21101:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21090:69;;21165:3;;;;;;;;;-1:-1:-1;;;;;21165:3:66;-1:-1:-1;;;;;21165:8:66;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8854:268:76;8954:9;8971:12;9000:3;;;;;;;;;-1:-1:-1;;;;;9000:3:76;9012:4;9026:3;8986:45;;;;;:::i;7672:168:66:-;7749:49;;-1:-1:-1;;;7749:49:66;;58588:2:107;7749:49:66;;;58570:21:107;58627:2;58607:18;;;58600:30;58666:32;58646:18;;;58639:60;-1:-1:-1;;;;;;;;;;;251:64:102;7749:15:66;;58716:18:107;;7749:49:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7804:3:66;;:31;;-1:-1:-1;;;7804:31:66;;:3;:31;;;59048:25:107;;;59089:18;;;59082:34;;;59132:18;;;59125:34;7826:5:66;59175:18:107;;;59168:34;7804:3:66;59218:19:107;;;59211:35;-1:-1:-1;;;;;7804:3:66;;;;-1:-1:-1;7804:12:66;;-1:-1:-1;59020:19:107;;7804:31:66;58745:507:107;4788:143:66;4836:43;;-1:-1:-1;;;4836:43:66;;59458:2:107;4836:43:66;;;59440:21:107;59497:2;59477:18;;;59470:30;59536:26;59516:18;;;59509:54;-1:-1:-1;;;;;;;;;;;251:64:102;4836:15:66;;59580:18:107;;4836:43:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4885:3:66;;-1:-1:-1;;;;;4885:3:66;;-1:-1:-1;4885:13:66;;-1:-1:-1;4899:26:66;4904:16;4885:3;4899:26;:::i;13085:167::-;13180:3;;:67;;-1:-1:-1;;;13180:67:66;;-1:-1:-1;;;;;13180:3:66;;;;:15;;:67;;13196:5;;13203:6;;13211:7;;13220;;13229:6;;13180:3;;;;13243;;13180:67;;;:::i;3164:81:103:-;3221:17;;-1:-1:-1;;;3221:17:103;;-1:-1:-1;;;;;;;;;;;251:64:102;3221:7:103;;:17;;3229:2;;3233:4;;3221:17;;;:::i;15229:568:66:-;15311:3;;15333:5;;15349:4;;15311:111;;-1:-1:-1;;;15311:111:66;;15294:14;;-1:-1:-1;;;;;15311:3:66;;;;:12;;:111;;15333:5;;;;15349:4;;15362:7;;;;15392:6;;15294:14;;;;15311:111;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15491:5;;15294:128;;-1:-1:-1;15461:4:66;;:19;;-1:-1:-1;;;;;15491:5:66;15501:4;;-1:-1:-1;;;;;15501:4:66;15508:9;15439:85;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;15439:85:66;;;;;;;;;;;;;;-1:-1:-1;;;;;15439:85:66;;;;;;;;;;;;15428:96;;;-1:-1:-1;15428:8:66;;15439:85;15428:96;:::i;:::-;-1:-1:-1;15542:3:66;;15557:4;;15566:5;;15542:63;;-1:-1:-1;;;15542:63:66;;15531:8;;-1:-1:-1;;;;;15542:3:66;;;;:12;;:63;;15557:4;;;;15566:5;;15574:7;;;;15592:6;;15531:8;;;;15542:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15622:3;;:22;;-1:-1:-1;;;15622:22:66;;;;;19880:25:107;;;15636:7:66;19921:18:107;;;19914:34;15531:74:66;;-1:-1:-1;15611:71:66;;-1:-1:-1;;;;;15622:3:66;;;;:8;;19853:18:107;;15622:22:66;19681:273:107;15611:71:66;15706:3;;15717:5;;15727:4;;15706:27;;-1:-1:-1;;;15706:27:66;;15688:104;;-1:-1:-1;;;;;15706:3:66;;;;:8;;:27;;15717:5;;;;15727:4;;15706:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15737:1;15706:32;15688:104;;;;;;;;;;;;;;;;;:10;:104::i;15801:566::-;15881:3;;15903:4;;15918:5;;15881:112;;-1:-1:-1;;;15881:112:66;;15864:14;;-1:-1:-1;;;;;15881:3:66;;;;:12;;:112;;15903:4;;;;15918:5;;15932:7;;;;15962;;15864:14;;;;15881:112;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16065:4;;15864:129;;-1:-1:-1;16035:4:66;;:19;;-1:-1:-1;;;;;16065:4:66;16074:5;;-1:-1:-1;;;;;16074:5:66;16082:9;16013:85;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;16013:85:66;;;;;;;;;;;;;;-1:-1:-1;;;;;16013:85:66;;;;;;;;;;;;15999:99;;;-1:-1:-1;15999:11:66;;16013:85;15999:99;:::i;:::-;-1:-1:-1;16116:3:66;;16131:4;;16140:5;;16116:63;;-1:-1:-1;;;16116:63:66;;16105:8;;-1:-1:-1;;;;;16116:3:66;;;;:12;;:63;;16131:4;;;;16140:5;;16148:7;;;;16166:6;;16105:8;;;;16116:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16196:3;;:22;;-1:-1:-1;;;16196:22:66;;;;;19880:25:107;;;16210:7:66;19921:18:107;;;19914:34;16105:74:66;;-1:-1:-1;16185:71:66;;-1:-1:-1;;;;;16196:3:66;;;;:8;;19853:18:107;;16196:22:66;19681:273:107;16185:71:66;16280:3;;16291:4;;16300:5;;16280:27;;-1:-1:-1;;;16280:27:66;;16262:100;;-1:-1:-1;;;;;16280:3:66;;;;:8;;:27;;16291:4;;;;16300:5;;16280:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16311:1;16280:32;16262:100;;;;;;;;;;;;;;;;;:10;:100::i;3370:165::-;3423:35;;-1:-1:-1;;;3423:35:66;;-1:-1:-1;;;;;;;;;;;251:64:102;3423:15:66;;:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3473:8:66;;3464:18;;-1:-1:-1;;;3464:18:66;;-1:-1:-1;;;;;3473:8:66;;;3464:18;;;560:51:107;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;3464:8:66;;-1:-1:-1;533:18:107;;3464::66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3488:3:66;;3503:5;;-1:-1:-1;;;;;3488:3:66;;;;-1:-1:-1;3488:12:66;;-1:-1:-1;3503:5:66;3513:4;;-1:-1:-1;;;;;3513:4:66;3520:1;3523:3;3528:1;3488:42;;;;;;;;;;;;;;;;;;;:::i;2304:130:103:-;2369:22;;-1:-1:-1;;;2369:22:103;;-1:-1:-1;;;;;;;;;;;251:64:102;2369:7:103;;:22;;2377:3;;-1:-1:-1;;;2382:8:103;2369:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2401:26:103;;-1:-1:-1;;;2401:26:103;;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;2401:13:103;;-1:-1:-1;2401:26:103;;2415:3;;2420:6;;2401:26;;;:::i;8725:186:66:-;8796:3;;8813:4;;8822:5;;8838:3;;8796:56;;;-1:-1:-1;;;8796:56:66;;-1:-1:-1;;;;;8813:4:66;;;8796:56;;;40147:34:107;8822:5:66;;;40197:18:107;;;40190:43;8838:3:66;;;40249:18:107;;;40242:43;8846:4:66;40301:18:107;;;40294:43;8796:56:66;8780:126;;8796:3;;;;;:14;;40081:19:107;;;;;8796:56:66;;;;;;;;;;:3;:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8860:1;8780:126;;;;;;;;;;;;;;;;;:8;:126::i;18567:242::-;18656:24;18683:75;;;;;;;;;18704:2;18683:75;;;;18708:7;18683:75;;;;-1:-1:-1;;;;;18683:75:66;;;;;;18735:16;18683:75;;;;;:12;:75::i;:::-;18764:3;;:40;;-1:-1:-1;;;18764:40:66;;18656:102;;-1:-1:-1;;;;;;18764:3:66;;:10;;:40;;18775:5;;18782:6;;18656:102;;18764:3;;:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;18650:159;18567:242;;;:::o;9665:224:76:-;9721:4;9775:13;9791:59;:47;;;;;;;;;;;;;;-1:-1:-1;;;9791:47:76;;;:27;9815:1;9791:8;:15;;:27;;;;:::i;:::-;:31;15575:24:103;;;;;;;19758:9;;;:22;;;;;;;-1:-1:-1;;19758:22:103;;;;;;;;;:9;19652:156;9791:47:76;:57;:59::i;:::-;9775:75;-1:-1:-1;9872:12:76;9775:75;9872:2;:12;:::i;:::-;9863:21;;:6;:21;:::i;12723:276:66:-;12795:3;;12810:4;;12819:5;;12795:64;;-1:-1:-1;;;12795:64:66;;12784:8;;-1:-1:-1;;;;;12795:3:66;;;;:12;;:64;;12810:4;;;;12819:5;;12827:7;;;;12845;;12784:8;;;;12795:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12784:75;;12891:4;-1:-1:-1;;;;;12891:18:66;;12912:3;12876:41;;;;;;8189:25:107;;8177:2;8162:18;;8043:177;20659:144:66;20716:3;;;;;;;;;-1:-1:-1;;;;;20716:3:66;-1:-1:-1;;;;;20716:8:66;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20732:27:66;;-1:-1:-1;;;20732:27:66;;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;20732:15:66;;-1:-1:-1;20732:27:66;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20765:3:66;;:33;;-1:-1:-1;;;20765:33:66;;20781:7;20765:33;;;19880:25:107;;;19921:18;;;19914:34;-1:-1:-1;;;;;20765:3:66;;;;-1:-1:-1;20765:15:66;;-1:-1:-1;19853:18:107;;20765:33:66;19681:273:107;2566:502:66;2638:3;;:34;;-1:-1:-1;;;2638:34:66;;2615:17;;-1:-1:-1;;;;;2638:3:66;;:10;;:34;;2615:17;;;;2638:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2614:58:66;-1:-1:-1;2678:53:66;6250:54:16;;;;;;6249:60;;2690:13:66;6169:147:16;2678:53:66;2750:3;;2737:18;;-1:-1:-1;;;;;2750:3:66;7177:10;:18::i;2737:::-;2766:6;;;;;;;2778:3;;;;;;;;;-1:-1:-1;;;;;2778:3:66;-1:-1:-1;;;;;2778:8:66;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2807:3:66;;:34;;-1:-1:-1;;;2807:34:66;;-1:-1:-1;;;;;2807:3:66;;;;-1:-1:-1;2807:10:66;;-1:-1:-1;2807:34:66;;:3;;;;:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2794:47:66;-1:-1:-1;2847:47:66;6250:54:16;;;;;;6249:60;;2847:47:66;;;;;;;;;;;;;-1:-1:-1;;;2847:47:66;;;:10;:47::i;:::-;2913:3;;2900:18;;-1:-1:-1;;;;;2913:3:66;7177:10;:18::i;2900:::-;2929:6;;;;;;;2941:3;;;;;;;;;-1:-1:-1;;;;;2941:3:66;-1:-1:-1;;;;;2941:8:66;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2970:3:66;;:34;;-1:-1:-1;;;2970:34:66;;-1:-1:-1;;;;;2970:3:66;;;;-1:-1:-1;2970:10:66;;-1:-1:-1;2970:34:66;;:3;;;;:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2957:47:66;-1:-1:-1;3010:53:66;6250:54:16;;;;;;6249:60;;3010:53:66;;;;;;;;;;;;;;;;;:10;:53::i;2732:341:103:-;-1:-1:-1;;;;;;;;;;;2808:125:103;;;;62966:2:107;62948:21;;;63005:1;62985:18;;;62978:29;-1:-1:-1;;;63038:2:107;63023:18;;63016:37;63091:3;63084:4;63069:20;;63062:33;;;63132:2;63111:19;;;63104:31;63172:34;63166:3;63151:19;;63144:63;63244:34;63238:3;63223:19;;63216:63;63316:32;63310:3;63295:19;;63288:61;63381:3;63366:19;;62663:728;2808:125:103;;;;;;;;2943:123;3061:4;2943:90;3030:2;2943:64;-1:-1:-1;;;2943:35:103;:8;2972:5;2943:28;:35::i;11595:130:66:-;11661:3;;:59;;-1:-1:-1;;;11661:59:66;;-1:-1:-1;;;;;11661:3:66;;;;:12;;:59;;11674:5;;11681:6;;11689:7;;;;11707:6;;11661:3;;;;:59;;;:::i;1771:160::-;1825:35;;-1:-1:-1;;;1825:35:66;;-1:-1:-1;;;;;;;;;;;251:64:102;1825:15:66;;:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1875:8:66;;1866:18;;-1:-1:-1;;;1866:18:66;;-1:-1:-1;;;;;1875:8:66;;;1866:18;;;560:51:107;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;1866:8:66;;-1:-1:-1;533:18:107;;1866::66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1890:3:66;;1907:4;;-1:-1:-1;;;;;1890:3:66;;;;-1:-1:-1;1890:14:66;;-1:-1:-1;1907:4:66;1905:7;10557:98:76;8368:353:66;8445:3;;:42;;-1:-1:-1;;;8445:42:66;;8458:7;8445:42;;;14299:25:107;;;14340:18;;;14333:34;8476:7:66;14383:18:107;;;14376:34;8434:8:66;14426:18:107;;;14419:34;;;8434:8:66;-1:-1:-1;;;;;8445:3:66;;:12;;14271:19:107;;8445:42:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8434:53;;8493:24;8520:93;;;;;;;;;8541:3;8520:93;;;;-1:-1:-1;;;;;8520:93:66;;;;;;-1:-1:-1;;;;;8564:22:66;;8589:1;8564:26;;;;:::i;:::-;8520:93;;;;-1:-1:-1;;8520:93:66;;;:12;:93::i;:::-;8619:47;;-1:-1:-1;;;8619:47:66;;64345:2:107;8619:47:66;;;64327:21:107;64384:2;64364:18;;;64357:30;64423;64403:18;;;64396:58;8493:120:66;;-1:-1:-1;;;;;;;;;;;;251:64:102;8619:15:66;;64471:18:107;;8619:47:66;64144:351:107;1518:106:103;1576:18;;-1:-1:-1;;;1576:18:103;;-1:-1:-1;;;;;;;;;;;251:64:102;1576:7:103;;:18;;1584:3;;1589:4;;1576:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1604:13:103;;-1:-1:-1;;;1604:13:103;;-1:-1:-1;;;;;578:32:107;;1604:13:103;;;560:51:107;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;1604:8:103;;-1:-1:-1;533:18:107;;1604:13:103;383:234:107;7841:173:76;7929:16;7962:47;7976:12;7990:11;8003:5;7962:13;:47::i;4935:170:66:-;5009:46;;-1:-1:-1;;;5009:46:66;;64701:2:107;5009:46:66;;;64683:21:107;64740:2;64720:18;;;64713:30;64779:29;64759:18;;;64752:57;-1:-1:-1;;;;;;;;;;;251:64:102;5009:15:66;;64826:18:107;;5009:46:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5061:3:66;;:39;;-1:-1:-1;;;5061:39:66;;-1:-1:-1;;;5061:39:66;;;14299:25:107;5081:7:66;14340:18:107;;;14333:34;5090:6:66;14383:18:107;;;14376:34;5061:3:66;14426:18:107;;;14419:34;-1:-1:-1;;;;;5061:3:66;;;;-1:-1:-1;5061:12:66;;-1:-1:-1;14271:19:107;;5061:39:66;14029:430:107;21237:252:66;21305:3;;21320:4;;21329:5;;21305:58;;-1:-1:-1;;;21305:58:66;;21294:8;;-1:-1:-1;;;;;21305:3:66;;;;:12;;:58;;21320:4;;;;21329:5;;21337:7;;;;21294:8;;;;;;21305:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21294:69;;21369:3;;;;;;;;;-1:-1:-1;;;;;21369:3:66;-1:-1:-1;;;;;21369:8:66;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21385:27:66;;-1:-1:-1;;;21385:27:66;;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;21385:15:66;;-1:-1:-1;21385:27:66;;;;;:::i;17467:532::-;17540:3;;17562:4;;17577:5;;17540:116;;-1:-1:-1;;;17540:116:66;;17529:8;;-1:-1:-1;;;;;17540:3:66;;;;:12;;:116;;17562:4;;;;17577:5;;17591:9;;;;17625:7;;17529:8;;;;17540:116;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17662:3;;17677:4;;17686:5;;17662:68;;-1:-1:-1;;;17662:68:66;;17529:127;;-1:-1:-1;;;;;;17662:3:66;;;;:12;;:68;;17677:4;;;17686:5;;17694:9;;;;17716:7;;17725:1;;;;17662:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;17788:4:66;;17765;;:18;;-1:-1:-1;;;;;17788:4:66;17797:5;;-1:-1:-1;;;;;17797:5:66;17750:55;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;17750:55:66;;;;;;;;;;;;;;-1:-1:-1;;;;;17750:55:66;;;;;;;;;;;;17736:69;;;-1:-1:-1;17736:11:66;;17750:55;17736:69;:::i;:::-;-1:-1:-1;17822:3:66;;:24;;-1:-1:-1;;;17822:24:66;;;;;19880:25:107;;;17836:9:66;19921:18:107;;;19914:34;17811:73:66;;-1:-1:-1;;;;;17822:3:66;;:8;;19853:18:107;;17822:24:66;19681:273:107;17811:73:66;17908:3;;17919:4;;17890:104;;-1:-1:-1;;;;;17908:3:66;;;;:8;;17919:4;17928:5;;-1:-1:-1;;;;;17928:5:66;17926:8;10557:98:76;9306:319:66;9386:4;;9379:36;;-1:-1:-1;;;;;9386:4:66;9384:7;10557:98:76;9379:36:66;9421:3;;9436:4;;9421:29;;-1:-1:-1;;;9421:29:66;;-1:-1:-1;;;;;9421:3:66;;;;:14;;:29;;9436:4;;;9442:7;;9421:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9456:3:66;;:42;;-1:-1:-1;;;9456:42:66;;9469:7;9456:42;;;14299:25:107;;;14340:18;;;14333:34;9487:7:66;14383:18:107;;;14376:34;9456:3:66;14426:18:107;;;14419:34;-1:-1:-1;;;;;9456:3:66;;;;-1:-1:-1;9456:12:66;;-1:-1:-1;14271:19:107;;9456:42:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9504:35:66;;-1:-1:-1;;;9504:35:66;;51566:2:107;9504:35:66;;;51548:21:107;51605:2;51585:18;;;51578:30;-1:-1:-1;;;51624:18:107;;;51617:46;-1:-1:-1;;;;;;;;;;;251:64:102;9504:15:66;;51680:18:107;;9504:35:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9545:3:66;;9566:4;;9575:5;;9615:3;;9545:75;;-1:-1:-1;;;9545:75:66;;-1:-1:-1;;;;;9545:3:66;;;;-1:-1:-1;9545:18:66;;-1:-1:-1;9545:75:66;;9566:4;;;;9575:5;;;;9583:7;;;;9601:4;;9615:3;;;;9545:75;;;:::i;19731:166::-;19785:3;;;;;;;;;-1:-1:-1;;;;;19785:3:66;-1:-1:-1;;;;;19785:8:66;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19801:27:66;;-1:-1:-1;;;19801:27:66;;-1:-1:-1;;;;;;;;;;;251:64:102;-1:-1:-1;19801:15:66;;-1:-1:-1;19801:27:66;;;;;:::i;2279:576:76:-;2426:21;;2338:115;;2361:4;;2374:12;;2399:19;;2426:21;;;2338:115;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2331:4:76;:122;;-1:-1:-1;;;;;;2331:122:76;-1:-1:-1;;;;;2331:122:76;;;;;;;;;;2490:4;2557:22;;2467:118;;2503:13;;2529:20;;2557:22;;;;;2467:118;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2459:5:76;:126;;-1:-1:-1;;;;;;2459:126:76;-1:-1:-1;;;;;2459:126:76;;;;;;;;;2634:4;;2647:7;:24;2620:52;;2634:4;;;;;2459:126;2647:24;;2620:13;:52::i;:::-;2614:3;:58;;-1:-1:-1;;;;;;2614:58:76;-1:-1:-1;;;;;2614:58:76;;;;;;;;;2719:27;;;-1:-1:-1;;;2719:27:76;;;;:8;;2735;;2719:27;;;;;-1:-1:-1;;2719:27:76;;;;;;;2735:8;2614:58;2719:27;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2771:4:76;;2786:3;;2771:36;;-1:-1:-1;;;2771:36:76;;-1:-1:-1;;;;;2771:4:76;;;;-1:-1:-1;2771:12:76;;-1:-1:-1;2771:36:76;;-1:-1:-1;2786:3:76;;;-1:-1:-1;;2792:14:76;2771:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2813:5:76;;2829:3;;2813:37;;-1:-1:-1;;;2813:37:76;;-1:-1:-1;;;;;2813:5:76;;;;:13;;:37;;2829:3;;;-1:-1:-1;;2835:14:76;2813:37;;;:::i;1250:100:77:-;1292:20;1331:14;:12;:14::i;8315:337:76:-;8414:9;8420:2;8414:5;:9::i;:::-;;8429;8435:2;8429:5;:9::i;:::-;-1:-1:-1;8466:18:76;;8444:52;;-1:-1:-1;;;8444:52:76;;-1:-1:-1;;;;;8444:13:76;;;;;:52;;8458:2;;8462;;8466:18;8486:1;;8489:6;;8444:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8524:18:76;;8502:52;;-1:-1:-1;;;8502:52:76;;-1:-1:-1;;;;;8502:13:76;;;-1:-1:-1;8502:13:76;;-1:-1:-1;8502:52:76;;8516:2;;8520;;8524:18;8544:1;;8547:6;;8502:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;275:37:102;;259:55;;251:64;;-1:-1:-1;;;;;8575:8:76;;8584:2;8595;-1:-1:-1;;;;;8588:17:76;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8588:19:76;;;;;;;;;;;;:::i;:::-;8575:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;275:37:102;;259:55;;251:64;;-1:-1:-1;;;;;8614:8:76;;8623:2;8634;-1:-1:-1;;;;;8627:17:76;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8627:19:76;;;;;;;;;;;;:::i;:::-;8614:33;;;;;;;;;;;;;;;;:::i;3398:177:78:-;3522:16;;;3536:1;3522:16;;;;;;;;;3473;;3499:20;;3522:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3499:39;;3553:1;3544:3;3548:1;3544:6;;;;;;;;:::i;:::-;;;;;;;;;;:10;3567:3;3398:177;-1:-1:-1;;3398:177:78:o;3418:191:101:-;3497:9;3492:111;;-1:-1:-1;;;;;;;;;;;3553:3:101;3527:30;;;;;;:::i;:::-;;;;;;;;3571:21;3582:9;3571:10;:21::i;1530:97:77:-;1579:43;;-1:-1:-1;;;1579:43:77;;1593:4;1579:43;;;70440:41:107;;;70497:18;;;70490:50;;;70556:18;;;70549:50;;;70615:18;;;70608:50;-1:-1:-1;;;;;70695:32:107;;70674:19;;;70667:61;-1:-1:-1;;;;;;;;;;;251:64:102;1579:13:77;;70412:19:107;;1579:43:77;70205:529:107;6832:397:76;7006:3;;:21;;-1:-1:-1;;;7006:21:76;;6952:4;;;;;;-1:-1:-1;;;;;7006:3:76;;:10;;:21;;7017:4;;7023:3;;7006:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6964:63;;-1:-1:-1;6964:63:76;-1:-1:-1;7033:8:76;7072;5534:62:16;;;;;;7051:29:76;7047:115;;;-1:-1:-1;5534:62:16;;;;;;7047:115:76;;;-1:-1:-1;7147:8:76;7047:115;7212:3;7176:32;5847:72:17;;;;;;7176:6:76;:32;:::i;:::-;7175:40;;;;:::i;:::-;:48;;7218:5;7175:48;:::i;:::-;7167:57;6832:397;-1:-1:-1;;;;;;;;6832:397:76:o;5469:178:101:-;5550:1;5545;:6;5541:100;;-1:-1:-1;;;;;;;;;;;5598:3:101;5572:30;;;;;;:::i;:::-;;;;;;;;5616:14;5625:1;5628;5616:8;:14::i;319:461:78:-;381:27;440:2;446:1;440:7;436:42;;-1:-1:-1;;459:10:78;;;;;;;;;;;;-1:-1:-1;;;459:10:78;;;;;319:461::o;436:42::-;494:2;485:6;520:56;527:6;;520:56;;545:5;;565:2;560:7;;;;520:56;;;583:17;613:3;603:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;603:14:78;-1:-1:-1;583:34:78;-1:-1:-1;;;634:7:78;;649:94;656:7;;649:94;;711:2;706;:7;700:2;:14;687:29;;675:4;680:3;;;;;;;675:9;;;;;;;;:::i;:::-;;;;:41;-1:-1:-1;;;;;675:41:78;;;;;;;;-1:-1:-1;732:2:78;726:8;;;;649:94;;;-1:-1:-1;764:4:78;319:461;-1:-1:-1;;;;319:461:78:o;6055:121:106:-;6110:59;6165:2;6126:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6126:42:106;;;;;;;;;;;;;;-1:-1:-1;;;;;6126:42:106;-1:-1:-1;;;6126:42:106;;;6110:15;:59::i;19341:156:103:-;19447:12;;;:22;;-1:-1:-1;;;;;;19447:22:103;-1:-1:-1;;;;;19447:22:103;;;;;;;;;;:12;19341:156::o;20625:120::-;20705:33;20719:4;20733:3;20705:13;:33::i;3897:185:101:-;3984:1;-1:-1:-1;;;;;3979:6:101;:1;-1:-1:-1;;;;;3979:6:101;;3975:101;;-1:-1:-1;;;;;;;;;;;4033:3:101;4006:31;;;;;;:::i;:::-;;;;;;;;4051:14;4060:1;4063;4051:8;:14::i;6228:118:103:-;-1:-1:-1;;;;;;;;;;;6319:3:103;6293:30;;;;;;:::i;:::-;;;;;;;;6333:6;:4;:6::i;1982:611:78:-;2061:20;2361;2409:1;2401:10;;2413;2384:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2361:63;;2430:8;2461:1;2441:10;:17;:21;;;;:::i;:::-;2500:2;2496:16;;2519:20;;;2496:16;2519:20;;-1:-1:-1;2559:29:78;;;;;;;;;;;:::i;1662:203:77:-;1766:4;1780:63;1789:13;1804:15;1780:63;;;;;;;;;;;;;-1:-1:-1;;;1780:63:77;;;:8;:63::i;:::-;-1:-1:-1;1856:4:77;1662:203;;;;:::o;1901:226::-;1945:4;-1:-1:-1;;;;;1961:15:77;;1957:136;;-1:-1:-1;;;;;;;;;;;1991:37:77;;;;71316:2:107;71298:21;;;71355:2;71335:18;;;71328:30;71394:32;71389:2;71374:18;;71367:60;71459:2;71444:18;;71114:354;1991:37:77;;;;;;;;2041:31;;;71685:21:107;;;71742:1;71722:18;;;71715:29;-1:-1:-1;;;71775:2:107;71760:18;;71753:37;-1:-1:-1;;;;;71864:32:107;;71857:4;71842:20;;71835:62;2041:31:77;;;;;;;71822:3:107;2041:31:77;;;2080:6;:4;:6::i;:::-;-1:-1:-1;;;;;;2106:15:77;;;;1901:226::o;22844:128:103:-;22906:7;22943:10;22948:4;22943;:10::i;:::-;22932:33;;;;;;;;;;;;:::i;696:290:77:-;778:11;:13;;738:4;;;;;;;778:13;;;:::i;:::-;;;;-1:-1:-1;828:12:77;;-1:-1:-1;;;;;;828:12:77;;;;;8189:25:107;;;767:24:77;;-1:-1:-1;797:20:77;;-1:-1:-1;;;;;;;;;;;251:64:102;828:7:77;;8162:18:107;;828:12:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;939:17;;;;;;;;;;;-1:-1:-1;;;939:17:77;;;;925:32;;-1:-1:-1;;;925:32:77;;797:44;;-1:-1:-1;;;;;;;;;;;;251:64:102;925:7:77;;:32;;797:44;;939:17;925:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;971:3:77;;976:4;;-1:-1:-1;696:290:77;;-1:-1:-1;;;;696:290:77:o;3255:157:101:-;3315:9;3310:96;;-1:-1:-1;;;;;;;;;;;3345:30:101;;;;72438:2:107;72420:21;;;72477:2;72457:18;;;72450:30;72516:25;72511:2;72496:18;;72489:53;72574:2;72559:18;;72236:347;5202:262:101;5264:1;5259;:6;5255:203;;-1:-1:-1;;;;;;;;;;;5286:41:101;;;;72790:2:107;72772:21;;;72829:2;72809:18;;;72802:30;72868:34;72863:2;72848:18;;72841:62;-1:-1:-1;;;72934:2:107;72919:18;;72912:32;72976:3;72961:19;;72588:398;5286:41:101;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;:::-;;;;;;;;5441:6;:4;:6::i;631:333:106:-;725:14;;581:42;855:2;842:16;;701:21;;725:14;842:16;581:42;891:5;880:68;871:77;;808:150;;631:333;:::o;20979:1089:103:-;21095:12;;;;21131:9;;;;21172:11;;;;21216:10;;;21193:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21095:12:103;;;;21131:9;;;;;;21081:11;;21193:33;;21216:10;;21193:33;;21216:10;21193:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21237:17;21274:4;21280:12;21288:3;21280:7;:12::i;:::-;21257:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;21257:36:103;;;;;;;;;-1:-1:-1;;;;;21308:15:103;;;;;;:10;;;21257:36;21308:15;;;;;;-1:-1:-1;;;;;;21308:21:103;;;;;;;;;21257:36;;-1:-1:-1;21308:21:103;;:15;;21340:34;;21357:3;;21362:11;;21340:34;;:::i;:::-;;;;-1:-1:-1;;21340:34:103;;;;;;;;;21330:45;;21340:34;21330:45;;;;21308:68;;;;;;;;;;-1:-1:-1;21308:68:103;;;;21303:110;;21392:10;21397:4;21392;:10::i;:::-;;21303:110;-1:-1:-1;;;;;21445:15:103;;21422:12;21445:15;;;;;;;;;;;-1:-1:-1;;;;;;21445:21:103;;;;;;;;;21477:34;;21445:21;;21422:12;;21477:34;;21494:3;;21499:11;;21477:34;;:::i;:::-;;;;;;;;;;;;;21467:45;;;;;;21445:68;;;;;;;;;;;;21437:77;;21422:92;;21525:12;21564:17;21585:3;-1:-1:-1;;;;;21585:14:103;21600:4;21585:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21561:44:103;-1:-1:-1;21626:36:103;;-1:-1:-1;21561:44:103;21647:14;21650:11;21647:2;:14;:::i;:::-;21626;:36::i;:::-;21697:28;;-1:-1:-1;;;21697:28:103;;21619:43;;-1:-1:-1;21682:12:103;;-1:-1:-1;;;;;;;;;;;;21697:17:103;;;:28;;21715:3;;21720:4;;21697:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21682:43;;21748:4;21740;:12;21736:172;;21768:129;;-1:-1:-1;;;21768:129:103;;;;;;;:::i;:::-;21917:34;;-1:-1:-1;;;21917:34:103;;-1:-1:-1;;;;;;;;;;;21917:18:103;;;:34;;21936:3;;21941:4;;21947:3;;21917:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21968:12:103;;;21961:19;;-1:-1:-1;;;;;;21961:19:103;;;-1:-1:-1;21997:9:103;;;21990:16;;-1:-1:-1;;21990:16:103;;;22016:17;-1:-1:-1;22023:10:103;;21968:12;22016:17;:::i;:::-;22050:4;:11;;22043:18;;;21071:997;;;;;;;;20979:1089;;:::o;3615:277:101:-;3683:1;-1:-1:-1;;;;;3678:6:101;:1;-1:-1:-1;;;;;3678:6:101;;3674:212;;-1:-1:-1;;;;;;;;;;;3705:44:101;;;;75942:2:107;75924:21;;;75981:2;75961:18;;;75954:30;76020:34;76015:2;76000:18;;75993:62;-1:-1:-1;;;76086:2:107;76071:18;;76064:35;76131:3;76116:19;;75740:401;3705:44:101;;;;;;;;3768:34;3800:1;3768:34;;;;;;:::i;:::-;;;;;;;;3821;3853:1;3821:34;;;;;;:::i;2410:424::-;-1:-1:-1;;;;;;;;;;;2978:55:101;3059:16;2445:359;;2645:67;;2482:11;;-1:-1:-1;;;;;;;;;;;1671:64:101;2579:43;;2645:67;;1671:64;;-1:-1:-1;;;2670:17:101;2705:4;;2645:67;;;:::i;:::-;;;;-1:-1:-1;;2645:67:101;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:101;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:101;2813:7;:14;;-1:-1:-1;;2813:14:101;;;;;2410:424::o;15037:254::-;15192:1;15175:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;15165:30;;;;;;15158:1;15141:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;15131:30;;;;;;:64;15127:158;;-1:-1:-1;;;;;;;;;;;15242:3:101;15216:30;;;;;;:::i;:::-;;;;;;;;15260:14;15269:1;15272;15260:8;:14::i;22074:204:103:-;22166:12;;;;22130;;-1:-1:-1;;;;;22166:12:103;22154:9;22200:10;22166:4;22200;:10::i;:::-;22238:32;;-1:-1:-1;;;22238:32:103;;22188:22;;-1:-1:-1;;;;;;;;;;;;22238:17:103;;;:32;;22256:1;;22188:22;;22238:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22227:44;;;;;;8189:25:107;;8177:2;8162:18;;8043:177;22227:44:103;;;;;;;;;;;;;22220:51;;;;22074:204;;;:::o;23412:397::-;23471:12;23499:19;23531:1;:8;23542:2;23531:13;;;;:::i;:::-;23521:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23521:24:103;;23499:46;;23560:9;23555:224;23579:1;:8;23575:1;:12;23555:224;;;23608:9;23620:1;23622;23620:4;;;;;;;;:::i;:::-;;;;;;;23608:16;;23753:1;23747;23743:2;23739:10;23735:2;23731:19;23723:6;23719:32;23712:43;23694:75;23589:3;;;;;:::i;:::-;;;;23555:224;;16121:3214;16245:12;;;;16281:9;;;;16322:11;;;;16366:10;;;16343:33;;;;;;;;;;;;;;;;;;;16208:7;;-1:-1:-1;;;;;16245:12:103;;16281:9;;;16322:11;16208:7;;16343:33;;16366:10;;16343:33;;;16366:10;16343:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;16427:15:103;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;16427:21:103;;;;;;;;;16459:34;;16343:33;;-1:-1:-1;16427:21:103;:15;;-1:-1:-1;16459:34:103;;-1:-1:-1;16343:33:103;;16481:11;;16459:34;;:::i;:::-;;;;-1:-1:-1;;16459:34:103;;;;;;;;;16449:45;;16459:34;16449:45;;;;16427:68;;;;;;;;;;-1:-1:-1;16427:68:103;;;;16423:174;;;-1:-1:-1;;;;;16518:15:103;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;16518:21:103;;;;;;;;;16550:34;;16518:21;;:10;16550:34;;16567:3;;16572:11;;16550:34;;:::i;:::-;;;;;;;;;;;;;16540:45;;;;;;16518:68;;;;;;;;;;;;16511:75;;;;;;16121:3214;;;:::o;16423:174::-;16606:17;16643:4;16649:12;16657:3;16649:7;:12::i;:::-;16626:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16606:56;;-1:-1:-1;;;;;;;;;;;15395:37:103;;-1:-1:-1;;;;;16672:19:103;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16703:12;16742:17;16763:3;-1:-1:-1;;;;;16763:14:103;16778:4;16763:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16739:44:103;-1:-1:-1;16804:36:103;;-1:-1:-1;16739:44:103;16825:14;16828:11;16825:2;:14;:::i;16804:36::-;16890:35;;-1:-1:-1;;;16890:35:103;;-1:-1:-1;;;;;578:32:107;;16890:35:103;;;560:51:107;16797:43:103;;-1:-1:-1;16862:22:103;;-1:-1:-1;;;;;;;;;;;;16890:21:103;;;533:18:107;;16890:35:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16890:35:103;;;;;;;;;;;;:::i;:::-;16861:64;;;16939:5;:12;16955:1;16939:17;16935:2058;;16972:12;-1:-1:-1;;;;;;;;;;;15395:37:103;;-1:-1:-1;;;;;16987:17:103;;17005:3;17010:5;17016:1;17010:8;;;;;;;;:::i;:::-;;;;;;;16987:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16972:47;-1:-1:-1;16972:47:103;17033:106;;17080:44;17101:3;17114:5;17120:1;17114:8;;;;;;;;:::i;:::-;;;;;;;17106:17;;17080:44;;;;;;;:::i;:::-;;;;;;;;17033:106;17164:4;17156;:12;17152:180;;17188:129;;-1:-1:-1;;;17188:129:103;;;;;;;:::i;:::-;17350:86;17360:3;17365:4;17398:3;17403:11;17381:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17371:45;;;;;;17426:5;17432:1;17426:8;;;;;;;;:::i;:::-;;;;;;;17418:17;;17350:86;;;;;;;;;:::i;:::-;;;;;;;;17529:5;17535:1;17529:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;17450:15:103;;17521:17;17450:15;;;;;;;;;;-1:-1:-1;;;;;;17450:21:103;;;;;;;;;17482:34;;17529:8;;17450:21;;17482:34;;17499:3;;17504:11;;17482:34;;:::i;:::-;;;;-1:-1:-1;;17482:34:103;;;;;;;;;17472:45;;17482:34;17472:45;;;;17450:68;;;;;;;;;;;;-1:-1:-1;17450:68:103;;;:88;;;;-1:-1:-1;;;;;17552:15:103;;;;17623:4;17552:10;;;:15;;;;;-1:-1:-1;;;;;;17552:21:103;;;;;;;;;17584:34;;17623:4;;-1:-1:-1;17584:34:103;;17601:3;;17606:11;;17584:34;;:::i;:::-;;;;;;;-1:-1:-1;;17584:34:103;;;;;;17574:45;;17584:34;17574:45;;;;17552:68;;;;;;;;;;-1:-1:-1;17552:68:103;:75;;-1:-1:-1;;17552:75:103;;;;;;;;;;-1:-1:-1;16935:2058:103;;;17663:1;17648:5;:12;:16;17644:1349;;;17685:9;17680:1190;17704:5;:12;17700:1;:16;17680:1190;;;17741:12;-1:-1:-1;;;;;;;;;;;15395:37:103;;-1:-1:-1;;;;;17756:17:103;;17774:3;17779:5;17785:1;17779:8;;;;;;;;:::i;:::-;;;;;;;17756:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17741:47;-1:-1:-1;17741:47:103;17806:114;;17857:44;17878:3;17891:5;17897:1;17891:8;;;;;;;;:::i;:::-;;;;;;;17883:17;;17857:44;;;;;;;:::i;:::-;;;;;;;;17806:114;-1:-1:-1;;;;;;;;;;;15395:37:103;;-1:-1:-1;;;;;17962:18:103;;17981:3;17986:5;17992:1;17986:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;17962:53:103;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18033:12;18063:17;18138:3;-1:-1:-1;;;;;18138:14:103;18153:4;18138:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18120:38:103;;-1:-1:-1;18120:38:103;-1:-1:-1;18187:36:103;18120:38;18208:14;18211:11;18208:2;:14;:::i;18187:36::-;18180:43;;18264:7;:37;;;;;-1:-1:-1;;;18275:4:103;:26;18264:37;18260:539;;;18399:86;18409:3;18414:4;18447:3;18452:11;18430:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18420:45;;;;;;18475:5;18481:1;18475:8;;;;;;;;:::i;:::-;;;;;;;18467:17;;18399:86;;;;;;;;;:::i;:::-;;;;;;;;18586:5;18592:1;18586:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;18507:15:103;;18578:17;18507:15;;;;;;;;;;-1:-1:-1;;;;;;18507:21:103;;;;;;;;;18539:34;;18586:8;;18507:21;;18539:34;;18556:3;;18561:11;;18539:34;;:::i;:::-;;;;;;;;;;;;;18529:45;;;;;;18507:68;;;;;;;;;;;:88;;;;18688:4;18617;:10;;:15;18628:3;-1:-1:-1;;;;;18617:15:103;-1:-1:-1;;;;;18617:15:103;;;;;;;;;;;;:21;18633:4;-1:-1:-1;;;;;18617:21:103;;-1:-1:-1;;;;;18617:21:103;;;;;;;;;;;;;:68;18666:3;18671:11;18649:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18639:45;;;;;;18617:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;15395:37:103;;-1:-1:-1;;;;;18714:18:103;;18733:3;18738:5;18744:1;18738:8;;;;;;;;:::i;:::-;;;;;;;18748:4;18714:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18775:5;;;;;18260:539;-1:-1:-1;;;;;;;;;;;15395:37:103;;-1:-1:-1;;;;;18816:18:103;;18835:3;18840:5;18846:1;18840:8;;;;;;;;:::i;:::-;;;;;;;18850:4;18816:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17723:1147;;;17718:3;;;;;:::i;:::-;;;;17680:1190;;;;17644:1349;;;18900:82;;;-1:-1:-1;;;18900:82:103;;79116:2:107;18900:82:103;;;79098:21:107;79135:18;;;79128:30;;;;79194:34;79174:18;;;79167:62;79265:34;79245:18;;;79238:62;79317:19;;18900:82:103;78914:428:107;18900:82:103;-1:-1:-1;;;;;19011:15:103;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;19011:21:103;;;;;;;;;19043:34;;19011:21;;:15;19043:34;;19060:3;;19065:11;;19043:34;;:::i;:::-;;;;-1:-1:-1;;19043:34:103;;;;;;;;;19033:45;;19043:34;19033:45;;;;19011:68;;;;;;;;;;-1:-1:-1;19011:68:103;;;;19003:128;;;;-1:-1:-1;;;19003:128:103;;79549:2:107;19003:128:103;;;79531:21:107;79588:2;79568:18;;;79561:30;79627:34;79607:18;;;79600:62;-1:-1:-1;;;79678:18:107;;;79671:45;79733:19;;19003:128:103;79347:411:107;19003:128:103;19149:12;;;19142:19;;-1:-1:-1;;;;;;19142:19:103;;;19178:9;;;19171:16;;-1:-1:-1;;19171:16:103;;;19197:17;-1:-1:-1;19204:10:103;;19149:12;19197:17;:::i;:::-;19224:18;19231:11;;;19224:18;;;-1:-1:-1;;;;;19260:15:103;;;;;;;;;;;;-1:-1:-1;;;;;;19260:21:103;;;;;;;;;19292:34;;19260:21;;19224:18;19292:34;;19309:3;;19314:11;;19292:34;;:::i;:::-;;;;;;;;;;;;;19282:45;;;;;;19260:68;;;;;;;;;;;;19253:75;;;;;;;;;16121:3214;;;:::o;23109:297::-;23183:7;23202:11;23224;23249:2;23238:1;:8;:13;:29;;23259:1;:8;23238:29;;;23254:2;23238:29;23224:43;;23282:6;23277:103;23298:3;23294:1;:7;23277:103;;;23363:5;:1;23367;23363:5;:::i;:::-;23337:1;23339:10;23348:1;23339:6;:10;:::i;:::-;23337:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;23337:13:103;23329:40;;23322:47;;;;;23303:3;;;;:::i;:::-;;;;23277:103;;;-1:-1:-1;23396:3:103;;23109:297;-1:-1:-1;;;;23109:297:103:o;14688:344:101:-;14824:1;14807:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14797:30;;;;;;14790:1;14773:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14763:30;;;;;;:64;14759:267;;-1:-1:-1;;;;;;;;;;;14848:43:101;;;;79965:2:107;79947:21;;;80004:2;79984:18;;;79977:30;80043:34;80038:2;80023:18;;80016:62;-1:-1:-1;;;80109:2:107;80094:18;;80087:34;80153:3;80138:19;;79763:400;14848:43:101;;;;;;;;-1:-1:-1;;;;;;;;;;;14941:1:101;14910:33;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;14993:1:101;14962:33;;;;;;:::i;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:118:107;100:5;93:13;86:21;79:5;76:32;66:60;;122:1;119;112:12;137:241;193:6;246:2;234:9;225:7;221:23;217:32;214:52;;;262:1;259;252:12;214:52;301:9;288:23;320:28;342:5;320:28;:::i;622:139::-;-1:-1:-1;;;;;705:31:107;;695:42;;685:70;;751:1;748;741:12;766:569;870:6;878;886;939:2;927:9;918:7;914:23;910:32;907:52;;;955:1;952;945:12;907:52;994:9;981:23;1013:39;1046:5;1013:39;:::i;:::-;1071:5;-1:-1:-1;1128:2:107;1113:18;;1100:32;1141:41;1100:32;1141:41;:::i;:::-;1201:7;-1:-1:-1;1260:2:107;1245:18;;1232:32;1273:30;1232:32;1273:30;:::i;:::-;1322:7;1312:17;;;766:569;;;;;:::o;1340:323::-;1408:6;1416;1469:2;1457:9;1448:7;1444:23;1440:32;1437:52;;;1485:1;1482;1475:12;1437:52;1524:9;1511:23;1543:39;1576:5;1543:39;:::i;:::-;1601:5;1653:2;1638:18;;;;1625:32;;-1:-1:-1;;;1340:323:107:o;1668:180::-;1727:6;1780:2;1768:9;1759:7;1755:23;1751:32;1748:52;;;1796:1;1793;1786:12;1748:52;-1:-1:-1;1819:23:107;;1668:180;-1:-1:-1;1668:180:107:o;1853:255::-;1912:6;1965:2;1953:9;1944:7;1940:23;1936:32;1933:52;;;1981:1;1978;1971:12;1933:52;2020:9;2007:23;2039:39;2072:5;2039:39;:::i;2113:404::-;2181:6;2189;2242:2;2230:9;2221:7;2217:23;2213:32;2210:52;;;2258:1;2255;2248:12;2210:52;2297:9;2284:23;2316:39;2349:5;2316:39;:::i;:::-;2374:5;-1:-1:-1;2431:2:107;2416:18;;2403:32;2444:41;2403:32;2444:41;:::i;:::-;2504:7;2494:17;;;2113:404;;;;;:::o;2522:127::-;2583:10;2578:3;2574:20;2571:1;2564:31;2614:4;2611:1;2604:15;2638:4;2635:1;2628:15;2654:275;2725:2;2719:9;2790:2;2771:13;;-1:-1:-1;;2767:27:107;2755:40;;2825:18;2810:34;;2846:22;;;2807:62;2804:88;;;2872:18;;:::i;:::-;2908:2;2901:22;2654:275;;-1:-1:-1;2654:275:107:o;2934:187::-;2983:4;3016:18;3008:6;3005:30;3002:56;;;3038:18;;:::i;:::-;-1:-1:-1;3104:2:107;3083:15;-1:-1:-1;;3079:29:107;3110:4;3075:40;;2934:187::o;3126:338::-;3191:5;3220:53;3236:36;3265:6;3236:36;:::i;:::-;3220:53;:::i;:::-;3211:62;;3296:6;3289:5;3282:21;3336:3;3327:6;3322:3;3318:16;3315:25;3312:45;;;3353:1;3350;3343:12;3312:45;3402:6;3397:3;3390:4;3383:5;3379:16;3366:43;3456:1;3449:4;3440:6;3433:5;3429:18;3425:29;3418:40;3126:338;;;;;:::o;3469:222::-;3512:5;3565:3;3558:4;3550:6;3546:17;3542:27;3532:55;;3583:1;3580;3573:12;3532:55;3605:80;3681:3;3672:6;3659:20;3652:4;3644:6;3640:17;3605:80;:::i;3696:671::-;3783:6;3791;3844:2;3832:9;3823:7;3819:23;3815:32;3812:52;;;3860:1;3857;3850:12;3812:52;3900:9;3887:23;3929:18;3970:2;3962:6;3959:14;3956:34;;;3986:1;3983;3976:12;3956:34;4009:50;4051:7;4042:6;4031:9;4027:22;4009:50;:::i;:::-;3999:60;;4112:2;4101:9;4097:18;4084:32;4068:48;;4141:2;4131:8;4128:16;4125:36;;;4157:1;4154;4147:12;4125:36;-1:-1:-1;4180:24:107;;4235:4;4227:13;;4223:27;-1:-1:-1;4213:55:107;;4264:1;4261;4254:12;4213:55;4287:74;4353:7;4348:2;4335:16;4330:2;4326;4322:11;4287:74;:::i;:::-;4277:84;;;3696:671;;;;;:::o;4580:614::-;4667:6;4675;4683;4736:2;4724:9;4715:7;4711:23;4707:32;4704:52;;;4752:1;4749;4742:12;4704:52;4791:9;4778:23;4810:39;4843:5;4810:39;:::i;:::-;4868:5;-1:-1:-1;4925:2:107;4910:18;;4897:32;4938:41;4897:32;4938:41;:::i;:::-;4998:7;-1:-1:-1;5056:2:107;5041:18;;5028:32;5083:18;5072:30;;5069:50;;;5115:1;5112;5105:12;5069:50;5138;5180:7;5171:6;5160:9;5156:22;5138:50;:::i;:::-;5128:60;;;4580:614;;;;;:::o;5654:472::-;5731:6;5739;5747;5800:2;5788:9;5779:7;5775:23;5771:32;5768:52;;;5816:1;5813;5806:12;5768:52;5855:9;5842:23;5874:39;5907:5;5874:39;:::i;:::-;5932:5;-1:-1:-1;5989:2:107;5974:18;;5961:32;6002:41;5961:32;6002:41;:::i;:::-;5654:472;;6062:7;;-1:-1:-1;;;6116:2:107;6101:18;;;;6088:32;;5654:472::o;6131:160::-;6195:5;6240:3;6231:6;6226:3;6222:16;6218:26;6215:46;;;6257:1;6254;6247:12;6296:409;6426:6;6434;6478:9;6469:7;6465:23;6508:3;6504:2;6500:12;6497:32;;;6525:1;6522;6515:12;6497:32;6548:58;6598:7;6587:9;6548:58;:::i;:::-;6538:68;-1:-1:-1;6641:2:107;-1:-1:-1;;6622:17:107;;6618:26;6615:46;;;6657:1;6654;6647:12;6615:46;;6695:3;6684:9;6680:19;6670:29;;6296:409;;;;;:::o;6710:182::-;6769:4;6802:18;6794:6;6791:30;6788:56;;;6824:18;;:::i;:::-;-1:-1:-1;6869:1:107;6865:14;6881:4;6861:25;;6710:182::o;6897:889::-;6980:6;7011:2;7054;7042:9;7033:7;7029:23;7025:32;7022:52;;;7070:1;7067;7060:12;7022:52;7110:9;7097:23;7143:18;7135:6;7132:30;7129:50;;;7175:1;7172;7165:12;7129:50;7198:22;;7251:4;7243:13;;7239:27;-1:-1:-1;7229:55:107;;7280:1;7277;7270:12;7229:55;7316:2;7303:16;7339:59;7355:42;7394:2;7355:42;:::i;7339:59::-;7432:15;;;7514:1;7510:10;;;;7502:19;;7498:28;;;7463:12;;;;7538:19;;;7535:39;;;7570:1;7567;7560:12;7535:39;7594:11;;;;7614:142;7630:6;7625:3;7622:15;7614:142;;;7696:17;;7684:30;;7647:12;;;;7734;;;;7614:142;;;7775:5;6897:889;-1:-1:-1;;;;;;;6897:889:107:o;7791:247::-;7881:6;7934:3;7922:9;7913:7;7909:23;7905:33;7902:53;;;7951:1;7948;7941:12;7902:53;7974:58;8024:7;8013:9;7974:58;:::i;8225:410::-;8321:6;8329;8337;8390:2;8378:9;8369:7;8365:23;8361:32;8358:52;;;8406:1;8403;8396:12;8358:52;8445:9;8432:23;8464:39;8497:5;8464:39;:::i;:::-;8522:5;8574:2;8559:18;;8546:32;;-1:-1:-1;8625:2:107;8610:18;;;8597:32;;8225:410;-1:-1:-1;;;8225:410:107:o;8822:608::-;8905:6;8913;8921;8929;8982:3;8970:9;8961:7;8957:23;8953:33;8950:53;;;8999:1;8996;8989:12;8950:53;9038:9;9025:23;9057:39;9090:5;9057:39;:::i;:::-;9115:5;-1:-1:-1;9172:2:107;9157:18;;9144:32;9185:41;9144:32;9185:41;:::i;:::-;9245:7;-1:-1:-1;9299:2:107;9284:18;;9271:32;;-1:-1:-1;9355:2:107;9340:18;;9327:32;9368:30;9327:32;9368:30;:::i;:::-;8822:608;;;;-1:-1:-1;8822:608:107;;-1:-1:-1;;8822:608:107:o;9435:322::-;9504:6;9557:2;9545:9;9536:7;9532:23;9528:32;9525:52;;;9573:1;9570;9563:12;9525:52;9613:9;9600:23;9646:18;9638:6;9635:30;9632:50;;;9678:1;9675;9668:12;9632:50;9701;9743:7;9734:6;9723:9;9719:22;9701:50;:::i;12101:339::-;12302:2;12284:21;;;12341:2;12321:18;;;12314:30;-1:-1:-1;;;12375:2:107;12360:18;;12353:46;12431:2;12416:18;;12101:339::o;12445:399::-;-1:-1:-1;;;;;12727:15:107;;;12709:34;;12779:15;;;;12774:2;12759:18;;12752:43;12826:2;12811:18;;12804:34;;;;12659:2;12644:18;;12445:399::o;12849:376::-;-1:-1:-1;;;;;13100:32:107;;;;13082:51;;13164:2;13149:18;;13142:34;;;;13207:2;13192:18;;13185:34;13070:2;13055:18;;12849:376::o;14464:184::-;14534:6;14587:2;14575:9;14566:7;14562:23;14558:32;14555:52;;;14603:1;14600;14593:12;14555:52;-1:-1:-1;14626:16:107;;14464:184;-1:-1:-1;14464:184:107:o;14861:319::-;-1:-1:-1;;;;;15098:32:107;;;;15080:51;;15162:2;15147:18;;15140:34;15068:2;15053:18;;14861:319::o;15654:127::-;15715:10;15710:3;15706:20;15703:1;15696:31;15746:4;15743:1;15736:15;15770:4;15767:1;15760:15;15786:128;15826:3;15857:1;15853:6;15850:1;15847:13;15844:39;;;15863:18;;:::i;:::-;-1:-1:-1;15899:9:107;;15786:128::o;16275:795::-;16334:3;16372:5;16366:12;16399:6;16394:3;16387:19;16425:4;16454:2;16449:3;16445:12;16438:19;;16491:2;16484:5;16480:14;16512:1;16533;16543:502;16559:6;16554:3;16551:15;16543:502;;;16622:13;;16661:3;16744:1;16758:205;16774:4;16769:3;16766:13;16758:205;;;16847:15;;16833:30;;16932:17;;;;16889:14;;;;16798:1;16789:11;16758:205;;;-1:-1:-1;;;16992:4:107;16983:14;;;;;17020:15;;;;16585:1;16576:11;16543:502;;;-1:-1:-1;17061:3:107;;16275:795;-1:-1:-1;;;;;;16275:795:107:o;17075:610::-;-1:-1:-1;;;;;17432:15:107;;;17414:34;;17484:15;;17479:2;17464:18;;17457:43;17536:3;17531:2;17516:18;;17509:31;;;17357:4;;17557:63;;17600:19;;17592:6;17557:63;:::i;:::-;17549:71;;17670:6;17663:14;17656:22;17651:2;17640:9;17636:18;17629:50;17075:610;;;;;;;:::o;17690:430::-;17796:6;17804;17812;17820;17828;17881:3;17869:9;17860:7;17856:23;17852:33;17849:53;;;17898:1;17895;17888:12;17849:53;-1:-1:-1;;17921:16:107;;17977:2;17962:18;;17956:25;18021:2;18006:18;;18000:25;18065:2;18050:18;;18044:25;18109:3;18094:19;;;18088:26;17921:16;;17956:25;;-1:-1:-1;18000:25:107;18044;-1:-1:-1;18088:26:107;;-1:-1:-1;17690:430:107;-1:-1:-1;17690:430:107:o;18591:760::-;-1:-1:-1;;;;;19059:15:107;;;19041:34;;19111:15;;;;19106:2;19091:18;;19084:43;19158:2;19143:18;;19136:34;;;;19201:2;19186:18;;19179:34;;;;19244:3;19229:19;;19222:35;19021:3;19273:19;;19266:35;19332:3;19317:19;;19310:35;;;;18990:3;18975:19;;18591:760::o;19356:320::-;-1:-1:-1;;;;;19602:15:107;;;19584:34;;19654:15;;19649:2;19634:18;;19627:43;19534:2;19519:18;;19356:320::o;19959:245::-;20026:6;20079:2;20067:9;20058:7;20054:23;20050:32;20047:52;;;20095:1;20092;20085:12;20047:52;20127:9;20121:16;20146:28;20168:5;20146:28;:::i;21110:289::-;21233:6;21241;21294:2;21282:9;21273:7;21269:23;21265:32;21262:52;;;21310:1;21307;21300:12;21262:52;-1:-1:-1;;21333:16:107;;21389:2;21374:18;;;21368:25;21333:16;;21368:25;;-1:-1:-1;21110:289:107:o;21404:168::-;21444:7;21510:1;21506;21502:6;21498:14;21495:1;21492:21;21487:1;21480:9;21473:17;21469:45;21466:71;;;21517:18;;:::i;:::-;-1:-1:-1;21557:9:107;;21404:168::o;21577:657::-;-1:-1:-1;;;;;21934:32:107;;;;21916:51;;21998:2;21983:18;;21976:34;;;;22041:2;22026:18;;22019:34;;;;22084:2;22069:18;;22062:34;;;;22127:3;22112:19;;22105:35;21954:3;22156:19;;22149:35;22215:3;22200:19;;22193:35;21903:3;21888:19;;21577:657::o;23652:343::-;23853:2;23835:21;;;23892:2;23872:18;;;23865:30;-1:-1:-1;;;23926:2:107;23911:18;;23904:50;23986:2;23971:18;;23652:343::o;26717:258::-;26789:1;26799:113;26813:6;26810:1;26807:13;26799:113;;;26889:11;;;26883:18;26870:11;;;26863:39;26835:2;26828:10;26799:113;;;26930:6;26927:1;26924:13;26921:48;;;-1:-1:-1;;26965:1:107;26947:16;;26940:27;26717:258::o;26980:::-;27022:3;27060:5;27054:12;27087:6;27082:3;27075:19;27103:63;27159:6;27152:4;27147:3;27143:14;27136:4;27129:5;27125:16;27103:63;:::i;:::-;27220:2;27199:15;-1:-1:-1;;27195:29:107;27186:39;;;;27227:4;27182:50;;26980:258;-1:-1:-1;;26980:258:107:o;27243:220::-;27392:2;27381:9;27374:21;27355:4;27412:45;27453:2;27442:9;27438:18;27430:6;27412:45;:::i;27468:308::-;27543:5;27572:53;27588:36;27617:6;27588:36;:::i;27572:53::-;27563:62;;27648:6;27641:5;27634:21;27688:3;27679:6;27674:3;27670:16;27667:25;27664:45;;;27705:1;27702;27695:12;27664:45;27718:52;27763:6;27756:4;27749:5;27745:16;27740:3;27718:52;:::i;27781:457::-;27860:6;27913:2;27901:9;27892:7;27888:23;27884:32;27881:52;;;27929:1;27926;27919:12;27881:52;27962:9;27956:16;27995:18;27987:6;27984:30;27981:50;;;28027:1;28024;28017:12;27981:50;28050:22;;28103:4;28095:13;;28091:27;-1:-1:-1;28081:55:107;;28132:1;28129;28122:12;28081:55;28155:77;28224:7;28219:2;28213:9;28208:2;28204;28200:11;28155:77;:::i;28243:466::-;28418:3;28456:6;28450:13;28472:53;28518:6;28513:3;28506:4;28498:6;28494:17;28472:53;:::i;:::-;28588:13;;28547:16;;;;28610:57;28588:13;28547:16;28644:4;28632:17;;28610:57;:::i;:::-;28683:20;;28243:466;-1:-1:-1;;;;28243:466:107:o;29132:125::-;29172:4;29200:1;29197;29194:8;29191:34;;;29205:18;;:::i;:::-;-1:-1:-1;29242:9:107;;29132:125::o;30026:831::-;-1:-1:-1;;;;;30521:15:107;;;30503:34;;30573:15;;;;30568:2;30553:18;;30546:43;30620:2;30605:18;;30598:34;;;;30663:2;30648:18;;30641:34;;;;30706:3;30691:19;;30684:35;30483:3;30735:19;;30728:35;30794:3;30779:19;;30772:35;30838:3;30823:19;;30816:35;;;;30452:3;30437:19;;30026:831::o;31619:317::-;-1:-1:-1;;;;;31796:32:107;;31778:51;;31865:2;31860;31845:18;;31838:30;;;-1:-1:-1;;31885:45:107;;31911:18;;31903:6;31885:45;:::i;32541:368::-;32638:6;32646;32654;32662;32715:3;32703:9;32694:7;32690:23;32686:33;32683:53;;;32732:1;32729;32722:12;32683:53;-1:-1:-1;;32755:16:107;;32811:2;32796:18;;32790:25;32855:2;32840:18;;32834:25;32899:2;32884:18;;;32878:25;32755:16;;32790:25;;-1:-1:-1;32878:25:107;;-1:-1:-1;32541:368:107;-1:-1:-1;32541:368:107:o;34527:559::-;-1:-1:-1;;;;;34882:15:107;;;34864:34;;34934:15;;;;34929:2;34914:18;;34907:43;34981:2;34966:18;;34959:34;;;;35024:2;35009:18;;35002:34;35067:3;35052:19;;35045:35;;;;34813:3;34798:19;;34527:559::o;36892:380::-;36971:1;36967:12;;;;37014;;;37035:61;;37089:4;37081:6;37077:17;37067:27;;37035:61;37142:2;37134:6;37131:14;37111:18;37108:38;37105:161;;37188:10;37183:3;37179:20;37176:1;37169:31;37223:4;37220:1;37213:15;37251:4;37248:1;37241:15;37277:811;37403:3;37432:1;37465:6;37459:13;37495:36;37521:9;37495:36;:::i;:::-;37550:1;37567:18;;;37594:104;;;;37712:1;37707:356;;;;37560:503;;37594:104;-1:-1:-1;;37627:24:107;;37615:37;;37672:16;;;;-1:-1:-1;37594:104:107;;37707:356;37738:6;37735:1;37728:17;37768:4;37813:2;37810:1;37800:16;37838:1;37852:165;37866:6;37863:1;37860:13;37852:165;;;37944:14;;37931:11;;;37924:35;37987:16;;;;37881:10;;37852:165;;;37856:3;;;38046:6;38041:3;38037:16;38030:23;;37560:503;-1:-1:-1;38079:3:107;;37277:811;-1:-1:-1;;;;;;37277:811:107:o;39171:678::-;-1:-1:-1;;;;;39576:15:107;;;39558:34;;39628:15;;;39623:2;39608:18;;39601:43;39675:2;39660:18;;39653:34;;;;39718:2;39703:18;;39696:34;;;;39774:14;39767:22;39761:3;39746:19;;39739:51;39827:15;;;39538:3;39806:19;;39799:44;39507:3;39492:19;;39171:678::o;42213:127::-;42274:10;42269:3;42265:20;42262:1;42255:31;42305:4;42302:1;42295:15;42329:4;42326:1;42319:15;42820:429;43041:3;43079:6;43073:13;43095:53;43141:6;43136:3;43129:4;43121:6;43117:17;43095:53;:::i;:::-;-1:-1:-1;;;43170:16:107;;43195:19;;;-1:-1:-1;43241:1:107;43230:13;;42820:429;-1:-1:-1;42820:429:107:o;43254:135::-;43293:3;43314:17;;;43311:43;;43334:18;;:::i;:::-;-1:-1:-1;43381:1:107;43370:13;;43254:135::o;44870:422::-;44959:1;45002:5;44959:1;45016:270;45037:7;45027:8;45024:21;45016:270;;;45096:4;45092:1;45088:6;45084:17;45078:4;45075:27;45072:53;;;45105:18;;:::i;:::-;45155:7;45145:8;45141:22;45138:55;;;45175:16;;;;45138:55;45254:22;;;;45214:15;;;;45016:270;;;45020:3;44870:422;;;;;:::o;45297:806::-;45346:5;45376:8;45366:80;;-1:-1:-1;45417:1:107;45431:5;;45366:80;45465:4;45455:76;;-1:-1:-1;45502:1:107;45516:5;;45455:76;45547:4;45565:1;45560:59;;;;45633:1;45628:130;;;;45540:218;;45560:59;45590:1;45581:10;;45604:5;;;45628:130;45665:3;45655:8;45652:17;45649:43;;;45672:18;;:::i;:::-;-1:-1:-1;;45728:1:107;45714:16;;45743:5;;45540:218;;45842:2;45832:8;45829:16;45823:3;45817:4;45814:13;45810:36;45804:2;45794:8;45791:16;45786:2;45780:4;45777:12;45773:35;45770:77;45767:159;;;-1:-1:-1;45879:19:107;;;45911:5;;45767:159;45958:34;45983:8;45977:4;45958:34;:::i;:::-;46028:6;46024:1;46020:6;46016:19;46007:7;46004:32;46001:58;;;46039:18;;:::i;:::-;46077:20;;45297:806;-1:-1:-1;;;45297:806:107:o;46108:131::-;46168:5;46197:36;46224:8;46218:4;46197:36;:::i;46376:217::-;46416:1;46442;46432:132;;46486:10;46481:3;46477:20;46474:1;46467:31;46521:4;46518:1;46511:15;46549:4;46546:1;46539:15;46432:132;-1:-1:-1;46578:9:107;;46376:217::o;46957:330::-;47158:2;47140:21;;;47197:1;47177:18;;;47170:29;-1:-1:-1;;;47230:2:107;47215:18;;47208:38;47278:2;47263:18;;46957:330::o;50674:274::-;50803:3;50841:6;50835:13;50857:53;50903:6;50898:3;50891:4;50883:6;50879:17;50857:53;:::i;:::-;50926:16;;;;;50674:274;-1:-1:-1;;50674:274:107:o;51709:691::-;52019:4;52065:1;52061;52056:3;52052:11;52048:19;52106:2;52098:6;52094:15;52083:9;52076:34;52158:2;52150:6;52146:15;52141:2;52130:9;52126:18;52119:43;52198:3;52193:2;52182:9;52178:18;52171:31;52219:63;52277:3;52266:9;52262:19;52254:6;52219:63;:::i;:::-;52325:14;;52318:22;52313:2;52298:18;;52291:50;52378:15;;;;52372:3;52357:19;;;52350:44;-1:-1:-1;52211:71:107;51709:691;-1:-1:-1;;;51709:691:107:o;55094:259::-;55164:6;55217:2;55205:9;55196:7;55192:23;55188:32;55185:52;;;55233:1;55230;55223:12;55185:52;55265:9;55259:16;55284:39;55317:5;55284:39;:::i;57591:371::-;-1:-1:-1;;;;;;57776:33:107;;57764:46;;57833:13;;57746:3;;57855:61;57833:13;57905:1;57896:11;;57889:4;57877:17;;57855:61;:::i;:::-;57936:16;;;;57954:1;57932:24;;57591:371;-1:-1:-1;;;57591:371:107:o;67137:735::-;67187:3;67228:5;67222:12;67257:36;67283:9;67257:36;:::i;:::-;67302:19;;;67340:4;67363:1;67380:18;;;67407:109;;;;67530:1;67525:341;;;;67373:493;;67407:109;-1:-1:-1;;67449:24:107;;67435:12;;;67428:46;67503:2;67494:12;;;-1:-1:-1;67407:109:107;;67525:341;67556:5;67553:1;67546:16;67603:2;67600:1;67590:16;67628:1;67642:174;67656:6;67653:1;67650:13;67642:174;;;67743:14;;67725:11;;;67721:20;;67714:44;67786:16;;;;67671:10;;67642:174;;;67840:11;;67836:20;;;-1:-1:-1;;67373:493:107;;;;;;67137:735;;;;:::o;67877:578::-;-1:-1:-1;;;;;68128:32:107;;68110:51;;68197:3;68192:2;68177:18;;68170:31;;;-1:-1:-1;;68224:54:107;;68258:19;;68250:6;68224:54;:::i;:::-;68326:9;68318:6;68314:22;68309:2;68298:9;68294:18;68287:50;68354:41;68388:6;68380;68354:41;:::i;:::-;68346:49;;;68443:4;68435:6;68431:17;68426:2;68415:9;68411:18;68404:45;67877:578;;;;;;;:::o;69754:446::-;70004:2;69993:9;69986:21;70043:1;70038:2;70027:9;70023:18;70016:29;-1:-1:-1;;;70076:2:107;70065:9;70061:18;70054:35;70127:3;70120:4;70109:9;70105:20;70098:33;69967:4;70148:46;70189:3;70178:9;70174:19;70166:6;70148:46;:::i;70739:370::-;70942:10;70938:15;70930:6;70926:28;70921:3;70914:41;70896:3;70984:6;70978:13;71000:62;71055:6;71050:2;71045:3;71041:12;71034:4;71026:6;71022:17;71000:62;:::i;:::-;71082:16;;;;71100:2;71078:25;;70739:370;-1:-1:-1;;;70739:370:107:o;73155:348::-;73385:2;73374:9;73367:21;73348:4;73405:49;73450:2;73439:9;73435:18;73068:2;73056:15;;-1:-1:-1;;;73096:4:107;73087:14;;73080:36;73141:2;73132:12;;72991:159;73405:49;73397:57;;73490:6;73485:2;73474:9;73470:18;73463:34;73155:348;;;;:::o;73672:::-;73902:2;73891:9;73884:21;73865:4;73922:49;73967:2;73956:9;73952:18;73585:2;73573:15;;-1:-1:-1;;;73613:4:107;73604:14;;73597:36;73658:2;73649:12;;73508:159;74025:610;74271:13;;74214:3;;74245;;74324:4;74351:15;;;74214:3;74394:175;74408:6;74405:1;74402:13;74394:175;;;74471:13;;74457:28;;74507:14;;;;74544:15;;;;74430:1;74423:9;74394:175;;;-1:-1:-1;;74578:21:107;;;-1:-1:-1;74615:14:107;;;;;-1:-1:-1;;;74025:610:107:o;74829:556::-;75031:2;75013:21;;;75070:3;75050:18;;;75043:31;75110:34;75105:2;75090:18;;75083:62;75181:34;75176:2;75161:18;;75154:62;75253:34;75247:3;75232:19;;75225:63;-1:-1:-1;;;75319:3:107;75304:19;;75297:46;75375:3;75360:19;;74829:556::o;76146:374::-;76376:2;76365:9;76358:21;76339:4;76396:49;76441:2;76430:9;76426:18;73068:2;73056:15;;-1:-1:-1;;;73096:4:107;73087:14;;73080:36;73141:2;73132:12;;72991:159;76396:49;-1:-1:-1;;;;;76481:32:107;;;;76476:2;76461:18;;;;76454:60;;;;-1:-1:-1;76388:57:107;76146:374::o;76525:::-;76755:2;76744:9;76737:21;76718:4;76775:49;76820:2;76809:9;76805:18;73585:2;73573:15;;-1:-1:-1;;;73613:4:107;73604:14;;73597:36;73658:2;73649:12;;73508:159;77185:658;77250:5;77303:3;77296:4;77288:6;77284:17;77280:27;77270:55;;77321:1;77318;77311:12;77270:55;77350:6;77344:13;77376:4;77400:59;77416:42;77455:2;77416:42;:::i;77400:59::-;77493:15;;;77579:1;77575:10;;;;77563:23;;77559:32;;;77524:12;;;;77603:15;;;77600:35;;;77631:1;77628;77621:12;77600:35;77667:2;77659:6;77655:15;77679:135;77695:6;77690:3;77687:15;77679:135;;;77761:10;;77749:23;;77792:12;;;;77712;;77679:135;;;-1:-1:-1;77832:5:107;77185:658;-1:-1:-1;;;;;;77185:658:107:o;77848:614::-;77977:6;77985;78038:2;78026:9;78017:7;78013:23;78009:32;78006:52;;;78054:1;78051;78044:12;78006:52;78087:9;78081:16;78116:18;78157:2;78149:6;78146:14;78143:34;;;78173:1;78170;78163:12;78143:34;78196:72;78260:7;78251:6;78240:9;78236:22;78196:72;:::i;:::-;78186:82;;78314:2;78303:9;78299:18;78293:25;78277:41;;78343:2;78333:8;78330:16;78327:36;;;78359:1;78356;78349:12;78327:36;;78382:74;78448:7;78437:8;78426:9;78422:24;78382:74;:::i;78467:442::-;-1:-1:-1;;;;;78714:32:107;;;;78696:51;;-1:-1:-1;;;;;;78783:33:107;;;;78778:2;78763:18;;78756:61;78848:2;78833:18;;78826:34;78891:2;78876:18;;78869:34;78683:3;78668:19;;78467:442::o;80168:440::-;80418:2;80407:9;80400:21;80381:4;80444:49;80489:2;80478:9;80474:18;73068:2;73056:15;;-1:-1:-1;;;73096:4:107;73087:14;;73080:36;73141:2;73132:12;;72991:159;80444:49;80541:9;80533:6;80529:22;80524:2;80513:9;80509:18;80502:50;80569:33;80595:6;80587;80569:33;:::i;80613:440::-;80863:2;80852:9;80845:21;80826:4;80889:49;80934:2;80923:9;80919:18;73585:2;73573:15;;-1:-1:-1;;;73613:4:107;73604:14;;73597:36;73658:2;73649:12;;73508:159",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "cash(address,uint256)": "d56a22f0",
    "cash(address,uint256,uint256)": "6cc12a24",
    "deal(address,address,uint256)": "6bce989b",
    "deal(address,address,uint256,bool)": "97754ae9",
    "deal(address,uint256)": "c88a5e6d",
    "deployCode(string)": "9a8325a0",
    "deployCode(string,bytes)": "29ce9dde",
    "failed()": "ba414fa6",
    "hoax(address)": "233240ee",
    "hoax(address,address)": "29a9e300",
    "hoax(address,address,uint256)": "af9bbe5f",
    "hoax(address,uint256)": "e9a79a7b",
    "logary(int256[])": "521606d2",
    "logary(uint256[])": "b84e3eda",
    "makerExecute((address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256))": "6c49c32c",
    "makerPosthook((address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))": "3d3d130d",
    "marketOrderKO()": "3566f61b",
    "marketOrderOK(address,address)": "a00ecff3",
    "newOfferKO()": "b0a706b9",
    "newOfferOK(address,address)": "e2d73418",
    "retractOfferKO(uint256)": "1a58abf9",
    "retractOfferOK(address,address,uint256)": "5749f882",
    "rewind(uint256)": "2d6c17a3",
    "setUp()": "0a9254e4",
    "setupMaker(address,address,string)": "bfdc3588",
    "setupMakerDeployer(address,address)": "bbab0fac",
    "setupMangrove()": "8c004832",
    "setupMangrove(address,address)": "ea14b5c3",
    "setupMangrove(address,address,bool)": "0b3d8c42",
    "setupMangrove(bool)": "0645f2be",
    "setupTaker(address,address,string)": "3336a63f",
    "skip(uint256)": "b9c071b4",
    "snipesKO(uint256)": "3ab07a10",
    "snipesOK(address,address,uint256)": "d419469d",
    "startHoax(address)": "6f597075",
    "startHoax(address,address)": "d06d8229",
    "startHoax(address,address,uint256)": "3bf82db1",
    "startHoax(address,uint256)": "108554f2",
    "test_activation_emits_events_in_order()": "3818b730",
    "test_can_marketOrderFor_for_with_allowance()": "4757fde9",
    "test_cannot_marketOrderFor_for_without_allowance()": "fe80d6da",
    "test_cannot_snipesFor_for_without_allowance()": "9aa488db",
    "test_empty_mgv_ok()": "aa951045",
    "test_gov_can_transfer_rights()": "5b61f512",
    "test_gov_cant_be_zero()": "81925b61",
    "test_gov_is_not_sender()": "a64e8122",
    "test_initial_allowance_is_zero()": "d1d15d69",
    "test_kill_is_idempotent()": "d7f557ed",
    "test_killing_updates_config()": "8cdfa8c3",
    "test_makerGasprice_wider_than_16_bits_fails_newOffer()": "c023e42f",
    "test_makerGasreq_at_density_suceeds()": "11c2bee1",
    "test_makerGasreq_at_gasmax_succeeds_newOffer()": "7c19a966",
    "test_makerGasreq_bigger_than_gasmax_fails_newOffer()": "5f420fe5",
    "test_makerGasreq_lower_than_density_fails_newOffer()": "af3777f4",
    "test_makerGasreq_wider_than_24_bits_fails_newOffer()": "091d3e9b",
    "test_makerGives_wider_than_96_bits_fails_newOffer()": "9e6f7567",
    "test_makerWants_wider_than_96_bits_fails_newOffer()": "ea837eef",
    "test_marketOrder_on_closed_fails()": "d7657ec4",
    "test_marketOrder_on_posthook_succeeds()": "ee95ec25",
    "test_marketOrder_on_reentrancy_fails()": "2b67606d",
    "test_marketOrder_on_reentrancy_succeeds()": "0d53ca48",
    "test_newOffer_on_closed_fails()": "fef6c457",
    "test_newOffer_on_inactive_fails()": "4ba9b07f",
    "test_newOffer_on_posthook_succeeds()": "521d68a6",
    "test_newOffer_on_reentrancy_fails()": "26210efb",
    "test_newOffer_on_reentrancy_succeeds()": "457dd4c5",
    "test_only_gov_can_kill()": "8425e355",
    "test_only_gov_can_set_active()": "ced79729",
    "test_only_gov_can_set_density()": "e451aa57",
    "test_only_gov_can_set_fee()": "0266522c",
    "test_only_gov_can_set_gasbase()": "b2abce47",
    "test_only_gov_can_set_gasmax()": "126b6ea5",
    "test_only_gov_can_set_gasprice()": "13adfa31",
    "test_only_gov_can_set_monitor()": "0e93c2ed",
    "test_only_gov_can_set_vault()": "6eb5cac1",
    "test_receive_on_closed_fails()": "b15c9128",
    "test_retractOffer_on_closed_ok()": "bcdb17b6",
    "test_retractOffer_on_posthook_succeeds()": "caf1b8db",
    "test_retractOffer_on_reentrancy_fails()": "5b29cdf5",
    "test_retractOffer_on_reentrancy_succeeds()": "cae50f54",
    "test_retractOffer_wrong_owner_fails()": "39a1e43b",
    "test_set_density_ceiling()": "2241e68f",
    "test_set_fee_ceiling()": "81e85c24",
    "test_set_gasbase_ceiling()": "7037e22b",
    "test_set_gasmax_ceiling()": "c0e3d6d8",
    "test_set_gasprice_ceiling()": "ba081c69",
    "test_set_zero_density()": "7f241084",
    "test_set_zero_gasbase()": "a1e7a826",
    "test_snipe_on_closed_fails()": "78db63bb",
    "test_snipe_on_reentrancy_fails()": "31e61c37",
    "test_snipes_on_posthook_succeeds()": "370219f5",
    "test_snipes_on_reentrancy_succeeds()": "aab4a415",
    "test_take_on_closed_fails()": "a7a05296",
    "test_takerGives_above_96bits_fails_snipes()": "e90d6353",
    "test_takerWants_above_96bits_fails_snipes()": "0ccd650d",
    "test_takerWants_wider_than_160_bits_fails_marketOrder()": "a218492e",
    "test_updateOffer_on_closed_fails()": "ec278bef",
    "test_updateOffer_on_inactive_fails()": "89ef9147",
    "test_updateOffer_on_posthook_succeeds()": "4c6f09ee",
    "test_updateOffer_on_reentrancy_fails()": "d61a7b90",
    "test_updateOffer_on_reentrancy_succeeds()": "39ee6a91",
    "test_withdraw_on_closed_ok()": "1a711c7a",
    "tip(address,address,uint256)": "d82555f1",
    "updateOfferKO(uint256)": "330ff418",
    "updateOfferOK(address,address,uint256)": "c1285555",
    "vm()": "3a768463"
  },
  "ast": {
    "absolutePath": "packages/mangrove-solidity/contracts/test/core/Gatekeeping.t.sol",
    "id": 29696,
    "exportedSymbols": {
      "AbstractMangrove": [37],
      "AccessControlled": [20247],
      "DSTest": [60744],
      "GatekeepingTest": [29695],
      "HasMgvEvents": [1914],
      "IERC20": [2050],
      "IMaker": [1932],
      "IMgvMonitor": [1972],
      "ITaker": [1944],
      "InvertedMangrove": [780],
      "MakerDeployer": [48825],
      "Mangrove": [906],
      "MangroveTest": [47059],
      "MgvLib": [1739],
      "P": [1710],
      "Script": [60776],
      "StdStorage": [62193],
      "Test": [62095],
      "Test2": [47434],
      "TestMaker": [49499],
      "TestMoriartyMaker": [49748],
      "TestTaker": [50091],
      "TestToken": [52050],
      "TrivialTestMaker": [48862],
      "Utilities": [48626],
      "Vm": [63864],
      "console": [71928],
      "console2": [79992],
      "csl": [79992],
      "stdError": [62165],
      "stdMath": [63442],
      "stdStorage": [63295]
    },
    "nodeType": "SourceUnit",
    "src": "38:22186:66",
    "nodes": [
      {
        "id": 26295,
        "nodeType": "PragmaDirective",
        "src": "38:24:66",
        "literals": ["solidity", "^", "0.8", ".10"]
      },
      {
        "id": 26296,
        "nodeType": "PragmaDirective",
        "src": "63:19:66",
        "literals": ["abicoder", "v2"]
      },
      {
        "id": 26297,
        "nodeType": "ImportDirective",
        "src": "84:39:66",
        "absolutePath": "packages/mangrove-solidity/contracts/test/lib/MangroveTest.sol",
        "file": "mgv_test/lib/MangroveTest.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29696,
        "sourceUnit": 47060,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29695,
        "nodeType": "ContractDefinition",
        "src": "186:22037:66",
        "nodes": [
          {
            "id": 26305,
            "nodeType": "FunctionDefinition",
            "src": "239:29:66",
            "body": {
              "id": 26304,
              "nodeType": "Block",
              "src": "266:2:66",
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 26302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "246:2:66"
            },
            "returnParameters": {
              "id": 26303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "266:0:66"
            },
            "scope": 29695,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 26308,
            "nodeType": "VariableDeclaration",
            "src": "272:13:66",
            "constant": false,
            "mutability": "mutable",
            "name": "tkr",
            "nameLocation": "282:3:66",
            "scope": 29695,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestTaker_$50091",
              "typeString": "contract TestTaker"
            },
            "typeName": {
              "id": 26307,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26306,
                "name": "TestTaker",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 50091,
                "src": "272:9:66"
              },
              "referencedDeclaration": 50091,
              "src": "272:9:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestTaker_$50091",
                "typeString": "contract TestTaker"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 26311,
            "nodeType": "VariableDeclaration",
            "src": "289:13:66",
            "constant": false,
            "mutability": "mutable",
            "name": "mkr",
            "nameLocation": "299:3:66",
            "scope": 29695,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestMaker_$49499",
              "typeString": "contract TestMaker"
            },
            "typeName": {
              "id": 26310,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26309,
                "name": "TestMaker",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49499,
                "src": "289:9:66"
              },
              "referencedDeclaration": 49499,
              "src": "289:9:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestMaker_$49499",
                "typeString": "contract TestMaker"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 26314,
            "nodeType": "VariableDeclaration",
            "src": "306:18:66",
            "constant": false,
            "mutability": "mutable",
            "name": "dual_mkr",
            "nameLocation": "316:8:66",
            "scope": 29695,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestMaker_$49499",
              "typeString": "contract TestMaker"
            },
            "typeName": {
              "id": 26313,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26312,
                "name": "TestMaker",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49499,
                "src": "306:9:66"
              },
              "referencedDeclaration": 49499,
              "src": "306:9:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestMaker_$49499",
                "typeString": "contract TestMaker"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 26316,
            "nodeType": "VariableDeclaration",
            "src": "328:16:66",
            "constant": false,
            "mutability": "mutable",
            "name": "notAdmin",
            "nameLocation": "336:8:66",
            "scope": 29695,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 26315,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "328:7:66",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 26429,
            "nodeType": "FunctionDefinition",
            "src": "349:555:66",
            "body": {
              "id": 26428,
              "nodeType": "Block",
              "src": "382:522:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 26320,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "388:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_GatekeepingTest_$29695_$",
                          "typeString": "type(contract super GatekeepingTest)"
                        }
                      },
                      "id": 26322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46003,
                      "src": "388:11:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 26323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "388:13:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26324,
                  "nodeType": "ExpressionStatement",
                  "src": "388:13:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26327,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "414:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 26326,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "412:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 26328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "412:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 26330,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "423:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                              "typeString": "contract GatekeepingTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                              "typeString": "contract GatekeepingTest"
                            }
                          ],
                          "id": 26329,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "421:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 26331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "421:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 26332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "430:8:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "id": 26325,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [61102, 61119, 61222],
                      "referencedDeclaration": 61119,
                      "src": "407:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 26333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "407:32:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26334,
                  "nodeType": "ExpressionStatement",
                  "src": "407:32:66"
                },
                {
                  "expression": {
                    "id": 26345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26335,
                      "name": "tkr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26308,
                      "src": "446:3:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestTaker_$50091",
                        "typeString": "contract TestTaker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 26338,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45878,
                              "src": "465:4:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 26337,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "463:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 26339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "463:7:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 26341,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45881,
                              "src": "474:5:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 26340,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "472:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 26342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "472:8:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "74616b65725b242841292c242842295d",
                          "id": 26343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "482:18:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_7fa55fab003bc7cb63668996a72c9398f9e60f82d3931fb4e5180b6c61d06bff",
                            "typeString": "literal_string \"taker[$(A),$(B)]\""
                          },
                          "value": "taker[$(A),$(B)]"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_7fa55fab003bc7cb63668996a72c9398f9e60f82d3931fb4e5180b6c61d06bff",
                            "typeString": "literal_string \"taker[$(A),$(B)]\""
                          }
                        ],
                        "id": 26336,
                        "name": "setupTaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46919,
                        "src": "452:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_TestTaker_$50091_$",
                          "typeString": "function (address,address,string memory) returns (contract TestTaker)"
                        }
                      },
                      "id": 26344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "452:49:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestTaker_$50091",
                        "typeString": "contract TestTaker"
                      }
                    },
                    "src": "446:55:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestTaker_$50091",
                      "typeString": "contract TestTaker"
                    }
                  },
                  "id": 26346,
                  "nodeType": "ExpressionStatement",
                  "src": "446:55:66"
                },
                {
                  "expression": {
                    "id": 26357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26347,
                      "name": "mkr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26311,
                      "src": "507:3:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$49499",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 26350,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45878,
                              "src": "526:4:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 26349,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "524:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 26351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "524:7:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 26353,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45881,
                              "src": "535:5:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 26352,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "533:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 26354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "533:8:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "6d616b65725b242841292c242842295d",
                          "id": 26355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "543:18:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_8beef7e1343f5e05ab06915a19bc81e998065c32b6aaf5db8bb02daf33027927",
                            "typeString": "literal_string \"maker[$(A),$(B)]\""
                          },
                          "value": "maker[$(A),$(B)]"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_8beef7e1343f5e05ab06915a19bc81e998065c32b6aaf5db8bb02daf33027927",
                            "typeString": "literal_string \"maker[$(A),$(B)]\""
                          }
                        ],
                        "id": 26348,
                        "name": "setupMaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46843,
                        "src": "513:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_TestMaker_$49499_$",
                          "typeString": "function (address,address,string memory) returns (contract TestMaker)"
                        }
                      },
                      "id": 26356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "513:49:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$49499",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "src": "507:55:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestMaker_$49499",
                      "typeString": "contract TestMaker"
                    }
                  },
                  "id": 26358,
                  "nodeType": "ExpressionStatement",
                  "src": "507:55:66"
                },
                {
                  "expression": {
                    "id": 26369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26359,
                      "name": "dual_mkr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26314,
                      "src": "568:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$49499",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 26362,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45881,
                              "src": "592:5:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 26361,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "590:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 26363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "590:8:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 26365,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45878,
                              "src": "602:4:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 26364,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "600:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 26366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "600:7:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "6d616b65725b242842292c242841295d",
                          "id": 26367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "609:18:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_19b520a2fae695a4ff52dd06d8d38f0b9262fa04f8f989e6eb50ec2cc1ccc027",
                            "typeString": "literal_string \"maker[$(B),$(A)]\""
                          },
                          "value": "maker[$(B),$(A)]"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_19b520a2fae695a4ff52dd06d8d38f0b9262fa04f8f989e6eb50ec2cc1ccc027",
                            "typeString": "literal_string \"maker[$(B),$(A)]\""
                          }
                        ],
                        "id": 26360,
                        "name": "setupMaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46843,
                        "src": "579:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_TestMaker_$49499_$",
                          "typeString": "function (address,address,string memory) returns (contract TestMaker)"
                        }
                      },
                      "id": 26368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "579:49:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMaker_$49499",
                        "typeString": "contract TestMaker"
                      }
                    },
                    "src": "568:60:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestMaker_$49499",
                      "typeString": "contract TestMaker"
                    }
                  },
                  "id": 26370,
                  "nodeType": "ExpressionStatement",
                  "src": "568:60:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "35",
                        "id": 26374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "652:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 26371,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26311,
                        "src": "635:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 26373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "provisionMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49471,
                      "src": "635:16:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 26375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "635:25:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26376,
                  "nodeType": "ExpressionStatement",
                  "src": "635:25:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "35",
                        "id": 26380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "688:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_5000000000000000000_by_1",
                          "typeString": "int_const 5000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 26377,
                        "name": "dual_mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26314,
                        "src": "666:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 26379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "provisionMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49471,
                      "src": "666:21:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 26381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "666:30:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26382,
                  "nodeType": "ExpressionStatement",
                  "src": "666:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26385,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "710:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 26384,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "708:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 26386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "708:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 26389,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26308,
                            "src": "726:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          ],
                          "id": 26388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "718:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26387,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "718:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "718:12:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 26391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "732:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 26383,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [61102, 61119, 61222],
                      "referencedDeclaration": 61119,
                      "src": "703:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 26392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "703:37:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26393,
                  "nodeType": "ExpressionStatement",
                  "src": "703:37:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26396,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "753:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 26395,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "751:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 26397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "751:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 26400,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26311,
                            "src": "769:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 26399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "761:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26398,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "761:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "761:12:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 26402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "775:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 26394,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [61102, 61119, 61222],
                      "referencedDeclaration": 61119,
                      "src": "746:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 26403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "746:37:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26404,
                  "nodeType": "ExpressionStatement",
                  "src": "746:37:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26407,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "796:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 26406,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "794:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 26408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "794:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 26411,
                            "name": "dual_mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26314,
                            "src": "811:8:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 26410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "803:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26409,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "803:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "803:17:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 26413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "822:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 26405,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [61102, 61119, 61222],
                      "referencedDeclaration": 61119,
                      "src": "789:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 26414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "789:41:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26415,
                  "nodeType": "ExpressionStatement",
                  "src": "789:41:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26419,
                        "name": "quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45881,
                        "src": "852:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 26420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "859:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 26416,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26308,
                        "src": "837:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$50091",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 26418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49823,
                      "src": "837:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$2050_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 26421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "837:30:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26422,
                  "nodeType": "ExpressionStatement",
                  "src": "837:30:66"
                },
                {
                  "expression": {
                    "id": 26426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26423,
                      "name": "notAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26316,
                      "src": "874:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 26424,
                        "name": "freshAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [47189, 47204],
                        "referencedDeclaration": 47189,
                        "src": "885:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_payable_$",
                          "typeString": "function () returns (address payable)"
                        }
                      },
                      "id": 26425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "885:14:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "874:25:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 26427,
                  "nodeType": "ExpressionStatement",
                  "src": "874:25:66"
                }
              ]
            },
            "baseFunctions": [46003],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "358:5:66",
            "overrides": {
              "id": 26318,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "373:8:66"
            },
            "parameters": {
              "id": 26317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "363:2:66"
            },
            "returnParameters": {
              "id": 26319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "382:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26451,
            "nodeType": "FunctionDefinition",
            "src": "931:199:66",
            "body": {
              "id": 26450,
              "nodeType": "Block",
              "src": "972:158:66",
              "statements": [
                {
                  "expression": {
                    "id": 26440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26432,
                      "name": "mgv",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45875,
                      "src": "978:3:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                        "typeString": "contract AbstractMangrove"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 26436,
                          "name": "notAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26316,
                          "src": "1010:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 26437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1030:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 26438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1041:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 26435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "984:12:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$_t_contract$_Mangrove_$906_$",
                          "typeString": "function (address,uint256,uint256) returns (contract Mangrove)"
                        },
                        "typeName": {
                          "id": 26434,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 26433,
                            "name": "Mangrove",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 906,
                            "src": "988:8:66"
                          },
                          "referencedDeclaration": 906,
                          "src": "988:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Mangrove_$906",
                            "typeString": "contract Mangrove"
                          }
                        }
                      },
                      "id": 26439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": ["governance", "gasprice", "gasmax"],
                      "nodeType": "FunctionCall",
                      "src": "984:60:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Mangrove_$906",
                        "typeString": "contract Mangrove"
                      }
                    },
                    "src": "978:66:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                      "typeString": "contract AbstractMangrove"
                    }
                  },
                  "id": 26441,
                  "nodeType": "ExpressionStatement",
                  "src": "978:66:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 26443,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "1059:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 26444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "governance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 918,
                          "src": "1059:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 26445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1059:16:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26446,
                        "name": "notAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26316,
                        "src": "1077:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "676f7665726e616e63652073686f756c64206e6f74206265206d73672e73656e646572",
                        "id": 26447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1087:37:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebe35af5a6cb0acd1773cf4f7d7ff2f99641c545c18ab61bfa179ad0ba940def",
                          "typeString": "literal_string \"governance should not be msg.sender\""
                        },
                        "value": "governance should not be msg.sender"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebe35af5a6cb0acd1773cf4f7d7ff2f99641c545c18ab61bfa179ad0ba940def",
                          "typeString": "literal_string \"governance should not be msg.sender\""
                        }
                      ],
                      "id": 26442,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59303,
                      "src": "1050:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 26448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1050:75:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26449,
                  "nodeType": "ExpressionStatement",
                  "src": "1050:75:66"
                }
              ]
            },
            "functionSelector": "a64e8122",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_gov_is_not_sender",
            "nameLocation": "940:22:66",
            "parameters": {
              "id": 26430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "962:2:66"
            },
            "returnParameters": {
              "id": 26431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "972:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26470,
            "nodeType": "FunctionDefinition",
            "src": "1134:124:66",
            "body": {
              "id": 26469,
              "nodeType": "Block",
              "src": "1174:84:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f636f6e6669672f676f762f6e6f7430",
                        "id": 26457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1196:21:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b8c4de101199d594564ccd2a2fe79f80e41ad601ed34dda1765f9137501ced2",
                          "typeString": "literal_string \"mgv/config/gov/not0\""
                        },
                        "value": "mgv/config/gov/not0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6b8c4de101199d594564ccd2a2fe79f80e41ad601ed34dda1765f9137501ced2",
                          "typeString": "literal_string \"mgv/config/gov/not0\""
                        }
                      ],
                      "expression": {
                        "id": 26454,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "1180:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "1180:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 26458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1180:38:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26459,
                  "nodeType": "ExpressionStatement",
                  "src": "1180:38:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 26465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1250:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 26464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1242:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26463,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1242:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1242:10:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 26460,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "1224:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 26462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1301,
                      "src": "1224:17:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 26467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1224:29:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26468,
                  "nodeType": "ExpressionStatement",
                  "src": "1224:29:66"
                }
              ]
            },
            "functionSelector": "81925b61",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_gov_cant_be_zero",
            "nameLocation": "1143:21:66",
            "parameters": {
              "id": 26452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1164:2:66"
            },
            "returnParameters": {
              "id": 26453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1174:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26542,
            "nodeType": "FunctionDefinition",
            "src": "1262:349:66",
            "body": {
              "id": 26541,
              "nodeType": "Block",
              "src": "1309:302:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26475,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "1328:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 26474,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "1326:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 26476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1326:6:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 26473,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "1315:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 26477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1315:18:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26478,
                  "nodeType": "ExpressionStatement",
                  "src": "1315:18:66"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 26480,
                        "name": "notAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26316,
                        "src": "1358:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 26479,
                      "name": "SetGovernance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1781,
                      "src": "1344:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 26481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1344:23:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26482,
                  "nodeType": "EmitStatement",
                  "src": "1339:28:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26486,
                        "name": "notAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26316,
                        "src": "1391:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 26483,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "1373:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 26485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setGovernance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1301,
                      "src": "1373:17:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 26487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1373:27:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26488,
                  "nodeType": "ExpressionStatement",
                  "src": "1373:27:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f756e617574686f72697a6564",
                        "id": 26492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1423:18:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        },
                        "value": "mgv/unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        }
                      ],
                      "expression": {
                        "id": 26489,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "1407:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "1407:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 26493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1407:35:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26494,
                  "nodeType": "ExpressionStatement",
                  "src": "1407:35:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26499,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "1461:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 26498,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "1459:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 26500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1459:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 26502,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "1470:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 26501,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "1468:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 26503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1468:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 26504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1478:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 26495,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "1448:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 26497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1109,
                      "src": "1448:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 26505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1448:32:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26506,
                  "nodeType": "ExpressionStatement",
                  "src": "1448:32:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26509,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "1500:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 26508,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "1498:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 26510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1498:6:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 26507,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "1487:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 26511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1487:18:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26512,
                  "nodeType": "ExpressionStatement",
                  "src": "1487:18:66"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26515,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "1525:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 26514,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "1523:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 26516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1523:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 26518,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "1534:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 26517,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "1532:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 26519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1532:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 26520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1542:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 26513,
                      "name": "SetFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1769,
                      "src": "1516:6:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 26521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1516:28:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26522,
                  "nodeType": "EmitStatement",
                  "src": "1511:33:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26526,
                        "name": "notAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26316,
                        "src": "1559:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 26523,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "1550:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63656,
                      "src": "1550:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 26527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1550:18:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26528,
                  "nodeType": "ExpressionStatement",
                  "src": "1550:18:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26533,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "1587:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 26532,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "1585:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 26534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1585:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 26536,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "1596:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 26535,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "1594:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 26537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1594:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 26538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1604:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 26529,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "1574:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 26531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1109,
                      "src": "1574:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 26539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1574:32:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26540,
                  "nodeType": "ExpressionStatement",
                  "src": "1574:32:66"
                }
              ]
            },
            "functionSelector": "5b61f512",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_gov_can_transfer_rights",
            "nameLocation": "1271:28:66",
            "parameters": {
              "id": 26471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1299:2:66"
            },
            "returnParameters": {
              "id": 26472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1309:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26570,
            "nodeType": "FunctionDefinition",
            "src": "1615:152:66",
            "body": {
              "id": 26569,
              "nodeType": "Block",
              "src": "1659:108:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f756e617574686f72697a6564",
                        "id": 26548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1681:18:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        },
                        "value": "mgv/unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        }
                      ],
                      "expression": {
                        "id": 26545,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "1665:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "1665:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 26549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1665:35:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26550,
                  "nodeType": "ExpressionStatement",
                  "src": "1665:35:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26554,
                        "name": "notAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26316,
                        "src": "1715:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 26551,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "1706:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63656,
                      "src": "1706:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 26555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1706:18:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26556,
                  "nodeType": "ExpressionStatement",
                  "src": "1706:18:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26561,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "1743:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 26560,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "1741:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 26562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1741:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 26564,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "1752:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 26563,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "1750:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 26565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1750:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 26566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1760:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 26557,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "1730:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 26559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1109,
                      "src": "1730:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 26567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1730:32:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26568,
                  "nodeType": "ExpressionStatement",
                  "src": "1730:32:66"
                }
              ]
            },
            "functionSelector": "0266522c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_only_gov_can_set_fee",
            "nameLocation": "1624:25:66",
            "parameters": {
              "id": 26543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1649:2:66"
            },
            "returnParameters": {
              "id": 26544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1659:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26598,
            "nodeType": "FunctionDefinition",
            "src": "1771:160:66",
            "body": {
              "id": 26597,
              "nodeType": "Block",
              "src": "1819:112:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f756e617574686f72697a6564",
                        "id": 26576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1841:18:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        },
                        "value": "mgv/unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        }
                      ],
                      "expression": {
                        "id": 26573,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "1825:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "1825:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 26577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1825:35:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26578,
                  "nodeType": "ExpressionStatement",
                  "src": "1825:35:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26582,
                        "name": "notAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26316,
                        "src": "1875:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 26579,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "1866:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63656,
                      "src": "1866:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 26583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1866:18:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26584,
                  "nodeType": "ExpressionStatement",
                  "src": "1866:18:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26589,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "1907:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 26588,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "1905:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 26590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1905:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 26592,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "1916:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 26591,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "1914:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 26593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1914:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 26594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1924:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 26585,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "1890:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 26587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDensity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1151,
                      "src": "1890:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 26595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1890:36:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26596,
                  "nodeType": "ExpressionStatement",
                  "src": "1890:36:66"
                }
              ]
            },
            "functionSelector": "e451aa57",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_only_gov_can_set_density",
            "nameLocation": "1780:29:66",
            "parameters": {
              "id": 26571,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1809:2:66"
            },
            "returnParameters": {
              "id": 26572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1819:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26630,
            "nodeType": "FunctionDefinition",
            "src": "1935:154:66",
            "body": {
              "id": 26629,
              "nodeType": "Block",
              "src": "1975:114:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26603,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "1994:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 26602,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "1992:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 26604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1992:6:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 26601,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "1981:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 26605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1981:18:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26606,
                  "nodeType": "ExpressionStatement",
                  "src": "1981:18:66"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26609,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "2023:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 26608,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "2021:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 26610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2021:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 26612,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "2032:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 26611,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "2030:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 26613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2030:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 26614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2040:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 26607,
                      "name": "SetDensity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1809,
                      "src": "2010:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 26615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2010:32:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26616,
                  "nodeType": "EmitStatement",
                  "src": "2005:37:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26621,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "2065:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 26620,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "2063:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 26622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2063:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 26624,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "2074:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 26623,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "2072:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 26625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2072:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 26626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2082:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 26617,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "2048:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 26619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDensity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1151,
                      "src": "2048:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 26627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2048:36:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26628,
                  "nodeType": "ExpressionStatement",
                  "src": "2048:36:66"
                }
              ]
            },
            "functionSelector": "7f241084",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_set_zero_density",
            "nameLocation": "1944:21:66",
            "parameters": {
              "id": 26599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1965:2:66"
            },
            "returnParameters": {
              "id": 26600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1975:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26651,
            "nodeType": "FunctionDefinition",
            "src": "2093:127:66",
            "body": {
              "id": 26650,
              "nodeType": "Block",
              "src": "2134:86:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f756e617574686f72697a6564",
                        "id": 26636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2156:18:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        },
                        "value": "mgv/unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        }
                      ],
                      "expression": {
                        "id": 26633,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "2140:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "2140:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 26637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2140:35:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26638,
                  "nodeType": "ExpressionStatement",
                  "src": "2140:35:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26642,
                        "name": "notAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26316,
                        "src": "2190:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 26639,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "2181:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63656,
                      "src": "2181:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 26643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2181:18:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26644,
                  "nodeType": "ExpressionStatement",
                  "src": "2181:18:66"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 26645,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "2205:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 26647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "kill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1214,
                      "src": "2205:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 26648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2205:10:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26649,
                  "nodeType": "ExpressionStatement",
                  "src": "2205:10:66"
                }
              ]
            },
            "functionSelector": "8425e355",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_only_gov_can_kill",
            "nameLocation": "2102:22:66",
            "parameters": {
              "id": 26631,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2124:2:66"
            },
            "returnParameters": {
              "id": 26632,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2134:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26717,
            "nodeType": "FunctionDefinition",
            "src": "2224:338:66",
            "body": {
              "id": 26716,
              "nodeType": "Block",
              "src": "2270:292:66",
              "statements": [
                {
                  "assignments": [26659, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26659,
                      "mutability": "mutable",
                      "name": "global",
                      "nameLocation": "2288:6:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 26716,
                      "src": "2277:17:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$7552",
                        "typeString": "t"
                      },
                      "typeName": {
                        "id": 26658,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 26657,
                          "name": "P.Global.t",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7552,
                          "src": "2277:10:66"
                        },
                        "referencedDeclaration": 7552,
                        "src": "2277:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$7552",
                          "typeString": "t"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 26671,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 26664,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2319:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 26663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2311:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26662,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2311:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2311:10:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 26668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2331:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 26667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2323:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26666,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2323:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2323:10:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 26660,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "2300:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 26661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "config",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5799,
                      "src": "2300:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_userDefinedValueType$_t_$7552_$_t_userDefinedValueType$_t_$8421_$",
                        "typeString": "function (address,address) view external returns (t,t)"
                      }
                    },
                    "id": 26670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2300:34:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_userDefinedValueType$_t_$7552_$_t_userDefinedValueType$_t_$8421_$",
                      "typeString": "tuple(t,t)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2276:58:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2351:14:66",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 26673,
                              "name": "global",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26659,
                              "src": "2352:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_t_$7552",
                                "typeString": "t"
                              }
                            },
                            "id": 26674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "dead",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8243,
                            "src": "2352:11:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$7552_$returns$_t_bool_$bound_to$_t_userDefinedValueType$_t_$7552_$",
                              "typeString": "function (t) pure returns (bool)"
                            }
                          },
                          "id": 26675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2352:13:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d67762073686f756c64206e6f74206265206465616420",
                        "id": 26677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2367:25:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbd9311bb8727cea6a182d85f3831cc90fe5221a7c577aeb974d050d562086e4",
                          "typeString": "literal_string \"mgv should not be dead \""
                        },
                        "value": "mgv should not be dead "
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dbd9311bb8727cea6a182d85f3831cc90fe5221a7c577aeb974d050d562086e4",
                          "typeString": "literal_string \"mgv should not be dead \""
                        }
                      ],
                      "id": 26672,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "2340:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 26678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2340:53:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26679,
                  "nodeType": "ExpressionStatement",
                  "src": "2340:53:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26682,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "2412:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 26681,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "2410:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 26683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2410:6:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 26680,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "2399:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 26684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2399:18:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26685,
                  "nodeType": "ExpressionStatement",
                  "src": "2399:18:66"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 26686,
                      "name": "Kill",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1885,
                      "src": "2428:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 26687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2428:6:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26688,
                  "nodeType": "EmitStatement",
                  "src": "2423:11:66"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 26689,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "2440:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 26691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "kill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1214,
                      "src": "2440:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 26692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2440:10:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26693,
                  "nodeType": "ExpressionStatement",
                  "src": "2440:10:66"
                },
                {
                  "expression": {
                    "id": 26707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 26694,
                          "name": "global",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26659,
                          "src": "2457:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_t_$7552",
                            "typeString": "t"
                          }
                        },
                        null
                      ],
                      "id": 26695,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2456:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_userDefinedValueType$_t_$7552_$__$",
                        "typeString": "tuple(t,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 26700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2488:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 26699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2480:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 26698,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2480:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 26701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2480:10:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 26704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2500:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 26703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2492:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 26702,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2492:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 26705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2492:10:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 26696,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45875,
                          "src": "2469:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 26697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "config",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5799,
                        "src": "2469:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_userDefinedValueType$_t_$7552_$_t_userDefinedValueType$_t_$8421_$",
                          "typeString": "function (address,address) view external returns (t,t)"
                        }
                      },
                      "id": 26706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2469:34:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_userDefinedValueType$_t_$7552_$_t_userDefinedValueType$_t_$8421_$",
                        "typeString": "tuple(t,t)"
                      }
                    },
                    "src": "2456:47:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26708,
                  "nodeType": "ExpressionStatement",
                  "src": "2456:47:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 26710,
                            "name": "global",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26659,
                            "src": "2520:6:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$7552",
                              "typeString": "t"
                            }
                          },
                          "id": 26711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dead",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8243,
                          "src": "2520:11:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$7552_$returns$_t_bool_$bound_to$_t_userDefinedValueType$_t_$7552_$",
                            "typeString": "function (t) pure returns (bool)"
                          }
                        },
                        "id": 26712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2520:13:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d67762073686f756c64206265206465616420",
                        "id": 26713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2535:21:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96fa4215c5ad03eb527bee72eb46409988328a29c0e38ac15b4ab3714b6a934e",
                          "typeString": "literal_string \"mgv should be dead \""
                        },
                        "value": "mgv should be dead "
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_96fa4215c5ad03eb527bee72eb46409988328a29c0e38ac15b4ab3714b6a934e",
                          "typeString": "literal_string \"mgv should be dead \""
                        }
                      ],
                      "id": 26709,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "2509:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 26714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2509:48:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26715,
                  "nodeType": "ExpressionStatement",
                  "src": "2509:48:66"
                }
              ]
            },
            "functionSelector": "8cdfa8c3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_killing_updates_config",
            "nameLocation": "2233:27:66",
            "parameters": {
              "id": 26652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2260:2:66"
            },
            "returnParameters": {
              "id": 26653,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2270:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26819,
            "nodeType": "FunctionDefinition",
            "src": "2566:502:66",
            "body": {
              "id": 26818,
              "nodeType": "Block",
              "src": "2608:460:66",
              "statements": [
                {
                  "assignments": [26725, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26725,
                      "mutability": "mutable",
                      "name": "global",
                      "nameLocation": "2626:6:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 26818,
                      "src": "2615:17:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$7552",
                        "typeString": "t"
                      },
                      "typeName": {
                        "id": 26724,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 26723,
                          "name": "P.Global.t",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7552,
                          "src": "2615:10:66"
                        },
                        "referencedDeclaration": 7552,
                        "src": "2615:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$7552",
                          "typeString": "t"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 26737,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 26730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2657:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 26729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2649:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26728,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2649:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2649:10:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 26734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2669:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 26733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2661:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26732,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2661:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2661:10:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 26726,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "2638:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 26727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "config",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5799,
                      "src": "2638:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_userDefinedValueType$_t_$7552_$_t_userDefinedValueType$_t_$8421_$",
                        "typeString": "function (address,address) view external returns (t,t)"
                      }
                    },
                    "id": 26736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2638:34:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_userDefinedValueType$_t_$7552_$_t_userDefinedValueType$_t_$8421_$",
                      "typeString": "tuple(t,t)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2614:58:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2689:14:66",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 26739,
                              "name": "global",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26725,
                              "src": "2690:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_t_$7552",
                                "typeString": "t"
                              }
                            },
                            "id": 26740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "dead",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8243,
                            "src": "2690:11:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$7552_$returns$_t_bool_$bound_to$_t_userDefinedValueType$_t_$7552_$",
                              "typeString": "function (t) pure returns (bool)"
                            }
                          },
                          "id": 26741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2690:13:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d67762073686f756c64206e6f74206265206465616420",
                        "id": 26743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2705:25:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbd9311bb8727cea6a182d85f3831cc90fe5221a7c577aeb974d050d562086e4",
                          "typeString": "literal_string \"mgv should not be dead \""
                        },
                        "value": "mgv should not be dead "
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dbd9311bb8727cea6a182d85f3831cc90fe5221a7c577aeb974d050d562086e4",
                          "typeString": "literal_string \"mgv should not be dead \""
                        }
                      ],
                      "id": 26738,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "2678:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 26744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2678:53:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26745,
                  "nodeType": "ExpressionStatement",
                  "src": "2678:53:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26748,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "2750:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 26747,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "2748:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 26749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2748:6:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 26746,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "2737:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 26750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2737:18:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26751,
                  "nodeType": "ExpressionStatement",
                  "src": "2737:18:66"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 26752,
                      "name": "Kill",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1885,
                      "src": "2766:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 26753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2766:6:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26754,
                  "nodeType": "EmitStatement",
                  "src": "2761:11:66"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 26755,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "2778:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 26757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "kill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1214,
                      "src": "2778:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 26758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2778:10:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26759,
                  "nodeType": "ExpressionStatement",
                  "src": "2778:10:66"
                },
                {
                  "expression": {
                    "id": 26773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 26760,
                          "name": "global",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26725,
                          "src": "2795:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_t_$7552",
                            "typeString": "t"
                          }
                        },
                        null
                      ],
                      "id": 26761,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2794:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_userDefinedValueType$_t_$7552_$__$",
                        "typeString": "tuple(t,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 26766,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2826:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 26765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2818:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 26764,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2818:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 26767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2818:10:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 26770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2838:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 26769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2830:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 26768,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2830:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 26771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2830:10:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 26762,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45875,
                          "src": "2807:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 26763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "config",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5799,
                        "src": "2807:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_userDefinedValueType$_t_$7552_$_t_userDefinedValueType$_t_$8421_$",
                          "typeString": "function (address,address) view external returns (t,t)"
                        }
                      },
                      "id": 26772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2807:34:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_userDefinedValueType$_t_$7552_$_t_userDefinedValueType$_t_$8421_$",
                        "typeString": "tuple(t,t)"
                      }
                    },
                    "src": "2794:47:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26774,
                  "nodeType": "ExpressionStatement",
                  "src": "2794:47:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 26776,
                            "name": "global",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26725,
                            "src": "2858:6:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$7552",
                              "typeString": "t"
                            }
                          },
                          "id": 26777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dead",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8243,
                          "src": "2858:11:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$7552_$returns$_t_bool_$bound_to$_t_userDefinedValueType$_t_$7552_$",
                            "typeString": "function (t) pure returns (bool)"
                          }
                        },
                        "id": 26778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2858:13:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d67762073686f756c642062652064656164",
                        "id": 26779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2873:20:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a8f1dbec43bb2243b109c60a418fb0ac1121c30570b42278b6aed686196cd32",
                          "typeString": "literal_string \"mgv should be dead\""
                        },
                        "value": "mgv should be dead"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a8f1dbec43bb2243b109c60a418fb0ac1121c30570b42278b6aed686196cd32",
                          "typeString": "literal_string \"mgv should be dead\""
                        }
                      ],
                      "id": 26775,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "2847:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 26780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2847:47:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26781,
                  "nodeType": "ExpressionStatement",
                  "src": "2847:47:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26784,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "2913:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 26783,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "2911:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 26785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2911:6:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 26782,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "2900:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 26786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2900:18:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26787,
                  "nodeType": "ExpressionStatement",
                  "src": "2900:18:66"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 26788,
                      "name": "Kill",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1885,
                      "src": "2929:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 26789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2929:6:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26790,
                  "nodeType": "EmitStatement",
                  "src": "2924:11:66"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 26791,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "2941:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 26793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "kill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1214,
                      "src": "2941:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 26794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2941:10:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26795,
                  "nodeType": "ExpressionStatement",
                  "src": "2941:10:66"
                },
                {
                  "expression": {
                    "id": 26809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 26796,
                          "name": "global",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26725,
                          "src": "2958:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_t_$7552",
                            "typeString": "t"
                          }
                        },
                        null
                      ],
                      "id": 26797,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2957:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_userDefinedValueType$_t_$7552_$__$",
                        "typeString": "tuple(t,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 26802,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2989:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 26801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2981:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 26800,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2981:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 26803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2981:10:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 26806,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3001:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 26805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2993:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 26804,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2993:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 26807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2993:10:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 26798,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45875,
                          "src": "2970:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 26799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "config",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5799,
                        "src": "2970:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_userDefinedValueType$_t_$7552_$_t_userDefinedValueType$_t_$8421_$",
                          "typeString": "function (address,address) view external returns (t,t)"
                        }
                      },
                      "id": 26808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2970:34:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_userDefinedValueType$_t_$7552_$_t_userDefinedValueType$_t_$8421_$",
                        "typeString": "tuple(t,t)"
                      }
                    },
                    "src": "2957:47:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26810,
                  "nodeType": "ExpressionStatement",
                  "src": "2957:47:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 26812,
                            "name": "global",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26725,
                            "src": "3021:6:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$7552",
                              "typeString": "t"
                            }
                          },
                          "id": 26813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dead",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8243,
                          "src": "3021:11:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$7552_$returns$_t_bool_$bound_to$_t_userDefinedValueType$_t_$7552_$",
                            "typeString": "function (t) pure returns (bool)"
                          }
                        },
                        "id": 26814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3021:13:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d67762073686f756c64207374696c6c2062652064656164",
                        "id": 26815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3036:26:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75c02ed02195b6e43c1f4a61f3bf26e542ca4f425c1365e1ed4f23e0057d1c19",
                          "typeString": "literal_string \"mgv should still be dead\""
                        },
                        "value": "mgv should still be dead"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75c02ed02195b6e43c1f4a61f3bf26e542ca4f425c1365e1ed4f23e0057d1c19",
                          "typeString": "literal_string \"mgv should still be dead\""
                        }
                      ],
                      "id": 26811,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "3010:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 26816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3010:53:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26817,
                  "nodeType": "ExpressionStatement",
                  "src": "3010:53:66"
                }
              ]
            },
            "functionSelector": "d7f557ed",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_kill_is_idempotent",
            "nameLocation": "2575:23:66",
            "parameters": {
              "id": 26718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2598:2:66"
            },
            "returnParameters": {
              "id": 26719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2608:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26843,
            "nodeType": "FunctionDefinition",
            "src": "3072:143:66",
            "body": {
              "id": 26842,
              "nodeType": "Block",
              "src": "3118:97:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f756e617574686f72697a6564",
                        "id": 26825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3140:18:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        },
                        "value": "mgv/unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        }
                      ],
                      "expression": {
                        "id": 26822,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "3124:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "3124:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 26826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3124:35:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26827,
                  "nodeType": "ExpressionStatement",
                  "src": "3124:35:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26831,
                        "name": "notAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26316,
                        "src": "3174:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 26828,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "3165:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63656,
                      "src": "3165:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 26832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3165:18:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26833,
                  "nodeType": "ExpressionStatement",
                  "src": "3165:18:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26838,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3204:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                              "typeString": "contract GatekeepingTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                              "typeString": "contract GatekeepingTest"
                            }
                          ],
                          "id": 26837,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "3202:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 26839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3202:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 26834,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "3189:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 26836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setVault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1319,
                      "src": "3189:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 26840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3189:21:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26841,
                  "nodeType": "ExpressionStatement",
                  "src": "3189:21:66"
                }
              ]
            },
            "functionSelector": "6eb5cac1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_only_gov_can_set_vault",
            "nameLocation": "3081:27:66",
            "parameters": {
              "id": 26820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3108:2:66"
            },
            "returnParameters": {
              "id": 26821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3118:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26867,
            "nodeType": "FunctionDefinition",
            "src": "3219:147:66",
            "body": {
              "id": 26866,
              "nodeType": "Block",
              "src": "3267:99:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f756e617574686f72697a6564",
                        "id": 26849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3289:18:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        },
                        "value": "mgv/unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        }
                      ],
                      "expression": {
                        "id": 26846,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "3273:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "3273:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 26850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3273:35:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26851,
                  "nodeType": "ExpressionStatement",
                  "src": "3273:35:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26855,
                        "name": "notAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26316,
                        "src": "3323:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 26852,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "3314:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63656,
                      "src": "3314:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 26856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3314:18:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26857,
                  "nodeType": "ExpressionStatement",
                  "src": "3314:18:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26862,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3355:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                              "typeString": "contract GatekeepingTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                              "typeString": "contract GatekeepingTest"
                            }
                          ],
                          "id": 26861,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "3353:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 26863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3353:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 26858,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "3338:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 26860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setMonitor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1340,
                      "src": "3338:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 26864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3338:23:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26865,
                  "nodeType": "ExpressionStatement",
                  "src": "3338:23:66"
                }
              ]
            },
            "functionSelector": "0e93c2ed",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_only_gov_can_set_monitor",
            "nameLocation": "3228:29:66",
            "parameters": {
              "id": 26844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3257:2:66"
            },
            "returnParameters": {
              "id": 26845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3267:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26897,
            "nodeType": "FunctionDefinition",
            "src": "3370:165:66",
            "body": {
              "id": 26896,
              "nodeType": "Block",
              "src": "3417:118:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f756e617574686f72697a6564",
                        "id": 26873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3439:18:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        },
                        "value": "mgv/unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        }
                      ],
                      "expression": {
                        "id": 26870,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "3423:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "3423:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 26874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3423:35:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26875,
                  "nodeType": "ExpressionStatement",
                  "src": "3423:35:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26879,
                        "name": "notAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26316,
                        "src": "3473:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 26876,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "3464:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63656,
                      "src": "3464:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 26880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3464:18:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26881,
                  "nodeType": "ExpressionStatement",
                  "src": "3464:18:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26886,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "3503:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 26885,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "3501:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 26887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3501:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 26889,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "3513:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 26888,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "3511:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 26890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3511:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 26891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3520:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "313030",
                        "id": 26892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3523:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "30",
                        "id": 26893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3528:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 26882,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "3488:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 26884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "activate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1035,
                      "src": "3488:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 26894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3488:42:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26895,
                  "nodeType": "ExpressionStatement",
                  "src": "3488:42:66"
                }
              ]
            },
            "functionSelector": "ced79729",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_only_gov_can_set_active",
            "nameLocation": "3379:28:66",
            "parameters": {
              "id": 26868,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3407:2:66"
            },
            "returnParameters": {
              "id": 26869,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3417:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26919,
            "nodeType": "FunctionDefinition",
            "src": "3539:143:66",
            "body": {
              "id": 26918,
              "nodeType": "Block",
              "src": "3588:94:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f756e617574686f72697a6564",
                        "id": 26903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3610:18:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        },
                        "value": "mgv/unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        }
                      ],
                      "expression": {
                        "id": 26900,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "3594:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "3594:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 26904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3594:35:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26905,
                  "nodeType": "ExpressionStatement",
                  "src": "3594:35:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26909,
                        "name": "notAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26316,
                        "src": "3644:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 26906,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "3635:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63656,
                      "src": "3635:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 26910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3635:18:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26911,
                  "nodeType": "ExpressionStatement",
                  "src": "3635:18:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 26915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3675:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 26912,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "3659:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 26914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setGasprice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1242,
                      "src": "3659:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 26916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3659:18:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26917,
                  "nodeType": "ExpressionStatement",
                  "src": "3659:18:66"
                }
              ]
            },
            "functionSelector": "13adfa31",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_only_gov_can_set_gasprice",
            "nameLocation": "3548:30:66",
            "parameters": {
              "id": 26898,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3578:2:66"
            },
            "returnParameters": {
              "id": 26899,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3588:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26941,
            "nodeType": "FunctionDefinition",
            "src": "3686:139:66",
            "body": {
              "id": 26940,
              "nodeType": "Block",
              "src": "3733:92:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f756e617574686f72697a6564",
                        "id": 26925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3755:18:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        },
                        "value": "mgv/unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        }
                      ],
                      "expression": {
                        "id": 26922,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "3739:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "3739:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 26926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3739:35:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26927,
                  "nodeType": "ExpressionStatement",
                  "src": "3739:35:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26931,
                        "name": "notAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26316,
                        "src": "3789:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 26928,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "3780:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63656,
                      "src": "3780:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 26932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3780:18:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26933,
                  "nodeType": "ExpressionStatement",
                  "src": "3780:18:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 26937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3818:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 26934,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "3804:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 26936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setGasmax",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1273,
                      "src": "3804:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 26938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3804:16:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26939,
                  "nodeType": "ExpressionStatement",
                  "src": "3804:16:66"
                }
              ]
            },
            "functionSelector": "126b6ea5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_only_gov_can_set_gasmax",
            "nameLocation": "3695:28:66",
            "parameters": {
              "id": 26920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3723:2:66"
            },
            "returnParameters": {
              "id": 26921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3733:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26969,
            "nodeType": "FunctionDefinition",
            "src": "3829:160:66",
            "body": {
              "id": 26968,
              "nodeType": "Block",
              "src": "3877:112:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f756e617574686f72697a6564",
                        "id": 26947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3899:18:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        },
                        "value": "mgv/unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e3ecda21d4079924d072e4bff1752688192b25e7e110b5fee740bff436f39f62",
                          "typeString": "literal_string \"mgv/unauthorized\""
                        }
                      ],
                      "expression": {
                        "id": 26944,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "3883:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "3883:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 26948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3883:35:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26949,
                  "nodeType": "ExpressionStatement",
                  "src": "3883:35:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26953,
                        "name": "notAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26316,
                        "src": "3933:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 26950,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "3924:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63656,
                      "src": "3924:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 26954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3924:18:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26955,
                  "nodeType": "ExpressionStatement",
                  "src": "3924:18:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26960,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "3965:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 26959,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "3963:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 26961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3963:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 26963,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "3974:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 26962,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "3972:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 26964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3972:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 26965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3982:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 26956,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "3948:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 26958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setGasbase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1196,
                      "src": "3948:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 26966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3948:36:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26967,
                  "nodeType": "ExpressionStatement",
                  "src": "3948:36:66"
                }
              ]
            },
            "functionSelector": "b2abce47",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_only_gov_can_set_gasbase",
            "nameLocation": "3838:29:66",
            "parameters": {
              "id": 26942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3867:2:66"
            },
            "returnParameters": {
              "id": 26943,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3877:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26980,
            "nodeType": "FunctionDefinition",
            "src": "3993:68:66",
            "body": {
              "id": 26979,
              "nodeType": "Block",
              "src": "4029:32:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 26975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4051:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 26976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4054:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 26972,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26308,
                        "src": "4035:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$50091",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 26974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50033,
                      "src": "4035:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (uint256,uint256)"
                      }
                    },
                    "id": 26977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4035:21:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 26978,
                  "nodeType": "ExpressionStatement",
                  "src": "4035:21:66"
                }
              ]
            },
            "functionSelector": "aa951045",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_empty_mgv_ok",
            "nameLocation": "4002:17:66",
            "parameters": {
              "id": 26970,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4019:2:66"
            },
            "returnParameters": {
              "id": 26971,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4029:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27002,
            "nodeType": "FunctionDefinition",
            "src": "4065:129:66",
            "body": {
              "id": 27001,
              "nodeType": "Block",
              "src": "4104:90:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f636f6e6669672f6665652f3c3d353030",
                        "id": 26986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4126:22:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef105a960d513a8757bc5e83a6d6020cf2d3d5f72db45d221587c39259556e13",
                          "typeString": "literal_string \"mgv/config/fee/<=500\""
                        },
                        "value": "mgv/config/fee/<=500"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ef105a960d513a8757bc5e83a6d6020cf2d3d5f72db45d221587c39259556e13",
                          "typeString": "literal_string \"mgv/config/fee/<=500\""
                        }
                      ],
                      "expression": {
                        "id": 26983,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "4110:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "4110:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 26987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4110:39:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26988,
                  "nodeType": "ExpressionStatement",
                  "src": "4110:39:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26993,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "4168:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 26992,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "4166:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 26994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4166:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 26996,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "4177:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 26995,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "4175:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 26997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4175:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "353031",
                        "id": 26998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4185:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_501_by_1",
                          "typeString": "int_const 501"
                        },
                        "value": "501"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_501_by_1",
                          "typeString": "int_const 501"
                        }
                      ],
                      "expression": {
                        "id": 26989,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "4155:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 26991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1109,
                      "src": "4155:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 26999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4155:34:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27000,
                  "nodeType": "ExpressionStatement",
                  "src": "4155:34:66"
                }
              ]
            },
            "functionSelector": "81e85c24",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_set_fee_ceiling",
            "nameLocation": "4074:20:66",
            "parameters": {
              "id": 26981,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4094:2:66"
            },
            "returnParameters": {
              "id": 26982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4104:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27033,
            "nodeType": "FunctionDefinition",
            "src": "4198:167:66",
            "body": {
              "id": 27032,
              "nodeType": "Block",
              "src": "4241:124:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f636f6e6669672f64656e736974792f31313262697473",
                        "id": 27008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4263:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7cb5121d9c683367cbad592a82c5e509f80676d12d27f0da06eed93632467c09",
                          "typeString": "literal_string \"mgv/config/density/112bits\""
                        },
                        "value": "mgv/config/density/112bits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7cb5121d9c683367cbad592a82c5e509f80676d12d27f0da06eed93632467c09",
                          "typeString": "literal_string \"mgv/config/density/112bits\""
                        }
                      ],
                      "expression": {
                        "id": 27005,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "4247:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 27007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "4247:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 27009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4247:45:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27010,
                  "nodeType": "ExpressionStatement",
                  "src": "4247:45:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27015,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "4315:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27014,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "4313:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4313:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 27018,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "4324:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27017,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "4322:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4322:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 27029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 27024,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4342:7:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint112_$",
                                      "typeString": "type(uint112)"
                                    },
                                    "typeName": {
                                      "id": 27023,
                                      "name": "uint112",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4342:7:66",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint112_$",
                                      "typeString": "type(uint112)"
                                    }
                                  ],
                                  "id": 27022,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "4337:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 27025,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4337:13:66",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint112",
                                  "typeString": "type(uint112)"
                                }
                              },
                              "id": 27026,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "4337:17:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            ],
                            "id": 27021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4332:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 27020,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4332:4:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 27027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4332:23:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 27028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4358:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4332:27:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 27011,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "4298:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 27013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDensity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1151,
                      "src": "4298:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 27030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4298:62:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27031,
                  "nodeType": "ExpressionStatement",
                  "src": "4298:62:66"
                }
              ]
            },
            "functionSelector": "2241e68f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_set_density_ceiling",
            "nameLocation": "4207:24:66",
            "parameters": {
              "id": 27003,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4231:2:66"
            },
            "returnParameters": {
              "id": 27004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4241:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27058,
            "nodeType": "FunctionDefinition",
            "src": "4369:149:66",
            "body": {
              "id": 27057,
              "nodeType": "Block",
              "src": "4413:105:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f636f6e6669672f67617370726963652f313662697473",
                        "id": 27039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4435:28:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e3f1d75d587454425bfc2c409e457497d27771211bb1611c32bdfca24ba411d",
                          "typeString": "literal_string \"mgv/config/gasprice/16bits\""
                        },
                        "value": "mgv/config/gasprice/16bits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9e3f1d75d587454425bfc2c409e457497d27771211bb1611c32bdfca24ba411d",
                          "typeString": "literal_string \"mgv/config/gasprice/16bits\""
                        }
                      ],
                      "expression": {
                        "id": 27036,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "4419:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 27038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "4419:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 27040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4419:45:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27041,
                  "nodeType": "ExpressionStatement",
                  "src": "4419:45:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 27054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 27049,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4496:6:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    },
                                    "typeName": {
                                      "id": 27048,
                                      "name": "uint16",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4496:6:66",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    }
                                  ],
                                  "id": 27047,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "4491:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 27050,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4491:12:66",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint16",
                                  "typeString": "type(uint16)"
                                }
                              },
                              "id": 27051,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "4491:16:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            ],
                            "id": 27046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4486:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 27045,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4486:4:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 27052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4486:22:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 27053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4511:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4486:26:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 27042,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "4470:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 27044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setGasprice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1242,
                      "src": "4470:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 27055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4470:43:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27056,
                  "nodeType": "ExpressionStatement",
                  "src": "4470:43:66"
                }
              ]
            },
            "functionSelector": "ba081c69",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_set_gasprice_ceiling",
            "nameLocation": "4378:25:66",
            "parameters": {
              "id": 27034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4403:2:66"
            },
            "returnParameters": {
              "id": 27035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4413:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27074,
            "nodeType": "FunctionDefinition",
            "src": "4522:87:66",
            "body": {
              "id": 27073,
              "nodeType": "Block",
              "src": "4562:47:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27065,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "4585:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27064,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "4583:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4583:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 27068,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "4594:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27067,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "4592:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4592:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 27070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4602:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 27061,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "4568:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 27063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setGasbase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1196,
                      "src": "4568:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 27071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4568:36:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27072,
                  "nodeType": "ExpressionStatement",
                  "src": "4568:36:66"
                }
              ]
            },
            "functionSelector": "a1e7a826",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_set_zero_gasbase",
            "nameLocation": "4531:21:66",
            "parameters": {
              "id": 27059,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4552:2:66"
            },
            "returnParameters": {
              "id": 27060,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4562:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27105,
            "nodeType": "FunctionDefinition",
            "src": "4613:171:66",
            "body": {
              "id": 27104,
              "nodeType": "Block",
              "src": "4656:128:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f636f6e6669672f6f666665725f676173626173652f323462697473",
                        "id": 27080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4678:33:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6f2d3eb7f3b7b1816ed781572731aaa35d3b258fa7071c0c97d1e49e15afa4a",
                          "typeString": "literal_string \"mgv/config/offer_gasbase/24bits\""
                        },
                        "value": "mgv/config/offer_gasbase/24bits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c6f2d3eb7f3b7b1816ed781572731aaa35d3b258fa7071c0c97d1e49e15afa4a",
                          "typeString": "literal_string \"mgv/config/offer_gasbase/24bits\""
                        }
                      ],
                      "expression": {
                        "id": 27077,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "4662:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 27079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "4662:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 27081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4662:50:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27082,
                  "nodeType": "ExpressionStatement",
                  "src": "4662:50:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27087,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "4735:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27086,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "4733:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4733:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 27090,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "4744:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27089,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "4742:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4742:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 27101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 27096,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4762:6:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint24_$",
                                      "typeString": "type(uint24)"
                                    },
                                    "typeName": {
                                      "id": 27095,
                                      "name": "uint24",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4762:6:66",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint24_$",
                                      "typeString": "type(uint24)"
                                    }
                                  ],
                                  "id": 27094,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "4757:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 27097,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4757:12:66",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint24",
                                  "typeString": "type(uint24)"
                                }
                              },
                              "id": 27098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "4757:16:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            ],
                            "id": 27093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4752:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 27092,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4752:4:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 27099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4752:22:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 27100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4777:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4752:26:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 27083,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "4718:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 27085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setGasbase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1196,
                      "src": "4718:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 27102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4718:61:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27103,
                  "nodeType": "ExpressionStatement",
                  "src": "4718:61:66"
                }
              ]
            },
            "functionSelector": "7037e22b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_set_gasbase_ceiling",
            "nameLocation": "4622:24:66",
            "parameters": {
              "id": 27075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4646:2:66"
            },
            "returnParameters": {
              "id": 27076,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4656:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27130,
            "nodeType": "FunctionDefinition",
            "src": "4788:143:66",
            "body": {
              "id": 27129,
              "nodeType": "Block",
              "src": "4830:101:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f636f6e6669672f6761736d61782f323462697473",
                        "id": 27111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4852:26:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bcb5b46f572108fe14959b4f9768b08e55bae33c20dad3631d23311619fedc4f",
                          "typeString": "literal_string \"mgv/config/gasmax/24bits\""
                        },
                        "value": "mgv/config/gasmax/24bits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_bcb5b46f572108fe14959b4f9768b08e55bae33c20dad3631d23311619fedc4f",
                          "typeString": "literal_string \"mgv/config/gasmax/24bits\""
                        }
                      ],
                      "expression": {
                        "id": 27108,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "4836:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 27110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "4836:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 27112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4836:43:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27113,
                  "nodeType": "ExpressionStatement",
                  "src": "4836:43:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 27126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 27121,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4909:6:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint24_$",
                                      "typeString": "type(uint24)"
                                    },
                                    "typeName": {
                                      "id": 27120,
                                      "name": "uint24",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4909:6:66",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint24_$",
                                      "typeString": "type(uint24)"
                                    }
                                  ],
                                  "id": 27119,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "4904:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 27122,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4904:12:66",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint24",
                                  "typeString": "type(uint24)"
                                }
                              },
                              "id": 27123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "4904:16:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            ],
                            "id": 27118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4899:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 27117,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4899:4:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 27124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4899:22:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 27125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4924:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4899:26:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 27114,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "4885:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 27116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setGasmax",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1273,
                      "src": "4885:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 27127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4885:41:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27128,
                  "nodeType": "ExpressionStatement",
                  "src": "4885:41:66"
                }
              ]
            },
            "functionSelector": "c0e3d6d8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_set_gasmax_ceiling",
            "nameLocation": "4797:23:66",
            "parameters": {
              "id": 27106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4820:2:66"
            },
            "returnParameters": {
              "id": 27107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4830:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27151,
            "nodeType": "FunctionDefinition",
            "src": "4935:170:66",
            "body": {
              "id": 27150,
              "nodeType": "Block",
              "src": "5003:102:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f77726974654f666665722f77616e74732f393662697473",
                        "id": 27136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5025:29:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b874d82b841c5cda2316b6b8ecd34073b266def7a3b6339e793683b65c2c0e5f",
                          "typeString": "literal_string \"mgv/writeOffer/wants/96bits\""
                        },
                        "value": "mgv/writeOffer/wants/96bits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b874d82b841c5cda2316b6b8ecd34073b266def7a3b6339e793683b65c2c0e5f",
                          "typeString": "literal_string \"mgv/writeOffer/wants/96bits\""
                        }
                      ],
                      "expression": {
                        "id": 27133,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "5009:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 27135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "5009:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 27137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5009:46:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27138,
                  "nodeType": "ExpressionStatement",
                  "src": "5009:46:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                          "typeString": "int_const 79228162514264337593543950336"
                        },
                        "id": 27144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 27142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5074:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "3936",
                          "id": 27143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5077:2:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_96_by_1",
                            "typeString": "int_const 96"
                          },
                          "value": "96"
                        },
                        "src": "5074:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                          "typeString": "int_const 79228162514264337593543950336"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 27145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5081:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31305f303030",
                        "id": 27146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5090:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 27147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5098:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                          "typeString": "int_const 79228162514264337593543950336"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 27139,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26311,
                        "src": "5061:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 27141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "5061:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 27148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5061:39:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 27149,
                  "nodeType": "ExpressionStatement",
                  "src": "5061:39:66"
                }
              ]
            },
            "functionSelector": "ea837eef",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_makerWants_wider_than_96_bits_fails_newOffer",
            "nameLocation": "4944:49:66",
            "parameters": {
              "id": 27131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4993:2:66"
            },
            "returnParameters": {
              "id": 27132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5003:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27184,
            "nodeType": "FunctionDefinition",
            "src": "5109:224:66",
            "body": {
              "id": 27183,
              "nodeType": "Block",
              "src": "5163:170:66",
              "statements": [
                {
                  "assignments": [27155],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27155,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "5174:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 27183,
                      "src": "5169:8:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 27154,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5169:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27163,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 27158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5193:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 27159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5202:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31305f303030",
                        "id": 27160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5211:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 27161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5219:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 27156,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26311,
                        "src": "5180:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 27157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "5180:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 27162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5180:41:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5169:52:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f726574726163744f666665722f756e617574686f72697a6564",
                        "id": 27167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5243:31:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_badf63fb3d62649867a104fa0a7ebed1f51c00fc24ced1325180fc80b4ec5fe8",
                          "typeString": "literal_string \"mgv/retractOffer/unauthorized\""
                        },
                        "value": "mgv/retractOffer/unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_badf63fb3d62649867a104fa0a7ebed1f51c00fc24ced1325180fc80b4ec5fe8",
                          "typeString": "literal_string \"mgv/retractOffer/unauthorized\""
                        }
                      ],
                      "expression": {
                        "id": 27164,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "5227:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 27166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "5227:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 27168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5227:48:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27169,
                  "nodeType": "ExpressionStatement",
                  "src": "5227:48:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27174,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "5300:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27173,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "5298:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5298:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 27177,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "5309:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27176,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "5307:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5307:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 27179,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27155,
                        "src": "5317:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 27180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5322:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 27170,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "5281:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 27172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "retractOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2552,
                      "src": "5281:16:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,bool) external returns (uint256)"
                      }
                    },
                    "id": 27181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5281:47:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 27182,
                  "nodeType": "ExpressionStatement",
                  "src": "5281:47:66"
                }
              ]
            },
            "functionSelector": "39a1e43b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_retractOffer_wrong_owner_fails",
            "nameLocation": "5118:35:66",
            "parameters": {
              "id": 27152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5153:2:66"
            },
            "returnParameters": {
              "id": 27153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5163:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27205,
            "nodeType": "FunctionDefinition",
            "src": "5337:164:66",
            "body": {
              "id": 27204,
              "nodeType": "Block",
              "src": "5405:96:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f77726974654f666665722f67697665732f393662697473",
                        "id": 27190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5427:29:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6764f6d7e803637b3629aa400d7573a6d4bc1092c351c42f1e175c72b19af3a",
                          "typeString": "literal_string \"mgv/writeOffer/gives/96bits\""
                        },
                        "value": "mgv/writeOffer/gives/96bits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b6764f6d7e803637b3629aa400d7573a6d4bc1092c351c42f1e175c72b19af3a",
                          "typeString": "literal_string \"mgv/writeOffer/gives/96bits\""
                        }
                      ],
                      "expression": {
                        "id": 27187,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "5411:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 27189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "5411:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 27191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5411:46:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27192,
                  "nodeType": "ExpressionStatement",
                  "src": "5411:46:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 27196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5476:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                          "typeString": "int_const 79228162514264337593543950336"
                        },
                        "id": 27199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 27197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5479:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "3936",
                          "id": 27198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5482:2:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_96_by_1",
                            "typeString": "int_const 96"
                          },
                          "value": "96"
                        },
                        "src": "5479:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                          "typeString": "int_const 79228162514264337593543950336"
                        }
                      },
                      {
                        "hexValue": "31305f303030",
                        "id": 27200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5486:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 27201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5494:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                          "typeString": "int_const 79228162514264337593543950336"
                        },
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 27193,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26311,
                        "src": "5463:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 27195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "5463:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 27202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5463:33:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 27203,
                  "nodeType": "ExpressionStatement",
                  "src": "5463:33:66"
                }
              ]
            },
            "functionSelector": "9e6f7567",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_makerGives_wider_than_96_bits_fails_newOffer",
            "nameLocation": "5346:49:66",
            "parameters": {
              "id": 27185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5395:2:66"
            },
            "returnParameters": {
              "id": 27186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5405:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27226,
            "nodeType": "FunctionDefinition",
            "src": "5505:162:66",
            "body": {
              "id": 27225,
              "nodeType": "Block",
              "src": "5574:93:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f77726974654f666665722f6761737265712f746f6f48696768",
                        "id": 27211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5596:31:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8dfb1c89966a4b5ef6cc71ff91391e35374b702021e5dec2b670de95668b3d0b",
                          "typeString": "literal_string \"mgv/writeOffer/gasreq/tooHigh\""
                        },
                        "value": "mgv/writeOffer/gasreq/tooHigh"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8dfb1c89966a4b5ef6cc71ff91391e35374b702021e5dec2b670de95668b3d0b",
                          "typeString": "literal_string \"mgv/writeOffer/gasreq/tooHigh\""
                        }
                      ],
                      "expression": {
                        "id": 27208,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "5580:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 27210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "5580:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 27212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5580:48:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27213,
                  "nodeType": "ExpressionStatement",
                  "src": "5580:48:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 27217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5647:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 27218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5650:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_16777216_by_1",
                          "typeString": "int_const 16777216"
                        },
                        "id": 27221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 27219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5653:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "3234",
                          "id": 27220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5656:2:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_24_by_1",
                            "typeString": "int_const 24"
                          },
                          "value": "24"
                        },
                        "src": "5653:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_16777216_by_1",
                          "typeString": "int_const 16777216"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 27222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5660:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_16777216_by_1",
                          "typeString": "int_const 16777216"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 27214,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26311,
                        "src": "5634:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 27216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "5634:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 27223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5634:28:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 27224,
                  "nodeType": "ExpressionStatement",
                  "src": "5634:28:66"
                }
              ]
            },
            "functionSelector": "091d3e9b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_makerGasreq_wider_than_24_bits_fails_newOffer",
            "nameLocation": "5514:50:66",
            "parameters": {
              "id": 27206,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5564:2:66"
            },
            "returnParameters": {
              "id": 27207,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5574:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27265,
            "nodeType": "FunctionDefinition",
            "src": "5671:229:66",
            "body": {
              "id": 27264,
              "nodeType": "Block",
              "src": "5740:160:66",
              "statements": [
                {
                  "assignments": [27234, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27234,
                      "mutability": "mutable",
                      "name": "cfg",
                      "nameLocation": "5758:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 27264,
                      "src": "5747:14:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$7552",
                        "typeString": "t"
                      },
                      "typeName": {
                        "id": 27233,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 27232,
                          "name": "P.Global.t",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7552,
                          "src": "5747:10:66"
                        },
                        "referencedDeclaration": 7552,
                        "src": "5747:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$7552",
                          "typeString": "t"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 27244,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27238,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "5780:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27237,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "5778:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5778:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 27241,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "5789:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27240,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "5787:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5787:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 27235,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "5767:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 27236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "config",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5799,
                      "src": "5767:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_userDefinedValueType$_t_$7552_$_t_userDefinedValueType$_t_$8421_$",
                        "typeString": "function (address,address) view external returns (t,t)"
                      }
                    },
                    "id": 27243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5767:29:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_userDefinedValueType$_t_$7552_$_t_userDefinedValueType$_t_$8421_$",
                      "typeString": "tuple(t,t)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5746:50:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f77726974654f666665722f6761737265712f746f6f48696768",
                        "id": 27248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5818:31:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8dfb1c89966a4b5ef6cc71ff91391e35374b702021e5dec2b670de95668b3d0b",
                          "typeString": "literal_string \"mgv/writeOffer/gasreq/tooHigh\""
                        },
                        "value": "mgv/writeOffer/gasreq/tooHigh"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8dfb1c89966a4b5ef6cc71ff91391e35374b702021e5dec2b670de95668b3d0b",
                          "typeString": "literal_string \"mgv/writeOffer/gasreq/tooHigh\""
                        }
                      ],
                      "expression": {
                        "id": 27245,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "5802:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 27247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "5802:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 27249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5802:48:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27250,
                  "nodeType": "ExpressionStatement",
                  "src": "5802:48:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 27254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5869:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 27255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5872:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 27260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 27256,
                              "name": "cfg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27234,
                              "src": "5875:3:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_t_$7552",
                                "typeString": "t"
                              }
                            },
                            "id": 27257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "gasmax",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8181,
                            "src": "5875:10:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$7552_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$7552_$",
                              "typeString": "function (t) pure returns (uint256)"
                            }
                          },
                          "id": 27258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5875:12:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 27259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5890:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5875:16:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 27261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5893:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 27251,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26311,
                        "src": "5856:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 27253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "5856:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 27262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5856:39:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 27263,
                  "nodeType": "ExpressionStatement",
                  "src": "5856:39:66"
                }
              ]
            },
            "functionSelector": "5f420fe5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_makerGasreq_bigger_than_gasmax_fails_newOffer",
            "nameLocation": "5680:50:66",
            "parameters": {
              "id": 27227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5730:2:66"
            },
            "returnParameters": {
              "id": 27228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5740:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27368,
            "nodeType": "FunctionDefinition",
            "src": "5904:673:66",
            "body": {
              "id": 27367,
              "nodeType": "Block",
              "src": "5967:610:66",
              "statements": [
                {
                  "assignments": [27273, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27273,
                      "mutability": "mutable",
                      "name": "cfg",
                      "nameLocation": "5985:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 27367,
                      "src": "5974:14:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$7552",
                        "typeString": "t"
                      },
                      "typeName": {
                        "id": 27272,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 27271,
                          "name": "P.Global.t",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7552,
                          "src": "5974:10:66"
                        },
                        "referencedDeclaration": 7552,
                        "src": "5974:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$7552",
                          "typeString": "t"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 27283,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27277,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "6007:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27276,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "6005:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6005:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 27280,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "6016:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27279,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "6014:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6014:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 27274,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "5994:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 27275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "config",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5799,
                      "src": "5994:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_userDefinedValueType$_t_$7552_$_t_userDefinedValueType$_t_$8421_$",
                        "typeString": "function (address,address) view external returns (t,t)"
                      }
                    },
                    "id": 27282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5994:29:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_userDefinedValueType$_t_$7552_$_t_userDefinedValueType$_t_$8421_$",
                      "typeString": "tuple(t,t)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5973:50:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27286,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "6063:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 27285,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "6061:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 27287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6061:6:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 27284,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "6050:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 27288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6050:18:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27289,
                  "nodeType": "ExpressionStatement",
                  "src": "6050:18:66"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27292,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "6099:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27291,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "6097:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6097:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 27295,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "6114:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27294,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "6112:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6112:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 27299,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26311,
                            "src": "6136:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 27298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6128:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27297,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6128:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6128:12:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 27301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6148:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 27302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6170:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 27303,
                            "name": "cfg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27273,
                            "src": "6193:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$7552",
                              "typeString": "t"
                            }
                          },
                          "id": 27304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "gasprice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8123,
                          "src": "6193:12:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$7552_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$7552_$",
                            "typeString": "function (t) pure returns (uint256)"
                          }
                        },
                        "id": 27305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6193:14:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 27306,
                            "name": "cfg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27273,
                            "src": "6226:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$7552",
                              "typeString": "t"
                            }
                          },
                          "id": 27307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "gasmax",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8181,
                          "src": "6226:10:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$7552_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$7552_$",
                            "typeString": "function (t) pure returns (uint256)"
                          }
                        },
                        "id": 27308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6226:12:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 27309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6255:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 27310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6272:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 27290,
                      "name": "OfferWrite",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1905,
                      "src": "6079:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 27311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6079:208:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27312,
                  "nodeType": "EmitStatement",
                  "src": "6074:213:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27315,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "6306:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 27314,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "6304:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 27316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6304:6:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 27313,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "6293:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 27317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6293:18:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27318,
                  "nodeType": "ExpressionStatement",
                  "src": "6293:18:66"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27322,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26311,
                            "src": "6336:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 27321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6328:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27320,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6328:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6328:12:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 27326,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45878,
                                "src": "6357:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 27325,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "6355:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 27327,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6355:7:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 27329,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45881,
                                "src": "6366:5:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 27328,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "6364:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 27330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6364:8:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 27331,
                                "name": "cfg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27273,
                                "src": "6374:3:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_t_$7552",
                                  "typeString": "t"
                                }
                              },
                              "id": 27332,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "gasmax",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8181,
                              "src": "6374:10:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$7552_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$7552_$",
                                "typeString": "function (t) pure returns (uint256)"
                              }
                            },
                            "id": 27333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6374:12:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 27334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6388:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 27324,
                          "name": "getProvision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [46516, 46583],
                          "referencedDeclaration": 46583,
                          "src": "6342:12:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256,uint256) view returns (uint256)"
                          }
                        },
                        "id": 27335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6342:48:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 27319,
                      "name": "Debit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1753,
                      "src": "6322:5:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 27336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6322:69:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27337,
                  "nodeType": "EmitStatement",
                  "src": "6317:74:66"
                },
                {
                  "assignments": [27339],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27339,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "6402:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 27367,
                      "src": "6397:8:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 27338,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6397:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27349,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 27342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6421:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 27343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6430:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 27344,
                            "name": "cfg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27273,
                            "src": "6439:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$7552",
                              "typeString": "t"
                            }
                          },
                          "id": 27345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "gasmax",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8181,
                          "src": "6439:10:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$7552_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$7552_$",
                            "typeString": "function (t) pure returns (uint256)"
                          }
                        },
                        "id": 27346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6439:12:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 27347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6453:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 27340,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26311,
                        "src": "6408:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 27341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "6408:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 27348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6408:47:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6397:58:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 27356,
                                    "name": "base",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45878,
                                    "src": "6503:4:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$52050",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$52050",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 27355,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    46990, 47007, 47024, 47041, 47058
                                  ],
                                  "referencedDeclaration": 47058,
                                  "src": "6501:1:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 27357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6501:7:66",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 27359,
                                    "name": "quote",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45881,
                                    "src": "6512:5:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$52050",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$52050",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 27358,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    46990, 47007, 47024, 47041, 47058
                                  ],
                                  "referencedDeclaration": 47058,
                                  "src": "6510:1:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 27360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6510:8:66",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 27361,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27339,
                                "src": "6520:3:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 27353,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45875,
                                "src": "6490:3:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                  "typeString": "contract AbstractMangrove"
                                }
                              },
                              "id": 27354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "offers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1404,
                              "src": "6490:10:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$9363_$",
                                "typeString": "function (address,address,uint256) view external returns (t)"
                              }
                            },
                            "id": 27362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6490:34:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                              "typeString": "t"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                              "typeString": "t"
                            }
                          ],
                          "expression": {
                            "id": 27351,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "6479:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 27352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isLive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1705,
                          "src": "6479:10:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_userDefinedValueType$_t_$9363_$returns$_t_bool_$",
                            "typeString": "function (t) pure external returns (bool)"
                          }
                        },
                        "id": 27363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6479:46:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f666665722073686f756c642068617665206265656e20696e736572746564",
                        "id": 27364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6533:33:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_727b90f3a6b5a091704142f7170fa12c68f32a0e316f3c7001efb99199adc0ad",
                          "typeString": "literal_string \"Offer should have been inserted\""
                        },
                        "value": "Offer should have been inserted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_727b90f3a6b5a091704142f7170fa12c68f32a0e316f3c7001efb99199adc0ad",
                          "typeString": "literal_string \"Offer should have been inserted\""
                        }
                      ],
                      "id": 27350,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "6461:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 27365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6461:111:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27366,
                  "nodeType": "ExpressionStatement",
                  "src": "6461:111:66"
                }
              ]
            },
            "functionSelector": "7c19a966",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_makerGasreq_at_gasmax_succeeds_newOffer",
            "nameLocation": "5913:44:66",
            "parameters": {
              "id": 27266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5957:2:66"
            },
            "returnParameters": {
              "id": 27267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5967:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27432,
            "nodeType": "FunctionDefinition",
            "src": "6581:336:66",
            "body": {
              "id": 27431,
              "nodeType": "Block",
              "src": "6650:267:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27375,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "6673:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27374,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "6671:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6671:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 27378,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "6682:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27377,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "6680:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6680:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 27380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6690:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 27371,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "6656:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 27373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDensity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1151,
                      "src": "6656:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 27381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6656:38:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27382,
                  "nodeType": "ExpressionStatement",
                  "src": "6656:38:66"
                },
                {
                  "assignments": [null, 27388],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 27388,
                      "mutability": "mutable",
                      "name": "cfg",
                      "nameLocation": "6713:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 27431,
                      "src": "6703:13:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$8421",
                        "typeString": "t"
                      },
                      "typeName": {
                        "id": 27387,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 27386,
                          "name": "P.Local.t",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8421,
                          "src": "6703:9:66"
                        },
                        "referencedDeclaration": 8421,
                        "src": "6703:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$8421",
                          "typeString": "t"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27398,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27392,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "6733:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27391,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "6731:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6731:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 27395,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "6742:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27394,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "6740:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6740:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 27389,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "6720:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 27390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "config",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5799,
                      "src": "6720:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_userDefinedValueType$_t_$7552_$_t_userDefinedValueType$_t_$8421_$",
                        "typeString": "function (address,address) view external returns (t,t)"
                      }
                    },
                    "id": 27397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6720:29:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_userDefinedValueType$_t_$7552_$_t_userDefinedValueType$_t_$8421_$",
                      "typeString": "tuple(t,t)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6700:49:66"
                },
                {
                  "assignments": [27400],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27400,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "6760:6:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 27431,
                      "src": "6755:11:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 27399,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6755:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27411,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 27410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 27405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31",
                            "id": 27401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6770:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 27402,
                                "name": "cfg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27388,
                                "src": "6774:3:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_t_$8421",
                                  "typeString": "t"
                                }
                              },
                              "id": 27403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "offer_gasbase",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8999,
                              "src": "6774:17:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$8421_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$8421_$",
                                "typeString": "function (t) pure returns (uint256)"
                              }
                            },
                            "id": 27404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6774:19:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6770:23:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 27406,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6769:25:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 27407,
                          "name": "cfg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27388,
                          "src": "6797:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_t_$8421",
                            "typeString": "t"
                          }
                        },
                        "id": 27408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "density",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8941,
                        "src": "6797:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$8421_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$8421_$",
                          "typeString": "function (t) pure returns (uint256)"
                        }
                      },
                      "id": 27409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6797:13:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6769:41:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6755:55:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f77726974654f666665722f64656e736974792f746f6f4c6f77",
                        "id": 27415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6832:31:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6195d63e991eeb868558835c64de7a8c2d07b0c6e7b564dc96db7c192e55da1f",
                          "typeString": "literal_string \"mgv/writeOffer/density/tooLow\""
                        },
                        "value": "mgv/writeOffer/density/tooLow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6195d63e991eeb868558835c64de7a8c2d07b0c6e7b564dc96db7c192e55da1f",
                          "typeString": "literal_string \"mgv/writeOffer/density/tooLow\""
                        }
                      ],
                      "expression": {
                        "id": 27412,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "6816:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 27414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "6816:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 27416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6816:48:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27417,
                  "nodeType": "ExpressionStatement",
                  "src": "6816:48:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 27423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 27421,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27400,
                          "src": "6883:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 27422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6892:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "6883:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 27426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 27424,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27400,
                          "src": "6895:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 27425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6904:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "6895:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 27427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6907:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 27428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6910:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 27418,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26311,
                        "src": "6870:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 27420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "6870:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 27429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6870:42:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 27430,
                  "nodeType": "ExpressionStatement",
                  "src": "6870:42:66"
                }
              ]
            },
            "functionSelector": "af3777f4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_makerGasreq_lower_than_density_fails_newOffer",
            "nameLocation": "6590:50:66",
            "parameters": {
              "id": 27369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6640:2:66"
            },
            "returnParameters": {
              "id": 27370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6650:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27557,
            "nodeType": "FunctionDefinition",
            "src": "6921:747:66",
            "body": {
              "id": 27556,
              "nodeType": "Block",
              "src": "6975:693:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27439,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "6998:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27438,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "6996:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6996:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 27442,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "7007:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27441,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "7005:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7005:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 27444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7015:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "id": 27435,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "6981:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 27437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setDensity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1151,
                      "src": "6981:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 27445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6981:38:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27446,
                  "nodeType": "ExpressionStatement",
                  "src": "6981:38:66"
                },
                {
                  "assignments": [27452, 27455],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27452,
                      "mutability": "mutable",
                      "name": "glob",
                      "nameLocation": "7037:4:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 27556,
                      "src": "7026:15:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$7552",
                        "typeString": "t"
                      },
                      "typeName": {
                        "id": 27451,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 27450,
                          "name": "P.Global.t",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7552,
                          "src": "7026:10:66"
                        },
                        "referencedDeclaration": 7552,
                        "src": "7026:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$7552",
                          "typeString": "t"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 27455,
                      "mutability": "mutable",
                      "name": "cfg",
                      "nameLocation": "7053:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 27556,
                      "src": "7043:13:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_t_$8421",
                        "typeString": "t"
                      },
                      "typeName": {
                        "id": 27454,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 27453,
                          "name": "P.Local.t",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8421,
                          "src": "7043:9:66"
                        },
                        "referencedDeclaration": 8421,
                        "src": "7043:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_t_$8421",
                          "typeString": "t"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27465,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27459,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "7073:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27458,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "7071:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7071:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 27462,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "7082:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27461,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "7080:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7080:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 27456,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "7060:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 27457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "config",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5799,
                      "src": "7060:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_userDefinedValueType$_t_$7552_$_t_userDefinedValueType$_t_$8421_$",
                        "typeString": "function (address,address) view external returns (t,t)"
                      }
                    },
                    "id": 27464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7060:29:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_userDefinedValueType$_t_$7552_$_t_userDefinedValueType$_t_$8421_$",
                      "typeString": "tuple(t,t)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7025:64:66"
                },
                {
                  "assignments": [27467],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27467,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "7100:6:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 27556,
                      "src": "7095:11:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 27466,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7095:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27478,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 27477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 27472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31",
                            "id": 27468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7110:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 27469,
                                "name": "cfg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27455,
                                "src": "7114:3:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_t_$8421",
                                  "typeString": "t"
                                }
                              },
                              "id": 27470,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "offer_gasbase",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8999,
                              "src": "7114:17:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$8421_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$8421_$",
                                "typeString": "function (t) pure returns (uint256)"
                              }
                            },
                            "id": 27471,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7114:19:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7110:23:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 27473,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7109:25:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 27474,
                          "name": "cfg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27455,
                          "src": "7137:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_t_$8421",
                            "typeString": "t"
                          }
                        },
                        "id": 27475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "density",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8941,
                        "src": "7137:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$8421_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$8421_$",
                          "typeString": "function (t) pure returns (uint256)"
                        }
                      },
                      "id": 27476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7137:13:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7109:41:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7095:55:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27481,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "7190:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 27480,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "7188:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 27482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7188:6:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 27479,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "7177:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 27483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7177:18:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27484,
                  "nodeType": "ExpressionStatement",
                  "src": "7177:18:66"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27487,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "7226:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27486,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "7224:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7224:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 27490,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "7241:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27489,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "7239:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7239:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 27494,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26311,
                            "src": "7263:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 27493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7255:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27492,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7255:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7255:12:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 27496,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27467,
                        "src": "7275:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 27497,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27467,
                        "src": "7296:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 27498,
                            "name": "glob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27452,
                            "src": "7318:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$7552",
                              "typeString": "t"
                            }
                          },
                          "id": 27499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "gasprice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8123,
                          "src": "7318:13:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$7552_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$7552_$",
                            "typeString": "function (t) pure returns (uint256)"
                          }
                        },
                        "id": 27500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7318:15:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 27501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7352:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 27502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7370:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 27503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7387:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 27485,
                      "name": "OfferWrite",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1905,
                      "src": "7206:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 27504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7206:196:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27505,
                  "nodeType": "EmitStatement",
                  "src": "7201:201:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27508,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "7421:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 27507,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "7419:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 27509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7419:6:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 27506,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "7408:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 27510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7408:18:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27511,
                  "nodeType": "ExpressionStatement",
                  "src": "7408:18:66"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27515,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26311,
                            "src": "7451:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 27514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7443:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27513,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7443:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7443:12:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 27519,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45878,
                                "src": "7472:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 27518,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "7470:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 27520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7470:7:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 27522,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45881,
                                "src": "7481:5:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 27521,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "7479:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 27523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7479:8:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 27524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7489:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          {
                            "hexValue": "30",
                            "id": 27525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7492:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 27517,
                          "name": "getProvision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [46516, 46583],
                          "referencedDeclaration": 46583,
                          "src": "7457:12:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256,uint256) view returns (uint256)"
                          }
                        },
                        "id": 27526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7457:37:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 27512,
                      "name": "Debit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1753,
                      "src": "7437:5:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 27527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7437:58:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27528,
                  "nodeType": "EmitStatement",
                  "src": "7432:63:66"
                },
                {
                  "assignments": [27530],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27530,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "7506:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 27556,
                      "src": "7501:8:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 27529,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7501:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27538,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 27533,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27467,
                        "src": "7525:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 27534,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27467,
                        "src": "7533:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 27535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7541:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 27536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7544:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 27531,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26311,
                        "src": "7512:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 27532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "7512:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 27537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7512:34:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7501:45:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 27545,
                                    "name": "base",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45878,
                                    "src": "7594:4:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$52050",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$52050",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 27544,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    46990, 47007, 47024, 47041, 47058
                                  ],
                                  "referencedDeclaration": 47058,
                                  "src": "7592:1:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 27546,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7592:7:66",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 27548,
                                    "name": "quote",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45881,
                                    "src": "7603:5:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TestToken_$52050",
                                      "typeString": "contract TestToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TestToken_$52050",
                                      "typeString": "contract TestToken"
                                    }
                                  ],
                                  "id": 27547,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    46990, 47007, 47024, 47041, 47058
                                  ],
                                  "referencedDeclaration": 47058,
                                  "src": "7601:1:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                    "typeString": "function (contract IERC20) pure returns (address payable)"
                                  }
                                },
                                "id": 27549,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7601:8:66",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 27550,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27530,
                                "src": "7611:3:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 27542,
                                "name": "mgv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45875,
                                "src": "7581:3:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                  "typeString": "contract AbstractMangrove"
                                }
                              },
                              "id": 27543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "offers",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1404,
                              "src": "7581:10:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$9363_$",
                                "typeString": "function (address,address,uint256) view external returns (t)"
                              }
                            },
                            "id": 27551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7581:34:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                              "typeString": "t"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_t_$9363",
                              "typeString": "t"
                            }
                          ],
                          "expression": {
                            "id": 27540,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "7570:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 27541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isLive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1705,
                          "src": "7570:10:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_userDefinedValueType$_t_$9363_$returns$_t_bool_$",
                            "typeString": "function (t) pure external returns (bool)"
                          }
                        },
                        "id": 27552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7570:46:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f666665722073686f756c642068617665206265656e20696e736572746564",
                        "id": 27553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7624:33:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_727b90f3a6b5a091704142f7170fa12c68f32a0e316f3c7001efb99199adc0ad",
                          "typeString": "literal_string \"Offer should have been inserted\""
                        },
                        "value": "Offer should have been inserted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_727b90f3a6b5a091704142f7170fa12c68f32a0e316f3c7001efb99199adc0ad",
                          "typeString": "literal_string \"Offer should have been inserted\""
                        }
                      ],
                      "id": 27539,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "7552:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 27554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7552:111:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27555,
                  "nodeType": "ExpressionStatement",
                  "src": "7552:111:66"
                }
              ]
            },
            "functionSelector": "11c2bee1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_makerGasreq_at_density_suceeds",
            "nameLocation": "6930:35:66",
            "parameters": {
              "id": 27433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6965:2:66"
            },
            "returnParameters": {
              "id": 27434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6975:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27579,
            "nodeType": "FunctionDefinition",
            "src": "7672:168:66",
            "body": {
              "id": 27578,
              "nodeType": "Block",
              "src": "7743:97:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f77726974654f666665722f67617370726963652f313662697473",
                        "id": 27563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7765:32:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26d854c0492f0a17667bcc222c9c379a9c2bfce83fa4b4d3361b8c102f441a9a",
                          "typeString": "literal_string \"mgv/writeOffer/gasprice/16bits\""
                        },
                        "value": "mgv/writeOffer/gasprice/16bits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_26d854c0492f0a17667bcc222c9c379a9c2bfce83fa4b4d3361b8c102f441a9a",
                          "typeString": "literal_string \"mgv/writeOffer/gasprice/16bits\""
                        }
                      ],
                      "expression": {
                        "id": 27560,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "7749:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 27562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "7749:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 27564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7749:49:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27565,
                  "nodeType": "ExpressionStatement",
                  "src": "7749:49:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 27569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7817:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 27570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7820:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 27571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7823:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_65536_by_1",
                          "typeString": "int_const 65536"
                        },
                        "id": 27574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 27572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7826:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "3136",
                          "id": 27573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7829:2:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        "src": "7826:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_65536_by_1",
                          "typeString": "int_const 65536"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 27575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7833:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_65536_by_1",
                          "typeString": "int_const 65536"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 27566,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26311,
                        "src": "7804:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 27568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49332,
                      "src": "7804:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 27576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7804:31:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 27577,
                  "nodeType": "ExpressionStatement",
                  "src": "7804:31:66"
                }
              ]
            },
            "functionSelector": "c023e42f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_makerGasprice_wider_than_16_bits_fails_newOffer",
            "nameLocation": "7681:52:66",
            "parameters": {
              "id": 27558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7733:2:66"
            },
            "returnParameters": {
              "id": 27559,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7743:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27598,
            "nodeType": "FunctionDefinition",
            "src": "7844:163:66",
            "body": {
              "id": 27597,
              "nodeType": "Block",
              "src": "7916:91:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f6d4f726465722f74616b657257616e74732f31363062697473",
                        "id": 27585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7938:31:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2c80b6eaaa77175b421cb647262f8b13463075cec159961e3e57fea394a5688",
                          "typeString": "literal_string \"mgv/mOrder/takerWants/160bits\""
                        },
                        "value": "mgv/mOrder/takerWants/160bits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a2c80b6eaaa77175b421cb647262f8b13463075cec159961e3e57fea394a5688",
                          "typeString": "literal_string \"mgv/mOrder/takerWants/160bits\""
                        }
                      ],
                      "expression": {
                        "id": 27582,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "7922:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 27584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "7922:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 27586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7922:48:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27587,
                  "nodeType": "ExpressionStatement",
                  "src": "7922:48:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
                          "typeString": "int_const 1461...(41 digits omitted)...2976"
                        },
                        "id": 27593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 27591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7992:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "313630",
                          "id": 27592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7995:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_160_by_1",
                            "typeString": "int_const 160"
                          },
                          "value": "160"
                        },
                        "src": "7992:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
                          "typeString": "int_const 1461...(41 digits omitted)...2976"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 27594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8000:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
                          "typeString": "int_const 1461...(41 digits omitted)...2976"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 27588,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26308,
                        "src": "7976:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$50091",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 27590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50033,
                      "src": "7976:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (uint256,uint256)"
                      }
                    },
                    "id": 27595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7976:26:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 27596,
                  "nodeType": "ExpressionStatement",
                  "src": "7976:26:66"
                }
              ]
            },
            "functionSelector": "a218492e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_takerWants_wider_than_160_bits_fails_marketOrder",
            "nameLocation": "7853:53:66",
            "parameters": {
              "id": 27580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7906:2:66"
            },
            "returnParameters": {
              "id": 27581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7916:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27663,
            "nodeType": "FunctionDefinition",
            "src": "8011:353:66",
            "body": {
              "id": 27662,
              "nodeType": "Block",
              "src": "8071:293:66",
              "statements": [
                {
                  "assignments": [27602],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27602,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "8082:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 27662,
                      "src": "8077:8:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 27601,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8077:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27610,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 27605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8101:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 27606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8110:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 27607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8119:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 27608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8128:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 27603,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26311,
                        "src": "8088:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 27604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "8088:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 27609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8088:42:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8077:53:66"
                },
                {
                  "assignments": [27617],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27617,
                      "mutability": "mutable",
                      "name": "targets",
                      "nameLocation": "8153:7:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 27662,
                      "src": "8136:24:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[4][]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 27614,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "8136:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 27615,
                          "length": {
                            "hexValue": "34",
                            "id": 27613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8141:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "8136:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                            "typeString": "uint256[4]"
                          }
                        },
                        "id": 27616,
                        "nodeType": "ArrayTypeName",
                        "src": "8136:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_storage_$dyn_storage_ptr",
                          "typeString": "uint256[4][]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27642,
                  "initialValue": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "id": 27619,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27602,
                            "src": "8184:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 27629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 27624,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "8199:6:66",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint96_$",
                                          "typeString": "type(uint96)"
                                        },
                                        "typeName": {
                                          "id": 27623,
                                          "name": "uint96",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "8199:6:66",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_uint96_$",
                                          "typeString": "type(uint96)"
                                        }
                                      ],
                                      "id": 27622,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -27,
                                      "src": "8194:4:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 27625,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8194:12:66",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_uint96",
                                      "typeString": "type(uint96)"
                                    }
                                  },
                                  "id": 27626,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "8194:16:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                ],
                                "id": 27621,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8189:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 27620,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8189:4:66",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 27627,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8189:22:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 27628,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8214:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "8189:26:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 27632,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8222:6:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint96_$",
                                    "typeString": "type(uint96)"
                                  },
                                  "typeName": {
                                    "id": 27631,
                                    "name": "uint96",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8222:6:66",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint96_$",
                                    "typeString": "type(uint96)"
                                  }
                                ],
                                "id": 27630,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "8217:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 27633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8217:12:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint96",
                                "typeString": "type(uint96)"
                              }
                            },
                            "id": 27634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "8217:16:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 27637,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8240:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 27636,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8240:4:66",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 27635,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "8235:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 27638,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8235:10:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 27639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "8235:14:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 27640,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "8183:67:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                          "typeString": "uint256[4] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                          "typeString": "uint256[4] memory"
                        }
                      ],
                      "id": 27618,
                      "name": "wrap_dynamic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        47757, 47793, 47829, 47865, 47901
                      ],
                      "referencedDeclaration": 47901,
                      "src": "8163:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                      }
                    },
                    "id": 27641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8163:93:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                      "typeString": "uint256[4] memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8136:120:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f736e697065732f74616b657257616e74732f393662697473",
                        "id": 27646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8278:30:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c78515ffc96a89ab660ccc256dc0a5d49923c4ca341cdd82329f2024f6628af",
                          "typeString": "literal_string \"mgv/snipes/takerWants/96bits\""
                        },
                        "value": "mgv/snipes/takerWants/96bits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7c78515ffc96a89ab660ccc256dc0a5d49923c4ca341cdd82329f2024f6628af",
                          "typeString": "literal_string \"mgv/snipes/takerWants/96bits\""
                        }
                      ],
                      "expression": {
                        "id": 27643,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "8262:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 27645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "8262:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 27647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8262:47:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27648,
                  "nodeType": "ExpressionStatement",
                  "src": "8262:47:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27653,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "8328:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27652,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "8326:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8326:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 27656,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "8337:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27655,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "8335:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8335:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 27658,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27617,
                        "src": "8345:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 27659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8354:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 27649,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "8315:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 27651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "8315:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 27660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8315:44:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 27661,
                  "nodeType": "ExpressionStatement",
                  "src": "8315:44:66"
                }
              ]
            },
            "functionSelector": "0ccd650d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_takerWants_above_96bits_fails_snipes",
            "nameLocation": "8020:41:66",
            "parameters": {
              "id": 27599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8061:2:66"
            },
            "returnParameters": {
              "id": 27600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8071:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27728,
            "nodeType": "FunctionDefinition",
            "src": "8368:353:66",
            "body": {
              "id": 27727,
              "nodeType": "Block",
              "src": "8428:293:66",
              "statements": [
                {
                  "assignments": [27667],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27667,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "8439:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 27727,
                      "src": "8434:8:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 27666,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8434:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27675,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 27670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8458:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 27671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8467:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 27672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8476:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 27673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8485:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 27668,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26311,
                        "src": "8445:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 27669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "8445:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 27674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8445:42:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8434:53:66"
                },
                {
                  "assignments": [27682],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27682,
                      "mutability": "mutable",
                      "name": "targets",
                      "nameLocation": "8510:7:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 27727,
                      "src": "8493:24:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[4][]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 27679,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "8493:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 27680,
                          "length": {
                            "hexValue": "34",
                            "id": 27678,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8498:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "8493:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                            "typeString": "uint256[4]"
                          }
                        },
                        "id": 27681,
                        "nodeType": "ArrayTypeName",
                        "src": "8493:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_storage_$dyn_storage_ptr",
                          "typeString": "uint256[4][]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27707,
                  "initialValue": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "id": 27684,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27667,
                            "src": "8541:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 27687,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8551:6:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint96_$",
                                    "typeString": "type(uint96)"
                                  },
                                  "typeName": {
                                    "id": 27686,
                                    "name": "uint96",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8551:6:66",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint96_$",
                                    "typeString": "type(uint96)"
                                  }
                                ],
                                "id": 27685,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "8546:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 27688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8546:12:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint96",
                                "typeString": "type(uint96)"
                              }
                            },
                            "id": 27689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "8546:16:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 27699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 27694,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "8574:6:66",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint96_$",
                                          "typeString": "type(uint96)"
                                        },
                                        "typeName": {
                                          "id": 27693,
                                          "name": "uint96",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "8574:6:66",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_uint96_$",
                                          "typeString": "type(uint96)"
                                        }
                                      ],
                                      "id": 27692,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -27,
                                      "src": "8569:4:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 27695,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8569:12:66",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_uint96",
                                      "typeString": "type(uint96)"
                                    }
                                  },
                                  "id": 27696,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "8569:16:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                ],
                                "id": 27691,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8564:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 27690,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8564:4:66",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 27697,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8564:22:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 27698,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8589:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "8564:26:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 27702,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8597:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 27701,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8597:4:66",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 27700,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "8592:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 27703,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8592:10:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 27704,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "8592:14:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 27705,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "8540:67:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                          "typeString": "uint256[4] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                          "typeString": "uint256[4] memory"
                        }
                      ],
                      "id": 27683,
                      "name": "wrap_dynamic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        47757, 47793, 47829, 47865, 47901
                      ],
                      "referencedDeclaration": 47901,
                      "src": "8520:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                      }
                    },
                    "id": 27706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8520:93:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                      "typeString": "uint256[4] memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8493:120:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f736e697065732f74616b657247697665732f393662697473",
                        "id": 27711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8635:30:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_43f9f7190ae2b2c6081e6fc9806a965675a9b3747d42a26a8c8d89bca5ad479a",
                          "typeString": "literal_string \"mgv/snipes/takerGives/96bits\""
                        },
                        "value": "mgv/snipes/takerGives/96bits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_43f9f7190ae2b2c6081e6fc9806a965675a9b3747d42a26a8c8d89bca5ad479a",
                          "typeString": "literal_string \"mgv/snipes/takerGives/96bits\""
                        }
                      ],
                      "expression": {
                        "id": 27708,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "8619:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 27710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "8619:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 27712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8619:47:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27713,
                  "nodeType": "ExpressionStatement",
                  "src": "8619:47:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27718,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "8685:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27717,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "8683:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8683:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 27721,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "8694:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27720,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "8692:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8692:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 27723,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27682,
                        "src": "8702:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 27724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8711:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 27714,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "8672:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 27716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "8672:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 27725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8672:44:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 27726,
                  "nodeType": "ExpressionStatement",
                  "src": "8672:44:66"
                }
              ]
            },
            "functionSelector": "e90d6353",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_takerGives_above_96bits_fails_snipes",
            "nameLocation": "8377:41:66",
            "parameters": {
              "id": 27664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8418:2:66"
            },
            "returnParameters": {
              "id": 27665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8428:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27753,
            "nodeType": "FunctionDefinition",
            "src": "8725:186:66",
            "body": {
              "id": 27752,
              "nodeType": "Block",
              "src": "8774:137:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 27735,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45878,
                                "src": "8813:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 27734,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "8811:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 27736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8811:7:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 27738,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45881,
                                "src": "8822:5:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 27737,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "8820:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 27739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8820:8:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 27742,
                                "name": "tkr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26308,
                                "src": "8838:3:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestTaker_$50091",
                                  "typeString": "contract TestTaker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestTaker_$50091",
                                  "typeString": "contract TestTaker"
                                }
                              ],
                              "id": 27741,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8830:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 27740,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8830:7:66",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 27743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8830:12:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 27745,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8846:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                                  "typeString": "contract GatekeepingTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                                  "typeString": "contract GatekeepingTest"
                                }
                              ],
                              "id": 27744,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47041,
                              "src": "8844:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 27746,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8844:7:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 27732,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "8796:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 27733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "allowances",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5331,
                          "src": "8796:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address,address,address) view external returns (uint256)"
                          }
                        },
                        "id": 27747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8796:56:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 27748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8860:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "696e697469616c20616c6c6f77616e63652073686f756c642062652030",
                        "id": 27749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8869:31:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee5006da86d0945b620a6f9b7fe5b3a22835a10c51433071d3765c24d6796abf",
                          "typeString": "literal_string \"initial allowance should be 0\""
                        },
                        "value": "initial allowance should be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee5006da86d0945b620a6f9b7fe5b3a22835a10c51433071d3765c24d6796abf",
                          "typeString": "literal_string \"initial allowance should be 0\""
                        }
                      ],
                      "id": 27731,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "8780:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 27750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8780:126:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27751,
                  "nodeType": "ExpressionStatement",
                  "src": "8780:126:66"
                }
              ]
            },
            "functionSelector": "d1d15d69",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_initial_allowance_is_zero",
            "nameLocation": "8734:30:66",
            "parameters": {
              "id": 27729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8764:2:66"
            },
            "returnParameters": {
              "id": 27730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8774:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27814,
            "nodeType": "FunctionDefinition",
            "src": "8915:387:66",
            "body": {
              "id": 27813,
              "nodeType": "Block",
              "src": "8977:325:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27758,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "8990:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27757,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "8988:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8988:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 27762,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26311,
                            "src": "9005:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 27761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8997:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27760,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8997:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8997:12:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 27764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9011:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 27756,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [61102, 61119, 61222],
                      "referencedDeclaration": 61119,
                      "src": "8983:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 27765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8983:36:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27766,
                  "nodeType": "ExpressionStatement",
                  "src": "8983:36:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27770,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "9040:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 27771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9046:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 27767,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26311,
                        "src": "9025:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 27769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49014,
                      "src": "9025:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$2050_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 27772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9025:29:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27773,
                  "nodeType": "ExpressionStatement",
                  "src": "9025:29:66"
                },
                {
                  "assignments": [27775],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27775,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "9065:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 27813,
                      "src": "9060:8:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 27774,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9060:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27783,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 27778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9084:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 27779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9093:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 27780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9102:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 27781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9111:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 27776,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26311,
                        "src": "9071:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 27777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "9071:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 27782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9071:42:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9060:53:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f6c6f77416c6c6f77616e6365",
                        "id": 27787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9136:18:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3bd6cbe86df0fb8fea88bc5dc859693f9e9c2f7e40dc0479bb421d47084fcf7e",
                          "typeString": "literal_string \"mgv/lowAllowance\""
                        },
                        "value": "mgv/lowAllowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3bd6cbe86df0fb8fea88bc5dc859693f9e9c2f7e40dc0479bb421d47084fcf7e",
                          "typeString": "literal_string \"mgv/lowAllowance\""
                        }
                      ],
                      "expression": {
                        "id": 27784,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "9120:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 27786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "9120:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 27788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9120:35:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27789,
                  "nodeType": "ExpressionStatement",
                  "src": "9120:35:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27794,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "9184:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27793,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "9182:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9182:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 27797,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "9199:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27796,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "9197:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9197:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 27800,
                                "name": "ofr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27775,
                                "src": "9227:3:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 27801,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9232:7:66",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "31",
                                "id": 27802,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9241:7:66",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              {
                                "hexValue": "3330305f303030",
                                "id": 27803,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9250:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_300000_by_1",
                                  "typeString": "int_const 300000"
                                },
                                "value": "300_000"
                              }
                            ],
                            "id": 27804,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9226:32:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                              "typeString": "uint256[4] memory"
                            }
                          ],
                          "id": 27799,
                          "name": "wrap_dynamic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            47757, 47793, 47829, 47865, 47901
                          ],
                          "referencedDeclaration": 47901,
                          "src": "9213:12:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                          }
                        },
                        "id": 27805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9213:46:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 27806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9267:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "arguments": [
                          {
                            "id": 27809,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26308,
                            "src": "9287:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          ],
                          "id": 27808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9279:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27807,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9279:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9279:12:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 27790,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "9161:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 27792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipesFor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5615,
                      "src": "9161:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool,address) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 27811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9161:136:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 27812,
                  "nodeType": "ExpressionStatement",
                  "src": "9161:136:66"
                }
              ]
            },
            "functionSelector": "9aa488db",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_cannot_snipesFor_for_without_allowance",
            "nameLocation": "8924:43:66",
            "parameters": {
              "id": 27754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8967:2:66"
            },
            "returnParameters": {
              "id": 27755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8977:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27869,
            "nodeType": "FunctionDefinition",
            "src": "9306:319:66",
            "body": {
              "id": 27868,
              "nodeType": "Block",
              "src": "9373:252:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27819,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "9386:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27818,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "9384:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9384:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 27823,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26311,
                            "src": "9401:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 27822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9393:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27821,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9393:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9393:12:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 27825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9407:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 27817,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [61102, 61119, 61222],
                      "referencedDeclaration": 61119,
                      "src": "9379:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 27826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9379:36:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27827,
                  "nodeType": "ExpressionStatement",
                  "src": "9379:36:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27831,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "9436:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 27832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9442:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 27828,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26311,
                        "src": "9421:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 27830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49014,
                      "src": "9421:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$2050_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 27833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9421:29:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27834,
                  "nodeType": "ExpressionStatement",
                  "src": "9421:29:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 27838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9469:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 27839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9478:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 27840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9487:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 27841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9496:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 27835,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26311,
                        "src": "9456:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 27837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "9456:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 27842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9456:42:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 27843,
                  "nodeType": "ExpressionStatement",
                  "src": "9456:42:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f6c6f77416c6c6f77616e6365",
                        "id": 27847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9520:18:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3bd6cbe86df0fb8fea88bc5dc859693f9e9c2f7e40dc0479bb421d47084fcf7e",
                          "typeString": "literal_string \"mgv/lowAllowance\""
                        },
                        "value": "mgv/lowAllowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3bd6cbe86df0fb8fea88bc5dc859693f9e9c2f7e40dc0479bb421d47084fcf7e",
                          "typeString": "literal_string \"mgv/lowAllowance\""
                        }
                      ],
                      "expression": {
                        "id": 27844,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "9504:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 27846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "9504:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 27848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9504:35:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27849,
                  "nodeType": "ExpressionStatement",
                  "src": "9504:35:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27854,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "9566:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27853,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "9564:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9564:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 27857,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "9575:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27856,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "9573:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9573:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 27859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9583:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 27860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9592:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 27861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9601:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "arguments": [
                          {
                            "id": 27864,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26308,
                            "src": "9615:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          ],
                          "id": 27863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9607:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27862,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9607:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9607:12:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 27850,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "9545:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 27852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrderFor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5565,
                      "src": "9545:18:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool,address) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 27866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9545:75:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 27867,
                  "nodeType": "ExpressionStatement",
                  "src": "9545:75:66"
                }
              ]
            },
            "functionSelector": "fe80d6da",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_cannot_marketOrderFor_for_without_allowance",
            "nameLocation": "9315:48:66",
            "parameters": {
              "id": 27815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9363:2:66"
            },
            "returnParameters": {
              "id": 27816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9373:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27953,
            "nodeType": "FunctionDefinition",
            "src": "9629:546:66",
            "body": {
              "id": 27952,
              "nodeType": "Block",
              "src": "9690:485:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27874,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "9703:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 27873,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "9701:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 27875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9701:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 27878,
                            "name": "mkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26311,
                            "src": "9718:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMaker_$49499",
                              "typeString": "contract TestMaker"
                            }
                          ],
                          "id": 27877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9710:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27876,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9710:7:66",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9710:12:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 27880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9724:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 27872,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [61102, 61119, 61222],
                      "referencedDeclaration": 61119,
                      "src": "9696:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 27881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9696:36:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27882,
                  "nodeType": "ExpressionStatement",
                  "src": "9696:36:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27886,
                        "name": "base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45878,
                        "src": "9753:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 27887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9759:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestToken_$52050",
                          "typeString": "contract TestToken"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 27883,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26311,
                        "src": "9738:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 27885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveMgv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49014,
                      "src": "9738:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$2050_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256) external"
                      }
                    },
                    "id": 27888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9738:29:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27889,
                  "nodeType": "ExpressionStatement",
                  "src": "9738:29:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 27893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9786:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 27894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9795:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 27895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9804:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 27896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9813:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 27890,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26311,
                        "src": "9773:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 27892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "9773:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 27897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9773:42:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 27898,
                  "nodeType": "ExpressionStatement",
                  "src": "9773:42:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27903,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9842:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                              "typeString": "contract GatekeepingTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                              "typeString": "contract GatekeepingTest"
                            }
                          ],
                          "id": 27902,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47041,
                          "src": "9840:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                            "typeString": "function (contract Test) pure returns (address payable)"
                          }
                        },
                        "id": 27904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9840:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "312e32",
                        "id": 27905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9849:9:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1200000000000000000_by_1",
                          "typeString": "int_const 1200000000000000000"
                        },
                        "value": "1.2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1200000000000000000_by_1",
                          "typeString": "int_const 1200000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 27899,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26308,
                        "src": "9821:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$50091",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 27901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveSpender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49858,
                      "src": "9821:18:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 27906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9821:38:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27907,
                  "nodeType": "ExpressionStatement",
                  "src": "9821:38:66"
                },
                {
                  "assignments": [27909],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27909,
                      "mutability": "mutable",
                      "name": "takerGot",
                      "nameLocation": "9870:8:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 27952,
                      "src": "9865:13:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 27908,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9865:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27910,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9865:13:66"
                },
                {
                  "expression": {
                    "id": 27929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 27911,
                          "name": "takerGot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27909,
                          "src": "9885:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        null,
                        null,
                        null
                      ],
                      "id": 27912,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "9884:16:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$__$__$__$",
                        "typeString": "tuple(uint256,,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 27916,
                              "name": "base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45878,
                              "src": "9931:4:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 27915,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "9929:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 27917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9929:7:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 27919,
                              "name": "quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45881,
                              "src": "9946:5:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestToken_$52050",
                                "typeString": "contract TestToken"
                              }
                            ],
                            "id": 27918,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 47058,
                            "src": "9944:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                              "typeString": "function (contract IERC20) pure returns (address payable)"
                            }
                          },
                          "id": 27920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9944:8:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 27921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9960:7:66",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "31",
                          "id": 27922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9975:7:66",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "74727565",
                          "id": 27923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9990:4:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "arguments": [
                            {
                              "id": 27926,
                              "name": "tkr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26308,
                              "src": "10010:3:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TestTaker_$50091",
                                "typeString": "contract TestTaker"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TestTaker_$50091",
                                "typeString": "contract TestTaker"
                              }
                            ],
                            "id": 27925,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10002:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 27924,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10002:7:66",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 27927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10002:12:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 27913,
                          "name": "mgv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45875,
                          "src": "9903:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                            "typeString": "contract AbstractMangrove"
                          }
                        },
                        "id": 27914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "marketOrderFor",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5565,
                        "src": "9903:18:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,address,uint256,uint256,bool,address) external returns (uint256,uint256,uint256,uint256)"
                        }
                      },
                      "id": 27928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9903:117:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256,uint256)"
                      }
                    },
                    "src": "9884:136:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27930,
                  "nodeType": "ExpressionStatement",
                  "src": "9884:136:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 27935,
                                "name": "base",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45878,
                                "src": "10059:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 27934,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "10057:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 27936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10057:7:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 27938,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45881,
                                "src": "10068:5:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestToken_$52050",
                                  "typeString": "contract TestToken"
                                }
                              ],
                              "id": 27937,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47058,
                              "src": "10066:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                "typeString": "function (contract IERC20) pure returns (address payable)"
                              }
                            },
                            "id": 27939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10066:8:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 27942,
                                "name": "tkr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26308,
                                "src": "10084:3:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestTaker_$50091",
                                  "typeString": "contract TestTaker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestTaker_$50091",
                                  "typeString": "contract TestTaker"
                                }
                              ],
                              "id": 27941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10076:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 27940,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10076:7:66",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 27943,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10076:12:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 27945,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "10092:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                                  "typeString": "contract GatekeepingTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                                  "typeString": "contract GatekeepingTest"
                                }
                              ],
                              "id": 27944,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46990, 47007, 47024, 47041, 47058
                              ],
                              "referencedDeclaration": 47041,
                              "src": "10090:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                                "typeString": "function (contract Test) pure returns (address payable)"
                              }
                            },
                            "id": 27946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10090:7:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 27932,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "10042:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          },
                          "id": 27933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "allowances",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5331,
                          "src": "10042:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address,address,address) view external returns (uint256)"
                          }
                        },
                        "id": 27947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10042:56:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e32",
                        "id": 27948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10106:9:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        },
                        "value": "0.2"
                      },
                      {
                        "hexValue": "616c6c6f77616e63652073686f756c64206861766520636f72726563746c792072656475636564",
                        "id": 27949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10123:41:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b833b4753c2780e321c82244ae6773599d225256758a9026f8a5ac334eb43b34",
                          "typeString": "literal_string \"allowance should have correctly reduced\""
                        },
                        "value": "allowance should have correctly reduced"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b833b4753c2780e321c82244ae6773599d225256758a9026f8a5ac334eb43b34",
                          "typeString": "literal_string \"allowance should have correctly reduced\""
                        }
                      ],
                      "id": 27931,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "10026:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 27950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10026:144:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27951,
                  "nodeType": "ExpressionStatement",
                  "src": "10026:144:66"
                }
              ]
            },
            "functionSelector": "4757fde9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_can_marketOrderFor_for_with_allowance",
            "nameLocation": "9638:42:66",
            "parameters": {
              "id": 27870,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9680:2:66"
            },
            "returnParameters": {
              "id": 27871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9690:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27955,
            "nodeType": "VariableDeclaration",
            "src": "10212:14:66",
            "constant": false,
            "mutability": "mutable",
            "name": "trade_cb",
            "nameLocation": "10218:8:66",
            "scope": 29695,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 27954,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "10212:5:66",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 27957,
            "nodeType": "VariableDeclaration",
            "src": "10230:17:66",
            "constant": false,
            "mutability": "mutable",
            "name": "posthook_cb",
            "nameLocation": "10236:11:66",
            "scope": 29695,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 27956,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "10230:5:66",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 27995,
            "nodeType": "FunctionDefinition",
            "src": "10286:332:66",
            "body": {
              "id": 27994,
              "nodeType": "Block",
              "src": "10391:227:66",
              "statements": [
                {
                  "expression": {
                    "id": 27966,
                    "name": "ret",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27964,
                    "src": "10397:3:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 27967,
                  "nodeType": "ExpressionStatement",
                  "src": "10397:3:66"
                },
                {
                  "assignments": [27969],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27969,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "10448:7:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 27994,
                      "src": "10443:12:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 27968,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "10443:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27970,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10443:12:66"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 27974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 27971,
                        "name": "trade_cb",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27955,
                        "src": "10465:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      "id": 27972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10465:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 27973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10483:1:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10465:19:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 27991,
                  "nodeType": "IfStatement",
                  "src": "10461:138:66",
                  "trueBody": {
                    "id": 27990,
                    "nodeType": "Block",
                    "src": "10486:113:66",
                    "statements": [
                      {
                        "expression": {
                          "id": 27983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 27975,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27969,
                                "src": "10495:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              null
                            ],
                            "id": 27976,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "10494:11:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$__$",
                              "typeString": "tuple(bool,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 27981,
                                "name": "trade_cb",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27955,
                                "src": "10521:8:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 27978,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "10510:4:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                                      "typeString": "contract GatekeepingTest"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                                      "typeString": "contract GatekeepingTest"
                                    }
                                  ],
                                  "id": 27977,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    46990, 47007, 47024, 47041, 47058
                                  ],
                                  "referencedDeclaration": 47041,
                                  "src": "10508:1:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                                    "typeString": "function (contract Test) pure returns (address payable)"
                                  }
                                },
                                "id": 27979,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10508:7:66",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 27980,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "10508:12:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 27982,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10508:22:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "10494:36:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 27984,
                        "nodeType": "ExpressionStatement",
                        "src": "10494:36:66"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 27986,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27969,
                              "src": "10549:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6d616b6572457865637574652063616c6c6261636b206d75737420776f726b",
                              "id": 27987,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10558:33:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e119e5935cf03414034b22bbcabecf402356bf6716c058befaff9d956552c26c",
                                "typeString": "literal_string \"makerExecute callback must work\""
                              },
                              "value": "makerExecute callback must work"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e119e5935cf03414034b22bbcabecf402356bf6716c058befaff9d956552c26c",
                                "typeString": "literal_string \"makerExecute callback must work\""
                              }
                            ],
                            "id": 27985,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [59227, 59248],
                            "referencedDeclaration": 59248,
                            "src": "10538:10:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory)"
                            }
                          },
                          "id": 27988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10538:54:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 27989,
                        "nodeType": "ExpressionStatement",
                        "src": "10538:54:66"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "",
                    "id": 27992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10611:2:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 27965,
                  "id": 27993,
                  "nodeType": "Return",
                  "src": "10604:9:66"
                }
              ]
            },
            "baseFunctions": [1922],
            "functionSelector": "6c49c32c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "makerExecute",
            "nameLocation": "10295:12:66",
            "overrides": {
              "id": 27962,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10354:8:66"
            },
            "parameters": {
              "id": 27961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27960,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27995,
                  "src": "10308:27:66",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SingleOrder_$1733_calldata_ptr",
                    "typeString": "struct MgvLib.SingleOrder"
                  },
                  "typeName": {
                    "id": 27959,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 27958,
                      "name": "MgvLib.SingleOrder",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1733,
                      "src": "10308:18:66"
                    },
                    "referencedDeclaration": 1733,
                    "src": "10308:18:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$1733_storage_ptr",
                      "typeString": "struct MgvLib.SingleOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10307:29:66"
            },
            "returnParameters": {
              "id": 27965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27964,
                  "mutability": "mutable",
                  "name": "ret",
                  "nameLocation": "10384:3:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 27995,
                  "src": "10376:11:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27963,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10376:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10375:13:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28042,
            "nodeType": "FunctionDefinition",
            "src": "10622:416:66",
            "body": {
              "id": 28041,
              "nodeType": "Block",
              "src": "10746:292:66",
              "statements": [
                {
                  "assignments": [28006],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28006,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "10757:7:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 28041,
                      "src": "10752:12:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 28005,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "10752:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28007,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10752:12:66"
                },
                {
                  "expression": {
                    "id": 28008,
                    "name": "order",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27998,
                    "src": "10770:5:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$1733_calldata_ptr",
                      "typeString": "struct MgvLib.SingleOrder calldata"
                    }
                  },
                  "id": 28009,
                  "nodeType": "ExpressionStatement",
                  "src": "10770:5:66"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 28013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 28010,
                        "name": "posthook_cb",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27957,
                        "src": "10813:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      "id": 28011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10813:18:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 28012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10834:1:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10813:22:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28040,
                  "nodeType": "IfStatement",
                  "src": "10809:225:66",
                  "trueBody": {
                    "id": 28039,
                    "nodeType": "Block",
                    "src": "10837:197:66",
                    "statements": [
                      {
                        "expression": {
                          "id": 28022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 28014,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28006,
                                "src": "10846:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              null
                            ],
                            "id": 28015,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "10845:11:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$__$",
                              "typeString": "tuple(bool,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 28020,
                                "name": "posthook_cb",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27957,
                                "src": "10872:11:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 28017,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "10861:4:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                                      "typeString": "contract GatekeepingTest"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                                      "typeString": "contract GatekeepingTest"
                                    }
                                  ],
                                  "id": 28016,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    46990, 47007, 47024, 47041, 47058
                                  ],
                                  "referencedDeclaration": 47041,
                                  "src": "10859:1:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_contract$_Test_$62095_$returns$_t_address_payable_$",
                                    "typeString": "function (contract Test) pure returns (address payable)"
                                  }
                                },
                                "id": 28018,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10859:7:66",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 28019,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "10859:12:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 28021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10859:25:66",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "10845:39:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 28023,
                        "nodeType": "ExpressionStatement",
                        "src": "10845:39:66"
                      },
                      {
                        "assignments": [28025],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 28025,
                            "mutability": "mutable",
                            "name": "tradeResult",
                            "nameLocation": "10897:11:66",
                            "nodeType": "VariableDeclaration",
                            "scope": 28039,
                            "src": "10892:16:66",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 28024,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "10892:4:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 28031,
                        "initialValue": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 28029,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 28026,
                                  "name": "result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28001,
                                  "src": "10912:6:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_OrderResult_$1738_calldata_ptr",
                                    "typeString": "struct MgvLib.OrderResult calldata"
                                  }
                                },
                                "id": 28027,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mgvData",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1737,
                                "src": "10912:14:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "6d67762f747261646553756363657373",
                                "id": 28028,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10930:18:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_d5e5a42662f477ec6197efa1c1102a36b84b9b944bd440b89a0430322ef72f07",
                                  "typeString": "literal_string \"mgv/tradeSuccess\""
                                },
                                "value": "mgv/tradeSuccess"
                              },
                              "src": "10912:36:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 28030,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "10911:38:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10892:57:66"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 28035,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 28033,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28006,
                                "src": "10968:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 28034,
                                "name": "tradeResult",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28025,
                                "src": "10979:11:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "10968:22:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6d616b6572506f7374686f6f6b2063616c6c6261636b206d75737420776f726b",
                              "id": 28036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10992:34:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fa1d51bb316e6658db71a00d5111fe76232cf2b331303a128ea0339a2c5f2b18",
                                "typeString": "literal_string \"makerPosthook callback must work\""
                              },
                              "value": "makerPosthook callback must work"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fa1d51bb316e6658db71a00d5111fe76232cf2b331303a128ea0339a2c5f2b18",
                                "typeString": "literal_string \"makerPosthook callback must work\""
                              }
                            ],
                            "id": 28032,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [59227, 59248],
                            "referencedDeclaration": 59248,
                            "src": "10957:10:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory)"
                            }
                          },
                          "id": 28037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10957:70:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 28038,
                        "nodeType": "ExpressionStatement",
                        "src": "10957:70:66"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [1931],
            "functionSelector": "3d3d130d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "makerPosthook",
            "nameLocation": "10631:13:66",
            "overrides": {
              "id": 28003,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10737:8:66"
            },
            "parameters": {
              "id": 28002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27998,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "10678:5:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 28042,
                  "src": "10650:33:66",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SingleOrder_$1733_calldata_ptr",
                    "typeString": "struct MgvLib.SingleOrder"
                  },
                  "typeName": {
                    "id": 27997,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 27996,
                      "name": "MgvLib.SingleOrder",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1733,
                      "src": "10650:18:66"
                    },
                    "referencedDeclaration": 1733,
                    "src": "10650:18:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$1733_storage_ptr",
                      "typeString": "struct MgvLib.SingleOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28001,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "10717:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 28042,
                  "src": "10689:34:66",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OrderResult_$1738_calldata_ptr",
                    "typeString": "struct MgvLib.OrderResult"
                  },
                  "typeName": {
                    "id": 28000,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 27999,
                      "name": "MgvLib.OrderResult",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1738,
                      "src": "10689:18:66"
                    },
                    "referencedDeclaration": 1738,
                    "src": "10689:18:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderResult_$1738_storage_ptr",
                      "typeString": "struct MgvLib.OrderResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10644:83:66"
            },
            "returnParameters": {
              "id": 28004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10746:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28068,
            "nodeType": "FunctionDefinition",
            "src": "11091:150:66",
            "body": {
              "id": 28067,
              "nodeType": "Block",
              "src": "11122:119:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f7265656e7472616e63794c6f636b6564",
                        "id": 28048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11144:22:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f51ac5dce6f4410e3dc3921c53ae317c63cfe42884b73974c612571772034076",
                          "typeString": "literal_string \"mgv/reentrancyLocked\""
                        },
                        "value": "mgv/reentrancyLocked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f51ac5dce6f4410e3dc3921c53ae317c63cfe42884b73974c612571772034076",
                          "typeString": "literal_string \"mgv/reentrancyLocked\""
                        }
                      ],
                      "expression": {
                        "id": 28045,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "11128:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 28047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "11128:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 28049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11128:39:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28050,
                  "nodeType": "ExpressionStatement",
                  "src": "11128:39:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28055,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "11188:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28054,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "11186:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11186:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 28058,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "11197:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28057,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "11195:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11195:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 28060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11205:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 28061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11214:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "33305f303030",
                        "id": 28062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11223:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30000_by_1",
                          "typeString": "int_const 30000"
                        },
                        "value": "30_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 28063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11231:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 28064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11234:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_30000_by_1",
                          "typeString": "int_const 30000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 28051,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "11173:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 28053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2244,
                      "src": "11173:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 28065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11173:63:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 28066,
                  "nodeType": "ExpressionStatement",
                  "src": "11173:63:66"
                }
              ]
            },
            "functionSelector": "b0a706b9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newOfferKO",
            "nameLocation": "11100:10:66",
            "parameters": {
              "id": 28043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11110:2:66"
            },
            "returnParameters": {
              "id": 28044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11122:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28107,
            "nodeType": "FunctionDefinition",
            "src": "11245:267:66",
            "body": {
              "id": 28106,
              "nodeType": "Block",
              "src": "11297:215:66",
              "statements": [
                {
                  "assignments": [28072],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28072,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "11308:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 28106,
                      "src": "11303:8:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28071,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11303:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28087,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28076,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "11329:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28075,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "11327:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11327:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 28079,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "11338:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28078,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "11336:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11336:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 28081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11346:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 28082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11355:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 28083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11364:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 28084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11373:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 28085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11376:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 28073,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "11314:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 28074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2244,
                      "src": "11314:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 28086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11314:64:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11303:75:66"
                },
                {
                  "expression": {
                    "id": 28095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28088,
                      "name": "trade_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27955,
                      "src": "11384:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 28091,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11410:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 28092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "newOfferKO",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28068,
                          "src": "11410:15:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                            "typeString": "function () external"
                          }
                        },
                        {
                          "components": [],
                          "id": 28093,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "11427:2:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                            "typeString": "function () external"
                          },
                          {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        ],
                        "expression": {
                          "id": 28089,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "11395:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 28090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "11395:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 28094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11395:35:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "11384:46:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 28096,
                  "nodeType": "ExpressionStatement",
                  "src": "11384:46:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28100,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28072,
                            "src": "11456:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 28101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11461:7:66",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 28098,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26308,
                            "src": "11447:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 28099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49877,
                          "src": "11447:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 28102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11447:22:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 28103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11471:35:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 28097,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "11436:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 28104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11436:71:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28105,
                  "nodeType": "ExpressionStatement",
                  "src": "11436:71:66"
                }
              ]
            },
            "functionSelector": "26210efb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_newOffer_on_reentrancy_fails",
            "nameLocation": "11254:33:66",
            "parameters": {
              "id": 28069,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11287:2:66"
            },
            "returnParameters": {
              "id": 28070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11297:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28127,
            "nodeType": "FunctionDefinition",
            "src": "11595:130:66",
            "body": {
              "id": 28126,
              "nodeType": "Block",
              "src": "11655:70:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28117,
                        "name": "_base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28109,
                        "src": "11674:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28118,
                        "name": "_quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28111,
                        "src": "11681:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 28119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11689:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 28120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11698:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "33305f303030",
                        "id": 28121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11707:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30000_by_1",
                          "typeString": "int_const 30000"
                        },
                        "value": "30_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 28122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11715:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 28123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11718:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_30000_by_1",
                          "typeString": "int_const 30000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 28114,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "11661:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 28116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2244,
                      "src": "11661:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 28124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11661:59:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 28125,
                  "nodeType": "ExpressionStatement",
                  "src": "11661:59:66"
                }
              ]
            },
            "functionSelector": "e2d73418",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newOfferOK",
            "nameLocation": "11604:10:66",
            "parameters": {
              "id": 28112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28109,
                  "mutability": "mutable",
                  "name": "_base",
                  "nameLocation": "11623:5:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 28127,
                  "src": "11615:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11615:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28111,
                  "mutability": "mutable",
                  "name": "_quote",
                  "nameLocation": "11638:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 28127,
                  "src": "11630:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11630:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11614:31:66"
            },
            "returnParameters": {
              "id": 28113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11655:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28187,
            "nodeType": "FunctionDefinition",
            "src": "11729:393:66",
            "body": {
              "id": 28186,
              "nodeType": "Block",
              "src": "11784:338:66",
              "statements": [
                {
                  "assignments": [28131],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28131,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "11795:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 28186,
                      "src": "11790:8:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28130,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11790:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28146,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28135,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "11816:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28134,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "11814:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11814:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 28138,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "11825:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28137,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "11823:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11823:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 28140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11833:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 28141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11842:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3230305f303030",
                        "id": 28142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11851:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000_by_1",
                          "typeString": "int_const 200000"
                        },
                        "value": "200_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 28143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11860:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 28144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11863:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_200000_by_1",
                          "typeString": "int_const 200000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 28132,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "11801:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 28133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2244,
                      "src": "11801:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 28145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11801:64:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11790:75:66"
                },
                {
                  "expression": {
                    "id": 28160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28147,
                      "name": "trade_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27955,
                      "src": "11871:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 28150,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11897:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 28151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "newOfferOK",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28127,
                          "src": "11897:15:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address) external"
                          }
                        },
                        {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "id": 28153,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45881,
                                  "src": "11917:5:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 28152,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "11915:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 28154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11915:8:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 28156,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45878,
                                  "src": "11927:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 28155,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "11925:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 28157,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11925:7:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "id": 28158,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "11914:19:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$",
                            "typeString": "tuple(address payable,address payable)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address) external"
                          },
                          {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$",
                            "typeString": "tuple(address payable,address payable)"
                          }
                        ],
                        "expression": {
                          "id": 28148,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "11882:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 28149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "11882:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 28159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11882:52:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "11871:63:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 28161,
                  "nodeType": "ExpressionStatement",
                  "src": "11871:63:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28165,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28131,
                            "src": "11960:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 28166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11965:7:66",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 28163,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26308,
                            "src": "11951:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 28164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49877,
                          "src": "11951:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 28167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11951:22:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 28168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11975:35:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 28162,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "11940:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 28169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11940:71:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28170,
                  "nodeType": "ExpressionStatement",
                  "src": "11940:71:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 28182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 28175,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45881,
                                  "src": "12046:5:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 28174,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "12044:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 28176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12044:8:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 28178,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45878,
                                  "src": "12056:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 28177,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "12054:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 28179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12054:7:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 28172,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45875,
                              "src": "12035:3:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 28173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "best",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1444,
                            "src": "12035:8:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 28180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12035:27:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 28181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12066:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "12035:32:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e65774f66666572206f6e20737761707065642070616972206d75737420776f726b",
                        "id": 28183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12075:36:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_486287e9de9f1fefa3b149b3160c2efcc1f37fd3febb5c9ebcf90a35c96e07e9",
                          "typeString": "literal_string \"newOffer on swapped pair must work\""
                        },
                        "value": "newOffer on swapped pair must work"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_486287e9de9f1fefa3b149b3160c2efcc1f37fd3febb5c9ebcf90a35c96e07e9",
                          "typeString": "literal_string \"newOffer on swapped pair must work\""
                        }
                      ],
                      "id": 28171,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "12017:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 28184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12017:100:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28185,
                  "nodeType": "ExpressionStatement",
                  "src": "12017:100:66"
                }
              ]
            },
            "functionSelector": "457dd4c5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_newOffer_on_reentrancy_succeeds",
            "nameLocation": "11738:36:66",
            "parameters": {
              "id": 28128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11774:2:66"
            },
            "returnParameters": {
              "id": 28129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11784:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28247,
            "nodeType": "FunctionDefinition",
            "src": "12126:390:66",
            "body": {
              "id": 28246,
              "nodeType": "Block",
              "src": "12179:337:66",
              "statements": [
                {
                  "assignments": [28191],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28191,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "12190:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 28246,
                      "src": "12185:8:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28190,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12185:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28206,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28195,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "12211:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28194,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "12209:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12209:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 28198,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "12220:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28197,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "12218:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12218:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 28200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12228:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 28201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12237:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3230305f303030",
                        "id": 28202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12246:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000_by_1",
                          "typeString": "int_const 200000"
                        },
                        "value": "200_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 28203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12255:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 28204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12258:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_200000_by_1",
                          "typeString": "int_const 200000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 28192,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "12196:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 28193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2244,
                      "src": "12196:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 28205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12196:64:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12185:75:66"
                },
                {
                  "expression": {
                    "id": 28220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28207,
                      "name": "posthook_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27957,
                      "src": "12266:11:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 28210,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12295:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 28211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "newOfferOK",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28127,
                          "src": "12295:15:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address) external"
                          }
                        },
                        {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "id": 28213,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45878,
                                  "src": "12315:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 28212,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "12313:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 28214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12313:7:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 28216,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45881,
                                  "src": "12324:5:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 28215,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "12322:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 28217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12322:8:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "id": 28218,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "12312:19:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$",
                            "typeString": "tuple(address payable,address payable)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address) external"
                          },
                          {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$",
                            "typeString": "tuple(address payable,address payable)"
                          }
                        ],
                        "expression": {
                          "id": 28208,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "12280:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 28209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "12280:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 28219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12280:52:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "12266:66:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 28221,
                  "nodeType": "ExpressionStatement",
                  "src": "12266:66:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28225,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28191,
                            "src": "12358:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 28226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12363:7:66",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 28223,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26308,
                            "src": "12349:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 28224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49877,
                          "src": "12349:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 28227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12349:22:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 28228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12373:35:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 28222,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "12338:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 28229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12338:71:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28230,
                  "nodeType": "ExpressionStatement",
                  "src": "12338:71:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 28242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 28235,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45878,
                                  "src": "12444:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 28234,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "12442:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 28236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12442:7:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 28238,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45881,
                                  "src": "12453:5:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 28237,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "12451:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 28239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12451:8:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 28232,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45875,
                              "src": "12433:3:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 28233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "best",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1444,
                            "src": "12433:8:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 28240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12433:27:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 28241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12464:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "12433:32:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e65774f66666572206f6e20706f7374686f6f6b206d75737420776f726b",
                        "id": 28243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12473:32:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9390d83bf219e9a5c0517af90a1e9db9175cebd36dff19496b9fd70fb2373a0d",
                          "typeString": "literal_string \"newOffer on posthook must work\""
                        },
                        "value": "newOffer on posthook must work"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9390d83bf219e9a5c0517af90a1e9db9175cebd36dff19496b9fd70fb2373a0d",
                          "typeString": "literal_string \"newOffer on posthook must work\""
                        }
                      ],
                      "id": 28231,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "12415:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 28244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12415:96:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28245,
                  "nodeType": "ExpressionStatement",
                  "src": "12415:96:66"
                }
              ]
            },
            "functionSelector": "521d68a6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_newOffer_on_posthook_succeeds",
            "nameLocation": "12135:34:66",
            "parameters": {
              "id": 28188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12169:2:66"
            },
            "returnParameters": {
              "id": 28189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12179:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28276,
            "nodeType": "FunctionDefinition",
            "src": "12550:169:66",
            "body": {
              "id": 28275,
              "nodeType": "Block",
              "src": "12592:127:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f7265656e7472616e63794c6f636b6564",
                        "id": 28255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12614:22:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f51ac5dce6f4410e3dc3921c53ae317c63cfe42884b73974c612571772034076",
                          "typeString": "literal_string \"mgv/reentrancyLocked\""
                        },
                        "value": "mgv/reentrancyLocked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f51ac5dce6f4410e3dc3921c53ae317c63cfe42884b73974c612571772034076",
                          "typeString": "literal_string \"mgv/reentrancyLocked\""
                        }
                      ],
                      "expression": {
                        "id": 28252,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "12598:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 28254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "12598:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 28256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12598:39:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28257,
                  "nodeType": "ExpressionStatement",
                  "src": "12598:39:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28262,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "12661:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28261,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "12659:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12659:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 28265,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "12670:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28264,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "12668:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12668:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 28267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12678:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "32",
                        "id": 28268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12687:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "33355f303030",
                        "id": 28269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12696:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_35000_by_1",
                          "typeString": "int_const 35000"
                        },
                        "value": "35_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 28270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12704:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 28271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12707:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 28272,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28249,
                        "src": "12710:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_35000_by_1",
                          "typeString": "int_const 35000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 28258,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "12643:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 28260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2399,
                      "src": "12643:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256,uint256) payable external"
                      }
                    },
                    "id": 28273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12643:71:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28274,
                  "nodeType": "ExpressionStatement",
                  "src": "12643:71:66"
                }
              ]
            },
            "functionSelector": "330ff418",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateOfferKO",
            "nameLocation": "12559:13:66",
            "parameters": {
              "id": 28250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28249,
                  "mutability": "mutable",
                  "name": "ofr",
                  "nameLocation": "12578:3:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 28276,
                  "src": "12573:8:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28248,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12573:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12572:10:66"
            },
            "returnParameters": {
              "id": 28251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12592:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28316,
            "nodeType": "FunctionDefinition",
            "src": "12723:276:66",
            "body": {
              "id": 28315,
              "nodeType": "Block",
              "src": "12778:221:66",
              "statements": [
                {
                  "assignments": [28280],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28280,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "12789:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 28315,
                      "src": "12784:8:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28279,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12784:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28295,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28284,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "12810:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28283,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "12808:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12808:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 28287,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "12819:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28286,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "12817:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12817:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 28289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12827:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 28290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12836:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 28291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12845:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 28292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12854:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 28293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12857:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 28281,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "12795:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 28282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2244,
                      "src": "12795:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 28294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12795:64:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12784:75:66"
                },
                {
                  "expression": {
                    "id": 28304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28296,
                      "name": "trade_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27955,
                      "src": "12865:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 28299,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12891:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 28300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "updateOfferKO",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28276,
                          "src": "12891:18:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 28301,
                              "name": "ofr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28280,
                              "src": "12912:3:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 28302,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "12911:5:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 28297,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "12876:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 28298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "12876:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 28303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12876:41:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "12865:52:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 28305,
                  "nodeType": "ExpressionStatement",
                  "src": "12865:52:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28309,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28280,
                            "src": "12943:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 28310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12948:7:66",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 28307,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26308,
                            "src": "12934:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 28308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49877,
                          "src": "12934:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 28311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12934:22:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 28312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12958:35:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 28306,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "12923:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 28313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12923:71:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28314,
                  "nodeType": "ExpressionStatement",
                  "src": "12923:71:66"
                }
              ]
            },
            "functionSelector": "d61a7b90",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_updateOffer_on_reentrancy_fails",
            "nameLocation": "12732:36:66",
            "parameters": {
              "id": 28277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12768:2:66"
            },
            "returnParameters": {
              "id": 28278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12778:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28339,
            "nodeType": "FunctionDefinition",
            "src": "13085:167:66",
            "body": {
              "id": 28338,
              "nodeType": "Block",
              "src": "13174:78:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28328,
                        "name": "_base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28318,
                        "src": "13196:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28329,
                        "name": "_quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28320,
                        "src": "13203:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 28330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13211:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "32",
                        "id": 28331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13220:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "33355f303030",
                        "id": 28332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13229:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_35000_by_1",
                          "typeString": "int_const 35000"
                        },
                        "value": "35_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 28333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13237:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 28334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13240:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 28335,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28322,
                        "src": "13243:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_35000_by_1",
                          "typeString": "int_const 35000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 28325,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "13180:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 28327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2399,
                      "src": "13180:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256,uint256) payable external"
                      }
                    },
                    "id": 28336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13180:67:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28337,
                  "nodeType": "ExpressionStatement",
                  "src": "13180:67:66"
                }
              ]
            },
            "functionSelector": "c1285555",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateOfferOK",
            "nameLocation": "13094:13:66",
            "parameters": {
              "id": 28323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28318,
                  "mutability": "mutable",
                  "name": "_base",
                  "nameLocation": "13121:5:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 28339,
                  "src": "13113:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28317,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13113:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28320,
                  "mutability": "mutable",
                  "name": "_quote",
                  "nameLocation": "13140:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 28339,
                  "src": "13132:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28319,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13132:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28322,
                  "mutability": "mutable",
                  "name": "ofr",
                  "nameLocation": "13157:3:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 28339,
                  "src": "13152:8:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28321,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13152:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13107:57:66"
            },
            "returnParameters": {
              "id": 28324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13174:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28420,
            "nodeType": "FunctionDefinition",
            "src": "13256:600:66",
            "body": {
              "id": 28419,
              "nodeType": "Block",
              "src": "13314:542:66",
              "statements": [
                {
                  "assignments": [28343],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28343,
                      "mutability": "mutable",
                      "name": "other_ofr",
                      "nameLocation": "13325:9:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 28419,
                      "src": "13320:14:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28342,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13320:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28358,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28347,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "13359:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28346,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "13357:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13357:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 28350,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "13375:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28349,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "13373:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13373:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 28352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13388:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 28353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13403:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 28354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13418:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 28355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13433:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 28356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13442:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 28344,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "13337:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 28345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2244,
                      "src": "13337:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 28357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13337:112:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13320:129:66"
                },
                {
                  "expression": {
                    "id": 28373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28359,
                      "name": "trade_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27955,
                      "src": "13456:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 28362,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13489:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 28363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "updateOfferOK",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28339,
                          "src": "13489:18:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256) external"
                          }
                        },
                        {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "id": 28365,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45881,
                                  "src": "13518:5:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 28364,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "13516:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 28366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13516:8:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 28368,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45878,
                                  "src": "13528:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 28367,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "13526:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 28369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13526:7:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 28370,
                              "name": "other_ofr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28343,
                              "src": "13535:9:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 28371,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "13515:30:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_uint256_$",
                            "typeString": "tuple(address payable,address payable,uint256)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256) external"
                          },
                          {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_uint256_$",
                            "typeString": "tuple(address payable,address payable,uint256)"
                          }
                        ],
                        "expression": {
                          "id": 28360,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "13467:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 28361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "13467:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 28372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13467:84:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "13456:95:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 28374,
                  "nodeType": "ExpressionStatement",
                  "src": "13456:95:66"
                },
                {
                  "assignments": [28376],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28376,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "13562:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 28419,
                      "src": "13557:8:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28375,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13557:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28391,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28380,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "13583:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28379,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "13581:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13581:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 28383,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "13592:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28382,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "13590:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13590:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 28385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13600:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 28386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13609:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3430305f303030",
                        "id": 28387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13618:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_400000_by_1",
                          "typeString": "int_const 400000"
                        },
                        "value": "400_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 28388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13627:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 28389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13630:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_400000_by_1",
                          "typeString": "int_const 400000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 28377,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "13568:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 28378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2244,
                      "src": "13568:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 28390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13568:64:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13557:75:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28395,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28376,
                            "src": "13658:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 28396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13663:7:66",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 28393,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26308,
                            "src": "13649:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 28394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49877,
                          "src": "13649:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 28397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13649:22:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 28398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13673:35:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 28392,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "13638:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 28399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13638:71:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28400,
                  "nodeType": "ExpressionStatement",
                  "src": "13638:71:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 28415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 28405,
                                      "name": "quote",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45881,
                                      "src": "13752:5:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 28404,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      46990, 47007, 47024, 47041, 47058
                                    ],
                                    "referencedDeclaration": 47058,
                                    "src": "13750:1:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 28406,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13750:8:66",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 28408,
                                      "name": "base",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45878,
                                      "src": "13762:4:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 28407,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      46990, 47007, 47024, 47041, 47058
                                    ],
                                    "referencedDeclaration": 47058,
                                    "src": "13760:1:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 28409,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13760:7:66",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "id": 28410,
                                  "name": "other_ofr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28343,
                                  "src": "13769:9:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 28402,
                                  "name": "mgv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45875,
                                  "src": "13733:3:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                    "typeString": "contract AbstractMangrove"
                                  }
                                },
                                "id": 28403,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "offerDetails",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1413,
                                "src": "13733:16:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$9916_$",
                                  "typeString": "function (address,address,uint256) view external returns (t)"
                                }
                              },
                              "id": 28411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13733:46:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_t_$9916",
                                "typeString": "t"
                              }
                            },
                            "id": 28412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "gasreq",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10245,
                            "src": "13733:53:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$9916_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$9916_$",
                              "typeString": "function (t) pure returns (uint256)"
                            }
                          },
                          "id": 28413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13733:55:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "33355f303030",
                          "id": 28414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13792:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_35000_by_1",
                            "typeString": "int_const 35000"
                          },
                          "value": "35_000"
                        },
                        "src": "13733:65:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7570646174654f66666572206f6e20737761707065642070616972206d75737420776f726b",
                        "id": 28416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13806:39:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e9080d07fac4757dc7a5ebafe72b4a330589c1aff9331b4e2218cde50d11ba64",
                          "typeString": "literal_string \"updateOffer on swapped pair must work\""
                        },
                        "value": "updateOffer on swapped pair must work"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e9080d07fac4757dc7a5ebafe72b4a330589c1aff9331b4e2218cde50d11ba64",
                          "typeString": "literal_string \"updateOffer on swapped pair must work\""
                        }
                      ],
                      "id": 28401,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "13715:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 28417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13715:136:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28418,
                  "nodeType": "ExpressionStatement",
                  "src": "13715:136:66"
                }
              ]
            },
            "functionSelector": "39ee6a91",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_updateOffer_on_reentrancy_succeeds",
            "nameLocation": "13265:39:66",
            "parameters": {
              "id": 28340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13304:2:66"
            },
            "returnParameters": {
              "id": 28341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13314:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28501,
            "nodeType": "FunctionDefinition",
            "src": "13860:596:66",
            "body": {
              "id": 28500,
              "nodeType": "Block",
              "src": "13916:540:66",
              "statements": [
                {
                  "assignments": [28424],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28424,
                      "mutability": "mutable",
                      "name": "other_ofr",
                      "nameLocation": "13927:9:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 28500,
                      "src": "13922:14:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28423,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13922:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28439,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28428,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "13961:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28427,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "13959:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13959:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 28431,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "13976:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28430,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "13974:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13974:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 28433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13990:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 28434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14005:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 28435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14020:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 28436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14035:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 28437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14044:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 28425,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "13939:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 28426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2244,
                      "src": "13939:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 28438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13939:112:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13922:129:66"
                },
                {
                  "expression": {
                    "id": 28454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28440,
                      "name": "posthook_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27957,
                      "src": "14057:11:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 28443,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14093:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 28444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "updateOfferOK",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28339,
                          "src": "14093:18:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256) external"
                          }
                        },
                        {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "id": 28446,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45878,
                                  "src": "14122:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 28445,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "14120:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 28447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14120:7:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 28449,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45881,
                                  "src": "14131:5:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 28448,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "14129:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 28450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14129:8:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 28451,
                              "name": "other_ofr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28424,
                              "src": "14139:9:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 28452,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "14119:30:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_uint256_$",
                            "typeString": "tuple(address payable,address payable,uint256)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256) external"
                          },
                          {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_uint256_$",
                            "typeString": "tuple(address payable,address payable,uint256)"
                          }
                        ],
                        "expression": {
                          "id": 28441,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "14071:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 28442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "14071:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 28453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14071:84:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "14057:98:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 28455,
                  "nodeType": "ExpressionStatement",
                  "src": "14057:98:66"
                },
                {
                  "assignments": [28457],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28457,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "14166:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 28500,
                      "src": "14161:8:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28456,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14161:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28472,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28461,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "14187:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28460,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "14185:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14185:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 28464,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "14196:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28463,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "14194:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14194:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 28466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14204:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 28467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14213:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3330305f303030",
                        "id": 28468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14222:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300000_by_1",
                          "typeString": "int_const 300000"
                        },
                        "value": "300_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 28469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14231:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 28470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14234:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_300000_by_1",
                          "typeString": "int_const 300000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 28458,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "14172:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 28459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2244,
                      "src": "14172:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 28471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14172:64:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14161:75:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28476,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28457,
                            "src": "14262:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 28477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14267:7:66",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 28474,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26308,
                            "src": "14253:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 28475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49877,
                          "src": "14253:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 28478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14253:22:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 28479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14277:35:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 28473,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "14242:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 28480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14242:71:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28481,
                  "nodeType": "ExpressionStatement",
                  "src": "14242:71:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 28496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 28486,
                                      "name": "base",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45878,
                                      "src": "14356:4:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 28485,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      46990, 47007, 47024, 47041, 47058
                                    ],
                                    "referencedDeclaration": 47058,
                                    "src": "14354:1:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 28487,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14354:7:66",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 28489,
                                      "name": "quote",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45881,
                                      "src": "14365:5:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_TestToken_$52050",
                                        "typeString": "contract TestToken"
                                      }
                                    ],
                                    "id": 28488,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      46990, 47007, 47024, 47041, 47058
                                    ],
                                    "referencedDeclaration": 47058,
                                    "src": "14363:1:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                      "typeString": "function (contract IERC20) pure returns (address payable)"
                                    }
                                  },
                                  "id": 28490,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14363:8:66",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "id": 28491,
                                  "name": "other_ofr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28424,
                                  "src": "14373:9:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 28483,
                                  "name": "mgv",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45875,
                                  "src": "14337:3:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                    "typeString": "contract AbstractMangrove"
                                  }
                                },
                                "id": 28484,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "offerDetails",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1413,
                                "src": "14337:16:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_userDefinedValueType$_t_$9916_$",
                                  "typeString": "function (address,address,uint256) view external returns (t)"
                                }
                              },
                              "id": 28492,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14337:46:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_t_$9916",
                                "typeString": "t"
                              }
                            },
                            "id": 28493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "gasreq",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10245,
                            "src": "14337:53:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_t_$9916_$returns$_t_uint256_$bound_to$_t_userDefinedValueType$_t_$9916_$",
                              "typeString": "function (t) pure returns (uint256)"
                            }
                          },
                          "id": 28494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14337:55:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "33355f303030",
                          "id": 28495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14396:6:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_35000_by_1",
                            "typeString": "int_const 35000"
                          },
                          "value": "35_000"
                        },
                        "src": "14337:65:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7570646174654f66666572206f6e20706f7374686f6f6b206d75737420776f726b",
                        "id": 28497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14410:35:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_edb2172f2b42bc9360f0dd3c37e7562cabb6b0f7a141798754977122686f43bf",
                          "typeString": "literal_string \"updateOffer on posthook must work\""
                        },
                        "value": "updateOffer on posthook must work"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_edb2172f2b42bc9360f0dd3c37e7562cabb6b0f7a141798754977122686f43bf",
                          "typeString": "literal_string \"updateOffer on posthook must work\""
                        }
                      ],
                      "id": 28482,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "14319:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 28498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14319:132:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28499,
                  "nodeType": "ExpressionStatement",
                  "src": "14319:132:66"
                }
              ]
            },
            "functionSelector": "4c6f09ee",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_updateOffer_on_posthook_succeeds",
            "nameLocation": "13869:37:66",
            "parameters": {
              "id": 28421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13906:2:66"
            },
            "returnParameters": {
              "id": 28422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13916:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28526,
            "nodeType": "FunctionDefinition",
            "src": "14490:144:66",
            "body": {
              "id": 28525,
              "nodeType": "Block",
              "src": "14532:102:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f7265656e7472616e63794c6f636b6564",
                        "id": 28509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14554:22:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f51ac5dce6f4410e3dc3921c53ae317c63cfe42884b73974c612571772034076",
                          "typeString": "literal_string \"mgv/reentrancyLocked\""
                        },
                        "value": "mgv/reentrancyLocked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f51ac5dce6f4410e3dc3921c53ae317c63cfe42884b73974c612571772034076",
                          "typeString": "literal_string \"mgv/reentrancyLocked\""
                        }
                      ],
                      "expression": {
                        "id": 28506,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "14538:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 28508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "14538:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 28510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14538:39:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28511,
                  "nodeType": "ExpressionStatement",
                  "src": "14538:39:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28516,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "14602:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28515,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "14600:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14600:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 28519,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "14611:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28518,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "14609:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14609:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 28521,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28503,
                        "src": "14619:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 28522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14623:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 28512,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "14583:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 28514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "retractOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2552,
                      "src": "14583:16:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,bool) external returns (uint256)"
                      }
                    },
                    "id": 28523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14583:46:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 28524,
                  "nodeType": "ExpressionStatement",
                  "src": "14583:46:66"
                }
              ]
            },
            "functionSelector": "1a58abf9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retractOfferKO",
            "nameLocation": "14499:14:66",
            "parameters": {
              "id": 28504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28503,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "14519:2:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 28526,
                  "src": "14514:7:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28502,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14514:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14513:9:66"
            },
            "returnParameters": {
              "id": 28505,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14532:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28566,
            "nodeType": "FunctionDefinition",
            "src": "14638:278:66",
            "body": {
              "id": 28565,
              "nodeType": "Block",
              "src": "14694:222:66",
              "statements": [
                {
                  "assignments": [28530],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28530,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "14705:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 28565,
                      "src": "14700:8:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28529,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14700:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28545,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28534,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "14726:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28533,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "14724:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14724:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 28537,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "14735:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28536,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "14733:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14733:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 28539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14743:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 28540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14752:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 28541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14761:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 28542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14770:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 28543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14773:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 28531,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "14711:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 28532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2244,
                      "src": "14711:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 28544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14711:64:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14700:75:66"
                },
                {
                  "expression": {
                    "id": 28554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28546,
                      "name": "trade_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27955,
                      "src": "14781:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 28549,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14807:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 28550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "retractOfferKO",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28526,
                          "src": "14807:19:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 28551,
                              "name": "ofr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28530,
                              "src": "14829:3:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 28552,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "14828:5:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 28547,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "14792:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 28548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "14792:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 28553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14792:42:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "14781:53:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 28555,
                  "nodeType": "ExpressionStatement",
                  "src": "14781:53:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28559,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28530,
                            "src": "14860:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 28560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14865:7:66",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 28557,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26308,
                            "src": "14851:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 28558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49877,
                          "src": "14851:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 28561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14851:22:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 28562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14875:35:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 28556,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "14840:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 28563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14840:71:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28564,
                  "nodeType": "ExpressionStatement",
                  "src": "14840:71:66"
                }
              ]
            },
            "functionSelector": "5b29cdf5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_retractOffer_on_reentrancy_fails",
            "nameLocation": "14647:37:66",
            "parameters": {
              "id": 28527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14684:2:66"
            },
            "returnParameters": {
              "id": 28528,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14694:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28592,
            "nodeType": "FunctionDefinition",
            "src": "14950:275:66",
            "body": {
              "id": 28591,
              "nodeType": "Block",
              "src": "15039:186:66",
              "statements": [
                {
                  "assignments": [28576],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28576,
                      "mutability": "mutable",
                      "name": "collected",
                      "nameLocation": "15050:9:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 28591,
                      "src": "15045:14:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28575,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15045:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28584,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 28579,
                        "name": "_base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28568,
                        "src": "15079:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28580,
                        "name": "_quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28570,
                        "src": "15086:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28581,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28572,
                        "src": "15094:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 28582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15098:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 28577,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "15062:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 28578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "retractOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2552,
                      "src": "15062:16:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,bool) external returns (uint256)"
                      }
                    },
                    "id": 28583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15062:42:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15045:59:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28586,
                        "name": "collected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28576,
                        "src": "15126:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 28587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15143:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "556e657870656374656420636f6c6c65637465642070726f766973696f6e206166746572207265747261637420772f6f20646570726f766973696f6e",
                        "id": 28588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15152:62:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ad1795c1ab2186b67fd3aa96b7764f67027122488c6b50ff81198f91db41814",
                          "typeString": "literal_string \"Unexpected collected provision after retract w/o deprovision\""
                        },
                        "value": "Unexpected collected provision after retract w/o deprovision"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ad1795c1ab2186b67fd3aa96b7764f67027122488c6b50ff81198f91db41814",
                          "typeString": "literal_string \"Unexpected collected provision after retract w/o deprovision\""
                        }
                      ],
                      "id": 28585,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        61419, 61444, 61457, 61473, 61515, 61557, 61599, 61636,
                        61673, 61710, 59278, 59303, 59333, 59358, 59417, 59442,
                        59472, 59497, 60597, 60632
                      ],
                      "referencedDeclaration": 59497,
                      "src": "15110:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 28589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15110:110:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28590,
                  "nodeType": "ExpressionStatement",
                  "src": "15110:110:66"
                }
              ]
            },
            "functionSelector": "5749f882",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retractOfferOK",
            "nameLocation": "14959:14:66",
            "parameters": {
              "id": 28573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28568,
                  "mutability": "mutable",
                  "name": "_base",
                  "nameLocation": "14987:5:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 28592,
                  "src": "14979:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14979:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28570,
                  "mutability": "mutable",
                  "name": "_quote",
                  "nameLocation": "15006:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 28592,
                  "src": "14998:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28569,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14998:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28572,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "15023:2:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 28592,
                  "src": "15018:7:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28571,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15018:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14973:56:66"
            },
            "returnParameters": {
              "id": 28574,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15039:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28670,
            "nodeType": "FunctionDefinition",
            "src": "15229:568:66",
            "body": {
              "id": 28669,
              "nodeType": "Block",
              "src": "15288:509:66",
              "statements": [
                {
                  "assignments": [28596],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28596,
                      "mutability": "mutable",
                      "name": "other_ofr",
                      "nameLocation": "15299:9:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 28669,
                      "src": "15294:14:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28595,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15294:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28611,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28600,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "15333:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28599,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "15331:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15331:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 28603,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "15349:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28602,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "15347:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15347:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 28605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15362:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 28606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15377:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "39305f303030",
                        "id": 28607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15392:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_90000_by_1",
                          "typeString": "int_const 90000"
                        },
                        "value": "90_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 28608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15406:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 28609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15415:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_90000_by_1",
                          "typeString": "int_const 90000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 28597,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "15311:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 28598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2244,
                      "src": "15311:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 28610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15311:111:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15294:128:66"
                },
                {
                  "expression": {
                    "id": 28626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28612,
                      "name": "trade_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27955,
                      "src": "15428:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 28615,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "15461:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 28616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "retractOfferOK",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28592,
                          "src": "15461:19:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256) external"
                          }
                        },
                        {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "id": 28618,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45881,
                                  "src": "15491:5:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 28617,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "15489:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 28619,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15489:8:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 28621,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45878,
                                  "src": "15501:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 28620,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "15499:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 28622,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15499:7:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 28623,
                              "name": "other_ofr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28596,
                              "src": "15508:9:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 28624,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "15488:30:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_uint256_$",
                            "typeString": "tuple(address payable,address payable,uint256)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256) external"
                          },
                          {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_uint256_$",
                            "typeString": "tuple(address payable,address payable,uint256)"
                          }
                        ],
                        "expression": {
                          "id": 28613,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "15439:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 28614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "15439:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 28625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15439:85:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "15428:96:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 28627,
                  "nodeType": "ExpressionStatement",
                  "src": "15428:96:66"
                },
                {
                  "assignments": [28629],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28629,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "15536:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 28669,
                      "src": "15531:8:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28628,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15531:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28644,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28633,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "15557:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28632,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "15555:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15555:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 28636,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "15566:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28635,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "15564:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15564:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 28638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15574:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 28639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15583:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "39305f303030",
                        "id": 28640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15592:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_90000_by_1",
                          "typeString": "int_const 90000"
                        },
                        "value": "90_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 28641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15600:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 28642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15603:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_90000_by_1",
                          "typeString": "int_const 90000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 28630,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "15542:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 28631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2244,
                      "src": "15542:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 28643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15542:63:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15531:74:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28648,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28629,
                            "src": "15631:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 28649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15636:7:66",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 28646,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26308,
                            "src": "15622:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 28647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49877,
                          "src": "15622:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 28650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15622:22:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 28651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15646:35:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 28645,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "15611:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 28652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15611:71:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28653,
                  "nodeType": "ExpressionStatement",
                  "src": "15611:71:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 28665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 28658,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45881,
                                  "src": "15717:5:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 28657,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "15715:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 28659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15715:8:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 28661,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45878,
                                  "src": "15727:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 28660,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "15725:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 28662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15725:7:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 28655,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45875,
                              "src": "15706:3:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 28656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "best",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1444,
                            "src": "15706:8:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 28663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15706:27:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 28664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15737:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "15706:32:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "726574726163744f66666572206f6e20737761707065642070616972206d75737420776f726b",
                        "id": 28666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15746:40:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b495c1dcc28f28f389ebbe19e4efb922fb42e63ca855714378580e9e246162be",
                          "typeString": "literal_string \"retractOffer on swapped pair must work\""
                        },
                        "value": "retractOffer on swapped pair must work"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b495c1dcc28f28f389ebbe19e4efb922fb42e63ca855714378580e9e246162be",
                          "typeString": "literal_string \"retractOffer on swapped pair must work\""
                        }
                      ],
                      "id": 28654,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "15688:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 28667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15688:104:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28668,
                  "nodeType": "ExpressionStatement",
                  "src": "15688:104:66"
                }
              ]
            },
            "functionSelector": "cae50f54",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_retractOffer_on_reentrancy_succeeds",
            "nameLocation": "15238:40:66",
            "parameters": {
              "id": 28593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15278:2:66"
            },
            "returnParameters": {
              "id": 28594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15288:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28748,
            "nodeType": "FunctionDefinition",
            "src": "15801:566:66",
            "body": {
              "id": 28747,
              "nodeType": "Block",
              "src": "15858:509:66",
              "statements": [
                {
                  "assignments": [28674],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28674,
                      "mutability": "mutable",
                      "name": "other_ofr",
                      "nameLocation": "15869:9:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 28747,
                      "src": "15864:14:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28673,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15864:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28689,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28678,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "15903:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28677,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "15901:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15901:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 28681,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "15918:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28680,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "15916:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15916:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 28683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15932:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 28684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15947:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3139305f303030",
                        "id": 28685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15962:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_190000_by_1",
                          "typeString": "int_const 190000"
                        },
                        "value": "190_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 28686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15977:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 28687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15986:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_190000_by_1",
                          "typeString": "int_const 190000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 28675,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "15881:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 28676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2244,
                      "src": "15881:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 28688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15881:112:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15864:129:66"
                },
                {
                  "expression": {
                    "id": 28704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28690,
                      "name": "posthook_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27957,
                      "src": "15999:11:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 28693,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "16035:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 28694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "retractOfferOK",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28592,
                          "src": "16035:19:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256) external"
                          }
                        },
                        {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "id": 28696,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45878,
                                  "src": "16065:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 28695,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "16063:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 28697,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16063:7:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 28699,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45881,
                                  "src": "16074:5:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 28698,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "16072:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 28700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16072:8:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 28701,
                              "name": "other_ofr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28674,
                              "src": "16082:9:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 28702,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "16062:30:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_uint256_$",
                            "typeString": "tuple(address payable,address payable,uint256)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256) external"
                          },
                          {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_uint256_$",
                            "typeString": "tuple(address payable,address payable,uint256)"
                          }
                        ],
                        "expression": {
                          "id": 28691,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "16013:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 28692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "16013:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 28703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16013:85:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "15999:99:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 28705,
                  "nodeType": "ExpressionStatement",
                  "src": "15999:99:66"
                },
                {
                  "assignments": [28707],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28707,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "16110:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 28747,
                      "src": "16105:8:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28706,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16105:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28722,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28711,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "16131:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28710,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "16129:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16129:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 28714,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "16140:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28713,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "16138:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16138:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 28716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16148:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 28717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16157:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "39305f303030",
                        "id": 28718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16166:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_90000_by_1",
                          "typeString": "int_const 90000"
                        },
                        "value": "90_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 28719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16174:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 28720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16177:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_90000_by_1",
                          "typeString": "int_const 90000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 28708,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "16116:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 28709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2244,
                      "src": "16116:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 28721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16116:63:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16105:74:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28726,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28707,
                            "src": "16205:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 28727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16210:7:66",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 28724,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26308,
                            "src": "16196:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 28725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49877,
                          "src": "16196:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 28728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16196:22:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 28729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16220:35:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 28723,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "16185:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 28730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16185:71:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28731,
                  "nodeType": "ExpressionStatement",
                  "src": "16185:71:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 28743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 28736,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45878,
                                  "src": "16291:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 28735,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "16289:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 28737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16289:7:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 28739,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45881,
                                  "src": "16300:5:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 28738,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "16298:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 28740,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16298:8:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 28733,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45875,
                              "src": "16280:3:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 28734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "best",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1444,
                            "src": "16280:8:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 28741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16280:27:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 28742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16311:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "16280:32:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "726574726163744f66666572206f6e20706f7374686f6f6b206d75737420776f726b",
                        "id": 28744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16320:36:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_21ba870f2ed133776d0218536f34042df3e90df1f506e6c99730d2238132c1a2",
                          "typeString": "literal_string \"retractOffer on posthook must work\""
                        },
                        "value": "retractOffer on posthook must work"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_21ba870f2ed133776d0218536f34042df3e90df1f506e6c99730d2238132c1a2",
                          "typeString": "literal_string \"retractOffer on posthook must work\""
                        }
                      ],
                      "id": 28732,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "16262:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 28745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16262:100:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28746,
                  "nodeType": "ExpressionStatement",
                  "src": "16262:100:66"
                }
              ]
            },
            "functionSelector": "caf1b8db",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_retractOffer_on_posthook_succeeds",
            "nameLocation": "15810:38:66",
            "parameters": {
              "id": 28671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15848:2:66"
            },
            "returnParameters": {
              "id": 28672,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15858:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28772,
            "nodeType": "FunctionDefinition",
            "src": "16401:152:66",
            "body": {
              "id": 28771,
              "nodeType": "Block",
              "src": "16435:118:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f7265656e7472616e63794c6f636b6564",
                        "id": 28754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16457:22:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f51ac5dce6f4410e3dc3921c53ae317c63cfe42884b73974c612571772034076",
                          "typeString": "literal_string \"mgv/reentrancyLocked\""
                        },
                        "value": "mgv/reentrancyLocked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f51ac5dce6f4410e3dc3921c53ae317c63cfe42884b73974c612571772034076",
                          "typeString": "literal_string \"mgv/reentrancyLocked\""
                        }
                      ],
                      "expression": {
                        "id": 28751,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "16441:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 28753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "16441:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 28755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16441:39:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28756,
                  "nodeType": "ExpressionStatement",
                  "src": "16441:39:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28761,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "16504:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28760,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "16502:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16502:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 28764,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "16513:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28763,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "16511:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16511:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "302e32",
                        "id": 28766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16521:9:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        },
                        "value": "0.2"
                      },
                      {
                        "hexValue": "302e32",
                        "id": 28767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16532:9:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        },
                        "value": "0.2"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 28768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16543:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 28757,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "16486:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 28759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3435,
                      "src": "16486:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 28769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16486:62:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 28770,
                  "nodeType": "ExpressionStatement",
                  "src": "16486:62:66"
                }
              ]
            },
            "functionSelector": "3566f61b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "marketOrderKO",
            "nameLocation": "16410:13:66",
            "parameters": {
              "id": 28749,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16423:2:66"
            },
            "returnParameters": {
              "id": 28750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16435:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28811,
            "nodeType": "FunctionDefinition",
            "src": "16557:275:66",
            "body": {
              "id": 28810,
              "nodeType": "Block",
              "src": "16612:220:66",
              "statements": [
                {
                  "assignments": [28776],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28776,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "16623:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 28810,
                      "src": "16618:8:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28775,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16618:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28791,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28780,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "16644:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28779,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "16642:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16642:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 28783,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "16653:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28782,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "16651:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16651:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 28785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16661:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 28786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16670:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 28787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16679:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 28788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16688:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 28789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16691:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 28777,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "16629:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 28778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2244,
                      "src": "16629:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 28790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16629:64:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16618:75:66"
                },
                {
                  "expression": {
                    "id": 28799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28792,
                      "name": "trade_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27955,
                      "src": "16699:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 28795,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "16725:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 28796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "marketOrderKO",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28772,
                          "src": "16725:18:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                            "typeString": "function () external"
                          }
                        },
                        {
                          "components": [],
                          "id": 28797,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "16745:2:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                            "typeString": "function () external"
                          },
                          {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        ],
                        "expression": {
                          "id": 28793,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "16710:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 28794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "16710:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 28798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16710:38:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "16699:49:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 28800,
                  "nodeType": "ExpressionStatement",
                  "src": "16699:49:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28804,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28776,
                            "src": "16774:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "302e31",
                            "id": 28805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16779:9:66",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            },
                            "value": "0.1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 28802,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26308,
                            "src": "16765:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 28803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49877,
                          "src": "16765:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 28806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16765:24:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 28807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16791:35:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 28801,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "16754:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 28808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16754:73:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28809,
                  "nodeType": "ExpressionStatement",
                  "src": "16754:73:66"
                }
              ]
            },
            "functionSelector": "2b67606d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_marketOrder_on_reentrancy_fails",
            "nameLocation": "16566:36:66",
            "parameters": {
              "id": 28773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16602:2:66"
            },
            "returnParameters": {
              "id": 28774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16612:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28829,
            "nodeType": "FunctionDefinition",
            "src": "16866:132:66",
            "body": {
              "id": 28828,
              "nodeType": "Block",
              "src": "16929:69:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28821,
                        "name": "_base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28813,
                        "src": "16951:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28822,
                        "name": "_quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28815,
                        "src": "16958:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "302e35",
                        "id": 28823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16966:9:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      },
                      {
                        "hexValue": "302e35",
                        "id": 28824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16977:9:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 28825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16988:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 28818,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "16935:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 28820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3435,
                      "src": "16935:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 28826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16935:58:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 28827,
                  "nodeType": "ExpressionStatement",
                  "src": "16935:58:66"
                }
              ]
            },
            "functionSelector": "a00ecff3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "marketOrderOK",
            "nameLocation": "16875:13:66",
            "parameters": {
              "id": 28816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28813,
                  "mutability": "mutable",
                  "name": "_base",
                  "nameLocation": "16897:5:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 28829,
                  "src": "16889:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28812,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16889:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28815,
                  "mutability": "mutable",
                  "name": "_quote",
                  "nameLocation": "16912:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 28829,
                  "src": "16904:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28814,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16904:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16888:31:66"
            },
            "returnParameters": {
              "id": 28817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16929:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28898,
            "nodeType": "FunctionDefinition",
            "src": "17002:461:66",
            "body": {
              "id": 28897,
              "nodeType": "Block",
              "src": "17060:403:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "302e35",
                        "id": 28835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17084:9:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      },
                      {
                        "hexValue": "302e35",
                        "id": 28836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17095:9:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      },
                      {
                        "hexValue": "33305f303030",
                        "id": 28837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17106:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30000_by_1",
                          "typeString": "int_const 30000"
                        },
                        "value": "30_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 28838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17114:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_30000_by_1",
                          "typeString": "int_const 30000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 28832,
                        "name": "dual_mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26314,
                        "src": "17066:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 28834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "17066:17:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 28839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17066:50:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 28840,
                  "nodeType": "ExpressionStatement",
                  "src": "17066:50:66"
                },
                {
                  "assignments": [28842],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28842,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "17127:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 28897,
                      "src": "17122:8:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28841,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "17122:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28857,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28846,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "17148:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28845,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "17146:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17146:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 28849,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "17157:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28848,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "17155:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17155:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 28851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17165:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 28852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17174:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3339325f303030",
                        "id": 28853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17183:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_392000_by_1",
                          "typeString": "int_const 392000"
                        },
                        "value": "392_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 28854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17192:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 28855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17195:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_392000_by_1",
                          "typeString": "int_const 392000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 28843,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "17133:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 28844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2244,
                      "src": "17133:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 28856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17133:64:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17122:75:66"
                },
                {
                  "expression": {
                    "id": 28871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28858,
                      "name": "trade_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27955,
                      "src": "17203:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 28861,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "17229:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 28862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "marketOrderOK",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28829,
                          "src": "17229:18:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address) external"
                          }
                        },
                        {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "id": 28864,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45881,
                                  "src": "17252:5:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 28863,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "17250:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 28865,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17250:8:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 28867,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45878,
                                  "src": "17262:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 28866,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "17260:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 28868,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17260:7:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "id": 28869,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "17249:19:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$",
                            "typeString": "tuple(address payable,address payable)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address) external"
                          },
                          {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$",
                            "typeString": "tuple(address payable,address payable)"
                          }
                        ],
                        "expression": {
                          "id": 28859,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "17214:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 28860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "17214:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 28870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17214:55:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "17203:66:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 28872,
                  "nodeType": "ExpressionStatement",
                  "src": "17203:66:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28876,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28842,
                            "src": "17295:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "302e31",
                            "id": 28877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17300:9:66",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            },
                            "value": "0.1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 28874,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26308,
                            "src": "17286:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 28875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49877,
                          "src": "17286:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 28878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17286:24:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 28879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17312:35:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 28873,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "17275:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 28880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17275:73:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28881,
                  "nodeType": "ExpressionStatement",
                  "src": "17275:73:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 28893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 28886,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45881,
                                  "src": "17383:5:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 28885,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "17381:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 28887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17381:8:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 28889,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45878,
                                  "src": "17393:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 28888,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "17391:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 28890,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17391:7:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 28883,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45875,
                              "src": "17372:3:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 28884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "best",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1444,
                            "src": "17372:8:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 28891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17372:27:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 28892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17403:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "17372:32:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "326e64206d61726b6574206f72646572206d757374206861766520656d7074696564206d6776",
                        "id": 28894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17412:40:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_156dbbef664de3f5a6b6e87ce6baa1da6653a3e795b155ea642549d3a8b5996c",
                          "typeString": "literal_string \"2nd market order must have emptied mgv\""
                        },
                        "value": "2nd market order must have emptied mgv"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_156dbbef664de3f5a6b6e87ce6baa1da6653a3e795b155ea642549d3a8b5996c",
                          "typeString": "literal_string \"2nd market order must have emptied mgv\""
                        }
                      ],
                      "id": 28882,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "17354:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 28895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17354:104:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28896,
                  "nodeType": "ExpressionStatement",
                  "src": "17354:104:66"
                }
              ]
            },
            "functionSelector": "0d53ca48",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_marketOrder_on_reentrancy_succeeds",
            "nameLocation": "17011:39:66",
            "parameters": {
              "id": 28830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17050:2:66"
            },
            "returnParameters": {
              "id": 28831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17060:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28974,
            "nodeType": "FunctionDefinition",
            "src": "17467:532:66",
            "body": {
              "id": 28973,
              "nodeType": "Block",
              "src": "17523:476:66",
              "statements": [
                {
                  "assignments": [28902],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28902,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "17534:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 28973,
                      "src": "17529:8:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28901,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "17529:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28917,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28906,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "17562:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28905,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "17560:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17560:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 28909,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "17577:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28908,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "17575:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17575:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "302e35",
                        "id": 28911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17591:9:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      },
                      {
                        "hexValue": "302e35",
                        "id": 28912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17608:9:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      },
                      {
                        "hexValue": "3530305f303030",
                        "id": 28913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17625:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000_by_1",
                          "typeString": "int_const 500000"
                        },
                        "value": "500_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 28914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17640:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 28915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17649:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_500000_by_1",
                          "typeString": "int_const 500000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 28903,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "17540:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 28904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2244,
                      "src": "17540:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 28916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17540:116:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17529:127:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28922,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "17677:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28921,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "17675:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17675:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 28925,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "17686:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 28924,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "17684:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 28926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17684:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "302e35",
                        "id": 28927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17694:9:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      },
                      {
                        "hexValue": "302e35",
                        "id": 28928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17705:9:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      },
                      {
                        "hexValue": "3230305f303030",
                        "id": 28929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17716:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000_by_1",
                          "typeString": "int_const 200000"
                        },
                        "value": "200_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 28930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17725:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 28931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17728:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_200000_by_1",
                          "typeString": "int_const 200000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 28918,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "17662:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 28920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2244,
                      "src": "17662:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 28932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17662:68:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 28933,
                  "nodeType": "ExpressionStatement",
                  "src": "17662:68:66"
                },
                {
                  "expression": {
                    "id": 28947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28934,
                      "name": "posthook_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27957,
                      "src": "17736:11:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 28937,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "17765:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 28938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "marketOrderOK",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28829,
                          "src": "17765:18:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address) external"
                          }
                        },
                        {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "id": 28940,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45878,
                                  "src": "17788:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 28939,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "17786:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 28941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17786:7:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 28943,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45881,
                                  "src": "17797:5:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 28942,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "17795:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 28944,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17795:8:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "id": 28945,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "17785:19:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$",
                            "typeString": "tuple(address payable,address payable)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address) external"
                          },
                          {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$",
                            "typeString": "tuple(address payable,address payable)"
                          }
                        ],
                        "expression": {
                          "id": 28935,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "17750:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 28936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "17750:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 28946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17750:55:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "17736:69:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 28948,
                  "nodeType": "ExpressionStatement",
                  "src": "17736:69:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28952,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28902,
                            "src": "17831:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "302e36",
                            "id": 28953,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17836:9:66",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_600000000000000000_by_1",
                              "typeString": "int_const 600000000000000000"
                            },
                            "value": "0.6"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_600000000000000000_by_1",
                              "typeString": "int_const 600000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 28950,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26308,
                            "src": "17822:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 28951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49877,
                          "src": "17822:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 28954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17822:24:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 28955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17848:35:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 28949,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "17811:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 28956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17811:73:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28957,
                  "nodeType": "ExpressionStatement",
                  "src": "17811:73:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 28969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 28962,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45878,
                                  "src": "17919:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 28961,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "17917:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 28963,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17917:7:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 28965,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45881,
                                  "src": "17928:5:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 28964,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "17926:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 28966,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17926:8:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 28959,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45875,
                              "src": "17908:3:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 28960,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "best",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1444,
                            "src": "17908:8:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 28967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17908:27:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 28968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17939:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "17908:32:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "326e64206d61726b6574206f72646572206d757374206861766520656d7074696564206d6776",
                        "id": 28970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17948:40:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_156dbbef664de3f5a6b6e87ce6baa1da6653a3e795b155ea642549d3a8b5996c",
                          "typeString": "literal_string \"2nd market order must have emptied mgv\""
                        },
                        "value": "2nd market order must have emptied mgv"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_156dbbef664de3f5a6b6e87ce6baa1da6653a3e795b155ea642549d3a8b5996c",
                          "typeString": "literal_string \"2nd market order must have emptied mgv\""
                        }
                      ],
                      "id": 28958,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "17890:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 28971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17890:104:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28972,
                  "nodeType": "ExpressionStatement",
                  "src": "17890:104:66"
                }
              ]
            },
            "functionSelector": "ee95ec25",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_marketOrder_on_posthook_succeeds",
            "nameLocation": "17476:37:66",
            "parameters": {
              "id": 28899,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17513:2:66"
            },
            "returnParameters": {
              "id": 28900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17523:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29022,
            "nodeType": "FunctionDefinition",
            "src": "18026:244:66",
            "body": {
              "id": 29021,
              "nodeType": "Block",
              "src": "18062:208:66",
              "statements": [
                {
                  "assignments": [28985],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28985,
                      "mutability": "mutable",
                      "name": "targets",
                      "nameLocation": "18085:7:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 29021,
                      "src": "18068:24:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[4][]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 28982,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "18068:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 28983,
                          "length": {
                            "hexValue": "34",
                            "id": 28981,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18073:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "18068:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                            "typeString": "uint256[4]"
                          }
                        },
                        "id": 28984,
                        "nodeType": "ArrayTypeName",
                        "src": "18068:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_storage_$dyn_storage_ptr",
                          "typeString": "uint256[4][]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29001,
                  "initialValue": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "id": 28987,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28976,
                            "src": "18116:2:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 28988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18120:7:66",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 28991,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "18134:6:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint96_$",
                                    "typeString": "type(uint96)"
                                  },
                                  "typeName": {
                                    "id": 28990,
                                    "name": "uint96",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "18134:6:66",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint96_$",
                                    "typeString": "type(uint96)"
                                  }
                                ],
                                "id": 28989,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "18129:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 28992,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18129:12:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint96",
                                "typeString": "type(uint96)"
                              }
                            },
                            "id": 28993,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "18129:16:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 28996,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "18152:6:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint48_$",
                                    "typeString": "type(uint48)"
                                  },
                                  "typeName": {
                                    "id": 28995,
                                    "name": "uint48",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "18152:6:66",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint48_$",
                                    "typeString": "type(uint48)"
                                  }
                                ],
                                "id": 28994,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "18147:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 28997,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18147:12:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint48",
                                "typeString": "type(uint48)"
                              }
                            },
                            "id": 28998,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "18147:16:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          }
                        ],
                        "id": 28999,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "18115:49:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                          "typeString": "uint256[4] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                          "typeString": "uint256[4] memory"
                        }
                      ],
                      "id": 28986,
                      "name": "wrap_dynamic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        47757, 47793, 47829, 47865, 47901
                      ],
                      "referencedDeclaration": 47901,
                      "src": "18095:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                      }
                    },
                    "id": 29000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18095:75:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                      "typeString": "uint256[4] memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18068:102:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f7265656e7472616e63794c6f636b6564",
                        "id": 29005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18192:22:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f51ac5dce6f4410e3dc3921c53ae317c63cfe42884b73974c612571772034076",
                          "typeString": "literal_string \"mgv/reentrancyLocked\""
                        },
                        "value": "mgv/reentrancyLocked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f51ac5dce6f4410e3dc3921c53ae317c63cfe42884b73974c612571772034076",
                          "typeString": "literal_string \"mgv/reentrancyLocked\""
                        }
                      ],
                      "expression": {
                        "id": 29002,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "18176:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 29004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "18176:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 29006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18176:39:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29007,
                  "nodeType": "ExpressionStatement",
                  "src": "18176:39:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29012,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "18234:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29011,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "18232:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18232:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29015,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "18243:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29014,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "18241:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18241:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 29017,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28985,
                        "src": "18251:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 29018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18260:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 29008,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "18221:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 29010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "18221:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 29019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18221:44:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 29020,
                  "nodeType": "ExpressionStatement",
                  "src": "18221:44:66"
                }
              ]
            },
            "functionSelector": "3ab07a10",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "snipesKO",
            "nameLocation": "18035:8:66",
            "parameters": {
              "id": 28977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28976,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "18049:2:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 29022,
                  "src": "18044:7:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28975,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "18044:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18043:9:66"
            },
            "returnParameters": {
              "id": 28978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18062:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29062,
            "nodeType": "FunctionDefinition",
            "src": "18274:266:66",
            "body": {
              "id": 29061,
              "nodeType": "Block",
              "src": "18323:217:66",
              "statements": [
                {
                  "assignments": [29026],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29026,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "18334:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 29061,
                      "src": "18329:8:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 29025,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "18329:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29041,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29030,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "18355:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29029,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "18353:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18353:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29033,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "18364:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29032,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "18362:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18362:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 29035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18372:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 29036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18381:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "36305f303030",
                        "id": 29037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18390:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60000_by_1",
                          "typeString": "int_const 60000"
                        },
                        "value": "60_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 29038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18398:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 29039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18401:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_60000_by_1",
                          "typeString": "int_const 60000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 29027,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "18340:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 29028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2244,
                      "src": "18340:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 29040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18340:63:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18329:74:66"
                },
                {
                  "expression": {
                    "id": 29050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29042,
                      "name": "trade_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27955,
                      "src": "18409:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 29045,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "18435:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 29046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "snipesKO",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29022,
                          "src": "18435:13:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 29047,
                              "name": "ofr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29026,
                              "src": "18451:3:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 29048,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "18450:5:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 29043,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "18420:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 29044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "18420:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 29049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18420:36:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "18409:47:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 29051,
                  "nodeType": "ExpressionStatement",
                  "src": "18409:47:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29055,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29026,
                            "src": "18482:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "302e31",
                            "id": 29056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18487:9:66",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            },
                            "value": "0.1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 29053,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26308,
                            "src": "18473:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 29054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49877,
                          "src": "18473:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 29057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18473:24:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 29058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18499:35:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 29052,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "18462:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 29059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18462:73:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29060,
                  "nodeType": "ExpressionStatement",
                  "src": "18462:73:66"
                }
              ]
            },
            "functionSelector": "31e61c37",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_on_reentrancy_fails",
            "nameLocation": "18283:30:66",
            "parameters": {
              "id": 29023,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18313:2:66"
            },
            "returnParameters": {
              "id": 29024,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18323:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29104,
            "nodeType": "FunctionDefinition",
            "src": "18567:242:66",
            "body": {
              "id": 29103,
              "nodeType": "Block",
              "src": "18650:159:66",
              "statements": [
                {
                  "assignments": [29077],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29077,
                      "mutability": "mutable",
                      "name": "targets",
                      "nameLocation": "18673:7:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 29103,
                      "src": "18656:24:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[4][]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 29074,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "18656:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 29075,
                          "length": {
                            "hexValue": "34",
                            "id": 29073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18661:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "18656:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
                            "typeString": "uint256[4]"
                          }
                        },
                        "id": 29076,
                        "nodeType": "ArrayTypeName",
                        "src": "18656:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_storage_$dyn_storage_ptr",
                          "typeString": "uint256[4][]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29093,
                  "initialValue": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "id": 29079,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29068,
                            "src": "18704:2:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 29080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18708:7:66",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 29083,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "18722:6:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint96_$",
                                    "typeString": "type(uint96)"
                                  },
                                  "typeName": {
                                    "id": 29082,
                                    "name": "uint96",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "18722:6:66",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint96_$",
                                    "typeString": "type(uint96)"
                                  }
                                ],
                                "id": 29081,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "18717:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 29084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18717:12:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint96",
                                "typeString": "type(uint96)"
                              }
                            },
                            "id": 29085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "18717:16:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 29088,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "18740:6:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint48_$",
                                    "typeString": "type(uint48)"
                                  },
                                  "typeName": {
                                    "id": 29087,
                                    "name": "uint48",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "18740:6:66",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint48_$",
                                    "typeString": "type(uint48)"
                                  }
                                ],
                                "id": 29086,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "18735:4:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 29089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18735:12:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint48",
                                "typeString": "type(uint48)"
                              }
                            },
                            "id": 29090,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "18735:16:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint48",
                              "typeString": "uint48"
                            }
                          }
                        ],
                        "id": 29091,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "18703:49:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                          "typeString": "uint256[4] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
                          "typeString": "uint256[4] memory"
                        }
                      ],
                      "id": 29078,
                      "name": "wrap_dynamic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        47757, 47793, 47829, 47865, 47901
                      ],
                      "referencedDeclaration": 47901,
                      "src": "18683:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$4_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256[4] memory) pure returns (uint256[4] memory[] memory)"
                      }
                    },
                    "id": 29092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18683:75:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                      "typeString": "uint256[4] memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18656:102:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29097,
                        "name": "_base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29064,
                        "src": "18775:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 29098,
                        "name": "_quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29066,
                        "src": "18782:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 29099,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29077,
                        "src": "18790:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 29100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18799:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[4] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 29094,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "18764:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 29096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "snipes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3932,
                      "src": "18764:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_array$_t_uint256_$4_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256[4] memory[] memory,bool) external returns (uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 29101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18764:40:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "id": 29102,
                  "nodeType": "ExpressionStatement",
                  "src": "18764:40:66"
                }
              ]
            },
            "functionSelector": "d419469d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "snipesOK",
            "nameLocation": "18576:8:66",
            "parameters": {
              "id": 29069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29064,
                  "mutability": "mutable",
                  "name": "_base",
                  "nameLocation": "18598:5:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 29104,
                  "src": "18590:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29063,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18590:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29066,
                  "mutability": "mutable",
                  "name": "_quote",
                  "nameLocation": "18617:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 29104,
                  "src": "18609:14:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29065,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18609:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29068,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "18634:2:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 29104,
                  "src": "18629:7:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29067,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "18629:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18584:56:66"
            },
            "returnParameters": {
              "id": 29070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18650:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29175,
            "nodeType": "FunctionDefinition",
            "src": "18813:469:66",
            "body": {
              "id": 29174,
              "nodeType": "Block",
              "src": "18866:416:66",
              "statements": [
                {
                  "assignments": [29108],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29108,
                      "mutability": "mutable",
                      "name": "other_ofr",
                      "nameLocation": "18877:9:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 29174,
                      "src": "18872:14:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 29107,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "18872:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29116,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 29111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18907:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 29112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18916:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "33305f303030",
                        "id": 29113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18925:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30000_by_1",
                          "typeString": "int_const 30000"
                        },
                        "value": "30_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 29114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18933:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_30000_by_1",
                          "typeString": "int_const 30000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 29109,
                        "name": "dual_mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26314,
                        "src": "18889:8:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 29110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "18889:17:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 29115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18889:46:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18872:63:66"
                },
                {
                  "expression": {
                    "id": 29131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29117,
                      "name": "trade_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27955,
                      "src": "18941:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 29120,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "18967:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 29121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "snipesOK",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29104,
                          "src": "18967:13:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256) external"
                          }
                        },
                        {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "id": 29123,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45881,
                                  "src": "18985:5:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 29122,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "18983:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 29124,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18983:8:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 29126,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45878,
                                  "src": "18995:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 29125,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "18993:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 29127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18993:7:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 29128,
                              "name": "other_ofr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29108,
                              "src": "19002:9:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 29129,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "18982:30:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_uint256_$",
                            "typeString": "tuple(address payable,address payable,uint256)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256) external"
                          },
                          {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_uint256_$",
                            "typeString": "tuple(address payable,address payable,uint256)"
                          }
                        ],
                        "expression": {
                          "id": 29118,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "18952:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 29119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "18952:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 29130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18952:61:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "18941:72:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 29132,
                  "nodeType": "ExpressionStatement",
                  "src": "18941:72:66"
                },
                {
                  "assignments": [29134],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29134,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "19025:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 29174,
                      "src": "19020:8:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 29133,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19020:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29149,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29138,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "19046:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29137,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "19044:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19044:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29141,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "19055:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29140,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "19053:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19053:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 29143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19063:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 29144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19072:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3139305f303030",
                        "id": 29145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19081:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_190000_by_1",
                          "typeString": "int_const 190000"
                        },
                        "value": "190_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 29146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19090:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 29147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19093:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_190000_by_1",
                          "typeString": "int_const 190000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 29135,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "19031:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 29136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2244,
                      "src": "19031:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 29148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19031:64:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19020:75:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29153,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29134,
                            "src": "19121:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "302e31",
                            "id": 29154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19126:9:66",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            },
                            "value": "0.1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 29151,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26308,
                            "src": "19112:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 29152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49877,
                          "src": "19112:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 29155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19112:24:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 29156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19138:35:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 29150,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "19101:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 29157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19101:73:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29158,
                  "nodeType": "ExpressionStatement",
                  "src": "19101:73:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 29170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 29163,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45881,
                                  "src": "19209:5:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 29162,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "19207:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 29164,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19207:8:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 29166,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45878,
                                  "src": "19219:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 29165,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "19217:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 29167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19217:7:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 29160,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45875,
                              "src": "19198:3:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 29161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "best",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1444,
                            "src": "19198:8:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 29168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19198:27:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 29169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19229:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "19198:32:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "736e69706520696e20737761707065642070616972206d75737420776f726b",
                        "id": 29171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19238:33:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25c81ae1389f9d8ae109170126926edd2525c6ae8fad34a6c498b4bb43051e06",
                          "typeString": "literal_string \"snipe in swapped pair must work\""
                        },
                        "value": "snipe in swapped pair must work"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25c81ae1389f9d8ae109170126926edd2525c6ae8fad34a6c498b4bb43051e06",
                          "typeString": "literal_string \"snipe in swapped pair must work\""
                        }
                      ],
                      "id": 29159,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "19180:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 29172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19180:97:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29173,
                  "nodeType": "ExpressionStatement",
                  "src": "19180:97:66"
                }
              ]
            },
            "functionSelector": "aab4a415",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipes_on_reentrancy_succeeds",
            "nameLocation": "18822:34:66",
            "parameters": {
              "id": 29105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18856:2:66"
            },
            "returnParameters": {
              "id": 29106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18866:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29246,
            "nodeType": "FunctionDefinition",
            "src": "19286:441:66",
            "body": {
              "id": 29245,
              "nodeType": "Block",
              "src": "19337:390:66",
              "statements": [
                {
                  "assignments": [29179],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29179,
                      "mutability": "mutable",
                      "name": "other_ofr",
                      "nameLocation": "19348:9:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 29245,
                      "src": "19343:14:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 29178,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19343:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29187,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 29182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19373:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 29183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19382:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "33305f303030",
                        "id": 29184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19391:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30000_by_1",
                          "typeString": "int_const 30000"
                        },
                        "value": "30_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 29185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19399:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_30000_by_1",
                          "typeString": "int_const 30000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 29180,
                        "name": "mkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26311,
                        "src": "19360:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMaker_$49499",
                          "typeString": "contract TestMaker"
                        }
                      },
                      "id": 29181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49210,
                      "src": "19360:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 29186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19360:41:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19343:58:66"
                },
                {
                  "expression": {
                    "id": 29202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29188,
                      "name": "posthook_cb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27957,
                      "src": "19407:11:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 29191,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "19436:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GatekeepingTest_$29695",
                              "typeString": "contract GatekeepingTest"
                            }
                          },
                          "id": 29192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "snipesOK",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29104,
                          "src": "19436:13:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256) external"
                          }
                        },
                        {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "id": 29194,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45878,
                                  "src": "19454:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 29193,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "19452:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 29195,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19452:7:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 29197,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45881,
                                  "src": "19463:5:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 29196,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "19461:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 29198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19461:8:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 29199,
                              "name": "other_ofr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29179,
                              "src": "19471:9:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 29200,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "19451:30:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_uint256_$",
                            "typeString": "tuple(address payable,address payable,uint256)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256) external"
                          },
                          {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_uint256_$",
                            "typeString": "tuple(address payable,address payable,uint256)"
                          }
                        ],
                        "expression": {
                          "id": 29189,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "19421:3:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 29190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodeCall",
                        "nodeType": "MemberAccess",
                        "src": "19421:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 29201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19421:61:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "19407:75:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 29203,
                  "nodeType": "ExpressionStatement",
                  "src": "19407:75:66"
                },
                {
                  "assignments": [29205],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29205,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "19494:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 29245,
                      "src": "19489:8:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 29204,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19489:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29220,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29209,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "19515:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29208,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "19513:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19513:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29212,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "19524:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29211,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "19522:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19522:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 29214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19532:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 29215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19541:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3139305f303030",
                        "id": 29216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19550:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_190000_by_1",
                          "typeString": "int_const 190000"
                        },
                        "value": "190_000"
                      },
                      {
                        "hexValue": "30",
                        "id": 29217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19559:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 29218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19562:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_190000_by_1",
                          "typeString": "int_const 190000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 29206,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "19500:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 29207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2244,
                      "src": "19500:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 29219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19500:64:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19489:75:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29224,
                            "name": "ofr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29205,
                            "src": "19590:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 29225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19595:7:66",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          ],
                          "expression": {
                            "id": 29222,
                            "name": "tkr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26308,
                            "src": "19581:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestTaker_$50091",
                              "typeString": "contract TestTaker"
                            }
                          },
                          "id": 29223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "take",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49877,
                          "src": "19581:8:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 29226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19581:22:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74616b65206d7573742073756363656564206f72207465737420697320766f6964",
                        "id": 29227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19605:35:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        },
                        "value": "take must succeed or test is void"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc5d29e03f81805c354d07c03709b679d49a05d12b3184ea46e43dacd78d5063",
                          "typeString": "literal_string \"take must succeed or test is void\""
                        }
                      ],
                      "id": 29221,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "19570:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 29228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19570:71:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29229,
                  "nodeType": "ExpressionStatement",
                  "src": "19570:71:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 29241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 29234,
                                  "name": "base",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45878,
                                  "src": "19669:4:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 29233,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "19667:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 29235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19667:7:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 29237,
                                  "name": "quote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45881,
                                  "src": "19678:5:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TestToken_$52050",
                                    "typeString": "contract TestToken"
                                  }
                                ],
                                "id": 29236,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  46990, 47007, 47024, 47041, 47058
                                ],
                                "referencedDeclaration": 47058,
                                "src": "19676:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                                  "typeString": "function (contract IERC20) pure returns (address payable)"
                                }
                              },
                              "id": 29238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19676:8:66",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 29231,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45875,
                              "src": "19658:3:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                "typeString": "contract AbstractMangrove"
                              }
                            },
                            "id": 29232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "best",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1444,
                            "src": "19658:8:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 29239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19658:27:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 29240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19689:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "19658:32:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "736e69706520696e20706f7374686f6f6b206d75737420776f726b",
                        "id": 29242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19692:29:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62616704a24da817f2b0eb8004da39b00cc8c9d54b6aa443eb82584ca986ba88",
                          "typeString": "literal_string \"snipe in posthook must work\""
                        },
                        "value": "snipe in posthook must work"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62616704a24da817f2b0eb8004da39b00cc8c9d54b6aa443eb82584ca986ba88",
                          "typeString": "literal_string \"snipe in posthook must work\""
                        }
                      ],
                      "id": 29230,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [59227, 59248],
                      "referencedDeclaration": 59248,
                      "src": "19647:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 29243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19647:75:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29244,
                  "nodeType": "ExpressionStatement",
                  "src": "19647:75:66"
                }
              ]
            },
            "functionSelector": "370219f5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipes_on_posthook_succeeds",
            "nameLocation": "19295:32:66",
            "parameters": {
              "id": 29176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19327:2:66"
            },
            "returnParameters": {
              "id": 29177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19337:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29277,
            "nodeType": "FunctionDefinition",
            "src": "19731:166:66",
            "body": {
              "id": 29276,
              "nodeType": "Block",
              "src": "19779:118:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 29249,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "19785:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 29251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "kill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1214,
                      "src": "19785:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 29252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19785:10:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29253,
                  "nodeType": "ExpressionStatement",
                  "src": "19785:10:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f64656164",
                        "id": 29257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19817:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f664972d47bf4660e8f7938011fdf1a13b3304d98c44c5767f66242d50a78a20",
                          "typeString": "literal_string \"mgv/dead\""
                        },
                        "value": "mgv/dead"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f664972d47bf4660e8f7938011fdf1a13b3304d98c44c5767f66242d50a78a20",
                          "typeString": "literal_string \"mgv/dead\""
                        }
                      ],
                      "expression": {
                        "id": 29254,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "19801:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 29256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "19801:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 29258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19801:27:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29259,
                  "nodeType": "ExpressionStatement",
                  "src": "19801:27:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29264,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "19849:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29263,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "19847:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19847:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29267,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "19858:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29266,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "19856:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19856:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 29269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19866:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 29270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19875:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 29271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19884:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 29272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19887:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 29273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19890:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 29260,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "19834:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 29262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2244,
                      "src": "19834:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 29274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19834:58:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 29275,
                  "nodeType": "ExpressionStatement",
                  "src": "19834:58:66"
                }
              ]
            },
            "functionSelector": "fef6c457",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_newOffer_on_closed_fails",
            "nameLocation": "19740:29:66",
            "parameters": {
              "id": 29247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19769:2:66"
            },
            "returnParameters": {
              "id": 29248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19779:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29316,
            "nodeType": "FunctionDefinition",
            "src": "19937:202:66",
            "body": {
              "id": 29315,
              "nodeType": "Block",
              "src": "19981:158:66",
              "statements": [
                {
                  "assignments": [29281],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29281,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "19992:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 29315,
                      "src": "19987:8:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 29280,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "19987:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29296,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29285,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "20013:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29284,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "20011:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20011:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29288,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "20022:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29287,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "20020:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20020:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 29290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20030:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 29291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20039:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 29292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20048:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 29293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20051:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 29294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20054:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 29282,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "19998:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 29283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2244,
                      "src": "19998:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 29295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19998:58:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19987:69:66"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 29297,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "20063:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 29299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "kill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1214,
                      "src": "20063:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 29300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20063:10:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29301,
                  "nodeType": "ExpressionStatement",
                  "src": "20063:10:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f64656164",
                        "id": 29305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20095:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f664972d47bf4660e8f7938011fdf1a13b3304d98c44c5767f66242d50a78a20",
                          "typeString": "literal_string \"mgv/dead\""
                        },
                        "value": "mgv/dead"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f664972d47bf4660e8f7938011fdf1a13b3304d98c44c5767f66242d50a78a20",
                          "typeString": "literal_string \"mgv/dead\""
                        }
                      ],
                      "expression": {
                        "id": 29302,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "20079:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 29304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "20079:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 29306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20079:27:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29307,
                  "nodeType": "ExpressionStatement",
                  "src": "20079:27:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29311,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29281,
                        "src": "20121:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 29312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20126:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 29308,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26308,
                        "src": "20112:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$50091",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 29310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "take",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49877,
                      "src": "20112:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256) external returns (bool)"
                      }
                    },
                    "id": 29313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20112:22:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29314,
                  "nodeType": "ExpressionStatement",
                  "src": "20112:22:66"
                }
              ]
            },
            "functionSelector": "a7a05296",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_take_on_closed_fails",
            "nameLocation": "19946:25:66",
            "parameters": {
              "id": 29278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19971:2:66"
            },
            "returnParameters": {
              "id": 29279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19981:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29353,
            "nodeType": "FunctionDefinition",
            "src": "20143:195:66",
            "body": {
              "id": 29352,
              "nodeType": "Block",
              "src": "20193:145:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29323,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "20216:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29322,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "20214:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20214:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29326,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "20225:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29325,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "20223:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20223:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 29319,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "20199:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 29321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deactivate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1067,
                      "src": "20199:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 29328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20199:33:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29329,
                  "nodeType": "ExpressionStatement",
                  "src": "20199:33:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f696e616374697665",
                        "id": 29333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20254:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8e75efbf6c06a8c9dc4f72bce98028cfcfc8f73165350bb0806b98842327af5",
                          "typeString": "literal_string \"mgv/inactive\""
                        },
                        "value": "mgv/inactive"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f8e75efbf6c06a8c9dc4f72bce98028cfcfc8f73165350bb0806b98842327af5",
                          "typeString": "literal_string \"mgv/inactive\""
                        }
                      ],
                      "expression": {
                        "id": 29330,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "20238:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 29332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "20238:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 29334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20238:31:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29335,
                  "nodeType": "ExpressionStatement",
                  "src": "20238:31:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29340,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "20290:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29339,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "20288:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20288:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29343,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "20299:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29342,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "20297:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20297:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 29345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20307:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 29346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20316:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 29347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20325:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 29348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20328:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 29349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20331:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 29336,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "20275:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 29338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2244,
                      "src": "20275:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 29350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20275:58:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 29351,
                  "nodeType": "ExpressionStatement",
                  "src": "20275:58:66"
                }
              ]
            },
            "functionSelector": "4ba9b07f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_newOffer_on_inactive_fails",
            "nameLocation": "20152:31:66",
            "parameters": {
              "id": 29317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20183:2:66"
            },
            "returnParameters": {
              "id": 29318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20193:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29394,
            "nodeType": "FunctionDefinition",
            "src": "20342:313:66",
            "body": {
              "id": 29393,
              "nodeType": "Block",
              "src": "20389:266:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 29356,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "20395:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 29358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "kill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1214,
                      "src": "20395:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 29359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20395:10:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29360,
                  "nodeType": "ExpressionStatement",
                  "src": "20395:10:66"
                },
                {
                  "assignments": [29362, 29364],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29362,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "20418:7:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 29393,
                      "src": "20413:12:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 29361,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "20413:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 29364,
                      "mutability": "mutable",
                      "name": "retdata",
                      "nameLocation": "20440:7:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 29393,
                      "src": "20427:20:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 29363,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "20427:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29373,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 29371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20480:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 29366,
                              "name": "mgv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45875,
                              "src": "20453:3:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                "typeString": "contract AbstractMangrove"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                                "typeString": "contract AbstractMangrove"
                              }
                            ],
                            "id": 29365,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              46990, 47007, 47024, 47041, 47058
                            ],
                            "referencedDeclaration": 46990,
                            "src": "20451:1:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                              "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                            }
                          },
                          "id": 29367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20451:6:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 29368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "20451:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 29370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3130",
                          "id": 29369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20470:8:66",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        }
                      ],
                      "src": "20451:28:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 29372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20451:32:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20412:71:66"
                },
                {
                  "condition": {
                    "id": 29374,
                    "name": "success",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29362,
                    "src": "20493:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 29391,
                    "nodeType": "Block",
                    "src": "20569:82:66",
                    "statements": [
                      {
                        "assignments": [29381],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 29381,
                            "mutability": "mutable",
                            "name": "r",
                            "nameLocation": "20591:1:66",
                            "nodeType": "VariableDeclaration",
                            "scope": 29391,
                            "src": "20577:15:66",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 29380,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "20577:6:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 29385,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 29383,
                              "name": "retdata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29364,
                              "src": "20605:7:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 29382,
                            "name": "getReason",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47729,
                            "src": "20595:9:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                              "typeString": "function (bytes memory) pure returns (string memory)"
                            }
                          },
                          "id": 29384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20595:18:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20577:36:66"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 29387,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29381,
                              "src": "20630:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "6d67762f64656164",
                              "id": 29388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20633:10:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f664972d47bf4660e8f7938011fdf1a13b3304d98c44c5767f66242d50a78a20",
                                "typeString": "literal_string \"mgv/dead\""
                              },
                              "value": "mgv/dead"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f664972d47bf4660e8f7938011fdf1a13b3304d98c44c5767f66242d50a78a20",
                                "typeString": "literal_string \"mgv/dead\""
                              }
                            ],
                            "id": 29386,
                            "name": "revertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47238,
                            "src": "20621:8:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (string memory,string memory) returns (bool)"
                            }
                          },
                          "id": 29389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20621:23:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 29390,
                        "nodeType": "ExpressionStatement",
                        "src": "20621:23:66"
                      }
                    ]
                  },
                  "id": 29392,
                  "nodeType": "IfStatement",
                  "src": "20489:162:66",
                  "trueBody": {
                    "id": 29379,
                    "nodeType": "Block",
                    "src": "20502:61:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "7265636569766528292073686f756c64206661696c206f6e20636c6f736564206d61726b6574",
                              "id": 29376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20515:40:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_54ac8aa66e254aad25382afbad7c1a35eb483d650cd8634986eceeca7ea40688",
                                "typeString": "literal_string \"receive() should fail on closed market\""
                              },
                              "value": "receive() should fail on closed market"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_54ac8aa66e254aad25382afbad7c1a35eb483d650cd8634986eceeca7ea40688",
                                "typeString": "literal_string \"receive() should fail on closed market\""
                              }
                            ],
                            "id": 29375,
                            "name": "fail",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [61358, 59174],
                            "referencedDeclaration": 61358,
                            "src": "20510:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 29377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20510:46:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 29378,
                        "nodeType": "ExpressionStatement",
                        "src": "20510:46:66"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "b15c9128",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_receive_on_closed_fails",
            "nameLocation": "20351:28:66",
            "parameters": {
              "id": 29354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20379:2:66"
            },
            "returnParameters": {
              "id": 29355,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20389:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29416,
            "nodeType": "FunctionDefinition",
            "src": "20659:144:66",
            "body": {
              "id": 29415,
              "nodeType": "Block",
              "src": "20710:93:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 29397,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "20716:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 29399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "kill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1214,
                      "src": "20716:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 29400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20716:10:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29401,
                  "nodeType": "ExpressionStatement",
                  "src": "20716:10:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f64656164",
                        "id": 29405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20748:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f664972d47bf4660e8f7938011fdf1a13b3304d98c44c5767f66242d50a78a20",
                          "typeString": "literal_string \"mgv/dead\""
                        },
                        "value": "mgv/dead"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f664972d47bf4660e8f7938011fdf1a13b3304d98c44c5767f66242d50a78a20",
                          "typeString": "literal_string \"mgv/dead\""
                        }
                      ],
                      "expression": {
                        "id": 29402,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "20732:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 29404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "20732:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 29406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20732:27:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29407,
                  "nodeType": "ExpressionStatement",
                  "src": "20732:27:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 29411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20781:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 29412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20790:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 29408,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26308,
                        "src": "20765:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$50091",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 29410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "marketOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50033,
                      "src": "20765:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (uint256,uint256)"
                      }
                    },
                    "id": 29413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20765:33:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 29414,
                  "nodeType": "ExpressionStatement",
                  "src": "20765:33:66"
                }
              ]
            },
            "functionSelector": "d7657ec4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_marketOrder_on_closed_fails",
            "nameLocation": "20668:32:66",
            "parameters": {
              "id": 29395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20700:2:66"
            },
            "returnParameters": {
              "id": 29396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20710:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29438,
            "nodeType": "FunctionDefinition",
            "src": "20807:125:66",
            "body": {
              "id": 29437,
              "nodeType": "Block",
              "src": "20852:80:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 29419,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "20858:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 29421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "kill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1214,
                      "src": "20858:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 29422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20858:10:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29423,
                  "nodeType": "ExpressionStatement",
                  "src": "20858:10:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f64656164",
                        "id": 29427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20890:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f664972d47bf4660e8f7938011fdf1a13b3304d98c44c5767f66242d50a78a20",
                          "typeString": "literal_string \"mgv/dead\""
                        },
                        "value": "mgv/dead"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f664972d47bf4660e8f7938011fdf1a13b3304d98c44c5767f66242d50a78a20",
                          "typeString": "literal_string \"mgv/dead\""
                        }
                      ],
                      "expression": {
                        "id": 29424,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "20874:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 29426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "20874:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 29428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20874:27:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29429,
                  "nodeType": "ExpressionStatement",
                  "src": "20874:27:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 29433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20916:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "31",
                        "id": 29434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20919:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 29430,
                        "name": "tkr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26308,
                        "src": "20907:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestTaker_$50091",
                          "typeString": "contract TestTaker"
                        }
                      },
                      "id": 29432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "take",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49877,
                      "src": "20907:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256) external returns (bool)"
                      }
                    },
                    "id": 29435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20907:20:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29436,
                  "nodeType": "ExpressionStatement",
                  "src": "20907:20:66"
                }
              ]
            },
            "functionSelector": "78db63bb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_snipe_on_closed_fails",
            "nameLocation": "20816:26:66",
            "parameters": {
              "id": 29417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20842:2:66"
            },
            "returnParameters": {
              "id": 29418,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20852:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29453,
            "nodeType": "FunctionDefinition",
            "src": "20936:95:66",
            "body": {
              "id": 29452,
              "nodeType": "Block",
              "src": "20981:50:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 29441,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "20987:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 29443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "kill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1214,
                      "src": "20987:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 29444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20987:10:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29445,
                  "nodeType": "ExpressionStatement",
                  "src": "20987:10:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "302e31",
                        "id": 29449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21016:9:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 29446,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "21003:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 29448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2632,
                      "src": "21003:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) external returns (bool)"
                      }
                    },
                    "id": 29450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21003:23:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29451,
                  "nodeType": "ExpressionStatement",
                  "src": "21003:23:66"
                }
              ]
            },
            "functionSelector": "1a711c7a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_withdraw_on_closed_ok",
            "nameLocation": "20945:26:66",
            "parameters": {
              "id": 29439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20971:2:66"
            },
            "returnParameters": {
              "id": 29440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20981:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29492,
            "nodeType": "FunctionDefinition",
            "src": "21035:198:66",
            "body": {
              "id": 29491,
              "nodeType": "Block",
              "src": "21084:149:66",
              "statements": [
                {
                  "assignments": [29457],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29457,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "21095:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 29491,
                      "src": "21090:8:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 29456,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "21090:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29472,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29461,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "21116:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29460,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "21114:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21114:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29464,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "21125:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29463,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "21123:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21123:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 29466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21133:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 29467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21142:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 29468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21151:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 29469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21154:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 29470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21157:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 29458,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "21101:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 29459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2244,
                      "src": "21101:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 29471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21101:58:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21090:69:66"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 29473,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "21165:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 29475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "kill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1214,
                      "src": "21165:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 29476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21165:10:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29477,
                  "nodeType": "ExpressionStatement",
                  "src": "21165:10:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29482,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "21200:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29481,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "21198:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21198:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29485,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "21209:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29484,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "21207:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21207:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 29487,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29457,
                        "src": "21217:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 29488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21222:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 29478,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "21181:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 29480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "retractOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2552,
                      "src": "21181:16:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,bool) external returns (uint256)"
                      }
                    },
                    "id": 29489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21181:47:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 29490,
                  "nodeType": "ExpressionStatement",
                  "src": "21181:47:66"
                }
              ]
            },
            "functionSelector": "bcdb17b6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_retractOffer_on_closed_ok",
            "nameLocation": "21044:30:66",
            "parameters": {
              "id": 29454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21074:2:66"
            },
            "returnParameters": {
              "id": 29455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21084:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29541,
            "nodeType": "FunctionDefinition",
            "src": "21237:252:66",
            "body": {
              "id": 29540,
              "nodeType": "Block",
              "src": "21288:201:66",
              "statements": [
                {
                  "assignments": [29496],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29496,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "21299:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 29540,
                      "src": "21294:8:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 29495,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "21294:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29511,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29500,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "21320:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29499,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "21318:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21318:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29503,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "21329:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29502,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "21327:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21327:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 29505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21337:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 29506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21346:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 29507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21355:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 29508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21358:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 29509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21361:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 29497,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "21305:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 29498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2244,
                      "src": "21305:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 29510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21305:58:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21294:69:66"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 29512,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "21369:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 29514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "kill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1214,
                      "src": "21369:8:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 29515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21369:10:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29516,
                  "nodeType": "ExpressionStatement",
                  "src": "21369:10:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f64656164",
                        "id": 29520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21401:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f664972d47bf4660e8f7938011fdf1a13b3304d98c44c5767f66242d50a78a20",
                          "typeString": "literal_string \"mgv/dead\""
                        },
                        "value": "mgv/dead"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f664972d47bf4660e8f7938011fdf1a13b3304d98c44c5767f66242d50a78a20",
                          "typeString": "literal_string \"mgv/dead\""
                        }
                      ],
                      "expression": {
                        "id": 29517,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "21385:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 29519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "21385:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 29521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21385:27:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29522,
                  "nodeType": "ExpressionStatement",
                  "src": "21385:27:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29527,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "21436:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29526,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "21434:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21434:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29530,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "21445:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29529,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "21443:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21443:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 29532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21453:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 29533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21462:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 29534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21471:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 29535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21474:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 29536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21477:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 29537,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29496,
                        "src": "21480:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 29523,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "21418:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 29525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2399,
                      "src": "21418:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256,uint256) payable external"
                      }
                    },
                    "id": 29538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21418:66:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29539,
                  "nodeType": "ExpressionStatement",
                  "src": "21418:66:66"
                }
              ]
            },
            "functionSelector": "ec278bef",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_updateOffer_on_closed_fails",
            "nameLocation": "21246:32:66",
            "parameters": {
              "id": 29493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21278:2:66"
            },
            "returnParameters": {
              "id": 29494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21288:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29623,
            "nodeType": "FunctionDefinition",
            "src": "21493:373:66",
            "body": {
              "id": 29622,
              "nodeType": "Block",
              "src": "21549:317:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29546,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "21568:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 29545,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "21566:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 29547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21566:6:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 29544,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "21555:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 29548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21555:18:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29549,
                  "nodeType": "ExpressionStatement",
                  "src": "21555:18:66"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29552,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "21596:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29551,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "21594:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21594:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29555,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "21606:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29554,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "21604:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21604:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 29557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21613:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 29550,
                      "name": "SetActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1761,
                      "src": "21584:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 29558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21584:34:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29559,
                  "nodeType": "EmitStatement",
                  "src": "21579:39:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29562,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "21637:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 29561,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "21635:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 29563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21635:6:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 29560,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "21624:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 29564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21624:18:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29565,
                  "nodeType": "ExpressionStatement",
                  "src": "21624:18:66"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29568,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "21662:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29567,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "21660:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21660:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29571,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "21672:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29570,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "21670:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21670:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "37",
                        "id": 29573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21679:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        },
                        "value": "7"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        }
                      ],
                      "id": 29566,
                      "name": "SetFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1769,
                      "src": "21653:6:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 29574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21653:28:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29575,
                  "nodeType": "EmitStatement",
                  "src": "21648:33:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29578,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "21700:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 29577,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "21698:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 29579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21698:6:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 29576,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "21687:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 29580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21687:18:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29581,
                  "nodeType": "ExpressionStatement",
                  "src": "21687:18:66"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29584,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "21729:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29583,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "21727:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21727:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29587,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "21739:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29586,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "21737:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21737:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 29589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21746:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 29582,
                      "name": "SetDensity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1809,
                      "src": "21716:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 29590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21716:32:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29591,
                  "nodeType": "EmitStatement",
                  "src": "21711:37:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29594,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "21767:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 29593,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "21765:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 29595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21765:6:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 29592,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "21754:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 29596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21754:18:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29597,
                  "nodeType": "ExpressionStatement",
                  "src": "21754:18:66"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29600,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "21796:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29599,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "21794:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21794:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29603,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "21806:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29602,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "21804:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21804:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 29605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21813:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 29598,
                      "name": "SetGasbase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1777,
                      "src": "21783:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 29606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21783:32:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29607,
                  "nodeType": "EmitStatement",
                  "src": "21778:37:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29612,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "21836:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29611,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "21834:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21834:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29615,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "21846:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29614,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "21844:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21844:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "37",
                        "id": 29617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21853:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        },
                        "value": "7"
                      },
                      {
                        "hexValue": "30",
                        "id": 29618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21856:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "33",
                        "id": 29619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21859:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 29608,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "21821:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 29610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "activate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1035,
                      "src": "21821:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 29620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21821:40:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29621,
                  "nodeType": "ExpressionStatement",
                  "src": "21821:40:66"
                }
              ]
            },
            "functionSelector": "3818b730",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_activation_emits_events_in_order",
            "nameLocation": "21502:37:66",
            "parameters": {
              "id": 29542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21539:2:66"
            },
            "returnParameters": {
              "id": 29543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21549:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29694,
            "nodeType": "FunctionDefinition",
            "src": "21870:351:66",
            "body": {
              "id": 29693,
              "nodeType": "Block",
              "src": "21923:298:66",
              "statements": [
                {
                  "assignments": [29627],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29627,
                      "mutability": "mutable",
                      "name": "ofr",
                      "nameLocation": "21934:3:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 29693,
                      "src": "21929:8:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 29626,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "21929:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29642,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29631,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "21955:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29630,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "21953:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21953:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29634,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "21964:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29633,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "21962:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21962:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 29636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21972:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 29637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21981:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 29638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21990:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 29639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21993:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 29640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21996:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 29628,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "21940:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 29629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "newOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2244,
                      "src": "21940:12:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 29641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21940:58:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21929:69:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29645,
                            "name": "mgv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45875,
                            "src": "22017:3:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                              "typeString": "contract AbstractMangrove"
                            }
                          ],
                          "id": 29644,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 46990,
                          "src": "22015:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_AbstractMangrove_$37_$returns$_t_address_payable_$",
                            "typeString": "function (contract AbstractMangrove) pure returns (address payable)"
                          }
                        },
                        "id": 29646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22015:6:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 29643,
                      "name": "expectFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47220,
                      "src": "22004:10:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 29647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22004:18:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29648,
                  "nodeType": "ExpressionStatement",
                  "src": "22004:18:66"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29651,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "22045:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29650,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "22043:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22043:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29654,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "22054:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29653,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "22052:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22052:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 29656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22062:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 29649,
                      "name": "SetActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1761,
                      "src": "22033:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 29657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22033:35:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29658,
                  "nodeType": "EmitStatement",
                  "src": "22028:40:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29663,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "22091:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29662,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "22089:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22089:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29666,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "22100:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29665,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "22098:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22098:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 29659,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "22074:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 29661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deactivate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1067,
                      "src": "22074:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 29668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22074:33:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29669,
                  "nodeType": "ExpressionStatement",
                  "src": "22074:33:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d67762f696e616374697665",
                        "id": 29673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22129:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8e75efbf6c06a8c9dc4f72bce98028cfcfc8f73165350bb0806b98842327af5",
                          "typeString": "literal_string \"mgv/inactive\""
                        },
                        "value": "mgv/inactive"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f8e75efbf6c06a8c9dc4f72bce98028cfcfc8f73165350bb0806b98842327af5",
                          "typeString": "literal_string \"mgv/inactive\""
                        }
                      ],
                      "expression": {
                        "id": 29670,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60775,
                        "src": "22113:2:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$63864",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 29672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63697,
                      "src": "22113:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 29674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22113:31:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29675,
                  "nodeType": "ExpressionStatement",
                  "src": "22113:31:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29680,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45878,
                            "src": "22168:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29679,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "22166:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22166:7:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 29683,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45881,
                            "src": "22177:5:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestToken_$52050",
                              "typeString": "contract TestToken"
                            }
                          ],
                          "id": 29682,
                          "name": "$",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            46990, 47007, 47024, 47041, 47058
                          ],
                          "referencedDeclaration": 47058,
                          "src": "22175:1:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$2050_$returns$_t_address_payable_$",
                            "typeString": "function (contract IERC20) pure returns (address payable)"
                          }
                        },
                        "id": 29684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22175:8:66",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 29685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22185:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 29686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22194:7:66",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 29687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22203:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 29688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22206:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 29689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22209:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 29690,
                        "name": "ofr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29627,
                        "src": "22212:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 29676,
                        "name": "mgv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45875,
                        "src": "22150:3:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractMangrove_$37",
                          "typeString": "contract AbstractMangrove"
                        }
                      },
                      "id": 29678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2399,
                      "src": "22150:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,uint256,uint256) payable external"
                      }
                    },
                    "id": 29691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22150:66:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29692,
                  "nodeType": "ExpressionStatement",
                  "src": "22150:66:66"
                }
              ]
            },
            "functionSelector": "89ef9147",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_updateOffer_on_inactive_fails",
            "nameLocation": "21879:34:66",
            "parameters": {
              "id": 29624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21913:2:66"
            },
            "returnParameters": {
              "id": 29625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21923:0:66"
            },
            "scope": 29695,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 26298,
              "name": "IMaker",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1932,
              "src": "214:6:66"
            },
            "id": 26299,
            "nodeType": "InheritanceSpecifier",
            "src": "214:6:66"
          },
          {
            "baseName": {
              "id": 26300,
              "name": "MangroveTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47059,
              "src": "222:12:66"
            },
            "id": 26301,
            "nodeType": "InheritanceSpecifier",
            "src": "222:12:66"
          }
        ],
        "canonicalName": "GatekeepingTest",
        "contractDependencies": [780, 906, 48825, 49499, 50091, 52050],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          29695, 47059, 1914, 47434, 48626, 62095, 60776, 60744, 1932
        ],
        "name": "GatekeepingTest",
        "nameLocation": "195:15:66",
        "scope": 29696,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0"
  },
  "id": 66
}
